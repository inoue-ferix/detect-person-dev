_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[12],{"+Luo":function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return j})),n.d(e,"i",(function(){return S})),n.d(e,"c",(function(){return I})),n.d(e,"f",(function(){return C})),n.d(e,"e",(function(){return E})),n.d(e,"d",(function(){return R})),n.d(e,"k",(function(){return _})),n.d(e,"g",(function(){return F})),n.d(e,"h",(function(){return D})),n.d(e,"j",(function(){return M})),n.d(e,"b",(function(){return z}));var r=n("+hG3"),a=n("RsxS"),s=n("0wNd"),i=n("Umw7"),o=n("rqsJ"),u=n("yK2v"),c=n("WHR0"),l=n("lIk/"),d=n("BLhf"),h=n("8BGy"),p=n("1VZP"),f=n("PVBm"),m=n("boNM"),b=n("KdhW"),g=n("qA+V"),y=n("Zz2E"),v=n("O/w9"),x=n("Mbu7"),O=n("2/MO"),w=n("ET5l"),k=n("nnua");class j{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[o,u,c,l,d,h,p,g,b,f,y,v,x,O,w,k,m].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t,e={}){const n=t.node,r=[],a=[],s=[],o=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?a.push(t[e.name]):null!=e.input&&0!==e.input.length||s.push(t[e.name]),t),{});let u=[];const c=[];let l={},d={};null!=e&&(l=this.mapSignatureEntries(e.inputs),d=this.mapSignatureEntries(e.outputs));const h=Object.keys(o);h.forEach(t=>{const e=o[t];e.inputNames.forEach(t=>{const[n]=Object(i.b)(t);e.inputs.push(o[n]),o[n].children.push(e)})}),0===Object.keys(d).length?h.forEach(t=>{const e=o[t];0===e.children.length&&c.push(e)}):Object.keys(d).forEach(t=>{const[e]=Object(i.b)(t),n=o[e];null!=n&&(n.signatureKey=d[t],c.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(t=>{const[e]=Object(i.b)(t),n=o[e];n&&(n.signatureKey=l[t],u.push(n))}):u=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));const f={nodes:o,inputs:u,outputs:c,weights:a,placeholders:r,signature:e,functions:p};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=Object(s.b)(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.substr(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=S(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=S(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=D(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=D(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=C(t.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=C(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=F(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=F(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=I(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=I(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=z(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=_(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=M(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=M(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=E(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=E(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=R(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=R(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=A(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=A(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:a,type:r},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));const a=[],s=[];t.signature.inputArg.forEach(t=>{const[e]=Object(i.b)(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:T(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,a.push(n),r[e]=n});Object.keys(r).forEach(t=>{const e=r[t];e.inputNames.forEach(t=>{const[n]=Object(i.b)(t);e.inputs.push(r[n]),r[n].children.push(e)})});const o=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=Object(i.b)(o[t.name]),a=r[e];null!=a&&(a.defaultOutput=n,s.push(a))});const u=this.mapArgsToSignature(t);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:u}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function N(e,n){const a=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const n=Object(r.env)().global;if("undefined"!==typeof n.atob)return n.atob(e);if("undefined"!==typeof t)return new t(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return n?a:a.toLowerCase()}function S(t,e,n,r=!1){const a=t[e];return null!=a?N(a.s,r):n}function I(t,e,n){const r=t[e];return r?r.b:n}function C(t,e,n){const r=t[e]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof a?a:parseInt(a,10)}function T(t){switch("string"===typeof t&&(t=a.a[t]),t){case a.a.DT_FLOAT:return"float32";case a.a.DT_INT32:case a.a.DT_INT64:case a.a.DT_INT8:case a.a.DT_UINT8:return"int32";case a.a.DT_BOOL:return"bool";case a.a.DT_DOUBLE:return"float32";case a.a.DT_STRING:return"string";default:return null}}function A(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function E(t,e,n){const r=t[e];return r&&r.type?T(r.type):n}function R(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>T(t)):n}function $(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"===typeof t.size?t.size:parseInt(t.size,10)):[]}function _(t,e,n){const r=t[e];return r&&r.shape?$(r.shape):n}function F(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"===typeof t?t:parseInt(t,10)):n}function D(t,e,n,r=!1){const a=t[e];return a&&a.list&&a.list.s?a.list.s.map(t=>N(t,r)):n}function M(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>$(t)):n}function z(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n("HDXh").Buffer)},"+hG3":function(t,e,n){"use strict";n.r(e),n.d(e,"AdadeltaOptimizer",(function(){return Kt})),n.d(e,"AdagradOptimizer",(function(){return Ht})),n.d(e,"AdamOptimizer",(function(){return Yt})),n.d(e,"AdamaxOptimizer",(function(){return Qt})),n.d(e,"MomentumOptimizer",(function(){return ee})),n.d(e,"Optimizer",(function(){return Ut})),n.d(e,"RMSPropOptimizer",(function(){return ne})),n.d(e,"SGDOptimizer",(function(){return te})),n.d(e,"Tensor",(function(){return H.a})),n.d(e,"TensorBuffer",(function(){return H.b})),n.d(e,"Variable",(function(){return H.c})),n.d(e,"Rank",(function(){return re.a})),n.d(e,"sumOutType",(function(){return re.b})),n.d(e,"upcastType",(function(){return re.c})),n.d(e,"abs",(function(){return ae.b})),n.d(e,"acos",(function(){return ae.c})),n.d(e,"acosh",(function(){return ae.d})),n.d(e,"add",(function(){return ae.e})),n.d(e,"addN",(function(){return ae.f})),n.d(e,"all",(function(){return ae.h})),n.d(e,"any",(function(){return ae.i})),n.d(e,"argMax",(function(){return ae.j})),n.d(e,"argMin",(function(){return ae.k})),n.d(e,"asin",(function(){return ae.l})),n.d(e,"asinh",(function(){return ae.m})),n.d(e,"atan",(function(){return ae.n})),n.d(e,"atan2",(function(){return ae.o})),n.d(e,"atanh",(function(){return ae.p})),n.d(e,"avgPool",(function(){return ae.q})),n.d(e,"avgPool3d",(function(){return ae.r})),n.d(e,"basicLSTMCell",(function(){return ae.s})),n.d(e,"batchToSpaceND",(function(){return ae.x})),n.d(e,"batchNorm",(function(){return ae.t})),n.d(e,"batchNorm2d",(function(){return ae.u})),n.d(e,"batchNorm3d",(function(){return ae.v})),n.d(e,"batchNorm4d",(function(){return ae.w})),n.d(e,"broadcastTo",(function(){return ae.z})),n.d(e,"buffer",(function(){return ae.A})),n.d(e,"cast",(function(){return ae.B})),n.d(e,"ceil",(function(){return ae.C})),n.d(e,"clipByValue",(function(){return ae.D})),n.d(e,"clone",(function(){return ae.E})),n.d(e,"complex",(function(){return ae.F})),n.d(e,"concat",(function(){return ae.G})),n.d(e,"concat1d",(function(){return ae.H})),n.d(e,"concat2d",(function(){return ae.I})),n.d(e,"concat3d",(function(){return ae.J})),n.d(e,"concat4d",(function(){return ae.K})),n.d(e,"conv1d",(function(){return ae.L})),n.d(e,"conv2d",(function(){return ae.M})),n.d(e,"conv2dTranspose",(function(){return ae.N})),n.d(e,"conv3d",(function(){return ae.O})),n.d(e,"conv3dTranspose",(function(){return ae.P})),n.d(e,"cos",(function(){return ae.Q})),n.d(e,"cosh",(function(){return ae.R})),n.d(e,"cumsum",(function(){return ae.T})),n.d(e,"depthToSpace",(function(){return ae.U})),n.d(e,"depthwiseConv2d",(function(){return ae.V})),n.d(e,"diag",(function(){return ae.W})),n.d(e,"dilation2d",(function(){return ae.X})),n.d(e,"div",(function(){return ae.Y})),n.d(e,"divNoNan",(function(){return ae.Z})),n.d(e,"dot",(function(){return ae.bb})),n.d(e,"elu",(function(){return ae.db})),n.d(e,"equal",(function(){return ae.fb})),n.d(e,"erf",(function(){return ae.hb})),n.d(e,"exp",(function(){return ae.ib})),n.d(e,"expandDims",(function(){return ae.jb})),n.d(e,"expm1",(function(){return ae.kb})),n.d(e,"eye",(function(){return ae.lb})),n.d(e,"fill",(function(){return ae.nb})),n.d(e,"floor",(function(){return ae.ob})),n.d(e,"floorDiv",(function(){return ae.pb})),n.d(e,"gather",(function(){return ae.rb})),n.d(e,"greater",(function(){return ae.tb})),n.d(e,"greaterEqual",(function(){return ae.ub})),n.d(e,"imag",(function(){return ae.yb})),n.d(e,"isFinite",(function(){return ae.Cb})),n.d(e,"isInf",(function(){return ae.Db})),n.d(e,"isNaN",(function(){return ae.Eb})),n.d(e,"leakyRelu",(function(){return ae.Fb})),n.d(e,"less",(function(){return ae.Gb})),n.d(e,"lessEqual",(function(){return ae.Hb})),n.d(e,"linspace",(function(){return ae.Lb})),n.d(e,"localResponseNormalization",(function(){return ae.Mb})),n.d(e,"log",(function(){return ae.Nb})),n.d(e,"log1p",(function(){return ae.Ob})),n.d(e,"logSigmoid",(function(){return ae.Pb})),n.d(e,"logSoftmax",(function(){return ae.Qb})),n.d(e,"logSumExp",(function(){return ae.Rb})),n.d(e,"logicalAnd",(function(){return ae.Sb})),n.d(e,"logicalNot",(function(){return ae.Tb})),n.d(e,"logicalOr",(function(){return ae.Ub})),n.d(e,"logicalXor",(function(){return ae.Vb})),n.d(e,"matMul",(function(){return ae.Xb})),n.d(e,"max",(function(){return ae.Yb})),n.d(e,"maxPool",(function(){return ae.Zb})),n.d(e,"maxPool3d",(function(){return ae.ac})),n.d(e,"maxPoolWithArgmax",(function(){return ae.bc})),n.d(e,"maximum",(function(){return ae.cc})),n.d(e,"mean",(function(){return ae.ec})),n.d(e,"min",(function(){return ae.fc})),n.d(e,"minimum",(function(){return ae.gc})),n.d(e,"mirrorPad",(function(){return ae.ic})),n.d(e,"mod",(function(){return ae.jc})),n.d(e,"moments",(function(){return ae.lc})),n.d(e,"mul",(function(){return ae.nc})),n.d(e,"multiRNNCell",(function(){return ae.pc})),n.d(e,"multinomial",(function(){return ae.qc})),n.d(e,"neg",(function(){return ae.rc})),n.d(e,"notEqual",(function(){return ae.tc})),n.d(e,"oneHot",(function(){return ae.vc})),n.d(e,"ones",(function(){return ae.wc})),n.d(e,"onesLike",(function(){return ae.xc})),n.d(e,"outerProduct",(function(){return ae.zc})),n.d(e,"pad",(function(){return ae.Ac})),n.d(e,"pad1d",(function(){return ae.Bc})),n.d(e,"pad2d",(function(){return ae.Cc})),n.d(e,"pad3d",(function(){return ae.Dc})),n.d(e,"pad4d",(function(){return ae.Ec})),n.d(e,"pool",(function(){return ae.Fc})),n.d(e,"pow",(function(){return ae.Gc})),n.d(e,"prelu",(function(){return ae.Ic})),n.d(e,"print",(function(){return ae.Jc})),n.d(e,"prod",(function(){return ae.Kc})),n.d(e,"rand",(function(){return ae.Lc})),n.d(e,"randomGamma",(function(){return ae.Mc})),n.d(e,"randomNormal",(function(){return ae.Nc})),n.d(e,"randomUniform",(function(){return ae.Oc})),n.d(e,"range",(function(){return ae.Pc})),n.d(e,"real",(function(){return ae.Qc})),n.d(e,"reciprocal",(function(){return ae.Rc})),n.d(e,"relu",(function(){return ae.Sc})),n.d(e,"relu6",(function(){return ae.Tc})),n.d(e,"reshape",(function(){return ae.Uc})),n.d(e,"reverse",(function(){return ae.Vc})),n.d(e,"reverse1d",(function(){return ae.Wc})),n.d(e,"reverse2d",(function(){return ae.Xc})),n.d(e,"reverse3d",(function(){return ae.Yc})),n.d(e,"reverse4d",(function(){return ae.Zc})),n.d(e,"round",(function(){return ae.bd})),n.d(e,"rsqrt",(function(){return ae.cd})),n.d(e,"scalar",(function(){return ae.dd})),n.d(e,"selu",(function(){return ae.fd})),n.d(e,"separableConv2d",(function(){return ae.gd})),n.d(e,"setdiff1dAsync",(function(){return ae.hd})),n.d(e,"sigmoid",(function(){return ae.id})),n.d(e,"sign",(function(){return ae.jd})),n.d(e,"sin",(function(){return ae.ld})),n.d(e,"sinh",(function(){return ae.md})),n.d(e,"slice",(function(){return ae.nd})),n.d(e,"slice1d",(function(){return ae.od})),n.d(e,"slice2d",(function(){return ae.pd})),n.d(e,"slice3d",(function(){return ae.qd})),n.d(e,"slice4d",(function(){return ae.rd})),n.d(e,"softmax",(function(){return ae.sd})),n.d(e,"softplus",(function(){return ae.td})),n.d(e,"spaceToBatchND",(function(){return ae.ud})),n.d(e,"fft",(function(){return ae.mb})),n.d(e,"ifft",(function(){return ae.xb})),n.d(e,"irfft",(function(){return ae.Bb})),n.d(e,"rfft",(function(){return ae.ad})),n.d(e,"split",(function(){return ae.xd})),n.d(e,"sqrt",(function(){return ae.yd})),n.d(e,"square",(function(){return ae.zd})),n.d(e,"squaredDifference",(function(){return ae.Ad})),n.d(e,"squeeze",(function(){return ae.Cd})),n.d(e,"stack",(function(){return ae.Dd})),n.d(e,"step",(function(){return ae.Ed})),n.d(e,"stridedSlice",(function(){return ae.Fd})),n.d(e,"sub",(function(){return ae.Gd})),n.d(e,"sum",(function(){return ae.Id})),n.d(e,"tan",(function(){return ae.Jd})),n.d(e,"tanh",(function(){return ae.Kd})),n.d(e,"tensor",(function(){return ae.Ld})),n.d(e,"tensor1d",(function(){return ae.Md})),n.d(e,"tensor2d",(function(){return ae.Nd})),n.d(e,"tensor3d",(function(){return ae.Od})),n.d(e,"tensor4d",(function(){return ae.Pd})),n.d(e,"tensor5d",(function(){return ae.Qd})),n.d(e,"tensor6d",(function(){return ae.Rd})),n.d(e,"tile",(function(){return ae.Sd})),n.d(e,"topk",(function(){return ae.Td})),n.d(e,"truncatedNormal",(function(){return ae.Vd})),n.d(e,"unique",(function(){return ae.Wd})),n.d(e,"unsortedSegmentSum",(function(){return ae.Xd})),n.d(e,"unstack",(function(){return ae.Yd})),n.d(e,"variable",(function(){return ae.Zd})),n.d(e,"where",(function(){return ae.ae})),n.d(e,"whereAsync",(function(){return ae.be})),n.d(e,"zeros",(function(){return ae.ce})),n.d(e,"zerosLike",(function(){return ae.de})),n.d(e,"booleanMaskAsync",(function(){return ae.y})),n.d(e,"equalStrict",(function(){return ae.gb})),n.d(e,"greaterEqualStrict",(function(){return ae.vb})),n.d(e,"greaterStrict",(function(){return ae.wb})),n.d(e,"lessEqualStrict",(function(){return ae.Ib})),n.d(e,"lessStrict",(function(){return ae.Jb})),n.d(e,"notEqualStrict",(function(){return ae.uc})),n.d(e,"addStrict",(function(){return ae.g})),n.d(e,"divStrict",(function(){return ae.ab})),n.d(e,"maximumStrict",(function(){return ae.dc})),n.d(e,"minimumStrict",(function(){return ae.hc})),n.d(e,"modStrict",(function(){return ae.kc})),n.d(e,"mulStrict",(function(){return ae.oc})),n.d(e,"powStrict",(function(){return ae.Hc})),n.d(e,"squaredDifferenceStrict",(function(){return ae.Bd})),n.d(e,"subStrict",(function(){return ae.Hd})),n.d(e,"transpose",(function(){return ae.Ud})),n.d(e,"norm",(function(){return ae.sc})),n.d(e,"movingAverage",(function(){return ae.mc})),n.d(e,"scatterND",(function(){return ae.ed})),n.d(e,"sparseToDense",(function(){return ae.vd})),n.d(e,"gatherND",(function(){return ae.sb})),n.d(e,"dropout",(function(){return ae.cb})),n.d(e,"enclosingPowerOfTwo",(function(){return ae.eb})),n.d(e,"cosineWindow",(function(){return ae.S})),n.d(e,"inTopKAsync",(function(){return ae.Ab})),n.d(e,"op",(function(){return ae.yc})),n.d(e,"OP_SCOPE_SUFFIX",(function(){return ae.a})),n.d(e,"image",(function(){return ae.zb})),n.d(e,"linalg",(function(){return ae.Kb})),n.d(e,"losses",(function(){return ae.Wb})),n.d(e,"spectral",(function(){return ae.wd})),n.d(e,"fused",(function(){return ae.qb})),n.d(e,"signal",(function(){return ae.kd})),n.d(e,"Reduction",(function(){return se.a})),n.d(e,"train",(function(){return oe})),n.d(e,"enableProdMode",(function(){return Ft.g})),n.d(e,"enableDebugMode",(function(){return Ft.f})),n.d(e,"disableDeprecationWarnings",(function(){return Ft.c})),n.d(e,"deprecationWarn",(function(){return Ft.b})),n.d(e,"disposeVariables",(function(){return Ft.e})),n.d(e,"engine",(function(){return Ft.h})),n.d(e,"memory",(function(){return Ft.m})),n.d(e,"profile",(function(){return Ft.n})),n.d(e,"tidy",(function(){return Ft.t})),n.d(e,"dispose",(function(){return Ft.d})),n.d(e,"keep",(function(){return Ft.l})),n.d(e,"time",(function(){return Ft.u})),n.d(e,"setBackend",(function(){return Ft.r})),n.d(e,"ready",(function(){return Ft.o})),n.d(e,"getBackend",(function(){return Ft.k})),n.d(e,"removeBackend",(function(){return Ft.q})),n.d(e,"findBackend",(function(){return Ft.i})),n.d(e,"findBackendFactory",(function(){return Ft.j})),n.d(e,"registerBackend",(function(){return Ft.p})),n.d(e,"backend",(function(){return Ft.a})),n.d(e,"setPlatform",(function(){return Ft.s})),n.d(e,"getKernel",(function(){return xt.c})),n.d(e,"getGradient",(function(){return xt.b})),n.d(e,"getKernelsForBackend",(function(){return xt.d})),n.d(e,"registerKernel",(function(){return xt.f})),n.d(e,"registerGradient",(function(){return xt.e})),n.d(e,"unregisterKernel",(function(){return xt.h})),n.d(e,"unregisterGradient",(function(){return xt.g})),n.d(e,"copyRegisteredKernels",(function(){return xt.a})),n.d(e,"customGrad",(function(){return Vt.a})),n.d(e,"grad",(function(){return Vt.b})),n.d(e,"grads",(function(){return Vt.c})),n.d(e,"valueAndGrad",(function(){return Vt.d})),n.d(e,"valueAndGrads",(function(){return Vt.e})),n.d(e,"variableGrads",(function(){return Vt.f})),n.d(e,"Environment",(function(){return d.b})),n.d(e,"env",(function(){return d.c})),n.d(e,"ENV",(function(){return d.a})),n.d(e,"version_core",(function(){return _t})),n.d(e,"nextFrame",(function(){return ce})),n.d(e,"browser",(function(){return s})),n.d(e,"io",(function(){return r})),n.d(e,"math",(function(){return a})),n.d(e,"serialization",(function(){return o})),n.d(e,"test_util",(function(){return Rt})),n.d(e,"util",(function(){return $t})),n.d(e,"backend_util",(function(){return u})),n.d(e,"tensor_util",(function(){return Et})),n.d(e,"slice_util",(function(){return It})),n.d(e,"gather_util",(function(){return i})),n.d(e,"scatter_util",(function(){return St})),n.d(e,"device_util",(function(){return He})),n.d(e,"kernel_impls",(function(){return c})),n.d(e,"KernelBackend",(function(){return en.b})),n.d(e,"DataStorage",(function(){return en.a})),n.d(e,"Abs",(function(){return vt.a})),n.d(e,"Acos",(function(){return vt.b})),n.d(e,"Acosh",(function(){return vt.c})),n.d(e,"Add",(function(){return vt.d})),n.d(e,"AddN",(function(){return vt.e})),n.d(e,"All",(function(){return vt.f})),n.d(e,"Any",(function(){return vt.g})),n.d(e,"ArgMax",(function(){return vt.h})),n.d(e,"ArgMin",(function(){return vt.i})),n.d(e,"Asin",(function(){return vt.j})),n.d(e,"Asinh",(function(){return vt.k})),n.d(e,"Atan",(function(){return vt.l})),n.d(e,"Atanh",(function(){return vt.n})),n.d(e,"Atan2",(function(){return vt.m})),n.d(e,"AvgPool",(function(){return vt.o})),n.d(e,"AvgPoolBackprop",(function(){return vt.r})),n.d(e,"AvgPool3D",(function(){return vt.p})),n.d(e,"AvgPool3DBackprop",(function(){return vt.q})),n.d(e,"BatchMatMul",(function(){return vt.s})),n.d(e,"BatchToSpaceND",(function(){return vt.t})),n.d(e,"BroadcastTo",(function(){return vt.u})),n.d(e,"Cast",(function(){return vt.v})),n.d(e,"Ceil",(function(){return vt.w})),n.d(e,"ClipByValue",(function(){return vt.x})),n.d(e,"Complex",(function(){return vt.y})),n.d(e,"Concat",(function(){return vt.z})),n.d(e,"Conv2D",(function(){return vt.A})),n.d(e,"Conv2DBackpropFilter",(function(){return vt.B})),n.d(e,"Conv2DBackpropInput",(function(){return vt.C})),n.d(e,"Conv3D",(function(){return vt.D})),n.d(e,"Conv3DBackpropFilterV2",(function(){return vt.E})),n.d(e,"Conv3DBackpropInputV2",(function(){return vt.F})),n.d(e,"Cos",(function(){return vt.G})),n.d(e,"Cosh",(function(){return vt.H})),n.d(e,"Cumsum",(function(){return vt.J})),n.d(e,"CropAndResize",(function(){return vt.I})),n.d(e,"DepthToSpace",(function(){return vt.K})),n.d(e,"DepthwiseConv2dNative",(function(){return vt.L})),n.d(e,"DepthwiseConv2dNativeBackpropFilter",(function(){return vt.M})),n.d(e,"DepthwiseConv2dNativeBackpropInput",(function(){return vt.N})),n.d(e,"Diag",(function(){return vt.O})),n.d(e,"Dilation2D",(function(){return vt.P})),n.d(e,"Dilation2DBackpropInput",(function(){return vt.R})),n.d(e,"Dilation2DBackpropFilter",(function(){return vt.Q})),n.d(e,"Div",(function(){return vt.S})),n.d(e,"Elu",(function(){return vt.T})),n.d(e,"EluGrad",(function(){return vt.U})),n.d(e,"Erf",(function(){return vt.W})),n.d(e,"Equal",(function(){return vt.V})),n.d(e,"Exp",(function(){return vt.X})),n.d(e,"Expm1",(function(){return vt.Y})),n.d(e,"FFT",(function(){return vt.Z})),n.d(e,"Fill",(function(){return vt.ab})),n.d(e,"FlipLeftRight",(function(){return vt.bb})),n.d(e,"Floor",(function(){return vt.cb})),n.d(e,"FloorDiv",(function(){return vt.db})),n.d(e,"FusedBatchNorm",(function(){return vt.fb})),n.d(e,"GatherV2",(function(){return vt.jb})),n.d(e,"GatherNd",(function(){return vt.ib})),n.d(e,"Greater",(function(){return vt.kb})),n.d(e,"GreaterEqual",(function(){return vt.lb})),n.d(e,"Identity",(function(){return vt.nb})),n.d(e,"IFFT",(function(){return vt.mb})),n.d(e,"Imag",(function(){return vt.ob})),n.d(e,"IsFinite",(function(){return vt.pb})),n.d(e,"IsInf",(function(){return vt.qb})),n.d(e,"IsNan",(function(){return vt.rb})),n.d(e,"Less",(function(){return vt.ub})),n.d(e,"LessEqual",(function(){return vt.vb})),n.d(e,"LinSpace",(function(){return vt.wb})),n.d(e,"Log",(function(){return vt.xb})),n.d(e,"Log1p",(function(){return vt.yb})),n.d(e,"LogicalAnd",(function(){return vt.Ab})),n.d(e,"LogicalNot",(function(){return vt.Bb})),n.d(e,"LogicalOr",(function(){return vt.Cb})),n.d(e,"LogSoftmax",(function(){return vt.zb})),n.d(e,"LRN",(function(){return vt.sb})),n.d(e,"LRNBackprop",(function(){return vt.tb})),n.d(e,"Max",(function(){return vt.Db})),n.d(e,"Maximum",(function(){return vt.Jb})),n.d(e,"MaxPool",(function(){return vt.Eb})),n.d(e,"MaxPoolBackprop",(function(){return vt.Hb})),n.d(e,"MaxPool3D",(function(){return vt.Fb})),n.d(e,"MaxPool3DBackprop",(function(){return vt.Gb})),n.d(e,"MaxPoolWithArgmax",(function(){return vt.Ib})),n.d(e,"Mean",(function(){return vt.Kb})),n.d(e,"Min",(function(){return vt.Lb})),n.d(e,"Minimum",(function(){return vt.Mb})),n.d(e,"MirrorPad",(function(){return vt.Nb})),n.d(e,"Mod",(function(){return vt.Ob})),n.d(e,"Multiply",(function(){return vt.Pb})),n.d(e,"Negate",(function(){return vt.Qb})),n.d(e,"NotEqual",(function(){return vt.Ub})),n.d(e,"NonMaxSuppressionV3",(function(){return vt.Rb})),n.d(e,"NonMaxSuppressionV4",(function(){return vt.Sb})),n.d(e,"NonMaxSuppressionV5",(function(){return vt.Tb})),n.d(e,"OnesLike",(function(){return vt.Wb})),n.d(e,"OneHot",(function(){return vt.Vb})),n.d(e,"PadV2",(function(){return vt.Xb})),n.d(e,"Pool",(function(){return vt.Yb})),n.d(e,"Pow",(function(){return vt.Zb})),n.d(e,"Prelu",(function(){return vt.ac})),n.d(e,"Prod",(function(){return vt.bc})),n.d(e,"Range",(function(){return vt.cc})),n.d(e,"Real",(function(){return vt.dc})),n.d(e,"Reciprocal",(function(){return vt.ec})),n.d(e,"Relu",(function(){return vt.fc})),n.d(e,"Reshape",(function(){return vt.hc})),n.d(e,"ResizeNearestNeighbor",(function(){return vt.kc})),n.d(e,"ResizeNearestNeighborGrad",(function(){return vt.lc})),n.d(e,"ResizeBilinear",(function(){return vt.ic})),n.d(e,"ResizeBilinearGrad",(function(){return vt.jc})),n.d(e,"Relu6",(function(){return vt.gc})),n.d(e,"Reverse",(function(){return vt.mc})),n.d(e,"Round",(function(){return vt.oc})),n.d(e,"Rsqrt",(function(){return vt.pc})),n.d(e,"ScatterNd",(function(){return vt.qc})),n.d(e,"SelectV2",(function(){return vt.rc})),n.d(e,"Selu",(function(){return vt.sc})),n.d(e,"Slice",(function(){return vt.xc})),n.d(e,"Sin",(function(){return vt.vc})),n.d(e,"Sinh",(function(){return vt.wc})),n.d(e,"Sign",(function(){return vt.uc})),n.d(e,"Sigmoid",(function(){return vt.tc})),n.d(e,"Softplus",(function(){return vt.zc})),n.d(e,"Sqrt",(function(){return vt.Dc})),n.d(e,"Sum",(function(){return vt.Jc})),n.d(e,"SpaceToBatchND",(function(){return vt.Ac})),n.d(e,"SplitV",(function(){return vt.Cc})),n.d(e,"Softmax",(function(){return vt.yc})),n.d(e,"SquaredDifference",(function(){return vt.Fc})),n.d(e,"Square",(function(){return vt.Ec})),n.d(e,"Sub",(function(){return vt.Ic})),n.d(e,"SparseToDense",(function(){return vt.Bc})),n.d(e,"StridedSlice",(function(){return vt.Hc})),n.d(e,"Tan",(function(){return vt.Kc})),n.d(e,"Tanh",(function(){return vt.Lc})),n.d(e,"Tile",(function(){return vt.Mc})),n.d(e,"TopK",(function(){return vt.Nc})),n.d(e,"Transpose",(function(){return vt.Oc})),n.d(e,"Unique",(function(){return vt.Pc})),n.d(e,"Unpack",(function(){return vt.Qc})),n.d(e,"UnsortedSegmentSum",(function(){return vt.Rc})),n.d(e,"ZerosLike",(function(){return vt.Sc})),n.d(e,"Step",(function(){return vt.Gc})),n.d(e,"FromPixels",(function(){return vt.eb})),n.d(e,"RotateWithOffset",(function(){return vt.nc})),n.d(e,"_FusedMatMul",(function(){return vt.Tc})),n.d(e,"FusedConv2D",(function(){return vt.gb})),n.d(e,"FusedDepthwiseConv2D",(function(){return vt.hb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return B})),n.d(r,"listModels",(function(){return z})),n.d(r,"moveModel",(function(){return P})),n.d(r,"removeModel",(function(){return L})),n.d(r,"browserFiles",(function(){return Z})),n.d(r,"browserHTTPRequest",(function(){return ut})),n.d(r,"concatenateArrayBuffers",(function(){return h.d})),n.d(r,"decodeWeights",(function(){return h.e})),n.d(r,"encodeWeights",(function(){return h.f})),n.d(r,"fromMemory",(function(){return dt})),n.d(r,"getLoadHandlers",(function(){return g})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return h.g})),n.d(r,"getSaveHandlers",(function(){return b})),n.d(r,"http",(function(){return ot})),n.d(r,"isHTTPScheme",(function(){return st})),n.d(r,"loadWeights",(function(){return nt})),n.d(r,"registerLoadRouter",(function(){return m})),n.d(r,"registerSaveRouter",(function(){return f})),n.d(r,"weightsLoaderFactory",(function(){return rt})),n.d(r,"withSaveHandler",(function(){return ht}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return yt}));var s={};n.r(s),n.d(s,"toPixels",(function(){return kt})),n.d(s,"fromPixels",(function(){return jt}));var i={};n.r(i),n.d(i,"prepareAndValidate",(function(){return Nt}));var o={};n.r(o),n.d(o,"Serializable",(function(){return Ct})),n.d(o,"SerializationMap",(function(){return Tt})),n.d(o,"registerClass",(function(){return At}));var u={};n.r(u),n.d(u,"axesAreInnerMostDims",(function(){return he.b})),n.d(u,"combineLocations",(function(){return he.c})),n.d(u,"computeOutAndReduceShapes",(function(){return he.d})),n.d(u,"expandShapeToKeepDim",(function(){return he.e})),n.d(u,"assertAxesAreInnerMostDims",(function(){return he.a})),n.d(u,"getAxesPermutation",(function(){return he.f})),n.d(u,"getUndoAxesPermutation",(function(){return he.h})),n.d(u,"getInnerMostAxes",(function(){return he.g})),n.d(u,"getBroadcastDims",(function(){return pe.b})),n.d(u,"getReductionAxes",(function(){return pe.c})),n.d(u,"assertAndGetBroadcastShape",(function(){return pe.a})),n.d(u,"assertParamsConsistent",(function(){return fe.a})),n.d(u,"computeOutShape",(function(){return fe.b})),n.d(u,"computeDilation2DInfo",(function(){return me.d})),n.d(u,"computePool2DInfo",(function(){return me.e})),n.d(u,"computePool3DInfo",(function(){return me.f})),n.d(u,"computeConv2DInfo",(function(){return me.a})),n.d(u,"computeConv3DInfo",(function(){return me.b})),n.d(u,"computeDefaultPad",(function(){return me.c})),n.d(u,"tupleValuesAreOne",(function(){return me.i})),n.d(u,"eitherStridesOrDilationsAreOne",(function(){return me.h})),n.d(u,"convertConv2DDataFormat",(function(){return me.g})),n.d(u,"getFusedDyActivation",(function(){return be.c})),n.d(u,"getFusedBiasGradient",(function(){return be.b})),n.d(u,"applyActivation",(function(){return be.a})),n.d(u,"shouldFuse",(function(){return be.d})),n.d(u,"PARALLELIZE_THRESHOLD",(function(){return ge.a})),n.d(u,"computeOptimalWindowSize",(function(){return ge.b})),n.d(u,"slice_util",(function(){return It})),n.d(u,"upcastType",(function(){return re.c})),n.d(u,"getImageCenter",(function(){return ye})),n.d(u,"getReshaped",(function(){return ve})),n.d(u,"getPermuted",(function(){return xe})),n.d(u,"getReshapedPermuted",(function(){return Oe})),n.d(u,"getSliceBeginCoords",(function(){return we})),n.d(u,"getSliceSize",(function(){return ke})),n.d(u,"prepareAndValidate",(function(){return Nt})),n.d(u,"validateUpdateShape",(function(){return St.validateUpdateShape})),n.d(u,"validateInput",(function(){return St.validateInput})),n.d(u,"calculateShapes",(function(){return St.calculateShapes})),n.d(u,"SELU_SCALEALPHA",(function(){return je})),n.d(u,"SELU_SCALE",(function(){return Ne})),n.d(u,"ERF_P",(function(){return Se})),n.d(u,"ERF_A1",(function(){return Ie})),n.d(u,"ERF_A2",(function(){return Ce})),n.d(u,"ERF_A3",(function(){return Te})),n.d(u,"ERF_A4",(function(){return Ae})),n.d(u,"ERF_A5",(function(){return Ee})),n.d(u,"warn",(function(){return Re})),n.d(u,"log",(function(){return $e})),n.d(u,"mergeRealAndImagArrays",(function(){return _e})),n.d(u,"splitRealAndImagArrays",(function(){return Fe})),n.d(u,"complexWithEvenIndex",(function(){return De})),n.d(u,"complexWithOddIndex",(function(){return Me})),n.d(u,"getComplexWithIndex",(function(){return ze})),n.d(u,"assignToTypedArray",(function(){return Le})),n.d(u,"exponents",(function(){return Be})),n.d(u,"exponent",(function(){return Pe})),n.d(u,"prepareSplitSize",(function(){return Ve.a})),n.d(u,"segment_util",(function(){return We})),n.d(u,"castTensor",(function(){return Ue})),n.d(u,"reshapeTensor",(function(){return Ke})),n.d(u,"linspaceImpl",(function(){return Ge}));var c={};n.r(c),n.d(c,"nonMaxSuppressionV3Impl",(function(){return qe.a})),n.d(c,"nonMaxSuppressionV4Impl",(function(){return qe.b})),n.d(c,"nonMaxSuppressionV5Impl",(function(){return qe.c})),n.d(c,"split",(function(){return Ye})),n.d(c,"tile",(function(){return Je})),n.d(c,"topkImpl",(function(){return Qe})),n.d(c,"whereImpl",(function(){return tn.a}));var l=n("auKK"),d=(n("Kajj"),n("szMd")),h=n("NQ+5");class p{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==p.instance&&(p.instance=new p),p.instance}static registerSaveRouter(t){p.getInstance().saveRouters.push(t)}static registerLoadRouter(t){p.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return p.getHandlers(t,"save")}static getLoadHandlers(t,e){return p.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?p.getInstance().loadRouters:p.getInstance().saveRouters).forEach(e=>{const a=e(t,n);null!==a&&r.push(a)}),r}}const f=t=>p.registerSaveRouter(t),m=t=>p.registerLoadRouter(t),b=t=>p.getSaveHandlers(t),g=(t,e)=>p.getLoadHandlers(t,e);function y(){if(!Object(d.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function v(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}class x{constructor(t){if(this.indexedDB=y(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>v(r),r.onsuccess=()=>{const a=r.result;if(null==e){const e=a.transaction("models_store","readonly"),r=e.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(a.close(),n(r.error)),e.oncomplete=()=>a.close()}else{const r=Object(h.g)(e),s=a.transaction("model_info_store","readwrite");let i=s.objectStore("model_info_store");const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction("models_store","readwrite");const o=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{i=s.objectStore("model_info_store");const e=i.delete(this.modelPath);e.onsuccess=()=>(a.close(),n(o.error)),e.onerror=t=>(a.close(),n(o.error))}},o.onerror=t=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=t=>n(r.error)})}}x.URL_SCHEME="indexeddb://";const O=t=>{return Object(d.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(x.URL_SCHEME)?(e=t.slice(x.URL_SCHEME.length),new x(e)):null;var e};p.registerSaveRouter(O),p.registerLoadRouter(O);class w{constructor(){this.indexedDB=y()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>v(n),n.onsuccess=()=>{const r=n.result,a=r.transaction("model_info_store","readonly"),s=a.objectStore("model_info_store").getAll();s.onsuccess=()=>{const e={};for(const t of s.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},s.onerror=t=>(r.close(),e(s.error)),a.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){var e;return t=(e=t).startsWith(x.URL_SCHEME)?e.slice(x.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>v(r),r.onsuccess=()=>{const a=r.result,s=a.transaction("model_info_store","readwrite"),i=s.objectStore("model_info_store"),o=i.get(t);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=i.delete(t),s=()=>{u=a.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=s,r.onerror=t=>(s(),a.close(),n(o.error))}},o.onerror=t=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=t=>n(r.error)})}}var k=n("atXS");const j="tensorflowjs_models",N="info",S="model_topology",I="weight_specs",C="weight_data",T="model_metadata";function A(t){return{info:[j,t,N].join("/"),topology:[j,t,S].join("/"),weightSpecs:[j,t,I].join("/"),weightData:[j,t,C].join("/"),modelMetadata:[j,t,T].join("/")}}function E(t){const e=t.split("/");if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join("/")}class R{constructor(t){if(!Object(d.c)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=A(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),a=Object(h.g)(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(h.a)(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:a}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const t=JSON.parse(a);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=Object(h.b)(s),e}}R.URL_SCHEME="localstorage://";const $=t=>{return Object(d.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(R.URL_SCHEME)?(e=t.slice(R.URL_SCHEME.length),new R(e)):null;var e};p.registerSaveRouter($),p.registerLoadRouter($);class _{constructor(){Object(k.b)(Object(d.c)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(k.b)("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=j+"/",n="/"+N;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(e)&&a.endsWith(n)){t[E(a)]=JSON.parse(this.LS.getItem(a))}}return t}async removeModel(t){var e;const n=A(t=(e=t).startsWith(R.URL_SCHEME)?e.slice(R.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class F{constructor(){this.managers={}}static getInstance(){return null==F.instance&&(F.instance=new F),F.instance}static registerManager(t,e){Object(k.b)(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Object(k.b)(t.length>0,()=>"scheme must not be an empty string.");const n=F.getInstance();Object(k.b)(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function D(t){if(-1===t.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+F.getSchemes().join(","));return{scheme:t.split("://")[0],path:t.split("://")[1]}}async function M(t,e,n=!1){Object(k.b)(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=p.getLoadHandlers(t);Object(k.b)(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),Object(k.b)(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const a=r[0],s=p.getSaveHandlers(e);Object(k.b)(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),Object(k.b)(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const i=s[0],o=D(t).scheme,u=D(t).path,c=o===D(t).scheme,l=await a.load();n&&c&&await F.getManager(o).removeModel(u);const d=await i.save(l);return n&&!c&&await F.getManager(o).removeModel(u),d.modelArtifactsInfo}async function z(){const t=F.getSchemes(),e={};for(const n of t){const t=await F.getManager(n).listModels();for(const r in t){e[n+"://"+r]=t[r]}}return e}async function L(t){const e=D(t);return F.getManager(e.scheme).removeModel(e.path)}async function B(t,e){return M(t,e,!1)}async function P(t,e){return M(t,e,!0)}class V{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got "+e);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Object(d.c)().get("IS_BROWSER")){Object(d.c)().setPlatform("browser",new V);try{F.registerManager(R.URL_SCHEME,new _)}catch(ii){}try{F.registerManager(x.URL_SCHEME,new w)}catch(ii){}}n("SwXZ");var W=n("BD40"),U=n("3rNm"),K=n("8Km0"),G=n("dWjR"),H=n("NNfn");Object(l.b)();const q={buffer:W.a,cast:U.a,clone:K.a,print:G.a};Object(H.e)(q);function X(t){return new Promise(t=>setTimeout(t)).then(t)}class Y{constructor(t){if(!Object(d.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Y.URL_SCHEME)&&(t=t.slice(Y.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await X(()=>s.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await X(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(h.g)(t)}}}}Y.URL_SCHEME="downloads://";class J{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+t);this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error("modelTopology field is missing from file "+t.name));0===e.length&&n({modelTopology:i});const o=s.weightsManifest;if(null==o)return void r(new Error("weightManifest field is missing from file "+t.name));let u;try{u=this.checkManifestAndWeightFiles(o,e)}catch(ii){return void r(ii)}const c=[],l=[],d=[];o.forEach(t=>{t.paths.forEach(t=>{l.push(t),d.push(null)}),c.push(...t.weights)}),o.forEach(t=>{t.paths.forEach(t=>{const e=new FileReader;e.onload=e=>{const r=e.target.result,a=l.indexOf(t);d[a]=r,-1===d.indexOf(null)&&n({modelTopology:i,weightSpecs:c,weightData:Object(h.d)(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,userDefinedMetadata:s.userDefinedMetadata})},e.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),e.readAsArrayBuffer(u[t])})})},a.onerror=e=>r(`Failed to read model topology and weights manifest JSON from file '${t.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(t)})}checkManifestAndWeightFiles(t,e){const n=[],r=e.map(t=>Object(h.c)(t.name)),a={};for(const s of t)s.paths.forEach(t=>{const s=Object(h.c)(t);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[t]=e[r.indexOf(s)]});if(n.length!==e.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${e.length}).`);return a}}function Z(t){return new J(t)}function Q(t,e,n,r){!function(t){Object(k.b)(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){Object(k.b)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+t),Object(k.b)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+e),Object(k.b)(e>=t,()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction `+e)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(t.map(s=>(s.then(s=>{const i=n+ ++a/t.length*(r-n);return e(i),s}),s)))}p.registerSaveRouter(t=>Object(d.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Y.URL_SCHEME)?function(t="model"){return new Y(t)}(t.slice(Y.URL_SCHEME.length)):null);var tt=n("mEeB");async function et(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(d.c)().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),a=(null==e.onProgress?await Promise.all(r):await Q(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(a):await Q(a,e.onProgress,.5,1)}async function nt(t,e="",n,r){return rt(t=>et(t,{requestInit:r}))(t,e,n)}function rt(t){return async(e,n="",r)=>{const a=e.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const u="quantization"in t?t.quantization.dtype:t.dtype,c=tt.a[u]*k.N(t.shape),l=()=>{a[e]=!0,null==s[e]&&(s[e]=[]),s[e].push({manifestEntry:t,groupOffset:n,sizeBytes:c})};null!=r?r.forEach((e,n)=>{e===t.name&&(l(),i[n]=!0)}):l(),o.push(t.name),n+=c})}),!i.every(t=>t)){const t=r.filter((t,e)=>!i[e]);throw new Error("Could not find weights in manifest with names: "+t.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".")}const u=a.reduce((t,e,n)=>(e&&t.push(n),t),[]),c=[];u.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;c.push(e)})});const l=await t(c),d={};let p=0;return u.forEach(t=>{const n=e[t].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[p+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[p+e]);i.set(t,o),o+=t.byteLength}s[t].forEach(t=>{const e=a.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=Object(h.e)(e,[t.manifestEntry]);for(const r in n)d[r]=n[r]}),p+=n}),d}}class at{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(k.b)("function"===typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Object(d.c)().platform.fetch,Object(k.b)(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&Object(k.b)(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,e);if(a.ok)return{modelArtifactsInfo:Object(h.g)(t),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code `+t.status+". Please verify this URL points to the model JSON of the model to load.");let e;try{e=await t.json()}catch(h){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,r=e.weightsManifest,a=e.generatedBy,s=e.convertedBy,i=e.format,o=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const t=await this.loadWeights(r);[u,c]=t}const l={modelTopology:n,weightSpecs:u,weightData:c,userDefinedMetadata:o,generatedBy:a,convertedBy:s,format:i},d=e.modelInitializer;return d&&(l.modelInitializer=d),l}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),a=n>e?t.substring(n):"";return[r+"/",a]}(e),a=this.weightPathPrefix||n,s=[];for(const c of t)s.push(...c.weights);const i=[],o=[];for(const c of t)for(const t of c.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(a+t+r);this.weightUrlConverter&&i.push(...await Promise.all(o));const u=await et(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(h.d)(u)]}}function st(t){return null!=t.match(at.URL_SCHEME_REGEX)}at.URL_SCHEME_REGEX=/^https?:\/\//;const it=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>st(t)):st(t),n)return ot(t,e)}return null};function ot(t,e){return new at(t,e)}function ut(t,e){return ot(t,e)}p.registerSaveRouter(it),p.registerLoadRouter(it);class ct{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class lt{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function dt(t,e,n,r){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new ct(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ct({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ct({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function ht(t){return new lt(t)}var pt=n("o/e8"),ft=n("SHv8"),mt=n("4iwy"),bt=n("VO80"),gt=n("yRKQ");const yt=Object(bt.b)({confusionMatrix_:function(t,e,n){const r=Object(pt.a)(t,"labels","confusionMatrix"),a=Object(pt.a)(e,"predictions","confusionMatrix");k.b(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),k.b(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),k.b(1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),k.b(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),k.b(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const s=Object(mt.a)(Object(U.a)(r,"int32"),n),i=Object(mt.a)(Object(U.a)(a,"int32"),n),o=Object(gt.a)(s),u=Object(ft.a)(o,i);return Object(U.a)(u,"int32")}});var vt=n("wFtI"),xt=n("c7gn"),Ot=n("BbuY");let wt;async function kt(t,e){let n=Object(pt.a)(t,"img","toPixels");if(!(t instanceof H.a)){const t=n;n=Object(U.a)(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let c=0;c<r*a;++c){const t=[0,0,0,255];for(let r=0;r<s;r++){const e=i[c*s+r];if("float32"===n.dtype){if(e<0||e>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${e}.`)}else if("int32"===n.dtype&&(e<0||e>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${e}.`);1===s?(t[0]=e*o,t[1]=e*o,t[2]=e*o):t[r]=e*o}const e=4*c;u[e+0]=Math.round(t[0]),u[e+1]=Math.round(t[1]),u[e+2]=Math.round(t[2]),u[e+3]=Math.round(t[3])}if(null!=e){e.width=a,e.height=r;const t=e.getContext("2d"),n=new ImageData(u,a,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),u}const jt=Object(bt.b)({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)s=!0;else{if(null==t.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+t.constructor.name);i=!0}if(a){const e=2;if(a&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(xt.c)(vt.eb,l.a.backendName)){const n={pixels:t},r={numChannels:e};return l.a.runKernel(vt.eb,n,r)}const[o,u]=a?[t.videoWidth,t.videoHeight]:[t.width,t.height];let c,d;if(i?c=t.getContext("2d").getImageData(0,0,o,u).data:r||n?c=t.data:(s||a)&&(null==wt&&(wt=document.createElement("canvas").getContext("2d")),wt.canvas.width=o,wt.canvas.height=u,wt.drawImage(t,0,0,o,u),c=wt.getImageData(0,0,o,u).data),4===e)d=new Int32Array(c);else{const t=o*u;d=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)d[n*e+t]=c[4*n+t]}const h=[u,o,e];return Object(Ot.a)(d,h,"int32")}});function Nt(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let a=1;for(let c=0;c<n.length-1;++c)a*=n[c];const s=t.shape,i=n.slice();i.pop();let o=1;for(let c=r;c<t.rank;++c)o*=s[c],i.push(s[c]);const u=[...Object(k.j)(t.shape).map(t=>t/o),1].slice(0,r);return[i,a,o,u]}var St=n("o0+U"),It=n("Xr0w");class Ct{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Tt{constructor(){this.classNameMap={}}static getMap(){return null==Tt.instance&&(Tt.instance=new Tt),Tt.instance}static register(t){Tt.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function At(t){Object(k.b)(null!=t.className,()=>"Class being registered does not have the static className property defined."),Object(k.b)("string"===typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),Object(k.b)(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Tt.register(t)}var Et=n("dsKV"),Rt=n("1WXW"),$t=n("6366");const _t="2.7.0";var Ft=n("wE5H"),Dt=n("kRdc"),Mt=n("x3y4"),zt=n("parS"),Lt=n("Fjpt"),Bt=n("k7Jv"),Pt=n("oJu+"),Vt=n("U45G"),Wt=n("AV8V");class Ut extends Ct{minimize(t,e=!1,n){const{value:r,grads:a}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:a[t.name]}));this.applyGradients(t)}else this.applyGradients(a);return Object(Ft.d)(a),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Object(Vt.f)(t,e)}dispose(){null!=this.iterations_&&Object(Ft.d)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(Wt.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Ut,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class Kt extends Ut{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=l.a.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=l.a.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:e+"/accum_grad",variable:Object(Ft.t)(()=>Object(Pt.a)(r).variable(false))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:e+"/accum_var",variable:Object(Ft.t)(()=>Object(Pt.a)(r).variable(false))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Object(Ft.t)(()=>{const t=Object(Dt.a)(Object(zt.a)(s,this.rho),Object(zt.a)(Object(Bt.a)(a),1-this.rho)),e=Object(zt.a)(Object(Mt.a)(Object(Lt.a)(Object(Dt.a)(i,this.epsilon)),Object(Lt.a)(Object(Dt.a)(s,this.epsilon))),a),n=Object(Dt.a)(Object(zt.a)(i,this.rho),Object(zt.a)(Object(Bt.a)(e),1-this.rho));s.assign(t),i.assign(n);const o=Object(Dt.a)(Object(zt.a)(e,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(Ft.d)(this.accumulatedGrads.map(t=>t.variable)),Object(Ft.d)(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Kt.className="Adadelta",At(Kt);var Gt=n("RrjA");class Ht extends Ut{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=l.a.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:e+"/accumulator",variable:Object(Ft.t)(()=>Object(Gt.a)(r.shape,this.initialAccumulatorValue).variable(t))}}const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=this.accumulatedGrads[n].variable;Object(Ft.t)(()=>{const t=Object(Dt.a)(s,Object(Bt.a)(a));s.assign(t);const e=Object(Dt.a)(Object(zt.a)(Object(Mt.a)(a,Object(Lt.a)(Object(Dt.a)(t,l.a.backend.epsilon()))),-this.learningRate),r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(Ft.d)(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Ht.className="Adagrad",At(Ht);var qt=n("yfHJ"),Xt=n("oAkI");class Yt extends Ut{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(Ft.t)(()=>{this.accBeta1=Object(Wt.a)(e).variable(),this.accBeta2=Object(Wt.a)(n).variable()}),null==r&&(this.epsilon=l.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(Ft.t)(()=>{const n=Object(Xt.a)(1,this.accBeta1),r=Object(Xt.a)(1,this.accBeta2);e.forEach((e,a)=>{const s=l.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:e+"/m",variable:Object(Ft.t)(()=>Object(Pt.a)(s).variable(false))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:e+"/v",variable:Object(Ft.t)(()=>Object(Pt.a)(s).variable(false))});const i=Array.isArray(t)?t[a].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=Object(Dt.a)(Object(zt.a)(o,this.beta1),Object(zt.a)(i,1-this.beta1)),d=Object(Dt.a)(Object(zt.a)(u,this.beta2),Object(zt.a)(Object(Bt.a)(i),1-this.beta2)),h=Object(Mt.a)(c,n),p=Object(Mt.a)(d,r);o.assign(c),u.assign(d);const f=Object(Dt.a)(Object(zt.a)(Object(Mt.a)(h,Object(Dt.a)(Object(Lt.a)(p),this.epsilon)),-this.learningRate),s);s.assign(f)}),this.accBeta1.assign(Object(zt.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(zt.a)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(Ft.d)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&Object(Ft.d)(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),Object(Ft.t)(()=>{this.accBeta1.assign(Object(qt.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(qt.a)(this.beta2,this.iterations_+1))});const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Yt.className="Adam",At(Yt);var Jt=n("iuCH"),Zt=n("CfTU");class Qt extends Ut{constructor(t,e,n,r=null,a=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(Ft.t)(()=>{this.iteration=Object(Wt.a)(0).variable(),this.accBeta1=Object(Wt.a)(e).variable()}),null==r&&(this.epsilon=l.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(Ft.t)(()=>{const n=Object(Xt.a)(1,this.accBeta1),r=Object(Mt.a)(-this.learningRate,Object(Dt.a)(Object(zt.a)(this.iteration,this.decay),1));e.forEach((e,a)=>{const s=l.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:e+"/m",variable:Object(Pt.a)(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:e+"/v",variable:Object(Pt.a)(s).variable(false)});const i=Array.isArray(t)?t[a].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=Object(Dt.a)(Object(zt.a)(o,this.beta1),Object(zt.a)(i,1-this.beta1)),d=Object(zt.a)(u,this.beta2),h=Object(Jt.a)(i),p=Object(Zt.a)(d,h);o.assign(c),u.assign(p);const f=Object(Dt.a)(Object(zt.a)(Object(Mt.a)(r,n),Object(Mt.a)(c,Object(Dt.a)(p,this.epsilon))),s);s.assign(f)}),this.iteration.assign(Object(Dt.a)(this.iteration,1)),this.accBeta1.assign(Object(zt.a)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(Ft.d)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&Object(Ft.d)(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Qt.className="Adamax",At(Qt);class te extends Ut{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=l.a.registeredVariables[e];Object(Ft.t)(()=>{const t=Object(Dt.a)(Object(zt.a)(this.c,r),a);a.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Object(Ft.l)(Object(Wt.a)(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}te.className="SGD",At(te);class ee extends te{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Object(Wt.a)(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=l.a.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:e+"/momentum",variable:Object(Ft.t)(()=>Object(Pt.a)(r).variable(t))}}const a=this.accumulations[n].variable,s=Array.isArray(t)?t[n].tensor:t[e];null!=s&&Object(Ft.t)(()=>{let t;const e=Object(Dt.a)(Object(zt.a)(this.m,a),s);t=this.useNesterov?Object(Dt.a)(Object(zt.a)(this.c,Object(Dt.a)(s,Object(zt.a)(e,this.m))),r):Object(Dt.a)(Object(zt.a)(this.c,e),r),a.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(Ft.d)(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}ee.className="Momentum",At(ee);class ne extends Ut{constructor(t,e=.9,n=0,r=null,a=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=l.a.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=l.a.registeredVariables[e];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:e+"/rms",variable:Object(Ft.t)(()=>Object(Pt.a)(r).variable(false))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:e+"/momentum",variable:Object(Ft.t)(()=>Object(Pt.a)(r).variable(false))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:e+"/mg",variable:Object(Ft.t)(()=>Object(Pt.a)(r).variable(false))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Object(Ft.t)(()=>{const t=Object(Dt.a)(Object(zt.a)(s,this.decay),Object(zt.a)(Object(Bt.a)(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,o=Object(Dt.a)(Object(zt.a)(e,this.decay),Object(zt.a)(a,1-this.decay)),u=Object(Mt.a)(Object(zt.a)(a,this.learningRate),Object(Lt.a)(Object(Xt.a)(t,Object(Dt.a)(Object(Bt.a)(o),this.epsilon)))),c=Object(Dt.a)(Object(zt.a)(i,this.momentum),u);s.assign(t),e.assign(o),i.assign(c);const l=Object(Xt.a)(r,c);r.assign(l)}else{const t=Object(Dt.a)(Object(zt.a)(s,this.decay),Object(zt.a)(Object(Bt.a)(a),1-this.decay)),e=Object(Dt.a)(Object(zt.a)(i,this.momentum),Object(Mt.a)(Object(zt.a)(a,this.learningRate),Object(Lt.a)(Object(Dt.a)(t,this.epsilon))));s.assign(t),i.assign(e);const n=Object(Xt.a)(r,e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(Ft.d)(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(Ft.d)(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&Object(Ft.d)(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}ne.className="RMSProp",At(ne);var re=n("I79q"),ae=n("EysY"),se=n("V+B2");class ie{static sgd(t){return new te(t)}static momentum(t,e,n=!1){return new ee(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,a=!1){return new ne(t,e,n,r,a)}static adam(t=.001,e=.9,n=.999,r=null){return new Yt(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new Kt(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,a=0){return new Qt(t,e,n,r,a)}static adagrad(t,e=.1){return new Ht(t,e)}}const oe={sgd:ie.sgd,momentum:ie.momentum,adadelta:ie.adadelta,adagrad:ie.adagrad,rmsprop:ie.rmsprop,adamax:ie.adamax,adam:ie.adam},ue="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:t=>t();function ce(){return new Promise(t=>ue(()=>t()))}var le=n("lg8H"),de=n("Wiw4"),he=n("NuWS"),pe=n("Um8L"),fe=n("87nf"),me=n("uBja"),be=n("R0ls"),ge=n("9jvw");function ye(t,e,n){return[n*("number"===typeof t?t:t[0]),e*("number"===typeof t?t:t[1])]}function ve(t,e,n,r=!0){let a=[];if(r)a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)a=a.concat([t[r+1]/e[r],e[r]]);a=a.concat(t.slice(n+1))}return a}function xe(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<t;++r)r>=2*e+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Oe(t,e,n,r=!0){const a=[];r?a.push(t[0]/n):a.push(t[0]*n);for(let s=1;s<t.length;++s)s<=e.length?r?a.push(e[s-1]*t[s]):a.push(t[s]/e[s-1]):a.push(t[s]);return a}function we(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function ke(t,e,n){const r=t.slice(0,1);for(let a=0;a<n;++a)r.push(t[a+1]-e[a][0]-e[a][1]);return r}const je=1.7580993408473768,Ne=1.0507009873554805,Se=.3275911,Ie=.254829592,Ce=-.284496736,Te=1.421413741,Ae=-1.453152027,Ee=1.061405429;function Re(...t){Object(d.c)().getBool("IS_TEST")||console.warn(...t)}function $e(...t){Object(d.c)().getBool("IS_TEST")||console.log(...t)}function _e(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Fe(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function De(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=0;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function Me(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=2;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function ze(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Le(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function Be(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let a=0;a<Math.ceil(t/2);a++){const s=(e?2:-2)*Math.PI*(a/t);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Pe(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}var Ve=n("QVv9"),We=n("0+74");function Ue(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Object(de.a)(t.shape),r=Object(U.a)(t,"float32"),a=n.complex(r,e);return e.dispose(),r.dispose(),a}if(!Object(k.p)(t.dtype,e))return l.a.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),a=Object(U.a)(r,e);return r.dispose(),a}if("int32"===e)return n.int(t);if("bool"===e){const e=Object(Wt.a)(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function Ke(t,e){return l.a.makeTensorFromDataId(t.dataId,e,t.dtype)}function Ge(t,e,n){const r=(e-t)/(n-1),a=Object(k.F)(n,"float32");a[0]=t;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return Object(le.a)(a,"float32")}var He=n("ftYm"),qe=n("g4m1"),Xe=n("bTzI");function Ye(t,e,n){const r=new Array(t.rank).fill(0),a=t.shape.slice();return e.map(e=>{const s=[...a];s[n]=e;const i=Object(Xe.a)(t,r,s);return r[n]+=e,i})}function Je(t,e){const n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=t.shape[a]*e[a];const r=Object(W.a)(n,t.dtype);for(let a=0;a<r.values.length;++a){const e=r.indexToLoc(a),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const s=t.locToIndex(n);r.values[a]=t.values[s]}return r.toTensor()}var Ze=n("NX3e");function Qe(t,e,n,r,a){const s=e[e.length-1],[i,o]=[t.length/s,s],u=Object(k.o)(n,i*r),c=Object(k.o)("int32",i*r);for(let d=0;d<i;d++){const e=d*o,n=t.subarray(e,e+o),a=[];for(let t=0;t<n.length;t++)a.push({value:n[t],index:t});a.sort((t,e)=>e.value-t.value);const s=d*r,i=u.subarray(s,s+r),l=c.subarray(s,s+r);for(let t=0;t<r;t++)i[t]=a[t].value,l[t]=a[t].index}const l=e.slice();return l[l.length-1]=r,[Object(Ze.a)(u,l,n),Object(Ze.a)(c,l,"int32")]}var tn=n("AoCb"),en=n("i4e/"),nn=n("L7Hl");const rn={kernelName:vt.a,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(zt.a)(t,Object(nn.a)(Object(U.a)(n,"float32"),-1))}}};var an=n("O7f5");const sn={kernelName:vt.b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Bt.a)(Object(U.a)(n,"float32")),r=Object(Lt.a)(Object(Xt.a)(Object(Wt.a)(1),e));return Object(an.a)(Object(Mt.a)(t,r))}}}},on={kernelName:vt.c,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Lt.a)(Object(Xt.a)(Object(Bt.a)(Object(U.a)(n,"float32")),1));return Object(Mt.a)(t,e)}}}};var un=n("NclT"),cn=n("4FMF");const ln={kernelName:vt.d,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=pe.a(n.shape,r.shape);return{a:()=>{let e=t;const r=pe.c(n.shape,a);return r.length>0&&(e=Object(cn.a)(e,r)),Object(un.a)(e,n.shape)},b:()=>{let e=t;const n=pe.c(r.shape,a);return n.length>0&&(e=Object(cn.a)(e,n)),Object(un.a)(e,r.shape)}}}},dn={kernelName:vt.e,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}},hn={kernelName:vt.h,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Pt.a)(n)}}},pn={kernelName:vt.i,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Pt.a)(n)}}},fn={kernelName:vt.j,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Mt.a)(t,Object(Lt.a)(Object(Xt.a)(Object(Wt.a)(1),Object(Bt.a)(Object(U.a)(n,"float32")))))}}},mn={kernelName:vt.k,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Lt.a)(Object(Dt.a)(Object(Wt.a)(1),Object(Bt.a)(Object(U.a)(n,"float32"))));return Object(Mt.a)(t,e)}}}},bn={kernelName:vt.m,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(pe.a)(n.shape,r.shape);return{a:()=>{const e=Object(Dt.a)(Object(Bt.a)(n),Object(Bt.a)(r));let s=Object(zt.a)(t,Object(Mt.a)(r,e));const i=Object(pe.c)(n.shape,a);return i.length>0&&(s=Object(cn.a)(s,i)),Object(un.a)(s,n.shape)},b:()=>{const e=Object(Dt.a)(Object(Bt.a)(n),Object(Bt.a)(r));let s=Object(an.a)(Object(zt.a)(t,Object(Mt.a)(n,e)));const i=Object(pe.c)(r.shape,a);return i.length>0&&(s=Object(cn.a)(s,i)),Object(un.a)(s,r.shape)}}}},gn={kernelName:vt.l,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Mt.a)(t,Object(Dt.a)(Object(Bt.a)(Object(U.a)(n,"float32")),1))}}},yn={kernelName:vt.n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Mt.a)(t,Object(Xt.a)(Object(Wt.a)(1),Object(Bt.a)(Object(U.a)(n,"float32"))))}}};const vn=Object(bt.b)({avgPool3dBackprop_:function(t,e,n,r,a=[1,1,1],s,i){const o=Object(pt.a)(t,"dy","avgPool3dBackprop"),u=Object(pt.a)(e,"input","avgPool3dBackprop");let c=o,d=u,h=!1;4===u.rank&&(h=!0,c=Object(un.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=Object(un.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),k.b(5===c.rank,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+c.rank+"."),k.b(5===d.rank,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+d.rank+"."),k.b(me.h(r,a),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`),null!=i&&k.b(k.v(s),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const p={dy:c,input:d},f={filterSize:n,strides:r,dilations:a,pad:s,dimRoundingMode:i},m=l.a.runKernelFunc(t=>{const e=me.f(d.shape,n,r,a,s,i);return t.avgPool3dBackprop(c,d,e)},p,null,vt.q,f);return h?Object(un.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),xn={kernelName:vt.p,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:s,dilations:i,pad:o,dimRoundingMode:u}=n,c=null==i?[1,1,1]:i;return{x:()=>vn(t,r,a,s,c,o,u)}}};const On=Object(bt.b)({avgPoolBackprop_:function(t,e,n,r,a){const s=Object(pt.a)(t,"dy","avgPoolBackprop"),i=Object(pt.a)(e,"input","avgPoolBackprop");k.b(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,u=s,c=!1;3===i.rank&&(c=!0,o=Object(un.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Object(un.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),k.b(4===u.rank,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+u.rank+"."),k.b(4===o.rank,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+o.rank+".");const d={dy:u,input:o},h={filterSize:n,strides:r,pad:a},p=l.a.runKernelFunc(t=>{const e=me.e(o.shape,n,r,1,a);return t.avgPoolBackprop(u,o,e)},d,null,vt.r,h);return c?Object(un.a)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),wn={kernelName:vt.o,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:s,pad:i}=n;return{x:()=>On(t,r,a,s,i)}}},kn={kernelName:vt.s,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,a]=e,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Object(ft.a)(t,a,!1,!1),b:()=>Object(ft.a)(t,r,!0,!1)}:s&&!i?{a:()=>Object(ft.a)(a,t,!1,!0),b:()=>Object(ft.a)(r,t,!1,!1)}:{a:()=>Object(ft.a)(a,t,!0,!0),b:()=>Object(ft.a)(t,r,!0,!0)}:{a:()=>Object(ft.a)(t,a,!1,!0),b:()=>Object(ft.a)(r,t,!0,!1)}}};var jn=n("dYAU");const Nn={kernelName:vt.t,gradFunc:(t,e,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(jn.a)(t,r,a)}}},Sn={kernelName:vt.u,gradFunc:(t,e,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let u=a.length-1;u>=0;u--)if(a[u]===s[u])i[u]=1;else if(1!==a[u])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>Object(cn.a)(t,o,!0)}}},In={kernelName:vt.v,gradFunc:t=>({x:()=>t.clone()})},Cn={kernelName:vt.w,gradFunc:t=>({x:()=>Object(Pt.a)(t)})};var Tn=n("uy0A"),An=n("shz4"),En=n("4zPZ"),Rn=n("Z5Ez");const $n={kernelName:vt.x,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Object(Rn.a)(Object(En.a)(Object(Tn.a)(r,a),Object(An.a)(r,s)),t,Object(Pt.a)(t))}}};var _n=n("RbuM");const Fn={kernelName:vt.z,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:a}=n,s=Object(k.I)(a,e[0].shape)[0],i=r.map(t=>t[s]);return Object(_n.a)(t,i,s).map(t=>()=>t)}};var Dn=n("D2/b"),Mn=n("c9N1");const zn={kernelName:vt.A,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return k.b(me.i(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Object(Mn.a)(r.shape,t,a,i,o,u),filter:()=>Object(Dn.a)(r,t,a.shape,i,o,u)}}};var Ln=n("3X4V");const Bn={kernelName:vt.C,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Object(Ln.a)(t,a,s,i,o,1,u),filter:()=>Object(Dn.a)(t,r,a.shape,s,i,o,u)}}};const Pn=Object(bt.b)({conv3DBackpropFilter_:function(t,e,n,r,a){let s=t;4===t.rank&&(s=Object(un.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=Object(un.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),k.b(5===s.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+s.shape+"."),k.b(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."),k.b(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),k.b(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),k.b(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return l.a.runKernelFunc(t=>{const e=me.b(s.shape,n,r,1,a);return t.conv3dDerFilter(s,i,e)},o,null,vt.E,u)}});var Vn=n("mdDO");const Wn={kernelName:vt.D,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:s}=n;k.b(Object(me.i)(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=e;return{x:()=>Object(Vn.a)(i.shape,t,o,a,s),filter:()=>Pn(i,t,o.shape,a,s)}}};var Un=n("aTLu");const Kn={kernelName:vt.G,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(zt.a)(Object(an.a)(Object(Un.a)(Object(U.a)(n,"float32"))),t)}}};var Gn=n("XcSs");const Hn={kernelName:vt.H,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(zt.a)(Object(Gn.a)(Object(U.a)(n,"float32")),t)}}};var qn=n("HmhO");const Xn={kernelName:vt.J,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const e=Object(he.f)([a],r.rank);let n=Object(qn.a)(t,a,s,!i);return null!=e&&(n=Object(gt.a)(n,e)),n}}}};var Yn=n("aSZd"),Jn=n("jLCh");const Zn={kernelName:vt.L,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;k.b(me.i(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,c]=e;return k.b(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),k.b(4===c.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),k.b(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),k.b(me.h(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),null!=i&&k.b(k.v(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),{x:()=>Object(Jn.a)(u.shape,t,c,a,s,r,i),filter:()=>Object(Yn.a)(u,t,c.shape,a,s,r,i)}}},Qn={kernelName:vt.P,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,s={x:r,filter:a,dy:t},i={x:r,filter:a,dy:t};return{x:()=>l.a.runKernel(vt.R,s,n),filter:()=>l.a.runKernel(vt.Q,i,n)}}},tr={kernelName:vt.S,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=pe.a(n.shape,r.shape);return{a:()=>{const e=Object(Mt.a)(t,Object(U.a)(r,"float32")),s=pe.c(n.shape,a);return s.length>0?Object(un.a)(Object(cn.a)(e,s),n.shape):e},b:()=>{let e=Object(zt.a)(t,Object(U.a)(n,"float32"));const s=pe.c(r.shape,a);s.length>0&&(e=Object(un.a)(Object(cn.a)(e,s),r.shape));const i=Object(Bt.a)(r);return Object(an.a)(Object(Mt.a)(e,Object(U.a)(i,"float32")))}}}},er={kernelName:vt.T,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),a={dy:t,y:n};return{x:()=>l.a.runKernelFunc(r,a,null,vt.U)}}};var nr=n("TyAZ");const rr={kernelName:vt.W,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(zt.a)(Object(nr.a)(Object(an.a)(Object(Bt.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(zt.a)(t,r)}}},ar={kernelName:vt.X,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(zt.a)(t,n)}}},sr={kernelName:vt.Y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(zt.a)(t,Object(nr.a)(n))}}},ir={kernelName:vt.cb,gradFunc:t=>({x:()=>Object(Pt.a)(t)})},or={kernelName:vt.db,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(pe.a)(n.shape,r.shape);return{a:()=>{const e=Object(Mt.a)(t,Object(U.a)(r,"float32")),s=Object(pe.c)(n.shape,a);return s.length>0?Object(un.a)(Object(cn.a)(e,s),n.shape):e},b:()=>{let e=Object(zt.a)(t,Object(U.a)(n,"float32"));const s=Object(pe.c)(r.shape,a);s.length>0&&(e=Object(un.a)(Object(cn.a)(e,s),r.shape));const i=Object(Bt.a)(r);return Object(an.a)(Object(Mt.a)(e,Object(U.a)(i,"float32")))}}}};var ur=n("Xyqe"),cr=n("jXH2");const lr={kernelName:vt.fb,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=e,u=null==o?Object(Wt.a)(1):o,c=Object(pe.c)(s.shape,a.shape),l=[];if(1===s.rank){for(let t=0;t<a.shape.length-1;++t)l.push(a.shape[t]);l.push(1)}const d=Object(Xt.a)(a,s),h=Object(zt.a)(t,u),p=Object(ur.a)(Object(Dt.a)(i,Object(Wt.a)(r))),f=Object(zt.a)(Object(zt.a)(Object(zt.a)(p,p),p),Object(Wt.a)(-.5));return{x:()=>1===s.rank?Object(un.a)(Object(zt.a)(Object(zt.a)(t,Object(cr.a)(Object(un.a)(p,[1,1,1,s.shape[0]]),l)),u),a.shape):Object(un.a)(Object(zt.a)(Object(zt.a)(t,p),u),a.shape),mean:()=>{let t=Object(zt.a)(Object(zt.a)(p,Object(Wt.a)(-1)),h);return 1===s.rank&&(t=Object(cn.a)(t,c)),Object(un.a)(t,s.shape)},variance:()=>{let t=Object(zt.a)(Object(zt.a)(f,d),h);return 1===s.rank&&(t=Object(cn.a)(t,c)),Object(un.a)(t,s.shape)},scale:()=>{const e=Object(zt.a)(d,p);let n=Object(zt.a)(t,e);return 1===s.rank&&(n=Object(cn.a)(n,c)),Object(un.a)(n,s.shape)},offset:()=>{let e=t;return 1===s.rank&&(e=Object(cn.a)(e,c)),Object(un.a)(e,s.shape)}}}};var dr=n("U/Lz");const hr={kernelName:vt.jb,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,a]=e,{axis:s}=n,i=Object(k.I)(s,r.shape)[0];return{x:()=>{const e=r.shape,n=a.size,o=e.slice(0,i),u=o.length,c=e.slice(s,e.length).slice(1),l=c.length,d=pr(0,u),h=pr(u+1,u+1+l),p=fr([o,[n],c]),f=Object(un.a)(t,p),m=Object(un.a)(a,[n]),b=fr([[u],d,h]),g=Object(gt.a)(f,b);let y=Object(dr.a)(g,m,r.shape[i]);const v=Object(he.h)(b);return y=Object(gt.a)(y,v),y},indices:()=>a}}};function pr(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function fr(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const mr={kernelName:vt.lb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(Pt.a)(n),b:()=>Object(Pt.a)(r)}}},br={kernelName:vt.nb,gradFunc:t=>({x:()=>Object(U.a)(t,"float32")})},gr={kernelName:vt.pb,gradFunc:t=>({x:()=>Object(Pt.a)(t)})},yr={kernelName:vt.qb,gradFunc:t=>({x:()=>Object(Pt.a)(t)})},vr={kernelName:vt.rb,gradFunc:t=>({x:()=>Object(Pt.a)(t)})},xr={kernelName:vt.yb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Mt.a)(t,Object(Dt.a)(n,1))}}},Or={kernelName:vt.xb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Mt.a)(t,Object(U.a)(n,"float32"))}}},wr={kernelName:vt.zb,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n;return{logits:()=>{const e=Object(nr.a)(r);return Object(Xt.a)(t,Object(zt.a)(Object(cn.a)(t,a,!0),e))}}}};const kr=Object(bt.b)({localResponseNormalizationBackprop_:function(t,e,n,r=5,a=1,s=1,i=.5){const o={x:t,y:e,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return l.a.runKernelFunc(o=>o.LRNGrad(n,t,e,r,a,s,i),o,null,vt.tb,u)}}),jr={kernelName:vt.sb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>kr(r,a,t,s,i,o,u)}}};var Nr=n("ubnP");function Sr(t,e,n,r){return e.rank<n.rank&&(e=Object(un.a)(e,he.e(e.shape,r))),t.rank<n.rank&&(t=Object(un.a)(t,he.e(t.shape,r))),{x:()=>Object(zt.a)(t,Object(U.a)(Object(Nr.a)(n,e),t.dtype))}}const Ir={kernelName:vt.Db,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:a}=r,s=e[0],i=Sr(t,e[1],s,k.I(a,s.shape));return{x:()=>i.x()}}};var Cr=n("4f3O");const Tr={kernelName:vt.Jb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(zt.a)(t,Object(U.a)(Object(Tn.a)(n,r),"float32")),b:()=>Object(zt.a)(t,Object(U.a)(Object(Cr.a)(n,r),"float32"))}}};const Ar=Object(bt.b)({maxPool3dBackprop_:function(t,e,n,r,a,s=[1,1,1],i,o){const u=Object(pt.a)(t,"dy","maxPool3dBackprop"),c=Object(pt.a)(e,"input","maxPool3dBackprop"),d=Object(pt.a)(n,"output","maxPool3dBackprop");let h=u,p=c,f=d,m=!1;4===c.rank&&(m=!0,h=Object(un.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Object(un.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),f=Object(un.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),k.b(5===h.rank,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+"."),k.b(5===p.rank,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+p.rank+"."),k.b(5===f.rank,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+f.rank+"."),k.b(me.h(a,s),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),null!=o&&k.b(k.v(i),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`);const b={dy:h,input:p,output:f},g={filterSize:r,strides:a,dilations:s,pad:i,dimRoundingMode:o},y=l.a.runKernelFunc(t=>{const e=me.f(p.shape,r,a,s,i,o);return t.maxPool3dBackprop(h,p,f,e)},b,null,vt.Gb,g);return m?Object(un.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Er={kernelName:vt.Fb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:s,strides:i,dilations:o,pad:u,dimRoundingMode:c}=n,l=null==o?[1,1,1]:o;return{x:()=>Ar(t,r,a,s,i,l,u,c)}}};const Rr=Object(bt.b)({maxPoolBackprop_:function(t,e,n,r,a,s,i){const o=Object(pt.a)(t,"dy","maxPoolBackprop"),u=Object(pt.a)(e,"input","maxPoolBackprop"),c=Object(pt.a)(n,"output","maxPoolBackprop");k.b(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),k.b(4===o.rank,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+o.rank+"."),k.b(4===u.rank,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+u.rank+"."),null!=i&&k.b(k.v(s),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const d={dy:o,input:u,output:c},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return l.a.runKernelFunc(t=>{const e=me.e(u.shape,r,a,1,s,i);return t.maxPoolBackprop(o,u,c,e)},d,null,vt.Hb,h)}}),$r={kernelName:vt.Eb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:s,strides:i,pad:o}=n;return{x:()=>Rr(t,r,a,s,i,o)}}},_r={kernelName:vt.Lb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:a}=r,[s,i]=e,o=Sr(t,i,s,k.I(a,s.shape));return{x:()=>o.x()}}};var Fr=n("zvA9");const Dr={kernelName:vt.Mb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(zt.a)(t,Object(U.a)(Object(An.a)(n,r),"float32")),b:()=>Object(zt.a)(t,Object(U.a)(Object(Fr.a)(n,r),"float32"))}}},Mr={kernelName:vt.Nb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,s=a.map(t=>t[0]);return{x:()=>Object(Xe.a)(t,s,r.shape)}}};var zr=n("02mo");const Lr={kernelName:vt.Ob,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(pe.a)(n.shape,r.shape);return{a:()=>{const e=Object(pe.c)(n.shape,a);return e.length>0?Object(un.a)(Object(cn.a)(t,e),n.shape):t},b:()=>{const e=Object(zt.a)(t,Object(an.a)(Object(zr.a)(Object(Mt.a)(n,r)))),s=Object(pe.c)(r.shape,a);return s.length>0?Object(un.a)(Object(cn.a)(e,s),r.shape):e}}}},Br={kernelName:vt.Pb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(pe.a)(n.shape,r.shape);return{a:()=>{const e=Object(zt.a)(t,Object(U.a)(r,"float32")),s=Object(pe.c)(n.shape,a);return s.length>0?Object(un.a)(Object(cn.a)(e,s),n.shape):e},b:()=>{const e=Object(zt.a)(t,Object(U.a)(n,"float32")),s=Object(pe.c)(r.shape,a);return s.length>0?Object(un.a)(Object(cn.a)(e,s),r.shape):e}}}},Pr={kernelName:vt.Qb,gradFunc:t=>({x:()=>Object(an.a)(t)})},Vr={kernelName:vt.Vb,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Object(de.a)(n.shape,"float32")}}},Wr={kernelName:vt.Wb,gradFunc:t=>({x:()=>Object(Pt.a)(t)})},Ur={kernelName:vt.Xb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,s=a.map(t=>t[0]);return{x:()=>Object(Xe.a)(t,s,r.shape)}}};var Kr=n("E1lT");const Gr={kernelName:vt.Zb,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,a]=e,s=n,i=r,o=pe.a(s.shape,i.shape);return{a:()=>{const e=Object(U.a)(i,"float32");let n=Object(zt.a)(t,Object(zt.a)(e,Object(qt.a)(s,Object(Xt.a)(e,Object(Wt.a)(1)))));const r=pe.c(s.shape,o);return r.length>0&&(n=Object(cn.a)(n,r)),Object(un.a)(n,s.shape)},b:()=>{const e=Object(Fr.a)(s,0),n=Object(Rn.a)(e,Object(Kr.a)(s),Object(Pt.a)(s));let r=Object(zt.a)(t,Object(zt.a)(a,n));const u=pe.c(i.shape,o);return u.length>0&&(r=Object(cn.a)(r,u)),Object(un.a)(r,i.shape)}}}},Hr={kernelName:vt.ac,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Fr.a)(n,0);return{x:()=>Object(Rn.a)(a,t,Object(zt.a)(t,r)),alpha:()=>{let e=Object(Rn.a)(a,Object(Pt.a)(t),Object(zt.a)(t,n));const s=Object(pe.c)(r.shape,t.shape);return s.length>0&&(e=Object(cn.a)(e,s)),Object(un.a)(e,r.shape)}}}},qr={kernelName:vt.ec,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Mt.a)(t,Object(an.a)(Object(Bt.a)(n)))}}},Xr={kernelName:vt.gc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(zt.a)(Object(An.a)(n,6),Object(nn.a)(n));return{x:()=>Object(zt.a)(t,Object(U.a)(r,"float32"))}}},Yr={kernelName:vt.fc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(zt.a)(t,Object(U.a)(Object(nn.a)(n),"float32"))}}},Jr={kernelName:vt.hc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(un.a)(t,n.shape)}}},Zr={kernelName:vt.ic,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a=e=>{const{alignCorners:a}=n;return e.resizeBilinearBackprop(t,r,a)},s={images:r};return{images:()=>l.a.runKernelFunc(a,s,null,vt.jc,n)}}},Qr={kernelName:vt.kc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a=e=>{const{alignCorners:a}=n;return e.resizeNearestNeighborBackprop(t,r,a)},s={images:r};return{images:()=>l.a.runKernelFunc(a,s,null,vt.lc,n)}}};var ta=n("0I63");const ea={kernelName:vt.mc,gradFunc:(t,e,n)=>{const{dims:r}=n,a=Object(k.I)(r,t.shape);return{x:()=>Object(ta.a)(t,a)}}},na={kernelName:vt.oc,gradFunc:t=>({x:()=>Object(Pt.a)(t)})},ra={kernelName:vt.pc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(an.a)(Object(Mt.a)(t,Object(zt.a)(Object(qt.a)(n,1.5),2)))}}};var aa=n("7wDt");const sa={kernelName:vt.rc,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Object(U.a)(Object(Pt.a)(n),"float32"),t:()=>Object(zt.a)(t,Object(U.a)(n,t.dtype)),e:()=>Object(zt.a)(t,Object(U.a)(Object(aa.a)(n),t.dtype))}}},ia={kernelName:vt.sc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Fr.a)(n,Object(Wt.a)(0)),r=Object(Wt.a)(je),a=Object(Wt.a)(Ne),s=Object(zt.a)(t,a),i=Object(zt.a)(Object(zt.a)(t,r),Object(nr.a)(Object(U.a)(n,"float32")));return Object(Rn.a)(e,s,i)}}}},oa={kernelName:vt.tc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(zt.a)(t,Object(zt.a)(n,Object(Xt.a)(Object(Wt.a)(1),n)))}}},ua={kernelName:vt.uc,gradFunc:t=>({x:()=>Object(Pt.a)(t)})};var ca=n("7/dO");const la={kernelName:vt.vc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(zt.a)(Object(ca.a)(Object(U.a)(n,"float32")),t)}}};var da=n("waK1");const ha={kernelName:vt.wc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(zt.a)(Object(da.a)(Object(U.a)(n,"float32")),t)}}};var pa=n("DrVt");const fa={kernelName:vt.xc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:a,size:s}=n,i=r.shape,[o,u]=Object(It.parseSliceParams)(r,a,s),c=[];for(let l=0;l<t.rank;l++)c.push([o[l],i[l]-o[l]-u[l]]);return{x:()=>Object(pa.a)(t,c)}}},ma={kernelName:vt.yc,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:a}=n,s=Object(zt.a)(t,r);return{logits:()=>Object(Xt.a)(s,Object(zt.a)(Object(cn.a)(s,[a],true),r))}}};var ba=n("/7N0");const ga={kernelName:vt.zc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(zt.a)(t,Object(ba.a)(n))}}};var ya=n("OygE");const va={kernelName:vt.Ac,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(ya.a)(t,r,a)}}};var xa=n("ZJ6U");const Oa={kernelName:vt.Cc,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Object(xa.a)(t,r)}}},wa={kernelName:vt.Dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Mt.a)(t,Object(zt.a)(Object(Lt.a)(Object(U.a)(n,"float32")),2))}}},ka={kernelName:vt.Ec,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(zt.a)(t,Object(zt.a)(Object(U.a)(n,"float32"),2))}}},ja={kernelName:vt.Fc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Wt.a)(2);return{a:()=>Object(zt.a)(t,Object(zt.a)(a,Object(Xt.a)(n,r))),b:()=>Object(zt.a)(t,Object(zt.a)(a,Object(Xt.a)(r,n)))}}},Na={kernelName:vt.Gc,gradFunc:t=>({x:()=>Object(Pt.a)(t)})},Sa={kernelName:vt.Ic,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=pe.a(n.shape,r.shape);return{a:()=>{let e=t;const r=pe.c(n.shape,a);return r.length>0&&(e=Object(cn.a)(e,r)),Object(un.a)(e,n.shape)},b:()=>{let e=t;const n=pe.c(r.shape,a);return n.length>0&&(e=Object(cn.a)(e,n)),Object(un.a)(Object(an.a)(e),r.shape)}}}};var Ia=n("wion");const Ca={kernelName:vt.Jc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,a=r.shape.slice(),{axis:s}=n;Object(k.I)(s,r.shape).forEach(t=>{a[t]=1});const i=Object(un.a)(t,a),o=Object(zt.a)(i,Object(Ia.a)(r.shape,"float32"));return{x:()=>o}}},Ta={kernelName:vt.Kc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Mt.a)(t,Object(Bt.a)(Object(ca.a)(n)))}}},Aa={kernelName:vt.Lc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(zt.a)(Object(Xt.a)(Object(Wt.a)(1),Object(Bt.a)(n)),t)}}},Ea={kernelName:vt.Mc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:a}=n;return{x:()=>{let e=Object(Pt.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)e=Object(Dt.a)(e,Object(Xe.a)(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)e=Object(Dt.a)(e,Object(Xe.a)(t,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)e=Object(Dt.a)(e,Object(Xe.a)(t,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)e=Object(Dt.a)(e,Object(Xe.a)(t,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},Ra={kernelName:vt.Oc,gradFunc:(t,e,n)=>{const r=n,{perm:a}=r,s=he.h(a);return{x:()=>Object(gt.a)(t,s)}}};var $a=n("1U0N");const _a={kernelName:vt.Qc,gradFunc:(t,e,n)=>{const r=n,{axis:a}=r;return{value:()=>Object($a.a)(t,a)}}};var Fa=n("2ugP"),Da=n("kaMP");const Ma=[rn,sn,on,ln,dn,hn,pn,fn,mn,bn,gn,yn,xn,wn,kn,Nn,Sn,In,Cn,$n,Fn,Bn,zn,Wn,Kn,Hn,Xn,Zn,Qn,tr,er,rr,ar,sr,or,ir,lr,hr,mr,br,gr,yr,vr,xr,Or,wr,jr,Ir,Ir,Tr,Er,$r,_r,Dr,Mr,Lr,Br,Pr,Vr,Wr,Ur,Ur,Gr,Hr,qr,Xr,Yr,Jr,Zr,Qr,ea,na,ra,sa,ia,oa,ua,la,ha,fa,ma,ga,va,va,Oa,Oa,wa,ja,ka,Na,Sa,Ca,Ta,Aa,Ea,Ra,_a,{kernelName:vt.Rc,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Object(Zt.a)(e,Object(Pt.a)(e)),r=Object(Da.a)(t,n);let a=Object(Tn.a)(e,Object(Wt.a)(0,"int32"));const s=r.rank-a.rank;for(let o=0;o<s;++o)a=Object(Fa.a)(a,o+1);a=Object(En.a)(a,Object(Ia.a)(r.shape,"bool"));const i=Object(Pt.a)(r);return Object(Rn.a)(a,r,i)}(t,n)}}},{kernelName:vt.Sc,gradFunc:t=>({x:()=>Object(Pt.a)(t)})}];for(const oi of Ma)Object(xt.e)(oi);H.a.prototype.abs=function(){return this.throwIfDisposed(),Object(Jt.a)(this)};var za=n("o3Rt");H.a.prototype.acos=function(){return this.throwIfDisposed(),Object(za.a)(this)};var La=n("RhVc");H.a.prototype.acosh=function(){return this.throwIfDisposed(),Object(La.a)(this)};var Ba=n("zLES");H.a.prototype.addStrict=function(t){return this.throwIfDisposed(),Object(Ba.a)(this,t)},H.a.prototype.add=function(t){return this.throwIfDisposed(),Object(Dt.a)(this,t)};var Pa=n("34HJ");H.a.prototype.all=function(t,e){return this.throwIfDisposed(),Object(Pa.a)(this,t,e)};var Va=n("RRa9");H.a.prototype.any=function(t,e){return this.throwIfDisposed(),Object(Va.a)(this,t,e)};var Wa=n("6J+n");H.a.prototype.argMax=function(t){return this.throwIfDisposed(),Object(Wa.a)(this,t)};var Ua=n("20lx");H.a.prototype.argMin=function(t){return this.throwIfDisposed(),Object(Ua.a)(this,t)},H.a.prototype.asScalar=function(){return this.throwIfDisposed(),Object(k.b)(1===this.size,()=>"The array must have only 1 element."),Object(un.a)(this,[])},H.a.prototype.asType=function(t){return this.throwIfDisposed(),Object(U.a)(this,t)},H.a.prototype.as1D=function(){return this.throwIfDisposed(),Object(un.a)(this,[this.size])},H.a.prototype.as2D=function(t,e){return this.throwIfDisposed(),Object(un.a)(this,[t,e])},H.a.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Object(un.a)(this,[t,e,n])},H.a.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),Object(un.a)(this,[t,e,n,r])},H.a.prototype.as5D=function(t,e,n,r,a){return this.throwIfDisposed(),Object(un.a)(this,[t,e,n,r,a])};var Ka=n("Ig+c");H.a.prototype.asin=function(){return this.throwIfDisposed(),Object(Ka.a)(this)};var Ga=n("3FnS");H.a.prototype.asinh=function(){return this.throwIfDisposed(),Object(Ga.a)(this)};var Ha=n("fjZN");H.a.prototype.atan=function(){return this.throwIfDisposed(),Object(Ha.a)(this)};var qa=n("YAKK");H.a.prototype.atan2=function(t){return this.throwIfDisposed(),Object(qa.a)(this,t)};var Xa=n("0ahe");H.a.prototype.atanh=function(){return this.throwIfDisposed(),Object(Xa.a)(this)};var Ya=n("l0gX");H.a.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Object(Ya.a)(this,t,e,n,r)},H.a.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Object(ya.a)(this,t,e)};var Ja=n("cdtJ");H.a.prototype.batchNorm=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Ja.a)(this,t,e,n,r,a)};var Za=n("SNsm");H.a.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Object(Za.a)(this,t)},H.a.prototype.cast=function(t){return this.throwIfDisposed(),Object(U.a)(this,t)};var Qa=n("WWBm");H.a.prototype.ceil=function(){return this.throwIfDisposed(),Object(Qa.a)(this)};var ts=n("wI/y");H.a.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Object(ts.a)(this,t,e)},H.a.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof H.a&&(t=[t]),Object(xa.a)([this,...t],e)};var es=n("dnXz");H.a.prototype.conv1d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(es.a)(this,t,e,n,r,a,s)};var ns=n("zR+/");H.a.prototype.conv2dTranspose=function(t,e,n,r,a){return this.throwIfDisposed(),Object(ns.a)(this,t,e,n,r,a)},H.a.prototype.conv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(Ln.a)(this,t,e,n,r,a,s)},H.a.prototype.cos=function(){return this.throwIfDisposed(),Object(ca.a)(this)},H.a.prototype.cosh=function(){return this.throwIfDisposed(),Object(da.a)(this)},H.a.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Object(qn.a)(this,t,e,n)};var rs=n("Nk7E");H.a.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Object(rs.a)(this,t,e)};var as=n("g4+C");H.a.prototype.depthwiseConv2D=function(t,e,n,r,a,s){return Object(Ft.b)("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Object(as.a)(this,t,e,n,r,a,s)},H.a.prototype.depthwiseConv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(as.a)(this,t,e,n,r,a,s)};var ss=n("wXC5");H.a.prototype.dilation2d=function(t,e,n,r,a){return this.throwIfDisposed(),Object(ss.a)(this,t,e,n,r,a)};var is=n("ARu+");H.a.prototype.divNoNan=function(t){return this.throwIfDisposed(),Object(is.a)(this,t)},H.a.prototype.divStrict=function(t){return this.throwIfDisposed(),Object(Ba.b)(this,t)},H.a.prototype.div=function(t){return this.throwIfDisposed(),Object(Mt.a)(this,t)};var os=n("Kfzt");H.a.prototype.dot=function(t){return this.throwIfDisposed(),Object(os.a)(this,t)};var us=n("njhW");H.a.prototype.elu=function(){return this.throwIfDisposed(),Object(us.a)(this)};var cs=n("8bUJ");H.a.prototype.equalStrict=function(t){return this.throwIfDisposed(),Object(cs.a)(this,t)},H.a.prototype.equal=function(t){return this.throwIfDisposed(),Object(Nr.a)(this,t)};var ls=n("jgXy");H.a.prototype.erf=function(){return this.throwIfDisposed(),Object(ls.a)(this)},H.a.prototype.exp=function(){return this.throwIfDisposed(),Object(nr.a)(this)},H.a.prototype.expandDims=function(t){return this.throwIfDisposed(),Object(Fa.a)(this,t)};var ds=n("G6IW");H.a.prototype.expm1=function(){return this.throwIfDisposed(),Object(ds.a)(this)};var hs=n("Grcp");H.a.prototype.fft=function(){return this.throwIfDisposed(),Object(hs.a)(this)},H.a.prototype.flatten=function(){return this.throwIfDisposed(),Object(un.a)(this,[this.size])},H.a.prototype.floor=function(){return this.throwIfDisposed(),Object(zr.a)(this)};var ps=n("UI8N");H.a.prototype.floorDiv=function(t){return this.throwIfDisposed(),Object(ps.a)(this,t)},H.a.prototype.gather=function(t,e){return this.throwIfDisposed(),Object(Da.a)(this,t,e)},H.a.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Object(cs.b)(this,t)},H.a.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Object(Tn.a)(this,t)},H.a.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Object(cs.c)(this,t)},H.a.prototype.greater=function(t){return this.throwIfDisposed(),Object(Fr.a)(this,t)};var fs=n("THqV");H.a.prototype.ifft=function(){return this.throwIfDisposed(),Object(fs.a)(this)};var ms=n("adw1");H.a.prototype.irfft=function(){return this.throwIfDisposed(),Object(ms.a)(this)};var bs=n("/AvP");H.a.prototype.isFinite=function(){return this.throwIfDisposed(),Object(bs.a)(this)};var gs=n("WYAb");H.a.prototype.isInf=function(){return this.throwIfDisposed(),Object(gs.a)(this)};var ys=n("b++O");H.a.prototype.isNaN=function(){return this.throwIfDisposed(),Object(ys.a)(this)};var vs=n("bzdD");H.a.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Object(vs.a)(this,t)},H.a.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Object(cs.d)(this,t)},H.a.prototype.lessEqual=function(t){return this.throwIfDisposed(),Object(An.a)(this,t)},H.a.prototype.lessStrict=function(t){return this.throwIfDisposed(),Object(cs.e)(this,t)},H.a.prototype.less=function(t){return this.throwIfDisposed(),Object(Cr.a)(this,t)};var xs=n("4QEz");H.a.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Object(xs.a)(this,t,e,n,r)};var Os=n("wxQM");H.a.prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(Os.a)(this)};var ws=n("gErV");H.a.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Object(ws.a)(this,t)};var ks=n("r9q9");H.a.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Object(ks.a)(this,t,e)},H.a.prototype.log=function(){return this.throwIfDisposed(),Object(Kr.a)(this)};var js=n("RrGL");H.a.prototype.log1p=function(){return this.throwIfDisposed(),Object(js.a)(this)},H.a.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Object(En.a)(this,t)},H.a.prototype.logicalNot=function(){return this.throwIfDisposed(),Object(aa.a)(this)};var Ns=n("8YN0");H.a.prototype.logicalOr=function(t){return this.throwIfDisposed(),Object(Ns.a)(this,t)};var Ss=n("0l+w");H.a.prototype.logicalXor=function(t){return this.throwIfDisposed(),Object(Ss.a)(this,t)},H.a.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Object(ft.a)(this,t,e,n)};var Is=n("n+ZZ");H.a.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Object(Is.a)(this,t,e,n,r)};var Cs=n("wCH+");H.a.prototype.max=function(t,e){return this.throwIfDisposed(),Object(Cs.a)(this,t,e)},H.a.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Object(Ba.c)(this,t)},H.a.prototype.maximum=function(t){return this.throwIfDisposed(),Object(Zt.a)(this,t)};var Ts=n("Ei6o");H.a.prototype.mean=function(t,e){return this.throwIfDisposed(),Object(Ts.a)(this,t,e)};var As=n("rm0a");H.a.prototype.min=function(t,e){return this.throwIfDisposed(),Object(As.a)(this,t,e)},H.a.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Object(Ba.d)(this,t)};var Es=n("8OX7");H.a.prototype.minimum=function(t){return this.throwIfDisposed(),Object(Es.a)(this,t)};var Rs=n("k9tH");H.a.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Object(Rs.a)(this,t,e)},H.a.prototype.modStrict=function(t){return this.throwIfDisposed(),Object(Ba.e)(this,t)};var $s=n("RhH0");H.a.prototype.mod=function(t){return this.throwIfDisposed(),Object($s.a)(this,t)},H.a.prototype.mulStrict=function(t){return this.throwIfDisposed(),Object(Ba.f)(this,t)},H.a.prototype.mul=function(t){return this.throwIfDisposed(),Object(zt.a)(this,t)},H.a.prototype.neg=function(){return this.throwIfDisposed(),Object(an.a)(this)};var _s=n("91d6");H.a.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Object(_s.a)(this,t,e,n)},H.a.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Object(cs.f)(this,t)};var Fs=n("1N4k");H.a.prototype.notEqual=function(t){return this.throwIfDisposed(),Object(Fs.a)(this,t)},H.a.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Object(mt.a)(this,t,e,n)};var Ds=n("DbV5");H.a.prototype.onesLike=function(){return this.throwIfDisposed(),Object(Ds.a)(this)},H.a.prototype.pad=function(t,e){return this.throwIfDisposed(),Object(pa.a)(this,t,e)};var Ms=n("6vQL");H.a.prototype.pool=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Ms.a)(this,t,e,n,r,a)},H.a.prototype.powStrict=function(t){return this.throwIfDisposed(),Object(Ba.g)(this,t)},H.a.prototype.pow=function(t){return this.throwIfDisposed(),Object(qt.a)(this,t)};var zs=n("Ug8H");H.a.prototype.prelu=function(t){return this.throwIfDisposed(),Object(zs.a)(this,t)};var Ls=n("867m");H.a.prototype.prod=function(t,e){return this.throwIfDisposed(),Object(Ls.a)(this,t,e)};var Bs=n("tQDl");H.a.prototype.reciprocal=function(){return this.throwIfDisposed(),Object(Bs.a)(this)};var Ps=n("kXpR");H.a.prototype.relu=function(){return this.throwIfDisposed(),Object(Ps.a)(this)};var Vs=n("Rqg+");H.a.prototype.relu6=function(){return this.throwIfDisposed(),Object(Vs.a)(this)},H.a.prototype.reshapeAs=function(t){return this.throwIfDisposed(),Object(un.a)(this,t.shape)},H.a.prototype.reshape=function(t){return this.throwIfDisposed(),Object(un.a)(this,t)};var Ws=n("c/ib");H.a.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),Object(Ws.a)(this,t,e)};var Us=n("D4ac");H.a.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),Object(Us.a)(this,t,e)},H.a.prototype.reverse=function(t){return this.throwIfDisposed(),Object(ta.a)(this,t)};var Ks=n("th0q");H.a.prototype.rfft=function(){return this.throwIfDisposed(),Object(Ks.a)(this)};var Gs=n("CKnt");H.a.prototype.round=function(){return this.throwIfDisposed(),Object(Gs.a)(this)},H.a.prototype.rsqrt=function(){return this.throwIfDisposed(),Object(ur.a)(this)};var Hs=n("s57M");H.a.prototype.selu=function(){return this.throwIfDisposed(),Object(Hs.a)(this)};var qs=n("EWu9");H.a.prototype.separableConv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(qs.a)(this,t,e,n,r,a,s)},H.a.prototype.sigmoid=function(){return this.throwIfDisposed(),Object(ba.a)(this)};var Xs=n("Hfat");H.a.prototype.sign=function(){return this.throwIfDisposed(),Object(Xs.a)(this)},H.a.prototype.sin=function(){return this.throwIfDisposed(),Object(Un.a)(this)},H.a.prototype.sinh=function(){return this.throwIfDisposed(),Object(Gn.a)(this)},H.a.prototype.slice=function(t,e){return this.throwIfDisposed(),Object(Xe.a)(this,t,e)};var Ys=n("X4fa");H.a.prototype.softmax=function(t){return this.throwIfDisposed(),Object(Ys.a)(this,t)};var Js=n("n/2y");H.a.prototype.softplus=function(){return this.throwIfDisposed(),Object(Js.a)(this)},H.a.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Object(jn.a)(this,t,e)},H.a.prototype.split=function(t,e){return this.throwIfDisposed(),Object(_n.a)(this,t,e)},H.a.prototype.sqrt=function(){return this.throwIfDisposed(),Object(Lt.a)(this)},H.a.prototype.square=function(){return this.throwIfDisposed(),Object(Bt.a)(this)};var Zs=n("QYQ3");H.a.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Object(Zs.a)(this,t)},H.a.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Object(Ba.h)(this,t)};var Qs=n("0fRV");H.a.prototype.squeeze=function(t){return this.throwIfDisposed(),Object(Qs.a)(this,t)},H.a.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof H.a?[this,t]:[this,...t];return Object($a.a)(n,e)},H.a.prototype.step=function(t){return this.throwIfDisposed(),Object(nn.a)(this,t)};var ti=n("3hph");H.a.prototype.stridedSlice=function(t,e,n,r,a,s,i,o){return this.throwIfDisposed(),Object(ti.a)(this,t,e,n,r,a,s,i,o)},H.a.prototype.subStrict=function(t){return this.throwIfDisposed(),Object(Ba.i)(this,t)},H.a.prototype.sub=function(t){return this.throwIfDisposed(),Object(Xt.a)(this,t)},H.a.prototype.sum=function(t,e){return this.throwIfDisposed(),Object(cn.a)(this,t,e)};var ei=n("0wrZ");H.a.prototype.tan=function(){return this.throwIfDisposed(),Object(ei.a)(this)};var ni=n("iIjY");H.a.prototype.tanh=function(){return this.throwIfDisposed(),Object(ni.a)(this)},H.a.prototype.tile=function(t){return this.throwIfDisposed(),Object(cr.a)(this,t)},H.a.prototype.toBool=function(){return this.throwIfDisposed(),Object(U.a)(this,"bool")},H.a.prototype.toFloat=function(){return this.throwIfDisposed(),Object(U.a)(this,"float32")},H.a.prototype.toInt=function(){return this.throwIfDisposed(),Object(U.a)(this,"int32")};var ri=n("VhY8");H.a.prototype.topk=function(t,e){return this.throwIfDisposed(),Object(ri.a)(this,t,e)},H.a.prototype.transpose=function(t){return this.throwIfDisposed(),Object(gt.a)(this,t)};var ai=n("hT5K");H.a.prototype.unique=function(t){return this.throwIfDisposed(),Object(ai.a)(this,t)},H.a.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Object(dr.a)(this,t,e)};var si=n("OkRW");H.a.prototype.unstack=function(t){return this.throwIfDisposed(),Object(si.a)(this,t)},H.a.prototype.where=function(t,e){return this.throwIfDisposed(),Object(Rn.a)(t,this,e)},H.a.prototype.zerosLike=function(){return this.throwIfDisposed(),Object(Pt.a)(this)}},"/7N0":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sigmoid_:function(t){const e=Object(s.a)(t,"x","sigmoid"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.sigmoid(e);return n([r]),r},n,null,a.tc)}})},"/AvP":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({isFinite_:function(t){const e=Object(s.a)(t,"x","isFinite"),n={x:e};return r.a.runKernelFunc(t=>t.isFinite(e),n,null,a.pb)}})},"/MvE":function(t,e,n){t.exports={"form-checkbox":"common_form-checkbox__10BVB"}},"0+74":function(t,e,n){"use strict";n.r(e),n.d(e,"segOpComputeOptimalWindowSize",(function(){return s})),n.d(e,"computeOutShape",(function(){return i})),n.d(e,"collectGatherOpShapeInfo",(function(){return o}));var r=n("atXS"),a=n("9jvw");function s(t,e){let n,s=!1;for(t<=a.a?(n=t,s=!0):n=Object(r.G)(t,Math.floor(Math.sqrt(t)));!s;)n>e||n===t?s=!0:n=Object(r.G)(t,n+1);return n}function i(t,e,n){const r=[],a=t.length;for(let s=0;s<a;s++)s!==e?r.push(t[s]):r.push(n);return r}function o(t,e,n){const r=t.shape[n],a=[];let s=1,i=1;for(let o=0;o<n;o++)a.push(t.shape[o]),s*=t.shape[o];for(let o=0;o<e.rank;o++)a.push(e.shape[o]);for(let o=n+1;o<t.rank;o++)a.push(t.shape[o]),i*=t.shape[o];return{batchSize:s,sliceSize:i,dimSize:r,outputShape:a}}},"02mo":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({floor_:function(t){const e=Object(s.a)(t,"x","floor"),n={x:e};return r.a.runKernelFunc(t=>t.floor(e),n,null,a.cb)}})},"0I63":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("8Km0"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({reverse_:function(t,e){const n=Object(s.a)(t,"x","reverse"),u={x:n},l={dims:e};return r.a.runKernelFunc(t=>{const r=Object(i.I)(e,n.shape);if(0===n.rank)return Object(o.a)(n);const a=t.reverse(n,r);return Object(c.a)(a,n.shape)},u,null,a.mc,l)}})},"0ahe":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({atanh_:function(t){const e=Object(s.a)(t,"x","atanh"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.atanh(e);return n([e]),r},n,null,a.n)}})},"0fRV":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("o/e8"),a=n("atXS"),s=n("VO80"),i=n("NclT");const o=Object(s.b)({squeeze_:function(t,e){const n=Object(r.a)(t,"x","squeeze");return Object(i.a)(n,Object(a.P)(n.shape,e).newShape)}})},"0l+w":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("o/e8"),a=n("Um8L"),s=n("4zPZ"),i=n("7wDt"),o=n("8YN0"),u=n("VO80");const c=Object(u.b)({logicalXor_:function(t,e){const n=Object(r.a)(t,"a","logicalXor","bool"),u=Object(r.a)(e,"b","logicalXor","bool");return Object(a.a)(n.shape,u.shape),Object(s.a)(Object(o.a)(t,e),Object(i.a)(Object(s.a)(t,e)))}})},"0wNd":function(t,e,n){"use strict";n.d(e,"c",(function(){return a})),n.d(e,"b",(function(){return s})),n.d(e,"a",(function(){return i}));const r={};function a(t,e){const n={tfOpName:t,category:"custom",inputs:[],attrs:[],customExecutor:e};r[t]=n}function s(t){return r[t]}function i(t){delete r[t]}},"0wrZ":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({tan_:function(t){const e=Object(s.a)(t,"x","tan"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.tan(e);return n([e]),r},n,null,a.Kc)}})},1:function(t,e){},"1/IK":function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},"17CO":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({real_:function(t){const e=Object(s.a)(t,"input","real"),n={input:e};return r.a.runKernelFunc(t=>t.real(e),n,null,a.dc)}})},"1N4k":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({notEqual_:function(t,e){let n=Object(i.a)(t,"a","notEqual"),u=Object(i.a)(e,"b","notEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc(t=>t.notEqual(n,u),c,null,a.Ub)}})},"1OSX":function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return i}));var r=n("YSVl");n("1WXW");class a{constructor(t,e,n,a,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class s{constructor(t,e,n,s){this.alpha=t,this.beta=1/e,this.dtype=n;const i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-s+Math.log(s)),a=this.randu(),a<e||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class i{constructor(t=0,e=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},"1U0N":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("o/e8"),a=n("atXS"),s=n("ZJ6U"),i=n("2ugP"),o=n("VO80");const u=Object(o.b)({stack_:function(t,e=0){const n=Object(r.b)(t,"tensors","stack");if(a.b(n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return Object(i.a)(n[0],e);const o=n[0].rank,u=n[0].shape,c=n[0].dtype;a.b(e<=o,()=>"Axis must be <= rank of the tensor"),n.forEach(t=>{a.e(u,t.shape,"All tensors passed to stack must have matching shapes"),a.b(c===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=n.map(t=>Object(i.a)(t,e));return Object(s.a)(l,e)}})},"1VZP":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},"1WXW":function(t,e,n){"use strict";n.r(e),n.d(e,"TEST_EPSILON_FLOAT16",(function(){return i})),n.d(e,"expectArraysClose",(function(){return o})),n.d(e,"testEpsilon",(function(){return u})),n.d(e,"expectPromiseToFail",(function(){return l})),n.d(e,"expectArraysEqual",(function(){return d})),n.d(e,"expectNumbersClose",(function(){return h})),n.d(e,"expectValuesInRange",(function(){return f})),n.d(e,"expectArrayBuffersEqual",(function(){return m}));var r=n("auKK"),a=n("o/e8"),s=n("atXS");const i=.1;function o(t,e,n){return null==n&&(n=u()),c(t,e,(t,e)=>p(t,e,n))}function u(){return 32===r.a.backend.floatPrecision()?.001:i}function c(t,e,n){let r=!0;if((Object(s.A)(t)||Object(s.A)(e))&&(r=!1),Object(s.A)(t)&&Object(s.A)(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(t)&&Array.isArray(e)){const n=Object(a.c)(t),r=Object(a.c)(e);if(!Object(s.a)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const i=Object(s.A)(t)?t:Object(s.m)(t),o=Object(s.A)(e)?e:Object(s.m)(e);if(i.length!==o.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs expected: ${o.length}.\nActual:   ${i}.\nExpected: ${o}.`);for(let a=0;a<o.length;++a){const t=i[a],e=o[a];if(!n(t,e))throw new Error(`Arrays differ: actual[${a}] = ${t}, expected[${a}] = ${e}.\nActual:   ${i}.\nExpected: ${o}.`)}}function l(t,e){t().then(()=>e.fail(),()=>e())}function d(t,e){const n="string"===typeof e||"number"===typeof e||"boolean"===typeof e?[e]:e;return Object(s.z)(t)||Object(s.z)(t[0])||Object(s.z)(e)||Object(s.z)(e[0])?c(t,n,(t,e)=>t==e):c(t,e,(t,e)=>p(t,e,0))}function h(t,e,n){if(null==n&&(n=u()),!p(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`)}function p(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function f(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(`Value out of range:${t[r]} low: ${e}, high: ${n}`)}function m(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}},2:function(t,e){},"2/MO":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},"20lx":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("VO80"),c=n("yRKQ");const l=Object(u.b)({argMin_:function(t,e=0){let n=Object(s.a)(t,"x","argMin");const u={x:n},l={axis:e};return r.a.runKernelFunc((t,r)=>{r([n]),null==e&&(e=0);let a=i.I(e,n.shape);const s=o.f(a,n.rank);return null!=s&&(n=Object(c.a)(n,s),a=o.g(a.length,n.rank)),t.argMin(n,a[0])},u,null,a.i,l)}})},"2ugP":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("o/e8"),a=n("atXS"),s=n("VO80"),i=n("NclT");const o=Object(s.b)({expandDims_:function(t,e=0){const n=Object(r.a)(t,"x","expandDims",null);a.b(e<=n.rank,()=>"Axis must be <= rank of the tensor");const s=n.shape.slice();return e<0&&(a.b(-(n.rank+1)<=e,()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`),e=n.rank+e+1),s.splice(e,0,1),Object(i.a)(n,s)}})},3:function(t,e){},"34HJ":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("VO80"),c=n("NclT"),l=n("yRKQ");const d=Object(u.b)({all_:function(t,e=null,n=!1){let u=Object(s.a)(t,"x","all","bool");const d={x:u},h={axis:e,keepDims:n};return r.a.runKernelFunc(t=>{const r=Object(i.I)(e,u.shape);let a=r;const s=Object(o.f)(a,u.rank);null!=s&&(u=Object(l.a)(u,s),a=Object(o.g)(a.length,u.rank));const d=t.all(u,a);if(n){const t=Object(o.e)(d.shape,r);return Object(c.a)(d,t)}return d},d,null,a.f,h)}})},"3BSK":function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return i}));var r=n("+hG3"),a=n("w4jT"),s=n("TPxA");class i extends a.a{decodeUTF8(){return new o(this)}}class o extends s.a{constructor(t){super(),this.upstream=t,this.impl=new u(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class u extends a.b{constructor(t){if(super(),this.upstream=t,Object(r.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(4);this.decoder=new t("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const e=await this.upstream.next();let n,a;return!e.done&&(n=e.value,a=Object(r.env)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(t.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n("HDXh").Buffer)},"3FnS":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({asinh_:function(t){const e=Object(s.a)(t,"x","asinh"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.asinh(e);return n([e]),r},n,null,a.k)}})},"3X4V":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({conv2d_:function(t,e,n,u,l="NHWC",d=[1,1],h){const p=Object(s.a)(t,"x","conv2d"),f=Object(s.a)(e,"filter","conv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.b(4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),i.b(4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+f.rank+"."),null!=h&&i.b(i.v(u),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${u}.`);const g="NHWC"===l?m.shape[3]:m.shape[1];i.b(g===f.shape[2],()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`),i.b(o.h(n,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`);const y={x:m,filter:f},v={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h},x=r.a.runKernelFunc((t,e)=>{const r=o.g(l),a=o.a(m.shape,f.shape,n,d,u,h,!1,r),s=t.conv2d(m,f,a);return e([m,f]),s},y,null,a.A,v);return b?Object(c.a)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},"3hph":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("NclT"),u=n("bTzI"),c=n("Xr0w");const l=Object(i.b)({stridedSlice_:function(t,e,n,i,l=0,d=0,h=0,p=0,f=0){let m=Object(s.a)(t,"x","stridedSlice");const b={x:m},g={begin:e,end:n,strides:i,beginMask:l,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:f};return r.a.runKernelFunc(t=>{null==i&&(i=new Array(e.length));const r=Object(c.maskToAxes)(h);if(r.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==h&&0!==p)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==h&&0!==f)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const a=m.rank-e.length,s=Object(c.maskToAxes)(p),b=m.shape.slice();s.forEach(t=>{e[t]=0,n[t]=1,b.splice(t,0,1)}),m=Object(o.a)(m,b);const{begin:g,end:y,strides:v}=Object(c.getNormalizedAxes)(m.shape,r,a,e,n,i,l,d,h);e=g,n=y,i=v;const x=Object(c.maskToAxes)(f);x.forEach(t=>{n[t]=e[t]+1,i[t]=1});const O=Object(c.computeOutShape)(e,n,i),w=O.filter((t,e)=>-1===x.indexOf(e));if(i.every(t=>1===t))return Object(o.a)(Object(u.a)(m,e,O),w);const k=t.stridedSlice(m,e,n,i);return Object(o.a)(k,w)},b,null,a.Hc,g)}})},"3niX":function(t,e,n){"use strict";e.__esModule=!0,e.flush=function(){var t=s.cssRules();return s.flush(),t},e.default=void 0;var r,a=n("q1tI");var s=new(((r=n("SevZ"))&&r.__esModule?r:{default:r}).default),i=function(t){var e,n;function r(e){var n;return(n=t.call(this,e)||this).prevProps={},n}n=t,(e=r).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n,r.dynamic=function(t){return t.map((function(t){var e=t[0],n=t[1];return s.computeId(e,n)})).join(" ")};var a=r.prototype;return a.shouldComponentUpdate=function(t){return this.props.id!==t.id||String(this.props.dynamic)!==String(t.dynamic)},a.componentWillUnmount=function(){s.remove(this.props)},a.render=function(){return this.shouldComponentUpdate(this.prevProps)&&(this.prevProps.id&&s.remove(this.prevProps),s.add(this.props),this.prevProps=this.props),null},r}(a.Component);e.default=i},"3rNm":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({cast_:function(t,e){const n=Object(s.a)(t,"x","cast");if(!i.B(e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:e};return r.a.runKernelFunc(t=>t.cast(n,e),o,null,a.v,u)}})},4:function(t,e){},"4FMF":function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("3rNm"),c=n("VO80"),l=n("NclT"),d=n("yRKQ");const h=Object(c.b)({sum_:function(t,e=null,n=!1){let c=Object(s.a)(t,"x","sum");"bool"===c.dtype&&(c=Object(u.a)(c,"int32"));const h={x:c},p={axis:e,keepDims:n};return r.a.runKernelFunc((t,r)=>{r([c]);const a=Object(i.I)(e,c.shape),s=Object(o.f)(a,c.rank);let u=a,h=c;null!=s&&(h=Object(d.a)(c,s),u=Object(o.g)(u.length,c.rank));let p=t.sum(h,u);if(n){const t=Object(o.e)(p.shape,a);p=Object(l.a)(p,t)}return p},h,null,a.Jc,p)}})},"4QEz":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({localResponseNormalization_:function(t,e=5,n=1,o=1,c=.5){const l=Object(s.a)(t,"x","localResponseNormalization");i.b(4===l.rank||3===l.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`),i.b(i.v(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let d=l,h=!1;3===l.rank&&(h=!0,d=Object(u.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const p={x:d},f={depthRadius:e,bias:n,alpha:o,beta:c},m=r.a.runKernelFunc((t,r)=>{const a=t.localResponseNormalization4D(d,e,n,o,c);return r([d,a]),a},p,null,a.sb,f);return h?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},"4f3O":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({less_:function(t,e){let n=Object(i.a)(t,"a","less"),u=Object(i.a)(e,"b","less");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc(t=>t.less(n,u),c,null,a.ub)}})},"4iwy":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({oneHot_:function(t,e,n=1,i=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);const u=Object(s.a)(t,"indices","oneHot","int32"),c=[...u.shape,e],l={indices:u},d={depth:e,onValue:n,offValue:i};return r.a.runKernelFunc((t,r)=>(r([u]),Object(o.a)(t.oneHot(Object(o.a)(u,[u.size]),e,n,i),c)),l,null,a.Vb,d)}})},"4zPZ":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("Um8L"),o=n("VO80");const u=Object(o.b)({logicalAnd_:function(t,e){const n=Object(s.a)(t,"a","logicalAnd","bool"),o=Object(s.a)(e,"b","logicalAnd","bool");Object(i.a)(n.shape,o.shape);const u={a:n,b:o};return r.a.runKernelFunc(t=>t.logicalAnd(n,o),u,null,a.Ab)}})},5:function(t,e){},6366:function(t,e,n){"use strict";n.r(e),n.d(e,"createScalarValue",(function(){return s})),n.d(e,"toTypedArray",(function(){return i})),n.d(e,"now",(function(){return o})),n.d(e,"fetch",(function(){return u})),n.d(e,"encodeString",(function(){return c})),n.d(e,"decodeString",(function(){return l}));var r=n("szMd"),a=n("atXS");function s(t,e){return"string"===e?c(t):i([t],e)}function i(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=a.m(t)),Object(r.c)().getBool("DEBUG")&&a.h(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type "+e)}function o(){return Object(r.c)().platform.now()}function u(t,e){return Object(r.c)().platform.fetch(t,e)}function c(t,e="utf-8"){return e=e||"utf-8",Object(r.c)().platform.encode(t,e)}function l(t,e="utf-8"){return e=e||"utf-8",Object(r.c)().platform.decode(t,e)}n.d(e,"shuffle",(function(){return a.M})),n.d(e,"clamp",(function(){return a.i})),n.d(e,"nearestLargerEven",(function(){return a.H})),n.d(e,"sum",(function(){return a.Q})),n.d(e,"randUniform",(function(){return a.J})),n.d(e,"distSquared",(function(){return a.l})),n.d(e,"assert",(function(){return a.b})),n.d(e,"assertShapesMatch",(function(){return a.e})),n.d(e,"assertNonNull",(function(){return a.d})),n.d(e,"flatten",(function(){return a.m})),n.d(e,"sizeFromShape",(function(){return a.N})),n.d(e,"isScalarShape",(function(){return a.y})),n.d(e,"arraysEqual",(function(){return a.a})),n.d(e,"isInt",(function(){return a.v})),n.d(e,"tanh",(function(){return a.R})),n.d(e,"sizeToSquarishShape",(function(){return a.O})),n.d(e,"createShuffledIndices",(function(){return a.k})),n.d(e,"rightPad",(function(){return a.L})),n.d(e,"repeatedTry",(function(){return a.K})),n.d(e,"inferFromImplicitShape",(function(){return a.s})),n.d(e,"parseAxisParam",(function(){return a.I})),n.d(e,"squeezeShape",(function(){return a.P})),n.d(e,"getTypedArrayFromDType",(function(){return a.o})),n.d(e,"getArrayFromDType",(function(){return a.n})),n.d(e,"checkConversionForErrors",(function(){return a.h})),n.d(e,"isValidDtype",(function(){return a.B})),n.d(e,"hasEncodingLoss",(function(){return a.p})),n.d(e,"isTypedArray",(function(){return a.A})),n.d(e,"bytesPerElement",(function(){return a.g})),n.d(e,"bytesFromStringArray",(function(){return a.f})),n.d(e,"isString",(function(){return a.z})),n.d(e,"isBoolean",(function(){return a.t})),n.d(e,"isNumber",(function(){return a.w})),n.d(e,"inferDtype",(function(){return a.r})),n.d(e,"isFunction",(function(){return a.u})),n.d(e,"nearestDivisor",(function(){return a.G})),n.d(e,"computeStrides",(function(){return a.j})),n.d(e,"toNestedArray",(function(){return a.S})),n.d(e,"makeOnesTypedArray",(function(){return a.D})),n.d(e,"makeZerosTypedArray",(function(){return a.F})),n.d(e,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(e,"locToIndex",(function(){return a.C})),n.d(e,"indexToLoc",(function(){return a.q})),n.d(e,"isPromise",(function(){return a.x}))},"6J+n":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("VO80"),c=n("yRKQ");const l=Object(u.b)({argMax_:function(t,e=0){let n=Object(s.a)(t,"x","argMax");const u={x:n},l={axis:e};return r.a.runKernelFunc((t,r)=>{r([n]);let a=i.I(e,n.shape);const s=o.f(a,n.rank);return null!=s&&(n=Object(c.a)(n,s),a=o.g(a.length,n.rank)),t.argMax(n,a[0])},u,null,a.h,l)}})},"6vQL":function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n("o/e8"),a=n("atXS"),s=n("l0gX"),i=n("OygE"),o=n("uBja"),u=n("n+ZZ"),c=n("VO80"),l=n("NclT"),d=n("dYAU");const h=Object(c.b)({pool_:function(t,e,n,c,h,p){null==h&&(h=[1,1]),null==p&&(p=1),0===c&&(c="valid");const f=Object(r.a)(t,"x","maxPool");let m=f,b=!1;3===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.b(o.h(p,h),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`);const g=o.e(m.shape,e,p,h,c),y=[g.dilationHeight,g.dilationWidth];let v;v="same"===c?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),r=n.map(t=>Math.floor(t/2)),a=n.map((t,e)=>t-r[e]);return n.map((t,e)=>[r[e],a[e]])}([g.filterHeight,g.filterWidth],y):[[0,0],[0,0]];const x=1===y[0]&&1===y[1],[O,w]=function(t,e,n){const r=n.map(t=>t[0]),a=n.map(t=>t[1]),s=t.concat(r,a),i=e.map((t,e)=>(t-s[e]%t)%t),o=a.map((t,e)=>t+i[e]),u=e.map((t,e)=>[r[e],o[e]]),c=e.map((t,e)=>[0,i[e]]);return[u,c]}([g.inHeight,g.inWidth],y,v),k=x?c:"valid",j=x?m:Object(d.a)(m,y,O),N=("avg"===n?()=>Object(s.a)(j,e,p,k):()=>Object(u.a)(j,e,p,k))(),S=x?N:Object(i.a)(N,y,w);return b?Object(l.a)(S,[S.shape[1],S.shape[2],S.shape[3]]):S}})},"7/dO":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({cos_:function(t){const e=Object(s.a)(t,"x","cos"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.cos(e);return n([e]),r},n,null,a.G)}})},"7wDt":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({logicalNot_:function(t){const e=Object(s.a)(t,"x","logicalNot","bool"),n={x:e};return r.a.runKernelFunc(t=>t.logicalNot(e),n,null,a.Bb)}})},"867m":function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("3rNm"),c=n("VO80"),l=n("NclT"),d=n("yRKQ");const h=Object(c.b)({prod_:function(t,e=null,n=!1){let c=Object(s.a)(t,"x","prod");"bool"===c.dtype&&(c=Object(u.a)(c,"int32"));const h={x:c},p={axis:e,keepDims:n};return r.a.runKernelFunc(t=>{const r=Object(i.I)(e,c.shape),a=Object(o.f)(r,c.rank);let s=r,u=c;null!=a&&(u=Object(d.a)(c,a),s=Object(o.g)(s.length,c.rank));let h=t.prod(u,s);if(n){const t=Object(o.e)(h.shape,r);h=Object(l.a)(h,t)}return h},h,null,a.bc,p)}})},"87nf":function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s}));var r=n("atXS");function a(t,e){const n=t[0].length;t.forEach((t,e)=>{r.b(t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),r.b(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const a=t[0];t.forEach((t,s)=>{for(let i=0;i<n;i++)r.b(i===e||t[i]===a[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${a}) along the non-concatenated axis ${s}.`)})}function s(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}},"8BGy":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},"8Km0":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({clone_:function(t){const e=Object(s.a)(t,"x","clone",null),n={x:e};return r.a.runKernelFunc(()=>r.a.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n,null,a.nb)}})},"8OX7":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("3rNm"),c=n("VO80");const l=Object(c.b)({minimum_:function(t,e){let n=Object(i.a)(t,"a","minimum"),c=Object(i.a)(e,"b","minimum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernelFunc((t,e)=>{const r=t.minimum(n,c);return e([n,c]),r},l,null,a.Mb)}})},"8YN0":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("Um8L"),o=n("VO80");const u=Object(o.b)({logicalOr_:function(t,e){const n=Object(s.a)(t,"a","logicalOr","bool"),o=Object(s.a)(e,"b","logicalOr","bool");Object(i.a)(n.shape,o.shape);const u={a:n,b:o};return r.a.runKernelFunc(t=>t.logicalOr(n,o),u,null,a.Cb)}})},"8bUJ":function(t,e,n){"use strict";n.d(e,"a",(function(){return p})),n.d(e,"b",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"e",(function(){return g})),n.d(e,"f",(function(){return y}));var r=n("wE5H"),a=n("o/e8"),s=n("atXS"),i=n("ubnP"),o=n("zvA9"),u=n("uy0A"),c=n("4f3O"),l=n("shz4"),d=n("1N4k"),h=n("VO80");const p=Object(h.b)({equalStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","equalStrict"),o=Object(a.a)(e,"b","equalStrict");return Object(s.e)(n.shape,o.shape,"Error in equalStrict: "),Object(i.a)(n,o)}}),f=Object(h.b)({greaterEqualStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","greaterEqualStrict"),i=Object(a.a)(e,"b","greaterEqualStrict");return Object(s.e)(n.shape,i.shape,"Error in greaterEqualStrict: "),Object(u.a)(n,i)}}),m=Object(h.b)({greaterStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","greaterStrict"),i=Object(a.a)(e,"b","greaterStrict");return Object(s.e)(n.shape,i.shape,"Error in greaterStrict: "),Object(o.a)(n,i)}}),b=Object(h.b)({lessEqualStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","lessEqualStrict"),i=Object(a.a)(e,"b","lessEqualStrict");return Object(s.e)(n.shape,i.shape,"Error in lessEqualStrict: "),Object(l.a)(n,i)}}),g=Object(h.b)({lessStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","lessStrict"),i=Object(a.a)(e,"b","lessStrict");return Object(s.e)(n.shape,i.shape,"Error in lessStrict: "),Object(c.a)(n,i)}}),y=Object(h.b)({notEqualStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","notEqualStrict"),i=Object(a.a)(e,"b","notEqualStrict");return Object(s.e)(n.shape,i.shape,"Error in notEqualStrict: "),Object(d.a)(n,i)}})},"90yW":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("NNfn"),a=n("o/e8"),s=n("atXS");const i=async function(t,e){const n=Object(a.a)(t,"x","setdiff1d"),i=Object(a.a)(e,"y","setdiff1d");s.b(n.dtype===i.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`),s.b(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),s.b(1===i.rank,()=>`y should be 1D tensor, but got y (${i.shape}).`);const o=await n.data(),u=await i.data(),c=new Set(u);let l=0;for(let r=0;r<o.length;r++)c.has(o[r])||l++;const d=new r.b([l],n.dtype),h=new r.b([l],"int32");for(let r=0,a=0;r<o.length;r++)c.has(o[r])||(d.values[a]=o[r],h.values[a]=r,a++);return[d.toTensor(),h.toTensor()]}},"91d6":function(t,e,n){"use strict";n.d(e,"a",(function(){return b}));var r=n("o/e8"),a=n("atXS"),s=n("iuCH"),i=n("NuWS"),o=n("wCH+"),u=n("rm0a"),c=n("VO80"),l=n("yfHJ"),d=n("NclT"),h=n("AV8V"),p=n("Fjpt"),f=n("k7Jv"),m=n("4FMF");const b=Object(c.b)({norm_:function(t,e="euclidean",n=null,c=!1){const b=function t(e,n,r=null){if(0===e.rank)return Object(s.a)(e);if(1!==e.rank&&null===r)return t(Object(d.a)(e,[-1]),n,r);if(1===e.rank||"number"===typeof r||Array.isArray(r)&&1===r.length){if(1===n)return Object(m.a)(Object(s.a)(e),r);if(n===1/0)return Object(o.a)(Object(s.a)(e),r);if(n===-1/0)return Object(u.a)(Object(s.a)(e),r);if("euclidean"===n||2===n)return Object(p.a)(Object(m.a)(Object(l.a)(Object(s.a)(e),Object(h.a)(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return Object(o.a)(Object(m.a)(Object(s.a)(e),r[0]),r[1]-1);if(n===1/0)return Object(o.a)(Object(m.a)(Object(s.a)(e),r[1]),r[0]);if(n===-1/0)return Object(u.a)(Object(m.a)(Object(s.a)(e),r[1]),r[0]);if("fro"===n||"euclidean"===n)return Object(p.a)(Object(m.a)(Object(f.a)(e),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(t=Object(r.a)(t,"x","norm"),e,n);let g=b.shape;if(c){const e=Object(a.I)(n,t.shape);g=i.e(b.shape,e)}return Object(d.a)(b,g)}})},"9JAK":function(t,e,n){"use strict";(function(t,r){let a;function s(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof t)e=t;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function i(t,e){const n=function(){const t=s();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,"b",(function(){return s})),n.d(e,"a",(function(){return i}))}).call(this,n("3r9c"),n("8oxB"))},"9jvw":function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s}));var r=n("atXS");const a=30;function s(t){return t<=a?t:Object(r.G)(t,Math.floor(Math.sqrt(t)))}},"9kyW":function(t,e,n){"use strict";t.exports=function(t){for(var e=5381,n=t.length;n;)e=33*e^t.charCodeAt(--n);return e>>>0}},"ARu+":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("dsKV"),a=n("o/e8"),s=n("x3y4"),i=n("ubnP"),o=n("VO80"),u=n("Z5Ez"),c=n("oJu+");const l=Object(o.b)({divNoNan_:function(t,e){let n=Object(a.a)(t,"a","div"),o=Object(a.a)(e,"b","div");[n,o]=Object(r.makeTypesMatch)(n,o);const l=Object(s.a)(n,o),d=Object(c.a)(l),h=Object(i.a)(o,d);return Object(u.a)(h,d,l)}})},AV8V:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("atXS"),a=n("WVnj");function s(t,e){if((Object(r.A)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(r.A)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(t,[],[],e)}},AoCb:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("BD40");function a(t,e){const n=[];for(let r=0;r<e.length;r++)e[r]&&n.push(r);const a=Object(r.a)(t,"int32"),s=Object(r.a)([n.length,t.length],"int32");for(let r=0;r<n.length;r++){const e=a.indexToLoc(n[r]),i=r*t.length;s.values.set(e,i)}return s.toTensor()}},B3db:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({complex_:function(t,e){const n=Object(s.a)(t,"real","complex"),o=Object(s.a)(e,"imag","complex");i.e(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.a.runKernelFunc(t=>t.complex(n,o),u,null,a.y)}})},BD40:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("NNfn"),a=n("atXS");function s(t,e="float32",n){return e=e||"float32",a.c(t),new r.b(t,e,n)}},BLhf:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},BbuY:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("o/e8"),a=n("atXS"),s=n("WVnj");function i(t,e,n){if(Object(a.d)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const i=Object(r.c)(t,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(s.a)(t,e,i,n)}},CKnt:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({round_:function(t){const e=Object(s.a)(t,"x","round"),n={x:e};return r.a.runKernelFunc(t=>t.round(e),n,null,a.oc)}})},CfTU:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("3rNm"),c=n("VO80");const l=Object(c.b)({maximum_:function(t,e){let n=Object(i.a)(t,"a","maximum"),c=Object(i.a)(e,"b","maximum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernelFunc((t,e)=>{const r=t.maximum(n,c);return e([n,c]),r},l,null,a.Jb)}})},CtZu:function(t,e,n){"use strict";n.d(e,"a",(function(){return Ye})),n.d(e,"c",(function(){return Je})),n.d(e,"b",(function(){return o.a})),n.d(e,"d",(function(){return o.c})),n.d(e,"e",(function(){return Ze}));var r=n("+hG3"),a=n("+Luo"),s=n("Umw7");class i{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return Object(s.e)(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Object(s.e)(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(a.f)(this.node.rawAttrs,t,e);if(null!=n.s)return Object(a.i)(this.node.rawAttrs,t,e);if(null!=n.b)return Object(a.c)(this.node.rawAttrs,t,e);if(null!=n.shape)return Object(a.k)(this.node.rawAttrs,t,e);if(null!=n.type)return Object(a.e)(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(a.g)(this.node.rawAttrs,t,e);if(null!=n.list.s)return Object(a.h)(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Object(a.j)(this.node.rawAttrs,t,e);if(null!=n.list.b)return Object(a.b)(this.node.rawAttrs,t,e);if(null!=n.list.type)return Object(a.d)(this.node.rawAttrs,t,e)}return e}}var o=n("0wNd"),u=n("kRdc"),c=n("SFB9"),l=n("RhH0"),d=n("parS"),h=n("x3y4"),p=n("ARu+"),f=n("UI8N"),m=n("oAkI"),b=n("8OX7"),g=n("CfTU"),y=n("yfHJ"),v=n("QYQ3");var x=n("iuCH"),O=n("o3Rt"),w=n("RhVc"),k=n("Ig+c"),j=n("3FnS"),N=n("fjZN"),S=n("YAKK"),I=n("0ahe"),C=n("WWBm"),T=n("B3db"),A=n("7/dO"),E=n("waK1"),R=n("njhW"),$=n("jgXy"),_=n("TyAZ"),F=n("G6IW"),D=n("02mo"),M=n("E1lT"),z=n("RrGL"),L=n("JLAb"),B=n("O7f5"),P=n("tQDl"),V=n("17CO"),W=n("kXpR"),U=n("CKnt"),K=n("s57M"),G=n("/7N0"),H=n("aTLu"),q=n("Hfat"),X=n("XcSs"),Y=n("n/2y"),J=n("Fjpt"),Z=n("k7Jv"),Q=n("iIjY"),tt=n("0wrZ"),et=n("wI/y"),nt=n("Xyqe"),rt=n("867m"),at=n("bzdD"),st=n("Ug8H");function it(t,e,n=""){r.util.assert(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}(t,e),()=>n+` Shapes ${t} and ${e} must match`)}class ot{constructor(t,e,n,a,s,i,o){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Object(r.scalar)(0),Object(r.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),it(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Object(r.keep)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Object(r.tensor)([],[0].concat(this.elementShape));const n=this.readMany(t);return it(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(r.stack)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Object(r.tensor)([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const n=this.readMany(e);return it(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(r.concat)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Object(r.unstack)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const a=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:e.size/n,i=[];Object(r.tidy)(()=>{e=Object(r.reshape)(e,[1,n,s]);for(let n=0;n<t.length;++n){const o=[0,0===n?0:a[n-1],0],u=[1,t[n],s];i[n]=Object(r.reshape)(Object(r.slice)(e,o,u),this.elementShape)}return i});const o=[];for(let r=0;r<t.length;r++)o[r]=r;this.writeMany(o,i)}}class ut{constructor(t,e,n,a=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach(t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);it(e,t.shape,"TensorList shape mismatch: "),Object(r.keep)(t)}),this.idTensor=Object(r.scalar)(0),this.maxNumElements=a,Object(r.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ut([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return it(t,this.elementShape,"TensorList shape mismatch: "),Object(r.tidy)(()=>{const e=this.tensors.map(e=>Object(r.reshape)(e,t));return Object(r.stack)(e,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return it(n.shape,t,"TensorList shape mismatch: "),Object(r.reshape)(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(it(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(r.keep)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+t);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);return it(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);it(this.elementShape,e.shape,"TensorList shape mismatch: "),Object(r.keep)(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);return it(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?Object(r.tensor)([],[0].concat(this.elementShape)):Object(r.tidy)(()=>{const e=t.map(t=>Object(r.reshape)(this.tensors[t],n));return Object(r.stack)(e,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);return it(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?Object(r.tensor)([],[0].concat(this.elementShape)):Object(r.tidy)(()=>{const t=this.tensors.map(t=>Object(r.reshape)(t,e));return Object(r.concat)(t,0)})}}const ct=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=Object(s.d)("thenBranch",t,e,n),a=Object(s.d)("elseBranch",t,e,n),i=Object(s.d)("cond",t,e,n),o=Object(s.d)("args",t,e,n);return(await i.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(s.d)("body",t,e,n),a=Object(s.d)("cond",t,e,n),i=Object(s.d)("args",t,e,n),o=await n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),u=i.map(t=>t.id);let c=await o[0].data();o.forEach(t=>{t.kept||-1!==u.indexOf(t.id)||t.dispose()});let l=i;for(;c[0];){const t=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map(t=>t.id);t.forEach(t=>{t.kept||-1!==u.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()});const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach(t=>{t.kept||-1!==u.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()})}return l}case"LoopCond":{const r=Object(s.d)("pred",t,e,n);return[Object(s.a)(r)]}case"Switch":{const r=Object(s.d)("pred",t,e,n);let a=Object(s.d)("data",t,e,n);return a.kept||(a=Object(s.a)(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=t.inputNames.find(t=>void 0!==Object(s.e)(t,e,n));if(r){const t=Object(s.e)(r,e,n);return[Object(s.a)(t)]}return}case"Enter":{const r=Object(s.d)("frameName",t,e,n),a=Object(s.d)("tensor",t,e,n);return n.enterFrame(r),[Object(s.a)(a)]}case"Exit":{const r=Object(s.d)("tensor",t,e,n);return n.exitFrame(),[Object(s.a)(r)]}case"NextIteration":{const r=Object(s.d)("tensor",t,e,n);return n.nextIteration(),[Object(s.a)(r)]}case"TensorArrayV3":{const a=Object(s.d)("size",t,e,n),i=Object(s.d)("dtype",t,e,n),o=Object(s.d)("elementShape",t,e,n),u=Object(s.d)("dynamicSize",t,e,n),c=Object(s.d)("clearAfterRead",t,e,n),l=Object(s.d)("identicalElementShapes",t,e,n),d=Object(s.d)("name",t,e,n),h=new ot(d,i,a,o,l,u,c);return n.addTensorArray(h),[h.idTensor,Object(r.scalar)(1)]}case"TensorArrayWriteV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("index",t,e,n),i=Object(s.d)("tensor",t,e,n),o=n.getTensorArray(r.id);return o.write(a,i),[o.idTensor]}case"TensorArrayReadV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("index",t,e,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("indices",t,e,n),i=Object(s.d)("dtype",t,e,n);return[n.getTensorArray(r.id).gather(a,i)]}case"TensorArrayScatterV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("indices",t,e,n),i=Object(s.d)("tensor",t,e,n),o=n.getTensorArray(r.id);return o.scatter(a,i),[o.idTensor]}case"TensorArrayConcatV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id),i=Object(s.d)("dtype",t,e,n);return[a.concat(i)]}case"TensorArraySplitV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("tensor",t,e,n),i=Object(s.d)("lengths",t,e,n),o=n.getTensorArray(r.id);return o.split(i,a),[o.idTensor]}case"TensorArraySizeV3":{const a=Object(s.d)("tensorArrayId",t,e,n),i=n.getTensorArray(a.id);return[Object(r.scalar)(i.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("index",t,e,n),i=Object(s.d)("tensor",t,e,n),o=n.getTensorList(r.id);return o.setItem(a,i),[o.idTensor]}case"TensorListGetItem":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("index",t,e,n),i=Object(s.d)("elementShape",t,e,n),o=Object(s.d)("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(a,i,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=Object(s.d)("indices",t,e,n),i=function(t,e,n,a){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(null!=a&&-1!==a&&s>=a)throw new Error(`Max index must be < array size (${s}  vs. ${a})`);const i=new ut([],n,t.dtype,a),o=Object(r.unstack)(t,0);return e.forEach((t,e)=>{i.setItem(t,o[e])}),i}(Object(s.d)("tensor",t,e,n),a,Object(s.d)("elementShape",t,e,n),Object(s.d)("numElements",t,e,n));return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":{const r=function(t,e,n){return new ut([],t,e,n)}(Object(s.d)("elementShape",t,e,n),Object(s.d)("elementDType",t,e,n),Object(s.d)("numElements",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListGather":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("indices",t,e,n),i=Object(s.d)("elementShape",t,e,n),o=Object(s.d)("elementDType",t,e,n);return[n.getTensorList(r.id).gather(a,o,i)]}case"TensorListStack":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("elementShape",t,e,n),i=Object(s.d)("elementDType",t,e,n),o=Object(s.d)("numElements",t,e,n);return[n.getTensorList(r.id).stack(a,i,o)]}case"TensorListFromTensor":{const a=function(t,e,n){const a=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+t.shape);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);it(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=Object(r.unstack)(t);return new ut(s,e,a)}(Object(s.d)("tensor",t,e,n),Object(s.d)("elementShape",t,e,n),Object(s.d)("elementDType",t,e,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":{const r=Object(s.d)("tensorListId",t,e,n),a=n.getTensorList(r.id),i=Object(s.d)("dtype",t,e,n),o=Object(s.d)("elementShape",t,e,n);return[a.concat(i,o)]}case"TensorListPushBack":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("tensor",t,e,n),i=n.getTensorList(r.id);return i.pushBack(a),[i.idTensor]}case"TensorListPopBack":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("elementShape",t,e,n),i=Object(s.d)("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(a,i)]}case"TensorListSplit":{const a=Object(s.d)("tensor",t,e,n),i=Object(s.d)("elementShape",t,e,n),o=function(t,e,n){let a=0;const s=e.map(t=>(a+=t,a));if(a!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${a}, and tensor's shape is: ${t.shape}`);const i=0===a?0:t.size/a,o=Object(r.tidy)(()=>{const o=[];t=Object(r.reshape)(t,[1,a,i]);for(let a=0;a<e.length;++a){const u=[0,0===a?0:s[a-1],0],c=[1,e[a],i];o[a]=Object(r.reshape)(Object(r.slice)(t,u,c),n)}return t.dispose(),o}),u=new ut([],n,t.dtype,e.length);for(let r=0;r<o.length;r++)u.setItem(r,o[r]);return u}(a,Object(s.d)("lengths",t,e,n),i);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};var lt=n("dnXz"),dt=n("3X4V"),ht=n("EysY"),pt=n("zR+/"),ft=n("g4+C"),mt=n("FZCF"),bt=n("l0gX"),gt=n("n+ZZ"),yt=n("i8k8"),vt=n("ulO0"),xt=n("U/2n"),Ot=n("wXC5");function wt(t,e,n){const[r,a]=Object(s.d)("fusedOps",t,e,n),i="biasadd"===r,o="prelu"===a,u="fusedbatchnorm"===r,c=Object(s.d)("numArgs",t,e,n);if(i){if(o&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=Object(s.d)("strides",t,e,n),d=Object(s.c)(t,e,n),h=Object(s.d)("dataFormat",t,e,n).toUpperCase(),p=Object(s.d)("dilations",t,e,n),[f,m]=Object(s.d)("args",t,e,n);return{stride:l,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:a}}var kt=n("RrjA"),jt=n("WJRb"),Nt=n("Pvz5"),St=n("4iwy"),It=n("wion"),Ct=n("DbV5"),Tt=n("hinG"),At=n("hNYx"),Et=n("fmoR"),Rt=n("Wiw4"),$t=n("oJu+");var _t=n("3rNm"),Ft=n("p4Cv"),Dt=n("90yW");function Mt(t,e,n){return{boxes:Object(s.d)("boxes",t,e,n),scores:Object(s.d)("scores",t,e,n),maxOutputSize:Object(s.d)("maxOutputSize",t,e,n),iouThreshold:Object(s.d)("iouThreshold",t,e,n),scoreThreshold:Object(s.d)("scoreThreshold",t,e,n),softNmsSigma:Object(s.d)("softNmsSigma",t,e,n)}}var zt=n("VhY8"),Lt=n("hT5K");var Bt=n("lg8H"),Pt=n("AV8V");class Vt{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Object(r.scalar)(0),this.tensorMap=new Map,Object(r.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),Object(r.tidy)(()=>{const t=Object(r.unstack)(e),a=n.length,s=t.length;r.util.assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let e=0;e<a;e++){const a=n[e],s=t[e];Object(r.keep)(s),this.tensorMap.set(a,s)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Object(r.tidy)(()=>{const t=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,e);t.push(s)}return Object(r.stack)(t)})}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+t.dtype);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+e.dtype)}}var Wt=n("ubnP"),Ut=n("1N4k"),Kt=n("zvA9"),Gt=n("uy0A"),Ht=n("4f3O"),qt=n("shz4"),Xt=n("4zPZ"),Yt=n("7wDt"),Jt=n("8YN0"),Zt=n("Z5Ez");var Qt=n("SHv8"),te=n("yRKQ");var ee=n("cdtJ"),ne=n("4QEz"),re=n("X4fa"),ae=n("gErV"),se=n("vGLV");var ie=n("wCH+"),oe=n("Ei6o"),ue=n("rm0a"),ce=n("4FMF"),le=n("34HJ"),de=n("RRa9"),he=n("6J+n"),pe=n("20lx"),fe=n("HmhO");var me=n("ZJ6U"),be=n("kaMP"),ge=n("0I63"),ye=n("bTzI"),ve=n("3hph"),xe=n("0fRV"),Oe=n("NclT"),we=n("1U0N"),ke=n("OkRW"),je=n("jXH2"),Ne=n("RbuM"),Se=n("i/oj"),Ie=n("ukBL");var Ce=n("Grcp"),Te=n("THqV"),Ae=n("th0q"),Ee=n("adw1");var Re=n("2ugP"),$e=n("k9tH"),_e=n("DrVt"),Fe=n("dYAU"),De=n("OygE"),Me=n("Nk7E"),ze=n("SNsm");function Le(t,e,n,a){const it=((t,e,n)=>{switch(t.category){case"arithmetic":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[u.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"AddN":return[c.a(Object(s.d)("tensors",t,e,n))];case"FloorMod":case"Mod":return[l.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Mul":return[d.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"RealDiv":case"Div":return[h.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"DivNoNan":return[p.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"FloorDiv":return[f.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Sub":return[m.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Minimum":return[b.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Maximum":return[g.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Pow":return[y.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"SquaredDifference":return[v.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"basic_math":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[x.a(Object(s.d)("x",t,e,n))];case"Acos":return[O.a(Object(s.d)("x",t,e,n))];case"Acosh":return[w.a(Object(s.d)("x",t,e,n))];case"Asin":return[k.a(Object(s.d)("x",t,e,n))];case"Asinh":return[j.a(Object(s.d)("x",t,e,n))];case"Atan":return[N.a(Object(s.d)("x",t,e,n))];case"Atan2":return[S.a(Object(s.d)("x",t,e,n),Object(s.d)("y",t,e,n))];case"Atanh":return[I.a(Object(s.d)("x",t,e,n))];case"Ceil":return[C.a(Object(s.d)("x",t,e,n))];case"Complex":return[T.a(Object(s.d)("real",t,e,n),Object(s.d)("imag",t,e,n))];case"Cos":return[A.a(Object(s.d)("x",t,e,n))];case"Cosh":return[E.a(Object(s.d)("x",t,e,n))];case"Elu":return[R.a(Object(s.d)("x",t,e,n))];case"Erf":return[$.a(Object(s.d)("x",t,e,n))];case"Exp":return[_.a(Object(s.d)("x",t,e,n))];case"Expm1":return[F.a(Object(s.d)("x",t,e,n))];case"Floor":return[D.a(Object(s.d)("x",t,e,n))];case"Log":return[M.a(Object(s.d)("x",t,e,n))];case"Log1p":return[z.a(Object(s.d)("x",t,e,n))];case"Imag":return[L.a(Object(s.d)("x",t,e,n))];case"Neg":return[B.a(Object(s.d)("x",t,e,n))];case"Reciprocal":return[P.a(Object(s.d)("x",t,e,n))];case"Real":return[V.a(Object(s.d)("x",t,e,n))];case"Relu":return[W.a(Object(s.d)("x",t,e,n))];case"Round":return[U.a(Object(s.d)("x",t,e,n))];case"Selu":return[K.a(Object(s.d)("x",t,e,n))];case"Sigmoid":return[G.a(Object(s.d)("x",t,e,n))];case"Sin":return[H.a(Object(s.d)("x",t,e,n))];case"Sign":return[q.a(Object(s.d)("x",t,e,n))];case"Sinh":return[X.a(Object(s.d)("x",t,e,n))];case"Softplus":return[Y.a(Object(s.d)("x",t,e,n))];case"Sqrt":return[J.a(Object(s.d)("x",t,e,n))];case"Square":return[Z.a(Object(s.d)("x",t,e,n))];case"Tanh":return[Q.a(Object(s.d)("x",t,e,n))];case"Tan":return[tt.a(Object(s.d)("x",t,e,n))];case"Relu6":case"ClipByValue":return[et.a(Object(s.d)("x",t,e,n),Object(s.d)("clipValueMin",t,e,n),Object(s.d)("clipValueMax",t,e,n))];case"Rsqrt":return[nt.a(Object(s.e)(t.inputNames[0],e,n))];case"Prod":return[rt.a(Object(s.d)("x",t,e,n),Object(s.d)("axes",t,e,n))];case"LeakyRelu":return[at.a(Object(s.d)("x",t,e,n),Object(s.d)("alpha",t,e,n))];case"Prelu":return[st.a(Object(s.d)("x",t,e,n),Object(s.d)("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"control":return ct(t,e,n);case"convolution":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=Object(s.d)("stride",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("dataFormat",t,e,n).toUpperCase(),o=Object(s.d)("dilation",t,e,n);return[lt.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),r,a,i,o)]}case"Conv2D":{const r=Object(s.d)("strides",t,e,n),a=Object(s.c)(t,e,n),i=Object(s.d)("dataFormat",t,e,n).toUpperCase(),o=Object(s.d)("dilations",t,e,n);return[dt.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),[r[1],r[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:c,activationFunc:l}=wt(t,e,n);return[ht.qb.conv2d({x:Object(s.d)("x",t,e,n),filter:Object(s.d)("filter",t,e,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:c,activationFunc:l}=wt(t,e,n);return[ht.qb.depthwiseConv2d({x:Object(s.d)("x",t,e,n),filter:Object(s.d)("filter",t,e,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(s.d)("outputShape",t,e,n),a=Object(s.d)("strides",t,e,n),i=Object(s.c)(t,e,n);return[pt.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),r,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(s.d)("strides",t,e,n),a=Object(s.c)(t,e,n),i=Object(s.d)("dilations",t,e,n),o=Object(s.d)("dataFormat",t,e,n).toUpperCase();return[ft.a(Object(s.d)("input",t,e,n),Object(s.d)("filter",t,e,n),[r[1],r[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("dataFormat",t,e,n).toUpperCase(),o=Object(s.d)("dilations",t,e,n);return[mt.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),[r[1],r[2],r[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n);return[bt.a(Object(s.d)("x",t,e,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n);return[gt.a(Object(s.d)("x",t,e,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n),o=Object(s.d)("includeBatchInIndex",t,e,n),{result:u,indexes:c}=yt.a(Object(s.d)("x",t,e,n),[i[1],i[2]],[r[1],r[2]],a,o);return[u,c]}case"AvgPool3D":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n);return[vt.a(Object(s.d)("x",t,e,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n);return[xt.a(Object(s.d)("x",t,e,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("dilations",t,e,n),o=r[1],u=r[2],c=i[1],l=i[2];return[Ot.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),[o,u],a,[c,l],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"creation":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=Object(s.d)("shape",t,e,n),a=Object(s.d)("dtype",t,e,n),i=Object(s.d)("value",t,e,n);return[kt.a(r,i,a)]}case"LinSpace":{const r=Object(s.d)("start",t,e,n),a=Object(s.d)("stop",t,e,n),i=Object(s.d)("num",t,e,n);return[jt.a(r,a,i)]}case"Multinomial":{const r=Object(s.d)("logits",t,e,n),a=Object(s.d)("numSamples",t,e,n),i=Object(s.d)("seed",t,e,n);return[Nt.a(r,a,i)]}case"OneHot":{const r=Object(s.d)("indices",t,e,n),a=Object(s.d)("depth",t,e,n),i=Object(s.d)("onValue",t,e,n),o=Object(s.d)("offValue",t,e,n);return[St.a(r,a,i,o)]}case"Ones":return[It.a(Object(s.d)("shape",t,e,n),Object(s.d)("dtype",t,e,n))];case"OnesLike":return[Ct.a(Object(s.d)("x",t,e,n))];case"RandomUniform":return[Tt.a(Object(s.d)("shape",t,e,n),Object(s.d)("minval",t,e,n),Object(s.d)("maxval",t,e,n),Object(s.d)("dtype",t,e,n))];case"Range":{const r=Object(s.d)("start",t,e,n),a=Object(s.d)("stop",t,e,n),i=Object(s.d)("step",t,e,n);return[At.a(r,a,i,Object(s.d)("dtype",t,e,n))]}case"TruncatedNormal":{const r=Object(s.d)("shape",t,e,n),a=Object(s.d)("mean",t,e,n),i=Object(s.d)("stdDev",t,e,n),o=Object(s.d)("seed",t,e,n);return[Et.a(r,a,i,Object(s.d)("dtype",t,e,n),o)]}case"Zeros":return[Rt.a(Object(s.d)("shape",t,e,n),Object(s.d)("dtype",t,e,n))];case"ZerosLike":return[$t.a(Object(s.d)("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Mt(t,e,n),c=await ht.zb.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=Mt(t,e,n),c=Object(s.d)("padToMaxOutputSize",t,e,n),l=await ht.zb.nonMaxSuppressionPaddedAsync(r,a,i,o,u,c);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Mt(t,e,n);return[await ht.zb.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=_t.a(Object(s.d)("condition",t,e,n),"bool"),a=[await Ft.a(r)];return r.dispose(),a}case"ListDiff":return Dt.a(Object(s.d)("x",t,e,n),Object(s.d)("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=Object(s.d)("x",t,e,n),a=Object(s.d)("k",t,e,n),i=Object(s.d)("sorted",t,e,n),o=zt.a(r,a,i);return[o.values,o.indices]}case"Unique":{const r=Object(s.d)("x",t,e,n),a=Lt.a(r);return[a.values,a.indices]}case"UniqueV2":{const r=Object(s.d)("x",t,e,n),a=Object(s.d)("axis",t,e,n),i=Lt.a(r,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"image":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=Object(s.d)("images",t,e,n),a=Object(s.d)("size",t,e,n),i=Object(s.d)("alignCorners",t,e,n);return[ht.zb.resizeBilinear(r,[a[0],a[1]],i)]}case"ResizeNearestNeighbor":{const r=Object(s.d)("images",t,e,n),a=Object(s.d)("size",t,e,n),i=Object(s.d)("alignCorners",t,e,n);return[ht.zb.resizeNearestNeighbor(r,[a[0],a[1]],i)]}case"CropAndResize":{const r=Object(s.d)("image",t,e,n),a=Object(s.d)("boxes",t,e,n),i=Object(s.d)("boxInd",t,e,n),o=Object(s.d)("cropSize",t,e,n),u=Object(s.d)("method",t,e,n),c=Object(s.d)("extrapolationValue",t,e,n);return[ht.zb.cropAndResize(r,a,i,o,u,c)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"graph":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=Object(s.d)("default",t,e,n);return[Object(s.e)(t.name,e,n)||r];case"Placeholder":return[Object(s.e)(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(s.d)("x",t,e,n);return[Object(s.a)(r)]}case"IdentityN":return Object(s.d)("x",t,e,n).map(t=>Object(s.a)(t));case"Snapshot":const a=Object(s.d)("x",t,e,n);return[Object(s.a)(a)];case"Shape":return[Bt.a(Object(s.d)("x",t,e,n).shape,"int32")];case"ShapeN":return Object(s.d)("x",t,e,n).map(t=>Bt.a(t.shape));case"Size":return[Pt.a(Object(s.d)("x",t,e,n).size,"int32")];case"Rank":return[Pt.a(Object(s.d)("x",t,e,n).rank,"int32")];case"NoOp":return[Pt.a(1)];case"Print":const i=Object(s.d)("x",t,e,n),o=Object(s.d)("data",t,e,n),u=Object(s.d)("message",t,e,n),c=Object(s.d)("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let t=0;t<o.length;t++)console.log(Array.prototype.slice.call(o[t].dataSync()).slice(0,c));return[i];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"logical":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Equal":return[Wt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"NotEqual":return[Ut.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Greater":return[Kt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"GreaterEqual":return[Gt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Less":return[Ht.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"LessEqual":return[qt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"LogicalAnd":return[Xt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"LogicalNot":return[Yt.a(Object(s.d)("a",t,e,n))];case"LogicalOr":return[Jt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Select":case"SelectV2":return[Zt.a(Object(s.d)("condition",t,e,n),Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"matrices":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Qt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n),Object(s.d)("transposeA",t,e,n),Object(s.d)("transposeB",t,e,n))];case"Transpose":return[te.a(Object(s.d)("x",t,e,n),Object(s.d)("perm",t,e,n))];case"_FusedMatMul":const[r,a]=Object(s.d)("fusedOps",t,e,n),i="biasadd"===r,o="prelu"===a,u=Object(s.d)("numArgs",t,e,n);if(i){if(o&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,l]=Object(s.d)("args",t,e,n);return[ht.qb.matMul({a:Object(s.d)("a",t,e,n),b:Object(s.d)("b",t,e,n),transposeA:Object(s.d)("transposeA",t,e,n),transposeB:Object(s.d)("transposeB",t,e,n),bias:c,activation:a,preluActivationWeights:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"normalization":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ee.a(Object(s.d)("x",t,e,n),Object(s.d)("mean",t,e,n),Object(s.d)("variance",t,e,n),Object(s.d)("offset",t,e,n),Object(s.d)("scale",t,e,n),Object(s.d)("epsilon",t,e,n))];case"LRN":return[ne.a(Object(s.d)("x",t,e,n),Object(s.d)("radius",t,e,n),Object(s.d)("bias",t,e,n),Object(s.d)("alpha",t,e,n),Object(s.d)("beta",t,e,n))];case"Softmax":return[re.a(Object(s.d)("x",t,e,n))];case"LogSoftmax":return[ae.a(Object(s.d)("x",t,e,n))];case"SparseToDense":return[se.a(Object(s.d)("sparseIndices",t,e,n),Object(s.d)("outputShape",t,e,n),Object(s.d)("sparseValues",t,e,n),Object(s.d)("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"reduction":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Max":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[ie.a(Object(s.d)("x",t,e,n),r,a)]}case"Mean":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[oe.a(Object(s.d)("x",t,e,n),r,a)]}case"Min":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[ue.a(Object(s.d)("x",t,e,n),r,a)]}case"Sum":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[ce.a(Object(s.d)("x",t,e,n),r,a)]}case"All":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[le.a(Object(s.d)("x",t,e,n),r,a)]}case"Any":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[de.a(Object(s.d)("x",t,e,n),r,a)]}case"ArgMax":{const r=Object(s.d)("axis",t,e,n);return[he.a(Object(s.d)("x",t,e,n),r)]}case"ArgMin":{const r=Object(s.d)("axis",t,e,n);return[pe.a(Object(s.d)("x",t,e,n),r)]}case"Prod":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[rt.a(Object(s.d)("x",t,e,n),r,a)]}case"Cumsum":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("exclusive",t,e,n),i=Object(s.d)("reverse",t,e,n);return[fe.a(Object(s.d)("x",t,e,n),r,a,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"slice_join":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=Object(s.d)("n",t,e,n),a=Object(s.d)("axis",t,e,n);let i=Object(s.d)("tensors",t,e,n);return i=i.slice(0,r),[me.a(i,a)]}case"GatherV2":case"Gather":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("x",t,e,n),i=Object(s.d)("indices",t,e,n);return[be.a(a,_t.a(i,"int32"),r)]}case"ReverseV2":case"Reverse":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("x",t,e,n);return[ge.a(a,r)]}case"Slice":{const r=Object(s.d)("begin",t,e,n),a=Object(s.d)("size",t,e,n);return[ye.a(Object(s.d)("x",t,e,n),r,a)]}case"StridedSlice":{const r=Object(s.d)("begin",t,e,n),a=Object(s.d)("end",t,e,n),i=Object(s.d)("strides",t,e,n),o=Object(s.d)("beginMask",t,e,n),u=Object(s.d)("endMask",t,e,n),c=Object(s.d)("ellipsisMask",t,e,n),l=Object(s.d)("newAxisMask",t,e,n),d=Object(s.d)("shrinkAxisMask",t,e,n),h=Object(s.d)("x",t,e,n);return[ve.a(h,r,a,i,o,u,c,l,d)]}case"Pack":return Object(r.tidy)(()=>{const a=Object(s.d)("axis",t,e,n),i=Object(s.d)("tensors",t,e,n),o=i[0].shape,u=xe.a(i[0]).shape,c=i.map(t=>{const e=r.util.arraysEqual(t.shape,o);if(!e&&!r.util.arraysEqual(xe.a(t).shape,u))throw new Error("the input tensors shape does not match");return e?t:Oe.a(t,o)});return[we.a(c,a)]});case"Unpack":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("tensor",t,e,n);return ke.a(a,r)}case"Tile":{const r=Object(s.d)("reps",t,e,n);return[je.a(Object(s.d)("x",t,e,n),r)]}case"Split":case"SplitV":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("numOrSizeSplits",t,e,n),i=Object(s.d)("x",t,e,n);return Ne.a(i,a,r)}case"ScatterNd":{const r=Object(s.d)("indices",t,e,n),a=Object(s.d)("values",t,e,n),i=Object(s.d)("shape",t,e,n);return[Se.a(r,a,i)]}case"GatherNd":{const r=Object(s.d)("x",t,e,n),a=Object(s.d)("indices",t,e,n);return[Ie.a(r,a)]}case"SparseToDense":{const r=Object(s.d)("sparseIndices",t,e,n),a=Object(s.d)("outputShape",t,e,n),i=Object(s.d)("sparseValues",t,e,n),o=Object(s.d)("defaultValue",t,e,n);return[se.a(r,i,a,i.dtype===o.dtype?o:_t.a(o,i.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"spectral":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"FFT":return[Ce.a(Object(s.d)("x",t,e,n))];case"IFFT":return[Te.a(Object(s.d)("x",t,e,n))];case"RFFT":return[Ae.a(Object(s.d)("x",t,e,n))];case"IRFFT":return[Ee.a(Object(s.d)("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"transformation":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Cast":return[_t.a(Object(s.d)("x",t,e,n),Object(s.d)("dtype",t,e,n))];case"ExpandDims":{const r=Object(s.d)("axis",t,e,n);return[Re.a(Object(s.d)("x",t,e,n),r)]}case"Squeeze":{const r=Object(s.d)("axis",t,e,n);return[xe.a(Object(s.d)("x",t,e,n),r)]}case"Reshape":return[Oe.a(Object(s.d)("x",t,e,n),Object(s.d)("shape",t,e,n))];case"MirrorPad":return[$e.a(Object(s.d)("x",t,e,n),Object(s.d)("padding",t,e,n),Object(s.d)("mode",t,e,n))];case"PadV2":case"Pad":return[_e.a(Object(s.d)("x",t,e,n),Object(s.d)("padding",t,e,n),Object(s.d)("constantValue",t,e,n))];case"SpaceToBatchND":{const r=Object(s.d)("blockShape",t,e,n),a=Object(s.d)("paddings",t,e,n);return[Fe.a(Object(s.d)("x",t,e,n),r,a)]}case"BatchToSpaceND":{const r=Object(s.d)("blockShape",t,e,n),a=Object(s.d)("crops",t,e,n);return[De.a(Object(s.d)("x",t,e,n),r,a)]}case"DepthToSpace":{const r=Object(s.d)("blockSize",t,e,n),a=Object(s.d)("dataFormat",t,e,n).toUpperCase();return[Me.a(Object(s.d)("x",t,e,n),r,a)]}case"BroadcastTo":return[ze.a(Object(s.d)("x",t,e,n),Object(s.d)("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const a=Object(s.d)("keyDType",t,e,n),i=Object(s.d)("valueDType",t,e,n),o=new Vt(a,i);return r.addHashTable(t.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Object(s.d)("tableHandle",t,e,n,r),i=Object(s.d)("keys",t,e,n),o=Object(s.d)("values",t,e,n),u=r.getHashTableById(a.id);return[await u.import(i,o)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(s.d)("tableHandle",t,e,n,r),i=Object(s.d)("keys",t,e,n),o=Object(s.d)("defaultValue",t,e,n),u=r.getHashTableById(a.id);return[await u.find(i,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,a);case"custom":const it=Object(o.b)(t.op);if(it&&it.customExecutor)return it.customExecutor(new i(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return r.util.isPromise(it)?it.then(t=>[].concat(t)):[].concat(it)}class Be{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function Pe(t,e,n,r){const a=new Set,i=[];let o=null,u=null;const c=new Set,l=Object.keys(t).map(t=>Object(s.g)(t)[0]);let d=[];null!=r&&(d=r.map(t=>Object(s.g)(t.name)[0]));const h=[...e];for(;h.length>0;){const t=h.pop();(Ke(t)||Ge(t)||He(t))&&null==o&&(o=t,u=o.children.map(t=>t.name).filter(t=>a.has(t))),a.add(t.name),null==n[t.name]&&(-1===l.indexOf(t.name)&&-1===d.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach(t=>{c.has(t.name)||(c.add(t.name),h.push(t))}):i.push(t.name)))}return{inputs:t,outputs:e,usedNodes:a,missingInputs:i,dynamicNode:o,syncInputs:u}}const Ve=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],We=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Ue=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function Ke(t){return Ve.indexOf(t.op)>=0}function Ge(t){return We.indexOf(t.op)>=0}function He(t){return Ue.indexOf(t.op)>=0}class qe{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new qe(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(e=>t[e].map(t=>t.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){const n=t.map(t=>t.name).sort(),r=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=Pe(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:i}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const n=e.map(t=>t.name),a=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:a}=n,i=[],o=Object.keys(a).map(t=>Object(s.g)(t)[0]).map(e=>t.nodes[e]),u=t.initNodes;o.forEach(t=>{r.has(t.name)&&i.push(t)}),t.weights.forEach(t=>{r.has(t.name)&&i.push(t)}),null!=u&&u.forEach(t=>{r.has(t.name)&&i.push(t)});const c=new Set,l=[];for(;i.length>0;){const t=i.pop();c.add(t.name),e[t.name]||l.push(t),t.children.forEach(t=>{!c.has(t.name)&&r.has(t.name)&&t.inputs.every(t=>c.has(t.name))&&i.push(t)})}return l}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const a=n.map(t=>this.graph.nodes[Object(s.g)(t)[0]]),i=e.map(t=>Object(s.g)(t)[0]);let o=i.map(t=>this.graph.nodes[t]);0===o.length&&(o=this._outputs);const u=this.getCompilationKey(a,o);let c=this.compiledMap.get(u);null==c&&(c=this.compile(t,o),this.compiledMap.set(u,c));const l={},d={};return Object(r.tidy)(()=>{const n=new Be(this.weightMap,l,d,this.functionExecutorMap),a=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=Object(s.g)(e),i=[];i[r]=t[e],a[n]=i});const o=this.getFrozenTensorIds(a),u={};for(let t=0;t<c.length;t++){const e=c[t];if(!a[e.name]){const t=Le(e,a,n,this._resourceManager);if(r.util.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);a[e.name]=t,this.checkTensorForDisposal(e.name,e,a,n,o,i,u)}}return null==this.parent&&n.dispose(o),e.map(t=>Object(s.e)(t,a,n))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,r,a,i,o){"control"!==e.category&&-1===i.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(o[t.id]=(o[t.id]||0)+e.children.length)}),e.inputs.forEach(t=>{if("control"!==t.category){const e=Object(s.f)(t.name,n,r);null!=e&&e.forEach(t=>{if(t&&!a.has(t.id)){const e=o[t.id];1===e?(t.dispose(),delete o[t.id]):null!=e&&o[t.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},a={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const i=new Be(this.weightMap,r,a,this.functionExecutorMap),o=await this.executeWithControlFlow(t,i,e,n),u=e.map(t=>Object(s.e)(t,o,i)),c=u.map(t=>t.id),l=Object.keys(t).map(e=>t[e].id),d=new Set([...c,...l,...this.weightIds]);return Object.keys(o).forEach(t=>{o[t].forEach(t=>{!t||t.isDisposed||d.has(t.id)||t.dispose()})}),null==this.parent&&i.dispose(d),u}async executeFunctionAsync(t,e,n){const r=t.reduce((t,e,n)=>(t[this.inputs[n].name]=e,t),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const a=Object.keys(t),i=a.map(t=>this.graph.nodes[Object(s.g)(t)[0]]),o=n.map(t=>Object(s.g)(t)[0]);let u=o.map(t=>this.graph.nodes[t]);0===u.length&&(u=this._outputs);const{usedNodes:c,missingInputs:l,dynamicNode:d,syncInputs:h}=Pe(t,u,this.weightMap,this._initNodes),p=[...i,...this.graph.weights,...this._initNodes||[]].map(t=>({node:t,contexts:e.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=Object(s.g)(e),a=[];a[r]=t[e],f[n]=a});const m={},b=this.getFrozenTensorIds(f),g={};for(;p.length>0;){const t=this.processStack(i,p,e,f,g,b,o,m,c);await Promise.all(t)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=u.filter(t=>!Ke(t)&&!Object(s.e)(t.name,f,e)).map(t=>t.name);if(y.length>0){let t="";throw null!=d&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${t}`)}return f}processStack(t,e,n,a,i,o,u,c,l){const d=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let h="";if("Enter"===t.node.op&&Object(s.d)("isConstant",t.node,a,n)&&([h]=Object(s.b)(t.node.name,n)),null==a[t.node.name]){const p=Le(t.node,a,n,this._resourceManager);h||([h]=Object(s.b)(t.node.name,n));const f=n.currentContext;r.util.isPromise(p)?d.push(p.then(r=>(a[h]=r,n.currentContext=f,this.checkTensorForDisposal(h,t.node,a,n,o,u,c),this.processChildNodes(t.node,e,n,a,i,l),r))):(a[h]=p,this.checkTensorForDisposal(h,t.node,a,n,o,u,c),this.processChildNodes(t.node,e,n,a,i,l))}else this.processChildNodes(t.node,e,n,a,i,l)}return d}processChildNodes(t,e,n,r,a,i){t.children.forEach(t=>{const[o]=Object(s.b)(t.name,n);!a[o]&&i.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!Object(s.e)(t,r,n))&&(a[o]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!Object(s.e)(t,r,n))&&(a[o]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const n=t[e],[a]=Object(s.g)(e),i=this.graph.nodes[a];if(i.attrParams.shape&&i.attrParams.shape.value){const t=i.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every((e,n)=>-1===t[n]||t[n]===e);r.util.assert(e,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&r.util.assert(n.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter(t=>{const[e]=Object(s.g)(t);return null==this.graph.nodes[e]});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t},{})}checkOutputs(t){t.forEach(t=>{const[e]=Object(s.g)(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)})}}class Xe{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class Ye{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new Xe}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=r.io.browserHTTPRequest(t,this.loadOptions);else{const e=r.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(r.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const s=r.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new qe(a.a.Instance.transformGraph(e,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer){const e=a.a.Instance.transformGraph(t.modelInitializer);this.initializer=new qe(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"===typeof t){const e=r.io.getSaveHandlers(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof r.Tensor)&&!Array.isArray(t))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,n,r)=>(e[n]=t[r],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Je(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t+="model.json?tfjs-format=file");const n=new Ye(t,e);return await n.load(),n}const Ze="2.7.0"},"D2/b":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("uBja"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({conv2DBackpropFilter_:function(t,e,n,o,c,l="NHWC",d){let h=t;3===t.rank&&(h=Object(u.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p=e;3===p.rank&&(p=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),s.b(4===h.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+h.shape+"."),s.b(4===p.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+p.shape+"."),s.b(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const f="NHWC"===l?h.shape[3]:h.shape[1],m="NHWC"===l?p.shape[3]:p.shape[1];s.b(f===n[2],()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`),s.b(m===n[3],()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`),null!=d&&s.b(s.v(c),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const b={x:h,dy:p},g={strides:o,pad:c,dataFormat:l,dimRoundingMode:d,filterShape:n};return r.a.runKernelFunc(t=>{const e=i.g(l),r=i.a(h.shape,n,o,1,c,d,!1,e);return t.conv2dDerFilter(h,p,r)},b,null,a.B,g)}})},D4ac:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({resizeNearestNeighbor_:function(t,e,n=!1){const o=Object(s.a)(t,"images","resizeNearestNeighbor");i.b(3===o.rank||4===o.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),i.b(2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+"."),i.b("float32"===o.dtype||"int32"===o.dtype,()=>"`images` must have `int32` or `float32` as dtype");let c=o,l=!1;3===o.rank&&(l=!0,c=Object(u.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const[d,h]=e,p={images:c},f={alignCorners:n,size:e},m=r.a.runKernelFunc((t,e)=>(e([c]),t.resizeNearestNeighbor(c,d,h,n)),p,null,a.kc,f);return l?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},DbV5:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("B3db"),o=n("JLAb"),u=n("VO80"),c=n("17CO"),l=n("oJu+");const d=Object(u.b)({onesLike_:function(t){const e=Object(s.a)(t,"x","onesLike"),n={x:e};return r.a.runKernelFunc((t,n)=>{if("complex64"===e.dtype){const t=d(Object(c.a)(e)),n=Object(l.a)(Object(o.a)(e));return Object(i.a)(t,n)}return t.onesLike(e)},n,null,a.Wb)}})},DrVt:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({pad_:function(t,e,n=0){const i=Object(s.a)(t,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:e,constantValue:n},u={x:i};return r.a.runKernelFunc((t,r)=>(r([i]),t.pad(i,e,n)),u,null,a.Xb,o)}})},E1lT:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({log_:function(t){const e=Object(s.a)(t,"x","log"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.log(e);return n([e]),r},n,null,a.xb)}})},ET5l:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},EWu9:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("o/e8"),a=n("atXS"),s=n("3X4V"),i=n("g4+C"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({separableConv2d_:function(t,e,n,o,c,l=[1,1],d="NHWC"){const h=Object(r.a)(t,"x","separableConv2d"),p=Object(r.a)(e,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=h,b=!1;if(3===h.rank&&(b=!0,m=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===m.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`),a.b(4===p.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`),a.b(4===f.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`),a.b(1===f.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`),a.b(1===f.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`);const g=p.shape[2],y=p.shape[3];a.b(f.shape[2]===g*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${g*y}, but got ${f.shape[2]}.`);const v=Object(i.a)(m,p,o,c,d,l),x=Object(s.a)(v,f,1,"valid",d);return b?Object(u.a)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},EhIR:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n=function(){var t=4022871197;return function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)}}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function u(t,e){var n=new i(t),r=e&&e.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("uQAw")&&n("VRIy")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.alea=u}(0,t,n("uQAw"))}).call(this,n("1/IK")(t))},Ei6o:function(t,e,n){"use strict";n.d(e,"a",(function(){return g}));var r=n("auKK"),a=n("U45G"),s=n("wFtI"),i=n("o/e8"),o=n("atXS"),u=n("NuWS"),c=n("3rNm"),l=n("x3y4"),d=n("parS"),h=n("wion"),p=n("VO80"),f=n("NclT"),m=n("AV8V"),b=n("4FMF");const g=Object(p.b)({mean_:function(t,e=null,n=!1){const p=Object(i.a)(t,"x","mean"),g=Object(o.I)(e,p.shape),y=Object(u.d)(p.shape,g)[1],v=Object(o.N)(y),x={x:p},O={axis:e,keepDims:n},w=()=>{const t=Object(m.a)(v),r=t.dtype===p.dtype?p:Object(c.a)(p,t.dtype),a=Object(l.a)(r,t);return Object(b.a)(a,e,n)};return Object(a.a)(t=>({value:r.a.runKernelFunc(w,x,null,s.Kb,O),gradFunc:e=>{const n=t.shape.slice();g.forEach(t=>{n[t]=1});const r=Object(f.a)(e,n);return Object(l.a)(Object(d.a)(r,Object(h.a)(t.shape,"float32")),v)}}))(p)}})},EysY:function(t,e,n){"use strict";n.d(e,"b",(function(){return a.a})),n.d(e,"c",(function(){return s.a})),n.d(e,"d",(function(){return i.a})),n.d(e,"e",(function(){return o.a})),n.d(e,"f",(function(){return u.a})),n.d(e,"h",(function(){return c.a})),n.d(e,"i",(function(){return l.a})),n.d(e,"j",(function(){return d.a})),n.d(e,"k",(function(){return h.a})),n.d(e,"l",(function(){return p.a})),n.d(e,"m",(function(){return f.a})),n.d(e,"n",(function(){return m.a})),n.d(e,"o",(function(){return b.a})),n.d(e,"p",(function(){return g.a})),n.d(e,"q",(function(){return y.a})),n.d(e,"r",(function(){return v.a})),n.d(e,"s",(function(){return C})),n.d(e,"x",(function(){return T.a})),n.d(e,"t",(function(){return A.a})),n.d(e,"u",(function(){return R})),n.d(e,"v",(function(){return $})),n.d(e,"w",(function(){return _})),n.d(e,"z",(function(){return F.a})),n.d(e,"A",(function(){return D.a})),n.d(e,"B",(function(){return M.a})),n.d(e,"C",(function(){return z.a})),n.d(e,"D",(function(){return L.a})),n.d(e,"E",(function(){return B.a})),n.d(e,"F",(function(){return P.a})),n.d(e,"G",(function(){return O.a})),n.d(e,"H",(function(){return V})),n.d(e,"I",(function(){return W})),n.d(e,"J",(function(){return U})),n.d(e,"K",(function(){return K})),n.d(e,"L",(function(){return G.a})),n.d(e,"M",(function(){return H.a})),n.d(e,"N",(function(){return q.a})),n.d(e,"O",(function(){return X.a})),n.d(e,"P",(function(){return J})),n.d(e,"Q",(function(){return Z.a})),n.d(e,"R",(function(){return Q.a})),n.d(e,"T",(function(){return tt.a})),n.d(e,"U",(function(){return et.a})),n.d(e,"V",(function(){return nt.a})),n.d(e,"W",(function(){return it})),n.d(e,"X",(function(){return ot.a})),n.d(e,"Y",(function(){return ut.a})),n.d(e,"Z",(function(){return ct.a})),n.d(e,"bb",(function(){return lt.a})),n.d(e,"db",(function(){return dt.a})),n.d(e,"fb",(function(){return ht.a})),n.d(e,"hb",(function(){return pt.a})),n.d(e,"ib",(function(){return ft.a})),n.d(e,"jb",(function(){return mt.a})),n.d(e,"kb",(function(){return bt.a})),n.d(e,"lb",(function(){return yt})),n.d(e,"nb",(function(){return vt.a})),n.d(e,"ob",(function(){return xt.a})),n.d(e,"pb",(function(){return Ot.a})),n.d(e,"rb",(function(){return wt.a})),n.d(e,"tb",(function(){return kt.a})),n.d(e,"ub",(function(){return jt.a})),n.d(e,"yb",(function(){return Nt.a})),n.d(e,"Cb",(function(){return St.a})),n.d(e,"Db",(function(){return It.a})),n.d(e,"Eb",(function(){return Ct.a})),n.d(e,"Fb",(function(){return Tt.a})),n.d(e,"Gb",(function(){return At.a})),n.d(e,"Hb",(function(){return Et.a})),n.d(e,"Lb",(function(){return Rt.a})),n.d(e,"Mb",(function(){return $t.a})),n.d(e,"Nb",(function(){return _t.a})),n.d(e,"Ob",(function(){return Ft.a})),n.d(e,"Pb",(function(){return Dt.a})),n.d(e,"Qb",(function(){return Mt.a})),n.d(e,"Rb",(function(){return zt.a})),n.d(e,"Sb",(function(){return Lt.a})),n.d(e,"Tb",(function(){return Bt.a})),n.d(e,"Ub",(function(){return Pt.a})),n.d(e,"Vb",(function(){return Vt.a})),n.d(e,"Xb",(function(){return w.a})),n.d(e,"Yb",(function(){return Wt.a})),n.d(e,"Zb",(function(){return Ut.a})),n.d(e,"ac",(function(){return Kt.a})),n.d(e,"bc",(function(){return Gt.a})),n.d(e,"cc",(function(){return Ht.a})),n.d(e,"ec",(function(){return qt.a})),n.d(e,"fc",(function(){return Xt.a})),n.d(e,"gc",(function(){return Yt.a})),n.d(e,"ic",(function(){return Jt.a})),n.d(e,"jc",(function(){return Zt.a})),n.d(e,"lc",(function(){return ne})),n.d(e,"nc",(function(){return k.a})),n.d(e,"pc",(function(){return re})),n.d(e,"qc",(function(){return ae.a})),n.d(e,"rc",(function(){return se.a})),n.d(e,"tc",(function(){return ie.a})),n.d(e,"vc",(function(){return oe.a})),n.d(e,"wc",(function(){return ue.a})),n.d(e,"xc",(function(){return ce.a})),n.d(e,"zc",(function(){return le})),n.d(e,"Ac",(function(){return de.a})),n.d(e,"Bc",(function(){return he})),n.d(e,"Cc",(function(){return pe})),n.d(e,"Dc",(function(){return fe})),n.d(e,"Ec",(function(){return me})),n.d(e,"Fc",(function(){return be.a})),n.d(e,"Gc",(function(){return ge.a})),n.d(e,"Ic",(function(){return ye.a})),n.d(e,"Jc",(function(){return ve.a})),n.d(e,"Kc",(function(){return xe.a})),n.d(e,"Lc",(function(){return Oe})),n.d(e,"Mc",(function(){return ke})),n.d(e,"Nc",(function(){return je})),n.d(e,"Oc",(function(){return Ne.a})),n.d(e,"Pc",(function(){return Se.a})),n.d(e,"Qc",(function(){return Ie.a})),n.d(e,"Rc",(function(){return Ce.a})),n.d(e,"Sc",(function(){return Te.a})),n.d(e,"Tc",(function(){return Ae.a})),n.d(e,"Uc",(function(){return st.a})),n.d(e,"Vc",(function(){return Ee.a})),n.d(e,"Wc",(function(){return Re})),n.d(e,"Xc",(function(){return $e})),n.d(e,"Yc",(function(){return _e})),n.d(e,"Zc",(function(){return Fe})),n.d(e,"bd",(function(){return De.a})),n.d(e,"cd",(function(){return Me.a})),n.d(e,"dd",(function(){return ze.a})),n.d(e,"fd",(function(){return Le.a})),n.d(e,"gd",(function(){return Be.a})),n.d(e,"hd",(function(){return Pe.a})),n.d(e,"id",(function(){return N.a})),n.d(e,"jd",(function(){return Ve.a})),n.d(e,"ld",(function(){return We.a})),n.d(e,"md",(function(){return Ue.a})),n.d(e,"nd",(function(){return S.a})),n.d(e,"od",(function(){return Ke})),n.d(e,"pd",(function(){return Ge})),n.d(e,"qd",(function(){return He})),n.d(e,"rd",(function(){return qe})),n.d(e,"sd",(function(){return Xe.a})),n.d(e,"td",(function(){return Ye.a})),n.d(e,"ud",(function(){return Je.a})),n.d(e,"mb",(function(){return Ze.a})),n.d(e,"xb",(function(){return Qe.a})),n.d(e,"Bb",(function(){return tn.a})),n.d(e,"ad",(function(){return en.a})),n.d(e,"xd",(function(){return nn.a})),n.d(e,"yd",(function(){return rn.a})),n.d(e,"zd",(function(){return te.a})),n.d(e,"Ad",(function(){return an.a})),n.d(e,"Cd",(function(){return sn.a})),n.d(e,"Dd",(function(){return on.a})),n.d(e,"Ed",(function(){return un.a})),n.d(e,"Fd",(function(){return cn.a})),n.d(e,"Gd",(function(){return ee.a})),n.d(e,"Id",(function(){return ln.a})),n.d(e,"Jd",(function(){return dn.a})),n.d(e,"Kd",(function(){return I.a})),n.d(e,"Ld",(function(){return hn.a})),n.d(e,"Md",(function(){return pn.a})),n.d(e,"Nd",(function(){return mn})),n.d(e,"Od",(function(){return bn.a})),n.d(e,"Pd",(function(){return gn})),n.d(e,"Qd",(function(){return yn})),n.d(e,"Rd",(function(){return vn})),n.d(e,"Sd",(function(){return gt.a})),n.d(e,"Td",(function(){return xn.a})),n.d(e,"Vd",(function(){return On.a})),n.d(e,"Wd",(function(){return wn.a})),n.d(e,"Xd",(function(){return kn.a})),n.d(e,"Yd",(function(){return jn.a})),n.d(e,"Zd",(function(){return Nn})),n.d(e,"ae",(function(){return Sn.a})),n.d(e,"be",(function(){return In.a})),n.d(e,"ce",(function(){return Cn.a})),n.d(e,"de",(function(){return Tn.a})),n.d(e,"y",(function(){return An})),n.d(e,"gb",(function(){return En.a})),n.d(e,"vb",(function(){return En.b})),n.d(e,"wb",(function(){return En.c})),n.d(e,"Ib",(function(){return En.d})),n.d(e,"Jb",(function(){return En.e})),n.d(e,"uc",(function(){return En.f})),n.d(e,"g",(function(){return Rn.a})),n.d(e,"ab",(function(){return Rn.b})),n.d(e,"dc",(function(){return Rn.c})),n.d(e,"hc",(function(){return Rn.d})),n.d(e,"kc",(function(){return Rn.e})),n.d(e,"oc",(function(){return Rn.f})),n.d(e,"Hc",(function(){return Rn.g})),n.d(e,"Bd",(function(){return Rn.h})),n.d(e,"Hd",(function(){return Rn.i})),n.d(e,"Ud",(function(){return $n.a})),n.d(e,"sc",(function(){return _n.a})),n.d(e,"mc",(function(){return Dn})),n.d(e,"ed",(function(){return Mn.a})),n.d(e,"vd",(function(){return zn.a})),n.d(e,"sb",(function(){return Ln.a})),n.d(e,"cb",(function(){return Pn})),n.d(e,"eb",(function(){return Vn})),n.d(e,"S",(function(){return Wn})),n.d(e,"Ab",(function(){return Un})),n.d(e,"yc",(function(){return j.b})),n.d(e,"a",(function(){return j.a})),n.d(e,"zb",(function(){return Dr})),n.d(e,"Kb",(function(){return Mr})),n.d(e,"Wb",(function(){return zr})),n.d(e,"wd",(function(){return _r})),n.d(e,"qb",(function(){return r})),n.d(e,"kd",(function(){return Fr}));var r={};n.r(r),n.d(r,"conv2d",(function(){return Jn})),n.d(r,"depthwiseConv2d",(function(){return tr})),n.d(r,"matMul",(function(){return er}));var a=n("iuCH"),s=n("o3Rt"),i=n("RhVc"),o=n("kRdc"),u=n("SFB9"),c=n("34HJ"),l=n("RRa9"),d=n("6J+n"),h=n("20lx"),p=n("Ig+c"),f=n("3FnS"),m=n("fjZN"),b=n("YAKK"),g=n("0ahe"),y=n("l0gX"),v=n("ulO0"),x=n("o/e8"),O=n("ZJ6U"),w=n("SHv8"),k=n("parS"),j=n("VO80"),N=n("/7N0"),S=n("bTzI"),I=n("iIjY");const C=Object(j.b)({basicLSTMCell_:function(t,e,n,r,a,s){const i=Object(x.a)(t,"forgetBias","basicLSTMCell"),u=Object(x.a)(e,"lstmKernel","basicLSTMCell"),c=Object(x.a)(n,"lstmBias","basicLSTMCell"),l=Object(x.a)(r,"data","basicLSTMCell"),d=Object(x.a)(a,"c","basicLSTMCell"),h=Object(x.a)(s,"h","basicLSTMCell"),p=Object(O.a)([l,h],1),f=Object(w.a)(p,u),m=Object(o.a)(f,c),b=m.shape[0],g=m.shape[1]/4,y=[b,g],v=Object(S.a)(m,[0,0],y),j=Object(S.a)(m,[0,g],y),C=Object(S.a)(m,[0,2*g],y),T=Object(S.a)(m,[0,3*g],y),A=Object(o.a)(Object(k.a)(Object(N.a)(v),Object(I.a)(j)),Object(k.a)(d,Object(N.a)(Object(o.a)(i,C))));return[A,Object(k.a)(Object(I.a)(A),Object(N.a)(T))]}});var T=n("OygE"),A=n("cdtJ"),E=n("atXS");const R=Object(j.b)({batchNorm2d_:function(t,e,n,r,a,s){const i=Object(x.a)(t,"x","batchNorm"),o=Object(x.a)(e,"mean","batchNorm"),u=Object(x.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(x.a)(a,"scale","batchNorm")),null!=r&&(l=Object(x.a)(r,"offset","batchNorm")),E.b(2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+"."),E.b(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),E.b(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&E.b(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=l&&E.b(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Object(A.a)(i,o,u,l,c,s)}});const $=Object(j.b)({batchNorm3d_:function(t,e,n,r,a,s){const i=Object(x.a)(t,"x","batchNorm"),o=Object(x.a)(e,"mean","batchNorm"),u=Object(x.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(x.a)(a,"scale","batchNorm")),null!=r&&(l=Object(x.a)(r,"offset","batchNorm")),E.b(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),E.b(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),E.b(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&E.b(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=l&&E.b(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Object(A.a)(i,o,u,l,c,s)}});const _=Object(j.b)({batchNorm4d_:function(t,e,n,r,a,s){const i=Object(x.a)(t,"x","batchNorm"),o=Object(x.a)(e,"mean","batchNorm"),u=Object(x.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(x.a)(a,"scale","batchNorm")),null!=r&&(l=Object(x.a)(r,"offset","batchNorm")),E.b(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),E.b(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),E.b(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&E.b(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=l&&E.b(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Object(A.a)(i,o,u,l,c,s)}});var F=n("SNsm"),D=n("BD40"),M=n("3rNm"),z=n("WWBm"),L=n("wI/y"),B=n("8Km0"),P=n("B3db");const V=Object(j.b)({concat1d_:function(t){return Object(O.a)(t,0)}});const W=Object(j.b)({concat2d_:function(t,e){return Object(O.a)(t,e)}});const U=Object(j.b)({concat3d_:function(t,e){return Object(O.a)(t,e)}});const K=Object(j.b)({concat4d_:function(t,e){return Object(O.a)(t,e)}});var G=n("dnXz"),H=n("3X4V"),q=n("zR+/"),X=n("FZCF"),Y=n("mdDO");const J=Object(j.b)({conv3dTranspose_:function(t,e,n,r,a){const s=Object(x.a)(t,"x","conv3dTranspose"),i=Object(x.a)(e,"filter","conv3dTranspose");return Object(Y.a)(n,s,i,r,a)}});var Z=n("7/dO"),Q=n("waK1"),tt=n("HmhO"),et=n("Nk7E"),nt=n("g4+C"),rt=n("auKK"),at=n("wFtI"),st=n("NclT");const it=Object(j.b)({diag_:function(t){const e=Object(x.a)(t,"x","diag"),n={x:e};return rt.a.runKernelFunc(n=>{const r=Object(st.a)(e,[e.size]),a=n.diag(r),s=[...t.shape,...t.shape];return Object(st.a)(a,s)},n,null,at.O)}});var ot=n("wXC5"),ut=n("x3y4"),ct=n("ARu+"),lt=n("Kfzt"),dt=n("njhW"),ht=n("ubnP"),pt=n("jgXy"),ft=n("TyAZ"),mt=n("2ugP"),bt=n("G6IW"),gt=n("jXH2");const yt=Object(j.b)({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const a=Object(D.a)([t,e],r),s=t<=e?t:e;for(let o=0;o<s;++o)a.set(1,o,o);const i=Object(st.a)(a.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return Object(gt.a)(Object(mt.a)(i,0),[n[0],1,1]);if(2===n.length)return Object(gt.a)(Object(mt.a)(Object(mt.a)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(gt.a)(Object(mt.a)(Object(mt.a)(Object(mt.a)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var vt=n("RrjA"),xt=n("02mo"),Ot=n("UI8N"),wt=n("kaMP"),kt=n("zvA9"),jt=n("uy0A"),Nt=n("JLAb"),St=n("/AvP"),It=n("WYAb"),Ct=n("b++O"),Tt=n("bzdD"),At=n("4f3O"),Et=n("shz4"),Rt=n("WJRb"),$t=n("4QEz"),_t=n("E1lT"),Ft=n("RrGL"),Dt=n("wxQM"),Mt=n("gErV"),zt=n("r9q9"),Lt=n("4zPZ"),Bt=n("7wDt"),Pt=n("8YN0"),Vt=n("0l+w"),Wt=n("wCH+"),Ut=n("n+ZZ"),Kt=n("U/2n"),Gt=n("i8k8"),Ht=n("CfTU"),qt=n("Ei6o"),Xt=n("rm0a"),Yt=n("8OX7"),Jt=n("k9tH"),Zt=n("RhH0"),Qt=n("NuWS"),te=n("k7Jv"),ee=n("oAkI");const ne=Object(j.b)({moments_:function(t,e=null,n=!1){t=Object(x.a)(t,"x","moments");const r=Object(E.I)(e,t.shape),a=Object(qt.a)(t,r,n);let s=a.shape;n||(s=Object(Qt.e)(a.shape,r));const i=Object(te.a)(Object(ee.a)(Object(M.a)(t,"float32"),Object(st.a)(a,s)));return{mean:a,variance:Object(qt.a)(i,r,n)}}});const re=Object(j.b)({multiRNNCell_:function(t,e,n,r){const a=Object(x.a)(e,"data","multiRNNCell"),s=Object(x.b)(n,"c","multiRNNCell"),i=Object(x.b)(r,"h","multiRNNCell");let o=a;const u=[];for(let d=0;d<t.length;d++){const e=t[d](o,s[d],i[d]);u.push(e[0]),u.push(e[1]),o=e[1]}const c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}});var ae=n("Pvz5"),se=n("O7f5"),ie=n("1N4k"),oe=n("4iwy"),ue=n("wion"),ce=n("DbV5");const le=Object(j.b)({outerProduct_:function(t,e){const n=Object(x.a)(t,"v1","outerProduct"),r=Object(x.a)(e,"v2","outerProduct");E.b(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=Object(st.a)(n,[-1,1]),s=Object(st.a)(r,[1,-1]);return Object(w.a)(a,s)}});var de=n("DrVt");const he=Object(j.b)({pad1d_:function(t,e,n=0){return Object(E.b)(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Object(de.a)(t,[e],n)}});const pe=Object(j.b)({pad2d_:function(t,e,n=0){return Object(E.b)(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(de.a)(t,e,n)}});const fe=Object(j.b)({pad3d_:function(t,e,n=0){return Object(E.b)(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(de.a)(t,e,n)}});const me=Object(j.b)({pad4d_:function(t,e,n=0){return Object(E.b)(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(de.a)(t,e,n)}});var be=n("6vQL"),ge=n("yfHJ"),ye=n("Ug8H"),ve=n("dWjR"),xe=n("867m");const Oe=Object(j.b)({rand_:function(t,e,n){const r=Object(E.N)(t);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=e();return rt.a.makeTensor(a,t,n)}});var we=n("1OSX");const ke=Object(j.b)({randomGamma_:function(t,e,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new we.b(e,n,r,a),i=Object(D.a)(t,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});const je=Object(j.b)({randomNormal_:function(t,e=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new we.a(e,n,r,!1,a),i=Object(D.a)(t,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var Ne=n("hinG"),Se=n("hNYx"),Ie=n("17CO"),Ce=n("tQDl"),Te=n("kXpR"),Ae=n("Rqg+"),Ee=n("0I63");const Re=Object(j.b)({reverse1d_:function(t){const e=Object(x.a)(t,"x","reverse");return E.b(1===e.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Object(Ee.a)(e,0)}});const $e=Object(j.b)({reverse2d_:function(t,e){const n=Object(x.a)(t,"x","reverse");return E.b(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Object(Ee.a)(n,e)}});const _e=Object(j.b)({reverse3d_:function(t,e){const n=Object(x.a)(t,"x","reverse");return E.b(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Object(Ee.a)(n,e)}});const Fe=Object(j.b)({reverse4d_:function(t,e){const n=Object(x.a)(t,"x","reverse");return E.b(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Object(Ee.a)(n,e)}});var De=n("CKnt"),Me=n("Xyqe"),ze=n("AV8V"),Le=n("s57M"),Be=n("EWu9"),Pe=n("90yW"),Ve=n("Hfat"),We=n("aTLu"),Ue=n("XcSs");const Ke=Object(j.b)({slice1d_:function(t,e,n){const r=Object(x.a)(t,"x","slice1d");return E.b(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Object(S.a)(r,[e],[n])}});const Ge=Object(j.b)({slice2d_:function(t,e,n){const r=Object(x.a)(t,"x","slice2d");return E.b(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Object(S.a)(r,e,n)}});const He=Object(j.b)({slice3d_:function(t,e,n){const r=Object(x.a)(t,"x","slice3d");return E.b(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Object(S.a)(r,e,n)}});const qe=Object(j.b)({slice4d_:function(t,e,n){const r=Object(x.a)(t,"x","slice4d");return E.b(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Object(S.a)(r,e,n)}});var Xe=n("X4fa"),Ye=n("n/2y"),Je=n("dYAU"),Ze=n("Grcp"),Qe=n("THqV"),tn=n("adw1"),en=n("th0q"),nn=n("RbuM"),rn=n("Fjpt"),an=n("QYQ3"),sn=n("0fRV"),on=n("1U0N"),un=n("L7Hl"),cn=n("3hph"),ln=n("4FMF"),dn=n("0wrZ"),hn=n("NX3e"),pn=n("lg8H"),fn=n("WVnj");function mn(t,e,n){if(Object(E.d)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(x.c)(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(fn.a)(t,e,r,n)}var bn=n("BbuY");function gn(t,e,n){if(Object(E.d)(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(x.c)(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(fn.a)(t,e,r,n)}function yn(t,e,n){if(Object(E.d)(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(x.c)(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(fn.a)(t,e,r,n)}function vn(t,e,n){if(Object(E.d)(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(x.c)(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,Object(fn.a)(t,e,r,n)}var xn=n("VhY8"),On=n("fmoR"),wn=n("hT5K"),kn=n("U/Lz"),jn=n("OkRW");function Nn(t,e=!0,n,r){return rt.a.makeVariable(t,e,n,r)}var Sn=n("Z5Ez"),In=n("p4Cv"),Cn=n("Wiw4"),Tn=n("oJu+");const An=async function(t,e,n){const r=Object(x.a)(t,"tensor","boolMask"),a=Object(x.a)(e,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;E.b(i>0,()=>"mask cannot be scalar"),E.e(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=s;m<s+i;m++)u*=o[m];const c=o.slice(0,s).concat([u],o.slice(s+i)),l=Object(st.a)(r,c),d=Object(st.a)(a,[-1]),h=await Object(In.a)(d),p=Object(sn.a)(h,[1]),f=Object(wt.a)(l,p,s);return t!==r&&r.dispose(),e!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f};var En=n("8bUJ"),Rn=n("zLES"),$n=n("yRKQ"),_n=n("91d6"),Fn=n("dsKV");const Dn=Object(j.b)({movingAverage_:function(t,e,n,r,a=!0){const s=Object(x.a)(t,"v","movingAverage"),i=Object(x.a)(e,"x","movingAverage"),u=Object(x.a)(n,"decay","movingAverage");Object(Fn.assertTypesMatch)(s,i),E.b(E.a(s.shape,i.shape),()=>"Shape mismatch in v and x");const c=Object(ze.a)(1),l=Object(ee.a)(c,u);let d=Object(k.a)(Object(ee.a)(i,s),l);if(a){E.b(null!=r,()=>"When using zeroDebias: true, step is required.");const t=Object(x.a)(r,"step","movingAverage");d=Object(ut.a)(d,Object(ee.a)(c,Object(ge.a)(u,t)))}return Object(o.a)(s,d)}});var Mn=n("i/oj"),zn=n("vGLV"),Ln=n("ukBL"),Bn=n("NNfn");const Pn=Object(j.b)({dropout_:function(t,e,n,r){const a=Object(x.a)(t,"x","dropout");if(E.b("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),E.b(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof Bn.a?a.clone():a;const s=function(t,e){if(null==e)return t.shape.slice();if(E.a(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(a,n),i=1-e,u=Object(ut.a)(Object(xt.a)(Object(o.a)(Object(Ne.a)(s,0,1,"float32",r),i)),i);return Object(k.a)(a,u)}});function Vn(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Wn(t,e,n){const r=1-t%2,a=new Float32Array(t);for(let s=0;s<t;++s){const i=2*Math.PI*s/(t+r-1);a[s]=e-n*Math.cos(i)}return Object(pn.a)(a,"float32")}const Un=async function(t,e,n=1){const r=Object(x.a)(t,"predictions","inTopK"),a=Object(x.a)(e,"targets","inTopK");Object(E.b)(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Object(E.b)(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),Object(E.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object(E.b)(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);const i=await r.data(),o=await a.data(),[u,c]=[i.length/s,s],l=Object(E.o)("bool",u);for(let d=0;d<u;d++){const t=d*c,e=i.subarray(t,t+c),r=[];for(let n=0;n<e.length;n++)r.push({value:e[n],index:n});r.sort((t,e)=>e.value-t.value),l[d]=0;for(let a=0;a<n;a++)if(r[a].index===o[d]){l[d]=1;break}}return t!==r&&r.dispose(),e!==a&&a.dispose(),Object(hn.a)(l,a.shape,"bool")};var Kn=n("U45G"),Gn=n("Um8L"),Hn=n("D2/b"),qn=n("c9N1"),Xn=n("uBja"),Yn=n("R0ls");const Jn=Object(j.b)({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l}){if(c=c||"linear",!1===Object(Yn.d)(rt.a.state.gradientDepth,c)){let d=Object(H.a)(t,e,n,r,a,s,i);return null!=u&&(d=Object(o.a)(d,u)),Object(Yn.a)(d,c,l)}const d=Object(x.a)(t,"x","conv2d"),h=Object(x.a)(e,"filter","conv2d");let p=d,f=!1;3===d.rank&&(f=!0,p=Object(st.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),E.b(4===p.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+p.rank+"."),E.b(4===h.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+h.rank+"."),null!=i&&E.b(E.v(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),E.b(p.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`),E.b(Xn.h(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),E.b("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const m=Xn.a(p.shape,h.shape,n,s,r,i);let b,g;null!=u&&(b=Object(x.a)(u,"bias","fused conv2d"),[b]=Object(Fn.makeTypesMatch)(b,d),Gn.a(m.outShape,b.shape)),null!=l&&(g=Object(x.a)(l,"prelu weights","fused conv2d"));const y=(t,e)=>{const[a,i,o,u]=e,l=Object(Yn.c)(t,o,c);E.b(Xn.i(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const d=[Object(qn.a)(i.shape,l,a,n,r),Object(Hn.a)(i,l,a.shape,n,r)];if(null!=u){const t=Object(Yn.b)(u,l);d.push(t)}return d},v=t=>t.fusedConv2d({input:p,filter:h,convInfo:m,bias:b,activation:c,preluActivationWeights:g}),O={x:p,filter:h,bias:b,preluActivationWeights:g},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c};if(null==u){return Object(Kn.a)((t,e,n)=>{let r=rt.a.runKernelFunc(v,O,null,at.gb,w);return n([e,t,r]),f&&(r=Object(st.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}})(p,h)}return Object(Kn.a)((t,e,n,r)=>{let a=rt.a.runKernelFunc(v,O,null,at.gb,w);return r([e,t,a,n]),f&&(a=Object(st.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}})(p,h,b)}});var Zn=n("aSZd"),Qn=n("jLCh");const tr=Object(j.b)({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l}){if(!1===Object(Yn.d)(rt.a.state.gradientDepth,c)){let d=Object(nt.a)(t,e,n,r,a,s,i);return null!=u&&(d=Object(o.a)(d,u)),Object(Yn.a)(d,c,l)}const d=Object(x.a)(t,"x","depthwiseConv2d"),h=Object(x.a)(e,"filter","depthwiseConv2d");let p=d,f=!1;3===d.rank&&(f=!0,p=Object(st.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),E.b(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),E.b(4===h.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),E.b(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null==s&&(s=[1,1]),E.b(Xn.h(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=i&&E.b(E.v(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const m=Xn.a(p.shape,h.shape,n,s,r,i,!0);let b,g;null!=u&&(b=Object(x.a)(u,"bias","fused conv2d"),[b]=Object(Fn.makeTypesMatch)(b,d),Gn.a(m.outShape,b.shape)),null!=l&&(g=Object(x.a)(l,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{E.b(Xn.i(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[a,o,u,l]=e,d=Object(Yn.c)(t,u,c),h=Object(Qn.a)(o.shape,d,a,n,r,s,i),p=Object(Zn.a)(o,d,a.shape,n,r,s,i);if(null!=l){return[h,p,Object(Yn.b)(b,d)]}return[h,p]},v=t=>t.fusedDepthwiseConv2D({input:p,filter:h,convInfo:m,bias:b,activation:c,preluActivationWeights:g}),O={x:p,filter:h,bias:b,preluActivationWeights:g},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c};if(null==u){return Object(Kn.a)((t,e,n)=>{let r=rt.a.runKernelFunc(v,O,null,at.hb,w);return n([e,t,r]),f&&(r=Object(st.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}})(p,h)}return Object(Kn.a)((t,e,n,r)=>{let a=rt.a.runKernelFunc(v,O,null,at.hb,w);return r([e,t,a,n]),f&&(a=Object(st.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}})(p,h,b)}});const er=Object(j.b)({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i}){if(!1===Object(Yn.d)(rt.a.state.gradientDepth,s)){let u=Object(w.a)(t,e,n,r);return null!=a&&(u=Object(o.a)(u,a)),Object(Yn.a)(u,s,i)}let u=Object(x.a)(t,"a","fused matMul"),c=Object(x.a)(e,"b","fused matMul");[u,c]=Object(Fn.makeTypesMatch)(u,c);const l=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),b=E.N(f),g=E.N(m);E.b(u.rank>=2&&c.rank>=2&&u.rank===c.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${c.rank}.`),E.b(E.a(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${u.shape} and `+c.shape+" must match."),E.b(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${r} must match.`);const y=u.shape.slice(0,-2).concat([h,p]),v=n?Object(st.a)(u,[b,l,h]):Object(st.a)(u,[b,h,l]),O=r?Object(st.a)(c,[g,p,d]):Object(st.a)(c,[g,d,p]);let k,j;null!=a&&(k=Object(x.a)(a,"bias","fused matMul"),[k]=Object(Fn.makeTypesMatch)(k,u),Gn.a(y,k.shape)),null!=i&&(j=Object(x.a)(i,"prelu weights","fused matMul"));const N=(t,e)=>{const[i,o,u,c]=e,l=Object(Yn.c)(Object(st.a)(t,u.shape),u,s);let d,h;if(n||r?!n&&r?(d=Object(w.a)(l,o,!1,!1),h=Object(w.a)(l,i,!0,!1)):n&&!r?(d=Object(w.a)(o,l,!1,!0),h=Object(w.a)(i,l,!1,!1)):(d=Object(w.a)(o,l,!0,!0),h=Object(w.a)(l,i,!0,!0)):(d=Object(w.a)(l,o,!1,!0),h=Object(w.a)(i,l,!0,!1)),null!=a){return[d,h,Object(Yn.b)(c,l)]}return[d,h]},S=t=>t.fusedBatchMatMul({a:v,b:O,transposeA:n,transposeB:r,bias:k,activation:s,preluActivationWeights:j}),I={a:v,b:O,bias:k,preluActivationWeights:j},C={transposeA:n,transposeB:r,activation:s};if(null==a){return Object(Kn.a)((t,e,n)=>{const r=rt.a.runKernelFunc(S,I,null,at.Tc,C);return n([t,e,r]),{value:Object(st.a)(r,y),gradFunc:N}})(v,O)}return Object(Kn.a)((t,e,n,r)=>{const a=rt.a.runKernelFunc(S,I,null,at.Tc,C);return r([t,e,a,n]),{value:Object(st.a)(a,y),gradFunc:N}})(v,O,k)}});const nr=Object(j.b)({hammingWindow_:function(t){return Wn(t,.54,.46)}});const rr=Object(j.b)({hannWindow_:function(t){return Wn(t,.5,.5)}});const ar=Object(j.b)({frame_:function(t,e,n,r=!1,a=0){let s=0;const i=[];for(;s+e<=t.size;)i.push(Object(S.a)(t,s,e)),s+=n;if(r)for(;s<t.size;){const r=s+e-t.size,o=Object(O.a)([Object(S.a)(t,s,e-r),Object(vt.a)([r],a)]);i.push(o),s+=n}return 0===i.length?mn([],[0,e]):Object(st.a)(Object(O.a)(i),[i.length,e])}});const sr=Object(j.b)({stft_:function(t,e,n,r,a=rr){null==r&&(r=Vn(e));const s=ar(t,e,n),i=Object(k.a)(s,a(e)),o=[];for(let u=0;u<s.shape[0];u++)o.push(Object(en.a)(Object(S.a)(i,[u,0],[1,e]),r));return Object(O.a)(o)}});const ir=Object(j.b)({cropAndResize_:function(t,e,n,r,a,s){const i=Object(x.a)(t,"image","cropAndResize"),o=Object(x.a)(e,"boxes","cropAndResize","float32"),u=Object(x.a)(n,"boxInd","cropAndResize","int32");a=a||"bilinear",s=s||0;const c=o.shape[0];E.b(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),E.b(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),E.b(1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),E.b(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),E.b(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),E.b("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);const l={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return rt.a.runKernelFunc(t=>t.cropAndResize(i,o,u,r,a,s),l,null,at.I,d)}});const or=Object(j.b)({flipLeftRight_:function(t){const e=Object(x.a)(t,"image","flipLeftRight","float32");E.b(4===e.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return rt.a.runKernel(at.bb,n,{})}});const ur=Object(j.b)({rotateWithOffset_:function(t,e,n=0,r=.5){const a=Object(x.a)(t,"image","rotateWithOffset","float32");E.b(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const s={image:a},i={radians:e,fillValue:n,center:r};return rt.a.runKernel(at.nc,s,i)}});function cr(t,e,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=t.shape[0];return n=Math.min(n,i),E.b(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),E.b(2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),E.b(4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1]),E.b(1===e.rank,()=>"scores must be a 1D tensor"),E.b(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+e.shape[0]),E.b(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const lr=Object(j.b)({nonMaxSuppression_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(x.a)(t,"boxes","nonMaxSuppression"),i=Object(x.a)(e,"scores","nonMaxSuppression"),o=cr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return rt.a.runKernelFunc(t=>t.nonMaxSuppression(s,i,n,r,a),{boxes:s,scores:i},null,at.Rb,u)}});var dr=n("g4m1");const hr=async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(x.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(x.a)(e,"scores","nonMaxSuppressionAsync"),o=cr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),c=u[0],l=u[1],d=Object(dr.a)(c,l,n,r,a);return s!==t&&s.dispose(),i!==e&&i.dispose(),d};const pr=Object(j.b)({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(x.a)(t,"boxes","nonMaxSuppression"),o=Object(x.a)(e,"scores","nonMaxSuppression"),u=cr(i,o,n,r,a,s),c={boxes:i,scores:o},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=rt.a.runKernel(at.Tb,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}});const fr=async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(x.a)(t,"boxes","nonMaxSuppressionAsync"),o=Object(x.a)(e,"scores","nonMaxSuppressionAsync"),u=cr(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),l=c[0],d=c[1],h=Object(dr.c)(l,d,n,r,a,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),h};const mr=Object(j.b)({nonMaxSuppressionPadded_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(x.a)(t,"boxes","nonMaxSuppression"),o=Object(x.a)(e,"scores","nonMaxSuppression"),u=cr(i,o,n,r,a,null),c={boxes:i,scores:o},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=rt.a.runKernel(at.Sb,c,l);return{selectedIndices:d[0],validOutputs:d[1]}}});const br=async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(x.a)(t,"boxes","nonMaxSuppressionAsync"),o=Object(x.a)(e,"scores","nonMaxSuppressionAsync"),u=cr(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),f=Object(dr.b)(h,p,c,l,d,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),f};var gr=n("c/ib"),yr=n("D4ac");const vr=Object(j.b)({bandPart_:function(t,e,n){Object(E.b)(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),Object(E.b)(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(x.a)(t,"a","bandPart");Object(E.b)(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[s,i]=r.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=s),n<0&&(n=i);const o=Object(st.a)(Object(Se.a)(0,s,1,"int32"),[-1,1]),u=Object(Se.a)(0,i,1,"int32"),c=Object(ee.a)(o,u),l=Object(Lt.a)(Object(Et.a)(c,Object(ze.a)(+e,"int32")),Object(jt.a)(c,Object(ze.a)(-n,"int32"))),d=Object(Cn.a)([s,i],r.dtype);return Object(st.a)(Object(on.a)(Object(jn.a)(Object(st.a)(r,[-1,s,i])).map(t=>Object(Sn.a)(l,t,d))),a)}});const xr=Object(j.b)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Object(E.b)(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)Object(E.b)(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=Object(nn.a)(t,t.shape[0],0).map(t=>Object(sn.a)(t,[0]));Object(E.b)(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let a=0;a<t.length;++a)n.push(rt.a.tidy(()=>{let t=r[a];if(a>0)for(let e=0;e<a;++e){const r=Object(k.a)(Object(ln.a)(Object(k.a)(n[e],t)),n[e]);t=Object(ee.a)(t,r)}return Object(ut.a)(t,Object(_n.a)(t,"euclidean"))}));return e?Object(on.a)(n,0):n}});var Or=n("wE5H");function wr(t,e=!1){return rt.a.tidy(()=>{Object(E.b)(2===t.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let a=yt(n),s=Object(B.a)(t);const i=mn([[1]],[1,1]);let o=Object(B.a)(i);const u=n>=r?r:n;for(let t=0;t<u;++t){const e=s,u=o,c=a;[o,s,a]=rt.a.tidy(()=>{const e=Object(S.a)(s,[t,t],[n-t,1]),u=Object(_n.a)(e),c=Object(S.a)(s,[t,t],[1,1]),l=Object(Sn.a)(Object(kt.a)(c,0),mn([[-1]]),mn([[1]])),d=Object(ee.a)(c,Object(k.a)(l,u)),h=Object(ut.a)(e,d);o=1===h.shape[0]?Object(B.a)(i):Object(O.a)([i,Object(S.a)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Object(se.a)(Object(ut.a)(Object(w.a)(l,d),u)),f=Object(S.a)(s,[t,0],[n-t,r]),m=Object(k.a)(p,o),b=Object($n.a)(o);if(0===t)s=Object(ee.a)(f,Object(w.a)(m,Object(w.a)(b,f)));else{const e=Object(ee.a)(f,Object(w.a)(m,Object(w.a)(b,f)));s=Object(O.a)([Object(S.a)(s,[0,0],[t,r]),e],0)}const g=Object($n.a)(m),y=Object(S.a)(a,[0,t],[n,a.shape[1]-t]);if(0===t)a=Object(ee.a)(y,Object(w.a)(Object(w.a)(y,o),g));else{const e=Object(ee.a)(y,Object(w.a)(Object(w.a)(y,o),g));a=Object(O.a)([Object(S.a)(a,[0,0],[n,t]),e],1)}return[o,s,a]}),Object(Or.d)([e,u,c])}return!e&&n>r&&(a=Object(S.a)(a,[0,0],[n,r]),s=Object(S.a)(s,[0,0],[r,r])),[a,s]})}const kr=Object(j.b)({qr_:function(t,e=!1){if(Object(E.b)(t.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+t.rank),2===t.rank)return wr(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=Object(jn.a)(Object(st.a)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),a=[],s=[];r.forEach(t=>{const[n,r]=wr(t,e);a.push(n),s.push(r)});return[Object(st.a)(Object(on.a)(a,0),t.shape),Object(st.a)(Object(on.a)(s,0),t.shape)]}}});var jr=n("V+B2");const Nr=Object(j.b)({computeWeightedLoss_:function(t,e,n=jr.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(x.a)(t,"losses","computeWeightedLoss");let a=null;null!=e&&(a=Object(x.a)(e,"weights","computeWeightedLoss"));const s=null==a?r:Object(k.a)(r,a);if(n===jr.a.NONE)return s;if(n===jr.a.SUM)return Object(ln.a)(s);if(n===jr.a.MEAN){if(null==a)return Object(qt.a)(s);{const t=r.size/a.size,e=Object(ut.a)(Object(ln.a)(s),Object(ln.a)(a));return t>1?Object(ut.a)(e,Object(ze.a)(t)):e}}if(n===jr.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(ut.a)(Object(ln.a)(s),Object(ze.a)(r.size));{const t=Object(k.a)(a,Object(ue.a)(r.shape)),e=Object(M.a)(Object(ln.a)(Object(ie.a)(t,Object(ze.a)(0))),"float32");return Object(ut.a)(Object(ln.a)(s),e)}}throw Error("Unknown reduction: "+n)}});const Sr=Object(j.b)({absoluteDifference_:function(t,e,n,r=jr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(x.a)(t,"labels","absoluteDifference"),i=Object(x.a)(e,"predictions","absoluteDifference");let o=null;null!=n&&(o=Object(x.a)(n,"weights","absoluteDifference")),Object(E.e)(s.shape,i.shape,"Error in absoluteDifference: ");const u=Object(a.a)(Object(ee.a)(s,i));return Nr(u,o,r)}});const Ir=Object(j.b)({cosineDistance_:function(t,e,n,r,a=jr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(x.a)(t,"labels","cosineDistance"),i=Object(x.a)(e,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(x.a)(r,"weights","cosineDistance")),Object(E.e)(s.shape,i.shape,"Error in cosineDistance: ");const u=Object(ze.a)(1),c=Object(ee.a)(u,Object(ln.a)(Object(k.a)(s,i),n,!0));return Nr(c,o,a)}});const Cr=Object(j.b)({hingeLoss_:function(t,e,n,r=jr.a.SUM_BY_NONZERO_WEIGHTS){let a=Object(x.a)(t,"labels","hingeLoss");const s=Object(x.a)(e,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(x.a)(n,"weights","hingeLoss")),Object(E.e)(a.shape,s.shape,"Error in hingeLoss: ");const o=Object(ze.a)(1);a=Object(ee.a)(Object(k.a)(Object(ze.a)(2),a),o);const u=Object(Te.a)(Object(ee.a)(o,Object(k.a)(a,s)));return Nr(u,i,r)}});const Tr=Object(j.b)({huberLoss_:function(t,e,n,r=1,s=jr.a.SUM_BY_NONZERO_WEIGHTS){const i=Object(x.a)(t,"labels","huberLoss"),u=Object(x.a)(e,"predictions","huberLoss");let c=null;null!=n&&(c=Object(x.a)(n,"weights","huberLoss")),Object(E.e)(i.shape,u.shape,"Error in huberLoss: ");const l=Object(ze.a)(r),d=Object(a.a)(Object(ee.a)(u,i)),h=Object(Yt.a)(d,l),p=Object(ee.a)(d,h),f=Object(o.a)(Object(k.a)(Object(ze.a)(.5),Object(te.a)(h)),Object(k.a)(l,p));return Nr(f,c,s)}});const Ar=Object(j.b)({logLoss_:function(t,e,n,r=1e-7,a=jr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(x.a)(t,"labels","logLoss"),i=Object(x.a)(e,"predictions","logLoss");let u=null;null!=n&&(u=Object(x.a)(n,"weights","logLoss")),Object(E.e)(s.shape,i.shape,"Error in logLoss: ");const c=Object(ze.a)(1),l=Object(ze.a)(r),d=Object(se.a)(Object(k.a)(s,Object(_t.a)(Object(o.a)(i,l)))),h=Object(k.a)(Object(ee.a)(c,s),Object(_t.a)(Object(o.a)(Object(ee.a)(c,i),l))),p=Object(ee.a)(d,h);return Nr(p,u,a)}});const Er=Object(j.b)({meanSquaredError_:function(t,e,n,r=jr.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(x.a)(t,"labels","meanSquaredError"),s=Object(x.a)(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(x.a)(n,"weights","meanSquaredError")),Object(E.e)(a.shape,s.shape,"Error in meanSquaredError: ");const o=Object(an.a)(a,s);return Nr(o,i,r)}});const Rr=Object(j.b)({sigmoidCrossEntropy_:function(t,e,n,r=0,s=jr.a.SUM_BY_NONZERO_WEIGHTS){let i=Object(x.a)(t,"multiClassLabels","sigmoidCrossEntropy");const u=Object(x.a)(e,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(x.a)(n,"weights","sigmoidCrossEntropy")),Object(E.e)(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Object(ze.a)(r),e=Object(ze.a)(1),n=Object(ze.a)(.5);i=Object(o.a)(Object(k.a)(i,Object(ee.a)(e,t)),Object(k.a)(n,t))}const l=function(t,e){const n=Object(x.a)(t,"labels","sigmoidCrossEntropyWithLogits"),r=Object(x.a)(e,"logits","sigmoidCrossEntropyWithLogits");Object(E.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Object(Te.a)(r),i=Object(k.a)(r,n),u=Object(Ft.a)(Object(ft.a)(Object(se.a)(Object(a.a)(r))));return Object(o.a)(Object(ee.a)(s,i),u)}(i,u);return Nr(l,c,s)}});const $r=Object(j.b)({softmaxCrossEntropy_:function(t,e,n,r=0,a=jr.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(x.a)(t,"onehotLabels","softmaxCrossEntropy");const i=Object(x.a)(e,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=Object(x.a)(n,"weights","softmaxCrossEntropy")),Object(E.e)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Object(ze.a)(r),e=Object(ze.a)(1),n=Object(ze.a)(s.shape[1]);s=Object(o.a)(Object(k.a)(s,Object(ee.a)(e,t)),Object(ut.a)(t,n))}const c=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was `+n);return Object(Kn.a)((t,e,r)=>{const a=Object(zt.a)(e,[n],!0),s=Object(ee.a)(Object(M.a)(e,"float32"),a);r([t,s]);const i=Object(se.a)(Object(k.a)(s,t));return{value:Object(ln.a)(i,[n]),gradFunc:(t,e)=>{const[r,a]=e,s=Object(Qt.e)(t.shape,[n]);return[Object(k.a)(Object(st.a)(t,s),Object(ee.a)(Object(M.a)(r,"float32"),Object(ft.a)(a))),Object(k.a)(Object(st.a)(t,s),Object(ee.a)(Object(ft.a)(a),Object(M.a)(r,"float32")))]}}})(t,e)}(s,i);return Nr(c,u,a)}}),_r={fft:Ze.a,ifft:Qe.a,rfft:en.a,irfft:tn.a},Fr={hammingWindow:nr,hannWindow:rr,frame:ar,stft:sr},Dr={flipLeftRight:or,resizeNearestNeighbor:yr.a,resizeBilinear:gr.a,rotateWithOffset:ur,cropAndResize:ir,nonMaxSuppression:lr,nonMaxSuppressionAsync:hr,nonMaxSuppressionWithScore:pr,nonMaxSuppressionWithScoreAsync:fr,nonMaxSuppressionPadded:mr,nonMaxSuppressionPaddedAsync:br},Mr={bandPart:vr,gramSchmidt:xr,qr:kr},zr={absoluteDifference:Sr,computeWeightedLoss:Nr,cosineDistance:Ir,hingeLoss:Cr,huberLoss:Tr,logLoss:Ar,meanSquaredError:Er,sigmoidCrossEntropy:Rr,softmaxCrossEntropy:$r}},FZCF:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({conv3d_:function(t,e,n,u,l="NDHWC",d=[1,1,1]){const h=Object(s.a)(t,"x","conv3d"),p=Object(s.a)(e,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===f.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`),i.b(5===p.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+p.rank+"."),i.b(f.shape[4]===p.shape[3],()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${p.shape[3]}.`),i.b(Object(o.h)(n,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`),i.b("NDHWC"===l,()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`);const b={x:f,filter:p},g={strides:n,pad:u,dataFormat:l,dilations:d},y=r.a.runKernelFunc((t,e)=>{const r=o.b(f.shape,p.shape,n,d,u),a=t.conv3d(f,p,r);return e([f,p]),a},b,null,a.D,g);return m?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},Fjpt:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sqrt_:function(t){const e=Object(s.a)(t,"x","sqrt"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.sqrt(e);return n([e]),r},n,null,a.Dc)}})},G6IW:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({expm1_:function(t){const e=Object(s.a)(t,"x","expm1"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.expm1(e);return n([e]),r},n,null,a.Y)}})},Grcp:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80");const o=Object(i.b)({fft_:function(t){Object(s.b)("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return r.a.runKernelFunc(e=>{const n=t.shape[t.shape.length-1],r=t.size/n,a=t.as2D(r,n);return e.fft(a).reshape(t.shape)},e,null,a.Z)}})},"HaE+":function(t,e,n){"use strict";function r(t,e,n,r,a,s,i){try{var o=t[s](i),u=o.value}catch(c){return void n(c)}o.done?e(u):Promise.resolve(u).then(r,a)}function a(t){return function(){var e=this,n=arguments;return new Promise((function(a,s){var i=t.apply(e,n);function o(t){r(i,a,s,o,u,"next",t)}function u(t){r(i,a,s,o,u,"throw",t)}o(void 0)}))}}n.d(e,"a",(function(){return a}))},Hfat:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sign_:function(t){const e=Object(s.a)(t,"x","sign"),n={x:e};return r.a.runKernelFunc(t=>t.sign(e),n,null,a.uc)}})},HmhO:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("NuWS"),o=n("VO80"),u=n("yRKQ");const c=Object(o.b)({cumsum_:function(t,e=0,n=!1,o=!1){const c=Object(s.a)(t,"x","cumsum"),l={x:c},d={axis:e,exclusive:n,reverse:o};return r.a.runKernelFunc((t,r)=>{const a=Object(i.f)([e],c.rank);let s=c;null!=a&&(s=Object(u.a)(c,a));const l=Object(i.g)(1,c.rank)[0];let d=t.cumsum(s,l,n,o);if(r([c]),null!=a){const t=Object(i.h)(a);d=Object(u.a)(d,t)}return d},l,null,a.J,d)}})},I79q:function(t,e,n){"use strict";var r,a,s,i,o;n.d(e,"a",(function(){return r})),n.d(e,"c",(function(){return c})),n.d(e,"b",(function(){return l})),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(a||(a={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(s||(s={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(i||(i={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function c(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return u[t][e]}function l(t){return c(t,"int32")}},"Ig+c":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({asin_:function(t){const e=Object(s.a)(t,"x","asin"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.asin(e);return n([e]),r},n,null,a.j)}})},JLAb:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({imag_:function(t){const e=Object(s.a)(t,"input","imag"),n={input:e};return r.a.runKernelFunc(t=>t.imag(e),n,null,a.ob)}})},Kajj:function(t,e,n){"use strict";(function(t){var e=n("ftYm"),r=n("szMd");const a=Object(r.c)();a.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>e.isBrowser()),a.registerFlag("IS_NODE",()=>"undefined"!==typeof t&&"undefined"!==typeof t.versions&&"undefined"!==typeof t.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1)}).call(this,n("8oxB"))},KdhW:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},Kfzt:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("o/e8"),a=n("atXS"),s=n("SHv8"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({dot_:function(t,e){const n=Object(r.a)(t,"t1","dot"),i=Object(r.a)(e,"t2","dot");a.b((1===n.rank||2===n.rank)&&(1===i.rank||2===i.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`);const u=1===n.rank?n.size:n.shape[1],c=1===i.rank?i.size:i.shape[0];if(a.b(u===c,()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${c}.`),1===n.rank&&1===i.rank){const t=Object(o.a)(n,[1,-1]),e=Object(o.a)(i,[-1,1]),r=Object(s.a)(t,e);return Object(o.a)(r,[])}if(1===n.rank&&2===i.rank){const t=Object(o.a)(n,[1,-1]),e=Object(o.a)(i,[i.shape[0],i.shape[1]]),r=Object(s.a)(t,e);return Object(o.a)(r,[r.size])}if(2===n.rank&&1===i.rank){const t=Object(o.a)(i,[-1,1]),e=Object(s.a)(n,t);return Object(o.a)(e,[e.size])}{const t=Object(o.a)(i,[i.shape[0],i.shape[1]]);return Object(s.a)(n,t)}}})},L7Hl:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({step_:function(t,e=0){const n=Object(s.a)(t,"x","step"),i={x:n},o={alpha:e};return r.a.runKernelFunc(t=>t.step(n,e),i,null,a.Gc,o)}})},"Lbv+":function(t,e,n){"use strict";n.r(e);var r=n("o0o1"),a=n.n(r),s=n("HaE+"),i=n("8Kt/"),o=n.n(i),u=n("q1tI"),c=n.n(u),l=n("srVO"),d=n("OlX0"),h=n("q5K1"),p=n("MX0m"),f=n.n(p);function m(t,e){if(e&&t.current&&e.current){var n=t.current;return n.height=e.current.videoHeight,n.width=e.current.videoWidth,n.getContext("2d").drawImage(e.current,0,0,e.current.videoWidth,e.current.videoHeight),n}}function b(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function g(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function y(t,e,n){return e&&g(t.prototype,e),n&&g(t,n),t}var v=["black stork","ibex","buffalo","dingo","sheep","llama","gazelle","impala","fox","bear","monkey","person"],x=function(){function t(){b(this,t)}return y(t,null,[{key:"isVerifiedAnimal",value:function(t){return v.find((function(e){return t.includes(e)}))}}]),t}();var O=function(){function t(e,n){b(this,t),this.recentFrames=e,this.baseTime=n}return y(t,[{key:"checkWildlifeExistenceInEveryFrame",value:function(t){var e=this;return this.recentFrames.filter((function(n){return n.time>e.baseTime-t})).every((function(t){return null!==t.className}))}},{key:"checkWildlifeExistenceInSomeFrame",value:function(t){var e=this;return this.recentFrames.filter((function(n){return n.time>e.baseTime-t})).some((function(t){return null!==t.className}))}}]),t}(),w=Number(1e3);function k(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var j=n("CtZu"),N=n("+hG3");const S={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};async function I(t={}){if(null==N)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const e=t.base||"lite_mobilenet_v2",n=t.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(e))throw new Error("ObjectDetection constructed with invalid base model "+e+". Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.");const r=new C(e,n);return await r.load(),r}class C{constructor(t,e){this.modelPath=e||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(t)}/model.json`}getPrefix(t){return"lite_mobilenet_v2"===t?"ssd"+t:"ssd_"+t}async load(){this.model=await j.c(this.modelPath);const t=N.zeros([1,300,300,3],"int32"),e=await this.model.executeAsync(t);await Promise.all(e.map(t=>t.data())),e.map(t=>t.dispose()),t.dispose()}async infer(t,e,n){const r=N.tidy(()=>(t instanceof N.Tensor||(t=N.browser.fromPixels(t)),t.expandDims(0))),a=r.shape[1],s=r.shape[2],i=await this.model.executeAsync(r),o=i[0].dataSync(),u=i[1].dataSync();r.dispose(),N.dispose(i);const[c,l]=this.calculateMaxScores(o,i[0].shape[1],i[0].shape[2]),d=N.getBackend();N.setBackend("cpu");const h=N.tidy(()=>{const t=N.tensor2d(u,[i[1].shape[1],i[1].shape[3]]);return N.image.nonMaxSuppression(t,c,e,n,n)}),p=h.dataSync();return h.dispose(),N.setBackend(d),this.buildDetectedObjects(s,a,u,c,p,l)}buildDetectedObjects(t,e,n,r,a,s){const i=a.length,o=[];for(let u=0;u<i;u++){const i=[];for(let t=0;t<4;t++)i[t]=n[4*a[u]+t];const c=i[0]*e,l=i[1]*t,d=i[2]*e,h=i[3]*t;i[0]=l,i[1]=c,i[2]=h-l,i[3]=d-c,o.push({bbox:i,class:S[s[a[u]]+1].displayName,score:r[a[u]]})}return o}calculateMaxScores(t,e,n){const r=[],a=[];for(let s=0;s<e;s++){let e=Number.MIN_VALUE,i=-1;for(let r=0;r<n;r++)t[s*n+r]>e&&(e=t[s*n+r],i=r);r[s]=e,a[s]=i}return[r,a]}async detect(t,e=20,n=.5){return this.infer(t,e,n)}dispose(){null!=this.model&&this.model.dispose()}}function T(t,e,n,r){return new(n||(n=Promise))((function(a,s){function i(t){try{u(r.next(t))}catch(t){s(t)}}function o(t){try{u(r.throw(t))}catch(t){s(t)}}function u(t){t.done?a(t.value):new n((function(e){e(t.value)})).then(i,o)}u((r=r.apply(t,e||[])).next())}))}function A(t,e){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(a=(a=i.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=e.call(t,i)}catch(t){s=[6,t],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}var E={0:"tench, Tinca tinca",1:"goldfish, Carassius auratus",2:"great white shark, white shark, man-eater, man-eating shark, Carcharodon carcharias",3:"tiger shark, Galeocerdo cuvieri",4:"hammerhead, hammerhead shark",5:"electric ray, crampfish, numbfish, torpedo",6:"stingray",7:"cock",8:"hen",9:"ostrich, Struthio camelus",10:"brambling, Fringilla montifringilla",11:"goldfinch, Carduelis carduelis",12:"house finch, linnet, Carpodacus mexicanus",13:"junco, snowbird",14:"indigo bunting, indigo finch, indigo bird, Passerina cyanea",15:"robin, American robin, Turdus migratorius",16:"bulbul",17:"jay",18:"magpie",19:"chickadee",20:"water ouzel, dipper",21:"kite",22:"bald eagle, American eagle, Haliaeetus leucocephalus",23:"vulture",24:"great grey owl, great gray owl, Strix nebulosa",25:"European fire salamander, Salamandra salamandra",26:"common newt, Triturus vulgaris",27:"eft",28:"spotted salamander, Ambystoma maculatum",29:"axolotl, mud puppy, Ambystoma mexicanum",30:"bullfrog, Rana catesbeiana",31:"tree frog, tree-frog",32:"tailed frog, bell toad, ribbed toad, tailed toad, Ascaphus trui",33:"loggerhead, loggerhead turtle, Caretta caretta",34:"leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea",35:"mud turtle",36:"terrapin",37:"box turtle, box tortoise",38:"banded gecko",39:"common iguana, iguana, Iguana iguana",40:"American chameleon, anole, Anolis carolinensis",41:"whiptail, whiptail lizard",42:"agama",43:"frilled lizard, Chlamydosaurus kingi",44:"alligator lizard",45:"Gila monster, Heloderma suspectum",46:"green lizard, Lacerta viridis",47:"African chameleon, Chamaeleo chamaeleon",48:"Komodo dragon, Komodo lizard, dragon lizard, giant lizard, Varanus komodoensis",49:"African crocodile, Nile crocodile, Crocodylus niloticus",50:"American alligator, Alligator mississipiensis",51:"triceratops",52:"thunder snake, worm snake, Carphophis amoenus",53:"ringneck snake, ring-necked snake, ring snake",54:"hognose snake, puff adder, sand viper",55:"green snake, grass snake",56:"king snake, kingsnake",57:"garter snake, grass snake",58:"water snake",59:"vine snake",60:"night snake, Hypsiglena torquata",61:"boa constrictor, Constrictor constrictor",62:"rock python, rock snake, Python sebae",63:"Indian cobra, Naja naja",64:"green mamba",65:"sea snake",66:"horned viper, cerastes, sand viper, horned asp, Cerastes cornutus",67:"diamondback, diamondback rattlesnake, Crotalus adamanteus",68:"sidewinder, horned rattlesnake, Crotalus cerastes",69:"trilobite",70:"harvestman, daddy longlegs, Phalangium opilio",71:"scorpion",72:"black and gold garden spider, Argiope aurantia",73:"barn spider, Araneus cavaticus",74:"garden spider, Aranea diademata",75:"black widow, Latrodectus mactans",76:"tarantula",77:"wolf spider, hunting spider",78:"tick",79:"centipede",80:"black grouse",81:"ptarmigan",82:"ruffed grouse, partridge, Bonasa umbellus",83:"prairie chicken, prairie grouse, prairie fowl",84:"peacock",85:"quail",86:"partridge",87:"African grey, African gray, Psittacus erithacus",88:"macaw",89:"sulphur-crested cockatoo, Kakatoe galerita, Cacatua galerita",90:"lorikeet",91:"coucal",92:"bee eater",93:"hornbill",94:"hummingbird",95:"jacamar",96:"toucan",97:"drake",98:"red-breasted merganser, Mergus serrator",99:"goose",100:"black swan, Cygnus atratus",101:"tusker",102:"echidna, spiny anteater, anteater",103:"platypus, duckbill, duckbilled platypus, duck-billed platypus, Ornithorhynchus anatinus",104:"wallaby, brush kangaroo",105:"koala, koala bear, kangaroo bear, native bear, Phascolarctos cinereus",106:"wombat",107:"jelly fish",108:"sea anemone, anemone",109:"brain coral",110:"flatworm, platyhelminth",111:"nematode, nematode worm, roundworm",112:"conch",113:"snail",114:"slug",115:"sea slug, nudibranch",116:"chiton, coat-of-mail shell, sea cradle, polyplacophore",117:"chambered nautilus, pearly nautilus, nautilus",118:"Dungeness crab, Cancer magister",119:"rock crab, Cancer irroratus",120:"fiddler crab",121:"king crab, Alaska crab, Alaskan king crab, Alaska king crab, Paralithodes camtschatica",122:"American lobster, Northern lobster, Maine lobster, Homarus americanus",123:"spiny lobster, langouste, rock lobster, crawfish, crayfish, sea crawfish",124:"crayfish, crawfish, crawdad, crawdaddy",125:"hermit crab",126:"isopod",127:"white stork, Ciconia ciconia",128:"black stork, Ciconia nigra",129:"spoonbill",130:"flamingo",131:"little blue heron, Egretta caerulea",132:"American egret, great white heron, Egretta albus",133:"bittern",134:"crane",135:"limpkin, Aramus pictus",136:"European gallinule, Porphyrio porphyrio",137:"American coot, marsh hen, mud hen, water hen, Fulica americana",138:"bustard",139:"ruddy turnstone, Arenaria interpres",140:"red-backed sandpiper, dunlin, Erolia alpina",141:"redshank, Tringa totanus",142:"dowitcher",143:"oystercatcher, oyster catcher",144:"pelican",145:"king penguin, Aptenodytes patagonica",146:"albatross, mollymawk",147:"grey whale, gray whale, devilfish, Eschrichtius gibbosus, Eschrichtius robustus",148:"killer whale, killer, orca, grampus, sea wolf, Orcinus orca",149:"dugong, Dugong dugon",150:"sea lion",151:"Chihuahua",152:"Japanese spaniel",153:"Maltese dog, Maltese terrier, Maltese",154:"Pekinese, Pekingese, Peke",155:"Shih-Tzu",156:"Blenheim spaniel",157:"papillon",158:"toy terrier",159:"Rhodesian ridgeback",160:"Afghan hound, Afghan",161:"basset, basset hound",162:"beagle",163:"bloodhound, sleuthhound",164:"bluetick",165:"black-and-tan coonhound",166:"Walker hound, Walker foxhound",167:"English foxhound",168:"redbone",169:"borzoi, Russian wolfhound",170:"Irish wolfhound",171:"Italian greyhound",172:"whippet",173:"Ibizan hound, Ibizan Podenco",174:"Norwegian elkhound, elkhound",175:"otterhound, otter hound",176:"Saluki, gazelle hound",177:"Scottish deerhound, deerhound",178:"Weimaraner",179:"Staffordshire bullterrier, Staffordshire bull terrier",180:"American Staffordshire terrier, Staffordshire terrier, American pit bull terrier, pit bull terrier",181:"Bedlington terrier",182:"Border terrier",183:"Kerry blue terrier",184:"Irish terrier",185:"Norfolk terrier",186:"Norwich terrier",187:"Yorkshire terrier",188:"wire-haired fox terrier",189:"Lakeland terrier",190:"Sealyham terrier, Sealyham",191:"Airedale, Airedale terrier",192:"cairn, cairn terrier",193:"Australian terrier",194:"Dandie Dinmont, Dandie Dinmont terrier",195:"Boston bull, Boston terrier",196:"miniature schnauzer",197:"giant schnauzer",198:"standard schnauzer",199:"Scotch terrier, Scottish terrier, Scottie",200:"Tibetan terrier, chrysanthemum dog",201:"silky terrier, Sydney silky",202:"soft-coated wheaten terrier",203:"West Highland white terrier",204:"Lhasa, Lhasa apso",205:"flat-coated retriever",206:"curly-coated retriever",207:"golden retriever",208:"Labrador retriever",209:"Chesapeake Bay retriever",210:"German short-haired pointer",211:"vizsla, Hungarian pointer",212:"English setter",213:"Irish setter, red setter",214:"Gordon setter",215:"Brittany spaniel",216:"clumber, clumber spaniel",217:"English springer, English springer spaniel",218:"Welsh springer spaniel",219:"cocker spaniel, English cocker spaniel, cocker",220:"Sussex spaniel",221:"Irish water spaniel",222:"kuvasz",223:"schipperke",224:"groenendael",225:"malinois",226:"briard",227:"kelpie",228:"komondor",229:"Old English sheepdog, bobtail",230:"Shetland sheepdog, Shetland sheep dog, Shetland",231:"collie",232:"Border collie",233:"Bouvier des Flandres, Bouviers des Flandres",234:"Rottweiler",235:"German shepherd, German shepherd dog, German police dog, alsatian",236:"Doberman, Doberman pinscher",237:"miniature pinscher",238:"Greater Swiss Mountain dog",239:"Bernese mountain dog",240:"Appenzeller",241:"EntleBucher",242:"boxer",243:"bull mastiff",244:"Tibetan mastiff",245:"French bulldog",246:"Great Dane",247:"Saint Bernard, St Bernard",248:"Eskimo dog, husky",249:"malamute, malemute, Alaskan malamute",250:"Siberian husky",251:"dalmatian, coach dog, carriage dog",252:"affenpinscher, monkey pinscher, monkey dog",253:"basenji",254:"pug, pug-dog",255:"Leonberg",256:"Newfoundland, Newfoundland dog",257:"Great Pyrenees",258:"Samoyed, Samoyede",259:"Pomeranian",260:"chow, chow chow",261:"keeshond",262:"Brabancon griffon",263:"Pembroke, Pembroke Welsh corgi",264:"Cardigan, Cardigan Welsh corgi",265:"toy poodle",266:"miniature poodle",267:"standard poodle",268:"Mexican hairless",269:"timber wolf, grey wolf, gray wolf, Canis lupus",270:"white wolf, Arctic wolf, Canis lupus tundrarum",271:"red wolf, maned wolf, Canis rufus, Canis niger",272:"coyote, prairie wolf, brush wolf, Canis latrans",273:"dingo, warrigal, warragal, Canis dingo",274:"dhole, Cuon alpinus",275:"African hunting dog, hyena dog, Cape hunting dog, Lycaon pictus",276:"hyena, hyaena",277:"red fox, Vulpes vulpes",278:"kit fox, Vulpes macrotis",279:"Arctic fox, white fox, Alopex lagopus",280:"grey fox, gray fox, Urocyon cinereoargenteus",281:"tabby, tabby cat",282:"tiger cat",283:"Persian cat",284:"Siamese cat, Siamese",285:"Egyptian cat",286:"cougar, puma, catamount, mountain lion, painter, panther, Felis concolor",287:"lynx, catamount",288:"leopard, Panthera pardus",289:"snow leopard, ounce, Panthera uncia",290:"jaguar, panther, Panthera onca, Felis onca",291:"lion, king of beasts, Panthera leo",292:"tiger, Panthera tigris",293:"cheetah, chetah, Acinonyx jubatus",294:"brown bear, bruin, Ursus arctos",295:"American black bear, black bear, Ursus americanus, Euarctos americanus",296:"ice bear, polar bear, Ursus Maritimus, Thalarctos maritimus",297:"sloth bear, Melursus ursinus, Ursus ursinus",298:"mongoose",299:"meerkat, mierkat",300:"tiger beetle",301:"ladybug, ladybeetle, lady beetle, ladybird, ladybird beetle",302:"ground beetle, carabid beetle",303:"long-horned beetle, longicorn, longicorn beetle",304:"leaf beetle, chrysomelid",305:"dung beetle",306:"rhinoceros beetle",307:"weevil",308:"fly",309:"bee",310:"ant, emmet, pismire",311:"grasshopper, hopper",312:"cricket",313:"walking stick, walkingstick, stick insect",314:"cockroach, roach",315:"mantis, mantid",316:"cicada, cicala",317:"leafhopper",318:"lacewing, lacewing fly",319:"dragonfly, darning needle, devil's darning needle, sewing needle, snake feeder, snake doctor, mosquito hawk, skeeter hawk",320:"damselfly",321:"admiral",322:"ringlet, ringlet butterfly",323:"monarch, monarch butterfly, milkweed butterfly, Danaus plexippus",324:"cabbage butterfly",325:"sulphur butterfly, sulfur butterfly",326:"lycaenid, lycaenid butterfly",327:"starfish, sea star",328:"sea urchin",329:"sea cucumber, holothurian",330:"wood rabbit, cottontail, cottontail rabbit",331:"hare",332:"Angora, Angora rabbit",333:"hamster",334:"porcupine, hedgehog",335:"fox squirrel, eastern fox squirrel, Sciurus niger",336:"marmot",337:"beaver",338:"guinea pig, Cavia cobaya",339:"sorrel",340:"zebra",341:"hog, pig, grunter, squealer, Sus scrofa",342:"wild boar, boar, Sus scrofa",343:"warthog",344:"hippopotamus, hippo, river horse, Hippopotamus amphibius",345:"ox",346:"water buffalo, water ox, Asiatic buffalo, Bubalus bubalis",347:"bison",348:"ram, tup",349:"bighorn, bighorn sheep, cimarron, Rocky Mountain bighorn, Rocky Mountain sheep, Ovis canadensis",350:"ibex, Capra ibex",351:"hartebeest",352:"impala, Aepyceros melampus",353:"gazelle",354:"Arabian camel, dromedary, Camelus dromedarius",355:"llama",356:"weasel",357:"mink",358:"polecat, fitch, foulmart, foumart, Mustela putorius",359:"black-footed ferret, ferret, Mustela nigripes",360:"otter",361:"skunk, polecat, wood pussy",362:"badger",363:"armadillo",364:"three-toed sloth, ai, Bradypus tridactylus",365:"orangutan, orang, orangutang, Pongo pygmaeus",366:"gorilla, Gorilla gorilla",367:"chimpanzee, chimp, Pan troglodytes",368:"gibbon, Hylobates lar",369:"siamang, Hylobates syndactylus, Symphalangus syndactylus",370:"guenon, guenon monkey",371:"patas, hussar monkey, Erythrocebus patas",372:"baboon",373:"macaque",374:"langur",375:"colobus, colobus monkey",376:"proboscis monkey, Nasalis larvatus",377:"marmoset",378:"capuchin, ringtail, Cebus capucinus",379:"howler monkey, howler",380:"titi, titi monkey",381:"spider monkey, Ateles geoffroyi",382:"squirrel monkey, Saimiri sciureus",383:"Madagascar cat, ring-tailed lemur, Lemur catta",384:"indri, indris, Indri indri, Indri brevicaudatus",385:"Indian elephant, Elephas maximus",386:"African elephant, Loxodonta africana",387:"lesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens",388:"giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca",389:"barracouta, snoek",390:"eel",391:"coho, cohoe, coho salmon, blue jack, silver salmon, Oncorhynchus kisutch",392:"rock beauty, Holocanthus tricolor",393:"anemone fish",394:"sturgeon",395:"gar, garfish, garpike, billfish, Lepisosteus osseus",396:"lionfish",397:"puffer, pufferfish, blowfish, globefish",398:"abacus",399:"abaya",400:"academic gown, academic robe, judge's robe",401:"accordion, piano accordion, squeeze box",402:"acoustic guitar",403:"aircraft carrier, carrier, flattop, attack aircraft carrier",404:"airliner",405:"airship, dirigible",406:"altar",407:"ambulance",408:"amphibian, amphibious vehicle",409:"analog clock",410:"apiary, bee house",411:"apron",412:"ashcan, trash can, garbage can, wastebin, ash bin, ash-bin, ashbin, dustbin, trash barrel, trash bin",413:"assault rifle, assault gun",414:"backpack, back pack, knapsack, packsack, rucksack, haversack",415:"bakery, bakeshop, bakehouse",416:"balance beam, beam",417:"balloon",418:"ballpoint, ballpoint pen, ballpen, Biro",419:"Band Aid",420:"banjo",421:"bannister, banister, balustrade, balusters, handrail",422:"barbell",423:"barber chair",424:"barbershop",425:"barn",426:"barometer",427:"barrel, cask",428:"barrow, garden cart, lawn cart, wheelbarrow",429:"baseball",430:"basketball",431:"bassinet",432:"bassoon",433:"bathing cap, swimming cap",434:"bath towel",435:"bathtub, bathing tub, bath, tub",436:"beach wagon, station wagon, wagon, estate car, beach waggon, station waggon, waggon",437:"beacon, lighthouse, beacon light, pharos",438:"beaker",439:"bearskin, busby, shako",440:"beer bottle",441:"beer glass",442:"bell cote, bell cot",443:"bib",444:"bicycle-built-for-two, tandem bicycle, tandem",445:"bikini, two-piece",446:"binder, ring-binder",447:"binoculars, field glasses, opera glasses",448:"birdhouse",449:"boathouse",450:"bobsled, bobsleigh, bob",451:"bolo tie, bolo, bola tie, bola",452:"bonnet, poke bonnet",453:"bookcase",454:"bookshop, bookstore, bookstall",455:"bottlecap",456:"bow",457:"bow tie, bow-tie, bowtie",458:"brass, memorial tablet, plaque",459:"brassiere, bra, bandeau",460:"breakwater, groin, groyne, mole, bulwark, seawall, jetty",461:"breastplate, aegis, egis",462:"broom",463:"bucket, pail",464:"buckle",465:"bulletproof vest",466:"bullet train, bullet",467:"butcher shop, meat market",468:"cab, hack, taxi, taxicab",469:"caldron, cauldron",470:"candle, taper, wax light",471:"cannon",472:"canoe",473:"can opener, tin opener",474:"cardigan",475:"car mirror",476:"carousel, carrousel, merry-go-round, roundabout, whirligig",477:"carpenter's kit, tool kit",478:"carton",479:"car wheel",480:"cash machine, cash dispenser, automated teller machine, automatic teller machine, automated teller, automatic teller, ATM",481:"cassette",482:"cassette player",483:"castle",484:"catamaran",485:"CD player",486:"cello, violoncello",487:"cellular telephone, cellular phone, cellphone, cell, mobile phone",488:"chain",489:"chainlink fence",490:"chain mail, ring mail, mail, chain armor, chain armour, ring armor, ring armour",491:"chain saw, chainsaw",492:"chest",493:"chiffonier, commode",494:"chime, bell, gong",495:"china cabinet, china closet",496:"Christmas stocking",497:"church, church building",498:"cinema, movie theater, movie theatre, movie house, picture palace",499:"cleaver, meat cleaver, chopper",500:"cliff dwelling",501:"cloak",502:"clog, geta, patten, sabot",503:"cocktail shaker",504:"coffee mug",505:"coffeepot",506:"coil, spiral, volute, whorl, helix",507:"combination lock",508:"computer keyboard, keypad",509:"confectionery, confectionary, candy store",510:"container ship, containership, container vessel",511:"convertible",512:"corkscrew, bottle screw",513:"cornet, horn, trumpet, trump",514:"cowboy boot",515:"cowboy hat, ten-gallon hat",516:"cradle",517:"crane",518:"crash helmet",519:"crate",520:"crib, cot",521:"Crock Pot",522:"croquet ball",523:"crutch",524:"cuirass",525:"dam, dike, dyke",526:"desk",527:"desktop computer",528:"dial telephone, dial phone",529:"diaper, nappy, napkin",530:"digital clock",531:"digital watch",532:"dining table, board",533:"dishrag, dishcloth",534:"dishwasher, dish washer, dishwashing machine",535:"disk brake, disc brake",536:"dock, dockage, docking facility",537:"dogsled, dog sled, dog sleigh",538:"dome",539:"doormat, welcome mat",540:"drilling platform, offshore rig",541:"drum, membranophone, tympan",542:"drumstick",543:"dumbbell",544:"Dutch oven",545:"electric fan, blower",546:"electric guitar",547:"electric locomotive",548:"entertainment center",549:"envelope",550:"espresso maker",551:"face powder",552:"feather boa, boa",553:"file, file cabinet, filing cabinet",554:"fireboat",555:"fire engine, fire truck",556:"fire screen, fireguard",557:"flagpole, flagstaff",558:"flute, transverse flute",559:"folding chair",560:"football helmet",561:"forklift",562:"fountain",563:"fountain pen",564:"four-poster",565:"freight car",566:"French horn, horn",567:"frying pan, frypan, skillet",568:"fur coat",569:"garbage truck, dustcart",570:"gasmask, respirator, gas helmet",571:"gas pump, gasoline pump, petrol pump, island dispenser",572:"goblet",573:"go-kart",574:"golf ball",575:"golfcart, golf cart",576:"gondola",577:"gong, tam-tam",578:"gown",579:"grand piano, grand",580:"greenhouse, nursery, glasshouse",581:"grille, radiator grille",582:"grocery store, grocery, food market, market",583:"guillotine",584:"hair slide",585:"hair spray",586:"half track",587:"hammer",588:"hamper",589:"hand blower, blow dryer, blow drier, hair dryer, hair drier",590:"hand-held computer, hand-held microcomputer",591:"handkerchief, hankie, hanky, hankey",592:"hard disc, hard disk, fixed disk",593:"harmonica, mouth organ, harp, mouth harp",594:"harp",595:"harvester, reaper",596:"hatchet",597:"holster",598:"home theater, home theatre",599:"honeycomb",600:"hook, claw",601:"hoopskirt, crinoline",602:"horizontal bar, high bar",603:"horse cart, horse-cart",604:"hourglass",605:"iPod",606:"iron, smoothing iron",607:"jack-o'-lantern",608:"jean, blue jean, denim",609:"jeep, landrover",610:"jersey, T-shirt, tee shirt",611:"jigsaw puzzle",612:"jinrikisha, ricksha, rickshaw",613:"joystick",614:"kimono",615:"knee pad",616:"knot",617:"lab coat, laboratory coat",618:"ladle",619:"lampshade, lamp shade",620:"laptop, laptop computer",621:"lawn mower, mower",622:"lens cap, lens cover",623:"letter opener, paper knife, paperknife",624:"library",625:"lifeboat",626:"lighter, light, igniter, ignitor",627:"limousine, limo",628:"liner, ocean liner",629:"lipstick, lip rouge",630:"Loafer",631:"lotion",632:"loudspeaker, speaker, speaker unit, loudspeaker system, speaker system",633:"loupe, jeweler's loupe",634:"lumbermill, sawmill",635:"magnetic compass",636:"mailbag, postbag",637:"mailbox, letter box",638:"maillot",639:"maillot, tank suit",640:"manhole cover",641:"maraca",642:"marimba, xylophone",643:"mask",644:"matchstick",645:"maypole",646:"maze, labyrinth",647:"measuring cup",648:"medicine chest, medicine cabinet",649:"megalith, megalithic structure",650:"microphone, mike",651:"microwave, microwave oven",652:"military uniform",653:"milk can",654:"minibus",655:"miniskirt, mini",656:"minivan",657:"missile",658:"mitten",659:"mixing bowl",660:"mobile home, manufactured home",661:"Model T",662:"modem",663:"monastery",664:"monitor",665:"moped",666:"mortar",667:"mortarboard",668:"mosque",669:"mosquito net",670:"motor scooter, scooter",671:"mountain bike, all-terrain bike, off-roader",672:"mountain tent",673:"mouse, computer mouse",674:"mousetrap",675:"moving van",676:"muzzle",677:"nail",678:"neck brace",679:"necklace",680:"nipple",681:"notebook, notebook computer",682:"obelisk",683:"oboe, hautboy, hautbois",684:"ocarina, sweet potato",685:"odometer, hodometer, mileometer, milometer",686:"oil filter",687:"organ, pipe organ",688:"oscilloscope, scope, cathode-ray oscilloscope, CRO",689:"overskirt",690:"oxcart",691:"oxygen mask",692:"packet",693:"paddle, boat paddle",694:"paddlewheel, paddle wheel",695:"padlock",696:"paintbrush",697:"pajama, pyjama, pj's, jammies",698:"palace",699:"panpipe, pandean pipe, syrinx",700:"paper towel",701:"parachute, chute",702:"parallel bars, bars",703:"park bench",704:"parking meter",705:"passenger car, coach, carriage",706:"patio, terrace",707:"pay-phone, pay-station",708:"pedestal, plinth, footstall",709:"pencil box, pencil case",710:"pencil sharpener",711:"perfume, essence",712:"Petri dish",713:"photocopier",714:"pick, plectrum, plectron",715:"pickelhaube",716:"picket fence, paling",717:"pickup, pickup truck",718:"pier",719:"piggy bank, penny bank",720:"pill bottle",721:"pillow",722:"ping-pong ball",723:"pinwheel",724:"pirate, pirate ship",725:"pitcher, ewer",726:"plane, carpenter's plane, woodworking plane",727:"planetarium",728:"plastic bag",729:"plate rack",730:"plow, plough",731:"plunger, plumber's helper",732:"Polaroid camera, Polaroid Land camera",733:"pole",734:"police van, police wagon, paddy wagon, patrol wagon, wagon, black Maria",735:"poncho",736:"pool table, billiard table, snooker table",737:"pop bottle, soda bottle",738:"pot, flowerpot",739:"potter's wheel",740:"power drill",741:"prayer rug, prayer mat",742:"printer",743:"prison, prison house",744:"projectile, missile",745:"projector",746:"puck, hockey puck",747:"punching bag, punch bag, punching ball, punchball",748:"purse",749:"quill, quill pen",750:"quilt, comforter, comfort, puff",751:"racer, race car, racing car",752:"racket, racquet",753:"radiator",754:"radio, wireless",755:"radio telescope, radio reflector",756:"rain barrel",757:"recreational vehicle, RV, R.V.",758:"reel",759:"reflex camera",760:"refrigerator, icebox",761:"remote control, remote",762:"restaurant, eating house, eating place, eatery",763:"revolver, six-gun, six-shooter",764:"rifle",765:"rocking chair, rocker",766:"rotisserie",767:"rubber eraser, rubber, pencil eraser",768:"rugby ball",769:"rule, ruler",770:"running shoe",771:"safe",772:"safety pin",773:"saltshaker, salt shaker",774:"sandal",775:"sarong",776:"sax, saxophone",777:"scabbard",778:"scale, weighing machine",779:"school bus",780:"schooner",781:"scoreboard",782:"screen, CRT screen",783:"screw",784:"screwdriver",785:"seat belt, seatbelt",786:"sewing machine",787:"shield, buckler",788:"shoe shop, shoe-shop, shoe store",789:"shoji",790:"shopping basket",791:"shopping cart",792:"shovel",793:"shower cap",794:"shower curtain",795:"ski",796:"ski mask",797:"sleeping bag",798:"slide rule, slipstick",799:"sliding door",800:"slot, one-armed bandit",801:"snorkel",802:"snowmobile",803:"snowplow, snowplough",804:"soap dispenser",805:"soccer ball",806:"sock",807:"solar dish, solar collector, solar furnace",808:"sombrero",809:"soup bowl",810:"space bar",811:"space heater",812:"space shuttle",813:"spatula",814:"speedboat",815:"spider web, spider's web",816:"spindle",817:"sports car, sport car",818:"spotlight, spot",819:"stage",820:"steam locomotive",821:"steel arch bridge",822:"steel drum",823:"stethoscope",824:"stole",825:"stone wall",826:"stopwatch, stop watch",827:"stove",828:"strainer",829:"streetcar, tram, tramcar, trolley, trolley car",830:"stretcher",831:"studio couch, day bed",832:"stupa, tope",833:"submarine, pigboat, sub, U-boat",834:"suit, suit of clothes",835:"sundial",836:"sunglass",837:"sunglasses, dark glasses, shades",838:"sunscreen, sunblock, sun blocker",839:"suspension bridge",840:"swab, swob, mop",841:"sweatshirt",842:"swimming trunks, bathing trunks",843:"swing",844:"switch, electric switch, electrical switch",845:"syringe",846:"table lamp",847:"tank, army tank, armored combat vehicle, armoured combat vehicle",848:"tape player",849:"teapot",850:"teddy, teddy bear",851:"television, television system",852:"tennis ball",853:"thatch, thatched roof",854:"theater curtain, theatre curtain",855:"thimble",856:"thresher, thrasher, threshing machine",857:"throne",858:"tile roof",859:"toaster",860:"tobacco shop, tobacconist shop, tobacconist",861:"toilet seat",862:"torch",863:"totem pole",864:"tow truck, tow car, wrecker",865:"toyshop",866:"tractor",867:"trailer truck, tractor trailer, trucking rig, rig, articulated lorry, semi",868:"tray",869:"trench coat",870:"tricycle, trike, velocipede",871:"trimaran",872:"tripod",873:"triumphal arch",874:"trolleybus, trolley coach, trackless trolley",875:"trombone",876:"tub, vat",877:"turnstile",878:"typewriter keyboard",879:"umbrella",880:"unicycle, monocycle",881:"upright, upright piano",882:"vacuum, vacuum cleaner",883:"vase",884:"vault",885:"velvet",886:"vending machine",887:"vestment",888:"viaduct",889:"violin, fiddle",890:"volleyball",891:"waffle iron",892:"wall clock",893:"wallet, billfold, notecase, pocketbook",894:"wardrobe, closet, press",895:"warplane, military plane",896:"washbasin, handbasin, washbowl, lavabo, wash-hand basin",897:"washer, automatic washer, washing machine",898:"water bottle",899:"water jug",900:"water tower",901:"whiskey jug",902:"whistle",903:"wig",904:"window screen",905:"window shade",906:"Windsor tie",907:"wine bottle",908:"wing",909:"wok",910:"wooden spoon",911:"wool, woolen, woollen",912:"worm fence, snake fence, snake-rail fence, Virginia fence",913:"wreck",914:"yawl",915:"yurt",916:"web site, website, internet site, site",917:"comic book",918:"crossword puzzle, crossword",919:"street sign",920:"traffic light, traffic signal, stoplight",921:"book jacket, dust cover, dust jacket, dust wrapper",922:"menu",923:"plate",924:"guacamole",925:"consomme",926:"hot pot, hotpot",927:"trifle",928:"ice cream, icecream",929:"ice lolly, lolly, lollipop, popsicle",930:"French loaf",931:"bagel, beigel",932:"pretzel",933:"cheeseburger",934:"hotdog, hot dog, red hot",935:"mashed potato",936:"head cabbage",937:"broccoli",938:"cauliflower",939:"zucchini, courgette",940:"spaghetti squash",941:"acorn squash",942:"butternut squash",943:"cucumber, cuke",944:"artichoke, globe artichoke",945:"bell pepper",946:"cardoon",947:"mushroom",948:"Granny Smith",949:"strawberry",950:"orange",951:"lemon",952:"fig",953:"pineapple, ananas",954:"banana",955:"jackfruit, jak, jack",956:"custard apple",957:"pomegranate",958:"hay",959:"carbonara",960:"chocolate sauce, chocolate syrup",961:"dough",962:"meat loaf, meatloaf",963:"pizza, pizza pie",964:"potpie",965:"burrito",966:"red wine",967:"espresso",968:"cup",969:"eggnog",970:"alp",971:"bubble",972:"cliff, drop, drop-off",973:"coral reef",974:"geyser",975:"lakeside, lakeshore",976:"promontory, headland, head, foreland",977:"sandbar, sand bar",978:"seashore, coast, seacoast, sea-coast",979:"valley, vale",980:"volcano",981:"ballplayer, baseball player",982:"groom, bridegroom",983:"scuba diver",984:"rapeseed",985:"daisy",986:"yellow lady's slipper, yellow lady-slipper, Cypripedium calceolus, Cypripedium parviflorum",987:"corn",988:"acorn",989:"hip, rose hip, rosehip",990:"buckeye, horse chestnut, conker",991:"coral fungus",992:"agaric",993:"gyromitra",994:"stinkhorn, carrion fungus",995:"earthstar",996:"hen-of-the-woods, hen of the woods, Polyporus frondosus, Grifola frondosa",997:"bolete",998:"ear, spike, capitulum",999:"toilet tissue, toilet paper, bathroom tissue"},R={"1.00":"module_apply_default/MobilenetV1/Logits/global_pool","2.00":"module_apply_default/MobilenetV2/Logits/AvgPool"},$={"1.00":{.25:{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_025_224/classification/1",inputRange:[0,1]},"0.50":{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_050_224/classification/1",inputRange:[0,1]},.75:{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_075_224/classification/1",inputRange:[0,1]},"1.00":{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_100_224/classification/1",inputRange:[0,1]}},"2.00":{"0.50":{url:"https://tfhub.dev/google/imagenet/mobilenet_v2_050_224/classification/2",inputRange:[0,1]},.75:{url:"https://tfhub.dev/google/imagenet/mobilenet_v2_075_224/classification/2",inputRange:[0,1]},"1.00":{url:"https://tfhub.dev/google/imagenet/mobilenet_v2_100_224/classification/2",inputRange:[0,1]}}};function _(t){return void 0===t&&(t={version:1,alpha:1}),T(this,void 0,void 0,(function(){var e,n,r,a,s,i,o;return A(this,(function(u){switch(u.label){case 0:if(null==N)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");if(r=t.version.toFixed(2),a=t.alpha?t.alpha.toFixed(2):"",s=-1,i=1,null==t.modelUrl){if(!(r in $))throw new Error("Invalid version of MobileNet. Valid versions are: "+Object.keys($));if(!(a in $[r]))throw new Error("MobileNet constructed with invalid alpha "+t.alpha+". Valid multipliers for this version are: "+Object.keys($[r])+".");e=$[r][a].inputRange,s=e[0],i=e[1]}return null!=t.inputRange&&(n=t.inputRange,s=n[0],i=n[1]),[4,(o=new F(r,a,t.modelUrl,s,i)).load()];case 1:return u.sent(),[2,o]}}))}))}var F=function(){function t(t,e,n,r,a){void 0===r&&(r=-1),void 0===a&&(a=1),this.version=t,this.alpha=e,this.modelUrl=n,this.inputMin=r,this.inputMax=a,this.normalizationConstant=(a-r)/255}return t.prototype.load=function(){return T(this,void 0,void 0,(function(){var t,e,n,r,a=this;return A(this,(function(s){switch(s.label){case 0:return this.modelUrl?(t=this,[4,Object(j.c)(this.modelUrl)]):[3,2];case 1:return t.model=s.sent(),[3,4];case 2:return e=$[this.version][this.alpha].url,n=this,[4,Object(j.c)(e,{fromTFHub:!0})];case 3:n.model=s.sent(),s.label=4;case 4:return[4,(r=Object(N.tidy)((function(){return a.model.predict(Object(N.zeros)([1,224,224,3]))}))).data()];case 5:return s.sent(),r.dispose(),[2]}}))}))},t.prototype.infer=function(t,e){var n=this;return void 0===e&&(e=!1),Object(N.tidy)((function(){t instanceof N.Tensor||(t=N.browser.fromPixels(t));var r=t.toFloat().mul(n.normalizationConstant).add(n.inputMin),a=r;224===t.shape[0]&&224===t.shape[1]||(a=N.image.resizeBilinear(r,[224,224],!0));var s,i=a.reshape([-1,224,224,3]);if(e){var o=R[n.version];s=n.model.execute(i,o).squeeze([1,2])}else s=n.model.predict(i).slice([0,1],[-1,1e3]);return s}))},t.prototype.classify=function(t,e){return void 0===e&&(e=3),T(this,void 0,void 0,(function(){var n,r;return A(this,(function(a){switch(a.label){case 0:return[4,D(n=this.infer(t),e)];case 1:return r=a.sent(),n.dispose(),[2,r]}}))}))},t}();function D(t,e){return T(this,void 0,void 0,(function(){var n,r,a,s,i,o,u;return A(this,(function(c){switch(c.label){case 0:return[4,(n=t.softmax()).data()];case 1:for(r=c.sent(),n.dispose(),a=[],u=0;u<r.length;u++)a.push({value:r[u],index:u});for(a.sort((function(t,e){return e.value-t.value})),s=new Float32Array(e),i=new Int32Array(e),u=0;u<e;u++)s[u]=a[u].value,i[u]=a[u].index;for(o=[],u=0;u<i.length;u++)o.push({className:E[i[u]],probability:s[u]});return[2,o]}}))}))}var M=n("iMkW"),z=function(){function t(e){b(this,t),this.modelName=e,k(this,"model",void 0),k(this,"predictions",void 0)}return y(t,[{key:"fetchModel",value:function(){var t=Object(s.a)(a.a.mark((function t(){return a.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:t.t0=this.modelName,t.next="mobile"===t.t0?3:"yolo"===t.t0?7:"coco"===t.t0?11:15;break;case 3:return t.next=5,_({version:2,alpha:1}).catch((function(t){console.log(t)}));case 5:return this.model=t.sent,t.abrupt("break",16);case 7:return t.next=9,M.default.v3tiny();case 9:return this.model=t.sent,t.abrupt("break",16);case 11:return t.next=13,I();case 13:return this.model=t.sent,t.abrupt("break",16);case 15:return t.abrupt("break",16);case 16:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}()},{key:"predict",value:function(){var t=Object(s.a)(a.a.mark((function t(e){return a.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:t.t0=this.modelName,t.next="mobile"===t.t0?3:"yolo"===t.t0?7:"coco"===t.t0?11:15;break;case 3:return t.next=5,this.model.classify(e);case 5:return this.predictions=t.sent,t.abrupt("break",16);case 7:return t.next=9,this.model.predict(e);case 9:return this.predictions=t.sent,t.abrupt("break",16);case 11:return t.next=13,this.model.detect(e);case 13:return this.predictions=t.sent,t.abrupt("break",16);case 15:return t.abrupt("break",16);case 16:return t.abrupt("return",this.predictions);case 17:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}()}]),t}(),L=c.a.createElement;function B(t){var e=t.intervalElem,n=t.onUploadButtonPushed,r=t.isUploading,a=t.onStopButtonPushed;return L("div",{className:"flex items-center"},L("select",{className:" rounded py-3 px-4 block w-full bg-gray-200  text-gray-700",ref:e},L("option",{value:"10"},"10\u79d2\u9593"),L("option",{value:"30"},"30\u79d2\u9593"),L("option",{value:"60"},"1\u5206\u9593"),L("option",{value:"120"},"2\u5206\u9593"),L("option",{value:"160"},"3\u5206\u9593"),L("option",{value:"240"},"4\u5206\u9593"),L("option",{value:"300"},"5\u5206\u9593"),L("option",{value:"480"},"8\u5206\u9593"),L("option",{value:"600"},"10\u5206\u9593")),!r&&L("button",{className:"whitespace-no-wrap flex-grow rounded bg-teal-500 text-white font-bold py-3 px-6 ml-2 flex items-center",onClick:n},"\u30d3\u30c7\u30aa\u753b\u50cf\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9"),r&&L("button",{className:"whitespace-no-wrap flex-grow rounded bg-yellow-500 text-white font-bold py-3 px-6 ml-2 flex items-center",onClick:a},"\u505c\u6b62"))}var P=n("AL3R"),V=n("l1VB"),W=n("rzrB");function U(t,e){return K.apply(this,arguments)}function K(){return(K=Object(s.a)(a.a.mark((function t(e,n){return a.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return console.log(e),t.next=3,V.a.put(e,n,{contentType:"image/jpeg"}).catch((function(t){return console.log(t)}));case 3:return t.abrupt("return",t.sent);case 4:case"end":return t.stop()}}),t)})))).apply(this,arguments)}P.default.configure(W.a);var G=n("/MvE"),H=n.n(G),q=c.a.createElement;function X(t){var e=t.checkFrameRate,n=new z("coco"),r=Object(u.useRef)(null),i=Object(u.useRef)(null),o=Object(u.useState)(!0),c=o[0],l=o[1],d=Object(u.useRef)(),h=Object(u.useState)(0),p=h[0],b=h[1],g=Object(u.useState)(!1),y=g[0],v=g[1],k=Object(u.useRef)(null),j=function(t){var e=Object(u.useState)(t),n=e[0],r=e[1];return Object(u.useEffect)((function(){navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}}).then((function(e){t.current&&(t.current.srcObject=e,t.current.play(),r(t))}))}),[]),n}(r),N=function(){var t=[],e=Object(u.useState)(!1),n=e[0],r=e[1],a=!1;return{isStillActive:n,checkRecentFrames:function(e){t.push(e);var n=1e4/w;if(!(t.length<n)){t.length>1e3&&t.shift();var s=e.time,i=new O(t,s);return!1===a&&i.checkWildlifeExistenceInEveryFrame(5)?(r(a=!0),t.length=0,{error:null,success:{time:e.time,className:e.className}}):(a&&!i.checkWildlifeExistenceInSomeFrame(300)&&r(a=!1),{error:null,success:null})}},recentFrames:t}}().checkRecentFrames,S=function(t){var e=Object(u.useState)(null),n=e[0],r=e[1];return{createValidFrame:function(){var e=Object(s.a)(a.a.mark((function e(n){var s,i,o,u,c,l;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(0!==n.width){e.next=2;break}return e.abrupt("return",{time:Math.floor((new Date).getTime()/1e3),className:null});case 2:return e.next=4,t.predict(n);case 4:return s=e.sent,i=s.filter((function(t){return t.class.includes("person")})).length,o=0!==i?"".concat(i,"\u4eba"):"",u=s.find((function(t){return!!x.isVerifiedAnimal(t.class)})),c=u?u.class:null,l={time:Math.floor((new Date).getTime()/1e3),className:c},r("".concat(c," ").concat(o)),e.abrupt("return",l);case 12:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),label:n}}(n),I=S.label,C=S.createValidFrame;Object(u.useEffect)((function(){function t(){return(t=Object(s.a)(a.a.mark((function t(){return a.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,n.fetchModel();case 2:setInterval(Object(s.a)(a.a.mark((function t(){var e,n,r;return a.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(j&&i.current&&void 0!==i.current.height){t.next=2;break}return t.abrupt("return");case 2:return e=m(i,j),t.next=5,C(e);case 5:n=t.sent,(r=N(n))&&r.success&&{location:""};case 8:case"end":return t.stop()}}),t)}))),e);case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}!function(){t.apply(this,arguments)}()}),[]);return q("div",{className:"jsx-1880160421 p-2"},q("p",{className:"jsx-1880160421 flex items-center mt-4"},q("label",{className:"jsx-1880160421 block uppercase tracking-wide text-grey-700 font-bold"},"\u691c\u51fa\u3055\u308c\u305f\u3082\u306e: ")," ",I?JSON.stringify(I):"\u306a\u3057"),q("video",{id:"video",ref:r,width:"100%",height:"500",role:"video",className:"jsx-1880160421 "+(c?"":"opacity-0")}),q("p",{className:"jsx-1880160421 mt-4"},q("label",{className:"jsx-1880160421 flex items-center"},q("input",{type:"checkbox",defaultChecked:!0,onChange:function(t){l(t.target.checked)},className:"jsx-1880160421 "+"".concat(H.a["form-checkbox"])}),q("span",{className:"jsx-1880160421 text-grey-darker text-sm font-bold pl-2"}," \u30d3\u30c7\u30aa\u306e\u8868\u793a "))),q("div",{className:"jsx-1880160421 mt-8"},q(B,{onUploadButtonPushed:function(){var t=Number(d.current.value),e=t;b(e),v(!0);var n=(new Date).getTime()/1e3+t;k.current=setInterval((function(){((new Date).getTime()/1e3>n||!k.current)&&(v(!1),clearInterval(k.current));var t=m(i,j);e--,b(e),e%5===0&&t.toBlob(function(){var t=Object(s.a)(a.a.mark((function t(e){return a.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,U("current_image.jpg",e);case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}(),"image/jpeg")}),1e3)},intervalElem:d,isUploading:y,onStopButtonPushed:function(){v(!1),clearInterval(k.current),k.current=null}}),q("span",{className:"jsx-1880160421 text-grey-darker text-sm font-bold pl-2"},y&&"\u6b8b\u308a: ".concat(p," \u79d2"))),q("canvas",{id:"canvas",ref:i,width:"200px",height:"100%",role:"canvas",className:"jsx-1880160421 hide"}),q(f.a,{id:"1880160421"},[".hide.jsx-1880160421{display:none;}"]))}var Y=c.a.createElement,J=Number(1e3);e.default=function(){return Object(u.useEffect)((function(){function t(){return(t=Object(s.a)(a.a.mark((function t(){var e;return a.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Object(l.a)();case 2:if(!t.sent.error){t.next=9;break}return t.next=6,Object(d.a)();case 6:e=t.sent,console.log(e),e.error&&alert("".concat(e.error));case 9:case"end":return t.stop()}}),t)})))).apply(this,arguments)}!function(){t.apply(this,arguments)}()}),[]),Y("div",{role:"detector",className:" flex justify-center"},Y(o.a,null,Y("title",null,"MORI ANIMAL | \u30ab\u30e1\u30e9")),Y("div",{className:"max-w-6xl"},Y(h.a,null),Y(X,{checkFrameRate:J})))}},MX0m:function(t,e,n){t.exports=n("3niX")},Mbu7:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},NNfn:function(t,e,n){"use strict";n.d(e,"b",(function(){return c})),n.d(e,"f",(function(){return p})),n.d(e,"e",(function(){return f})),n.d(e,"d",(function(){return m})),n.d(e,"a",(function(){return b})),n.d(e,"c",(function(){return g}));var r=n("atXS");function a(t,e,n,a){const u=Object(r.j)(e),c=function(t,e,n,a){const i=Object(r.N)(e),u=a[a.length-1],c=new Array(u).fill(0),l=e.length,d="complex64"===n?o(t):t;if(l>1)for(let r=0;r<i/u;r++){const t=r*u;for(let e=0;e<u;e++)c[e]=Math.max(c[e],s(d[t+e],0,n).length)}return c}(t,e,n,u),l=e.length,d=function t(e,n,r,a,u,c=!0){const l="complex64"===r?2:1,d=n[0],h=n.length;if(0===h){if("complex64"===r){return[s(o(e)[0],0,r)]}return"bool"===r?[i(e[0])]:[e[0].toString()]}if(1===h){if(d>20){const t=3*l;let n=Array.from(e.slice(0,t)),a=Array.from(e.slice((d-3)*l,d*l));return"complex64"===r&&(n=o(n),a=o(a)),["["+n.map((t,e)=>s(t,u[e],r)).join(", ")+", ..., "+a.map((t,e)=>s(t,u[d-3+e],r)).join(", ")+"]"]}return["["+("complex64"===r?o(e):Array.from(e)).map((t,e)=>s(t,u[e],r)).join(", ")+"]"]}const p=n.slice(1),f=a.slice(1),m=a[0]*l,b=[];if(d>20){for(let n=0;n<3;n++){const a=n*m,s=a+m;b.push(...t(e.slice(a,s),p,r,f,u,!1))}b.push("...");for(let n=d-3;n<d;n++){const a=n*m,s=a+m;b.push(...t(e.slice(a,s),p,r,f,u,n===d-1))}}else for(let s=0;s<d;s++){const n=s*m,a=n+m;b.push(...t(e.slice(n,a),p,r,f,u,s===d-1))}const g=2===h?",":"";b[0]="["+b[0]+g;for(let s=1;s<b.length-1;s++)b[s]=" "+b[s]+g;let y=",\n";for(let s=2;s<h;s++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(c?"":y),b}(t,e,n,u,c),h=["Tensor"];return a&&(h.push("  dtype: "+n),h.push("  rank: "+l),h.push(`  shape: [${e}]`),h.push("  values:")),h.push(d.map(t=>"    "+t).join("\n")),h.join("\n")}function s(t,e,n){let a;return a=Array.isArray(t)?parseFloat(t[0].toFixed(7))+" + "+parseFloat(t[1].toFixed(7))+"j":Object(r.z)(t)?`'${t}'`:"bool"===n?i(t):parseFloat(t.toFixed(7)).toString(),Object(r.L)(a,e)}function i(t){return 0===t?"false":"true"}function o(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var u=n("6366");class c{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=r.N(t),null!=n){const t=n.length;r.b(t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.n(e,this.size),this.strides=Object(r.j)(t)}set(t,...e){0===e.length&&(e=[0]),r.b(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=`+this.shape;throw new Error(e)}e++}let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return l().makeTensor(this.values,this.shape,this.dtype)}}let l=null,d=null,h=null;function p(t){l=t}function f(t){d=t}function m(t){h=t}class b{constructor(t,e,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=r.N(t),this.strides=Object(r.j)(t),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return d.buffer(this.shape,this.dtype,t)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(r.S)(this.shape,t)}arraySync(){return Object(r.S)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=l().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map(t=>u.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=l().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>u.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await l().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(l().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return d.print(this,t)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(t=!1){return a(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),d.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),l().makeVariable(this,t,e,n)}}Object.defineProperty(b,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class g extends b{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!r.a(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);l().disposeTensor(this),this.dataId=t.dataId,l().incRef(this,null)}dispose(){l().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(g,Symbol.hasInstance,{value:t=>t instanceof b&&null!=t.assign&&t.assign instanceof Function})},"NQ+5":function(t,e,n){"use strict";(function(t){n.d(e,"f",(function(){return o})),n.d(e,"e",(function(){return u})),n.d(e,"a",(function(){return h})),n.d(e,"b",(function(){return p})),n.d(e,"d",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"g",(function(){return b}));var r=n("B3db"),a=n("NX3e"),s=n("atXS"),i=n("mEeB");async function o(t,e){const n=[],r=[],a=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(t)?t[s].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise(async t=>{const e=await o.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let a=0;for(let s=0;s<e.length;s++){const t=e[s],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,a),a+=4,r.set(t,a),a+=t.length}t(r)});r.push(t)}else r.push(o.data());null!=e&&(u.group=e),n.push(u)}return{data:c(await Promise.all(r)),specs:n}}function u(t,e){const n={};let o,u=0;for(const c of e){const e=c.name,l=c.dtype,d=c.shape,h=Object(s.N)(d);let p;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=i.a[n.dtype],a=t.slice(u,u+h*r),s="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){p=new Float32Array(s.length);for(let t=0;t<s.length;t++){const e=s[t];p[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===o&&(o=g()),p=o(s)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${e}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);p=new Int32Array(s.length);for(let t=0;t<s.length;t++){const e=s[t];p[t]=Math.round(e*n.scale+n.min)}}u+=h*r}else if("string"===l){const e=Object(s.N)(c.shape);p=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(u,u+4))[0];u+=4;const n=new Uint8Array(t.slice(u,u+e));p.push(n),u+=e}}else{const s=i.a[l],o=t.slice(u,u+h*s);if("float32"===l)p=new Float32Array(o);else if("int32"===l)p=new Int32Array(o);else if("bool"===l)p=new Uint8Array(o);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${e}': ${l}`);{p=new Float32Array(o);const t=new Float32Array(p.length/2),s=new Float32Array(p.length/2);for(let e=0;e<t.length;e++)t[e]=p[2*e],s[e]=p[2*e+1];const i=Object(a.a)(t,d,"float32"),u=Object(a.a)(s,d,"float32");n[e]=Object(r.a)(i,u),i.dispose(),u.dispose()}}u+=h*s}"complex64"!==l&&(n[e]=Object(a.a)(p,d,l))}return n}function c(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)});const r=new Uint8Array(e);let a=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),a),a+=t.byteLength}),r.buffer}const l="undefined"!==typeof t&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function d(e){return l?t.byteLength(e):new Blob([e]).size}function h(e){if(l)return t.from(e).toString("base64");const n=new Uint8Array(e);let r="";for(let t=0,a=n.length;t<a;t++)r+=String.fromCharCode(n[t]);return btoa(r)}function p(e){if(l){const n=t.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(e),r=new Uint8Array(n.length);for(let t=0;t<n.length;++t)r.set([n.charCodeAt(t)],t);return r.buffer}function f(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function m(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function b(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:d(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:d(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function g(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0===(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){const a=r[i],o=t[n[a>>10]+(1023&a)]+e[a>>10];s[i]=o}return new Float32Array(a)}}}).call(this,n("HDXh").Buffer)},NX3e:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("o/e8"),a=n("WVnj");function s(t,e,n){const s=Object(r.c)(t,n);return Object(a.a)(t,e,s,n)}},NclT:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({reshape_:function(t,e){const n=Object(s.a)(t,"x","reshape",null),o={x:n},u={shape:e};return r.a.runKernelFunc((t,r)=>(e=i.s(e,n.size),i.b(n.size===i.N(e),()=>"new shape and old shape must have the same number of elements."),r([n]),t.reshape(n,e)),o,null,a.hc,u)}})},Nk7E:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({depthToSpace_:function(t,e,n="NHWC"){const o=Object(s.a)(t,"x","depthToSpace"),u="NHWC"===n?o.shape[1]:o.shape[2],c="NHWC"===n?o.shape[2]:o.shape[3],l="NHWC"===n?o.shape[3]:o.shape[1];i.b(u*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${e}  for depthToSpace with input shape\n    ${o.shape}`),i.b(c*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${e} for depthToSpace with input shape\n        ${o.shape}`),i.b(l%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${l} for depthToSpace with input shape ${o.shape}`);const d={x:o},h={blockSize:e,dataFormat:n};return r.a.runKernelFunc(t=>t.depthToSpace(o,e,n),d,null,a.K,h)}})},NuWS:function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return i})),n.d(e,"e",(function(){return o})),n.d(e,"a",(function(){return u})),n.d(e,"f",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"g",(function(){return d}));var r=n("atXS");function a(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function s(t,e,n){const r=t.length+e.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(t[s++]):a.push(e[i++]);return a}function i(t,e){const n=[],r=t.length;for(let a=0;a<r;a++)-1===e.indexOf(a)&&n.push(t[a]);return[n,e.map(e=>t[e])]}function o(t,e){return s(t,e.map(t=>1),e)}function u(t,e,n){r.b(a(e,n),()=>t+" supports only inner-most axes for now. "+`Got axes ${e} and rank-${n} input.`)}function c(t,e){if(a(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function l(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function d(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}},"O/w9":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},O7f5:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({neg_:function(t){const e=Object(s.a)(t,"x","neg"),n={x:e};return r.a.runKernelFunc(t=>t.neg(e),n,null,a.Qb)}})},OkRW:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({unstack_:function(t,e=0){const n=Object(s.a)(t,"x","unstack");i.b(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`),e<0&&(e+=n.shape.length);const o={value:n},u={axis:e};return r.a.runKernelFunc(t=>t.unstack(n,e),o,null,a.Qc,u)}})},OlX0:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("o0o1"),a=n.n(r),s=n("HaE+"),i=n("v4IS");function o(){return u.apply(this,arguments)}function u(){return(u=Object(s.a)(a.a.mark((function t(){return a.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,i.a.signIn("wild1","wildlife");case 3:return t.abrupt("return",{error:null,result:"Sign in"});case 6:return t.prev=6,t.t0=t.catch(0),console.log("error signing in",t.t0),t.abrupt("return",{error:"Can't sign in",result:""});case 10:case"end":return t.stop()}}),t,null,[[0,6]])})))).apply(this,arguments)}},OygE:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({batchToSpaceND_:function(t,e,n){const o=Object(s.a)(t,"x","batchToSpaceND"),u=e.reduce((t,e)=>t*e);i.b(o.rank>=1+e.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${e.length}`),i.b(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),i.b(o.shape[0]%u===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${u}`);const c={x:o},l={blockShape:e,crops:n};return r.a.runKernelFunc(t=>t.batchToSpaceND(o,e,n),c,null,a.t,l)}})},PVBm:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},Pvz5:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("o/e8"),s=n("VO80"),i=n("NclT");const o=Object(s.b)({multinomial_:function(t,e,n,s=!1){const o=Object(a.a)(t,"logits","multinomial"),u=o.size,c=o.rank;if(u<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+u+".");if(c>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+c);n=n||Math.random();const l=1===c?Object(i.a)(o,[1,-1]):o,d=r.a.runKernelFunc(t=>t.multinomial(l,s,e,n),{logits2D:l});return 1===c?Object(i.a)(d,[d.size]):d}})},QVv9:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("atXS");function a(t,e,n=0){let a=[];if("number"===typeof e)Object(r.b)(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),a=new Array(e).fill(t.shape[n]/e);else{const s=e.reduce((t,e)=>(-1===e&&(t+=1),t),0);Object(r.b)(s<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(-1!==i){const r=e.reduce((t,e)=>e>0?t+e:t);e[i]=t.shape[n]-r}Object(r.b)(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),a=e}return a}},QYQ3:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({squaredDifference_:function(t,e){let n=Object(i.a)(t,"a","squaredDifference"),u=Object(i.a)(e,"b","squaredDifference");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc((t,e)=>{const r=t.squaredDifference(n,u);return e([n,u]),r},c,null,a.Fc,{})}})},R0ls:function(t,e,n){"use strict";n.d(e,"c",(function(){return h})),n.d(e,"b",(function(){return p})),n.d(e,"a",(function(){return f})),n.d(e,"d",(function(){return m}));var r=n("Um8L"),a=n("njhW"),s=n("parS"),i=n("Ug8H"),o=n("kXpR"),u=n("Rqg+"),c=n("NclT"),l=n("L7Hl"),d=n("4FMF");function h(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Object(s.a)(t,Object(l.a)(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function p(t,e){let n=e;const a=r.c(t.shape,e.shape);return a.length>0&&(n=Object(d.a)(n,a)),Object(c.a)(n,t.shape)}function f(t,e,n){if("linear"===e)return t;if("relu"===e)return Object(o.a)(t);if("elu"===e)return Object(a.a)(t);if("relu6"===e)return Object(u.a)(t);if("prelu"===e)return Object(i.a)(t,n);throw new Error(`Unknown fused activation ${e}.`)}const m=(t,e)=>!(t>0)||"linear"===e},RRa9:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("VO80"),c=n("NclT"),l=n("yRKQ");const d=Object(u.b)({any_:function(t,e=null,n=!1){let u=Object(s.a)(t,"x","any","bool");const d={x:u},h={axis:e,keepDims:n};return r.a.runKernelFunc(t=>{const r=Object(i.I)(e,u.shape);let a=r;const s=Object(o.f)(a,u.rank);null!=s&&(u=Object(l.a)(u,s),a=Object(o.g)(a.length,u.rank));const d=t.any(u,a);if(n){const t=Object(o.e)(d.shape,r);return Object(c.a)(d,t)}return d},d,null,a.g,h)}})},RbuM:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("QVv9");const c=Object(o.b)({split_:function(t,e,n=0){const o=Object(s.a)(t,"x","split"),c={x:o},l={numOrSizeSplits:e,axis:n};return r.a.runKernelFunc((t,r)=>{const a=Object(i.I)(n,o.shape)[0],s=Object(u.a)(o,e,a);return t.split(o,s,a)},c,null,a.Cc,l)}})},RhH0:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({mod_:function(t,e){let n=Object(i.a)(t,"a","mod"),o=Object(i.a)(e,"b","mod");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.mod(n,o);return e([n,o]),r},u,null,a.Ob)}})},RhVc:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({acosh_:function(t){const e=Object(s.a)(t,"x","acosh"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.acosh(e);return n([e]),r},n,null,a.c)}})},"Rqg+":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("3rNm"),o=n("VO80");const u=Object(o.b)({relu6_:function(t){const e=Object(s.a)(t,"x","relu6"),n={x:e};return r.a.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?Object(i.a)(e,"int32"):t.relu6(e)),n,null,a.gc)}})},RrGL:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({log1p_:function(t){const e=Object(s.a)(t,"x","log1p"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.log1p(e);return n([e]),r},n,null,a.yb)}})},RrjA:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("auKK"),a=n("wFtI");function s(t,e,n){const s={shape:t,value:e,dtype:n};return r.a.runKernelFunc(r=>r.fill(t,e,n),{},null,a.ab,s)}},RsxS:function(t,e,n){"use strict";var r,a;n.d(e,"a",(function(){return r})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(a||(a={}))},SFB9:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({addN_:function(t){i.b(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),i.b(t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+t.length);const e=t.map((t,e)=>Object(s.a)(t,"tensors"+e,"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!i.a(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const o=e;return r.a.runKernelFunc((t,n)=>{const r=t.addN(e);return n(e),r},o,null,a.e)}})},SHv8:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("atXS"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({matMul_:function(t,e,n=!1,u=!1){let l=Object(i.a)(t,"a","matMul"),d=Object(i.a)(e,"b","matMul");[l,d]=Object(s.makeTypesMatch)(l,d);const h={a:l,b:d},p={transposeA:n,transposeB:u};return r.a.runKernelFunc((t,e)=>{e([l,d]);const r=n?l.shape[l.rank-2]:l.shape[l.rank-1],a=u?d.shape[d.rank-1]:d.shape[d.rank-2],s=n?l.shape[l.rank-1]:l.shape[l.rank-2],i=u?d.shape[d.rank-2]:d.shape[d.rank-1],h=l.shape.slice(0,-2),p=d.shape.slice(0,-2),f=o.N(h),m=o.N(p),b=f===m||1===f||1===m;o.b(l.rank>=2&&d.rank>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${h}) and (${p}).`),o.b(r===a,()=>`Error in matMul: inner shapes (${r}) and (${a}) of Tensors with shapes ${l.shape} and ${d.shape} and transposeA=${n} and transposeB=${u} must match.`);const g=(f>m?h:p).concat([s,i]),y=n?Object(c.a)(l,[f,r,s]):Object(c.a)(l,[f,s,r]),v=u?Object(c.a)(d,[m,i,a]):Object(c.a)(d,[m,a,i]),x=t.batchMatMul(y,v,n,u);return Object(c.a)(x,g)},h,null,a.s,p)}})},SNsm:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("8Km0"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({broadcastTo_:function(t,e){let n=Object(s.a)(t,"broadcastTo","x");const o=n.shape;if(e.some(t=>!(t>0)||t%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Object(u.a)(n,t)}const c=n.shape,l=Array.from(e);for(let r=e.length-1;r>=0;r--)if(c[r]===e[r])l[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${e}].`);if(0===l.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length)return Object(i.a)(n);const d={x:n},h={shape:e,inputShape:c};return r.a.runKernelFunc(t=>t.tile(n,l),d,null,a.u,h)}})},SevZ:function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;var r=s(n("9kyW")),a=s(n("bVZc"));function s(t){return t&&t.__esModule?t:{default:t}}var i=function(){function t(t){var e=void 0===t?{}:t,n=e.styleSheet,r=void 0===n?null:n,s=e.optimizeForSpeed,i=void 0!==s&&s,o=e.isBrowser,u=void 0===o?"undefined"!==typeof window:o;this._sheet=r||new a.default({name:"styled-jsx",optimizeForSpeed:i}),this._sheet.inject(),r&&"boolean"===typeof i&&(this._sheet.setOptimizeForSpeed(i),this._optimizeForSpeed=this._sheet.isOptimizeForSpeed()),this._isBrowser=u,this._fromServer=void 0,this._indices={},this._instancesCounts={},this.computeId=this.createComputeId(),this.computeSelector=this.createComputeSelector()}var e=t.prototype;return e.add=function(t){var e=this;void 0===this._optimizeForSpeed&&(this._optimizeForSpeed=Array.isArray(t.children),this._sheet.setOptimizeForSpeed(this._optimizeForSpeed),this._optimizeForSpeed=this._sheet.isOptimizeForSpeed()),this._isBrowser&&!this._fromServer&&(this._fromServer=this.selectFromServer(),this._instancesCounts=Object.keys(this._fromServer).reduce((function(t,e){return t[e]=0,t}),{}));var n=this.getIdAndRules(t),r=n.styleId,a=n.rules;if(r in this._instancesCounts)this._instancesCounts[r]+=1;else{var s=a.map((function(t){return e._sheet.insertRule(t)})).filter((function(t){return-1!==t}));this._indices[r]=s,this._instancesCounts[r]=1}},e.remove=function(t){var e=this,n=this.getIdAndRules(t).styleId;if(function(t,e){if(!t)throw new Error("StyleSheetRegistry: "+e+".")}(n in this._instancesCounts,"styleId: `"+n+"` not found"),this._instancesCounts[n]-=1,this._instancesCounts[n]<1){var r=this._fromServer&&this._fromServer[n];r?(r.parentNode.removeChild(r),delete this._fromServer[n]):(this._indices[n].forEach((function(t){return e._sheet.deleteRule(t)})),delete this._indices[n]),delete this._instancesCounts[n]}},e.update=function(t,e){this.add(e),this.remove(t)},e.flush=function(){this._sheet.flush(),this._sheet.inject(),this._fromServer=void 0,this._indices={},this._instancesCounts={},this.computeId=this.createComputeId(),this.computeSelector=this.createComputeSelector()},e.cssRules=function(){var t=this,e=this._fromServer?Object.keys(this._fromServer).map((function(e){return[e,t._fromServer[e]]})):[],n=this._sheet.cssRules();return e.concat(Object.keys(this._indices).map((function(e){return[e,t._indices[e].map((function(t){return n[t].cssText})).join(t._optimizeForSpeed?"":"\n")]})).filter((function(t){return Boolean(t[1])})))},e.createComputeId=function(){var t={};return function(e,n){if(!n)return"jsx-"+e;var a=String(n),s=e+a;return t[s]||(t[s]="jsx-"+(0,r.default)(e+"-"+a)),t[s]}},e.createComputeSelector=function(t){void 0===t&&(t=/__jsx-style-dynamic-selector/g);var e={};return function(n,r){this._isBrowser||(r=r.replace(/\/style/gi,"\\/style"));var a=n+r;return e[a]||(e[a]=r.replace(t,n)),e[a]}},e.getIdAndRules=function(t){var e=this,n=t.children,r=t.dynamic,a=t.id;if(r){var s=this.computeId(a,r);return{styleId:s,rules:Array.isArray(n)?n.map((function(t){return e.computeSelector(s,t)})):[this.computeSelector(s,n)]}}return{styleId:this.computeId(a),rules:Array.isArray(n)?n:[n]}},e.selectFromServer=function(){return Array.prototype.slice.call(document.querySelectorAll('[id^="__jsx-"]')).reduce((function(t,e){return t[e.id.slice(2)]=e,t}),{})},t}();e.default=i},SwXZ:function(t,e,n){"use strict";(function(t){var e=n("szMd");const r=()=>n(1);let a;class s{constructor(){this.util=n(2),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return null!=Object(e.c)().global.fetch?Object(e.c)().global.fetch(t,n):(null==a&&(a=r()),a(t,n))}now(){const e=t.hrtime();return 1e3*e[0]+e[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}Object(e.c)().get("IS_NODE")&&Object(e.c)().setPlatform("node",new s)}).call(this,n("8oxB"))},THqV:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({ifft_:function(t){Object(s.b)("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return r.a.runKernelFunc(e=>{const n=t.shape[t.shape.length-1],r=t.size/n,a=Object(o.a)(t,[r,n]),s=e.ifft(a);return Object(o.a)(s,t.shape)},e,null,a.mb)}})},TPxA:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("w4jT");class a extends r.a{split(t){return new s(this,t)}}class s extends a{constructor(t,e){super(),this.upstream=t,this.impl=new i(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class i extends r.b{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0}}},TyAZ:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({exp_:function(t){const e=Object(s.a)(t,"x","exp"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.exp(e);return n([r]),r},n,null,a.X)}})},"U/2n":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wE5H"),s=n("wFtI"),i=n("o/e8"),o=n("atXS"),u=n("uBja"),c=n("VO80"),l=n("NclT");const d=Object(c.b)({maxPool3d_:function(t,e=[1,1,1],n,c,d,h="NDHWC",p){null==p?p=[1,1,1]:Object(a.b)("dilations is deprecated, this field will be gone in v3.0.0.");const f=Object(i.a)(t,"x","maxPool3d");let m=f,b=!1;4===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2],f.shape[3]])),o.b(5===m.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${m.rank}.`),o.b("NDHWC"===h,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+h),o.b(u.h(n,p),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`),null!=d&&o.b(o.v(c),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const g={x:m},y={filterSize:e,strides:n,pad:c,dimRoundingMode:d,dataFormat:h,dilations:p},v=r.a.runKernelFunc((t,r)=>{null==p&&(p=[1,1,1]);const a=u.f(m.shape,e,n,p,c,d,h),s=t.maxPool3d(m,a);return r([m,s]),s},g,null,s.Fb,y);return b?Object(l.a)(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}})},"U/Lz":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({unsortedSegmentSum_:function(t,e,n){const o=Object(s.a)(t,"x","unsortedSegmentSum"),u=Object(s.a)(e,"segmentIds","unsortedSegmentSum","int32");Object(i.b)(Object(i.v)(n),()=>"numSegments must be of dtype int");const c={x:o,segmentIds:u},l={numSegments:n};return r.a.runKernelFunc((t,e)=>{const r=t.unsortedSegmentSum(o,u,n);return e([u]),r},c,null,a.Rc,l)}})},U45G:function(t,e,n){"use strict";n.d(e,"a",(function(){return h})),n.d(e,"f",(function(){return d})),n.d(e,"d",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return u}));var r=n("auKK"),a=n("NNfn"),s=n("o/e8"),i=n("atXS");function o(t){return i.b(i.u(t),()=>"The f passed in grad(f) must be a function"),(e,n)=>{const a=Object(s.a)(e,"x","tf.grad",null),o=null!=n?Object(s.a)(n,"dy","tf.grad"):null;return r.a.tidy(()=>{const{value:e,grads:n}=r.a.gradients(()=>t(a),[a],o);return null!=o&&i.e(e.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]})}}function u(t){return i.b(i.u(t),()=>"The f passed in grads(f) must be a function"),(e,n)=>{i.b(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const a=Object(s.b)(e,"args","tf.grads",null),o=null!=n?Object(s.a)(n,"dy","tf.grads"):null;return r.a.tidy(()=>{const{value:e,grads:n}=r.a.gradients(()=>t(...a),a,o);return null!=o&&i.e(e.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n})}}function c(t){return i.b(i.u(t),()=>"The f passed in valueAndGrad(f) must be a function"),(e,n)=>{i.b(e instanceof a.a,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),i.b(null==n||n instanceof a.a,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:o}=r.a.gradients(()=>t(e),[e],n);return p(s),{grad:s[0],value:o}}}function l(t){return i.b(i.u(t),()=>"The f passed in valueAndGrads(f) must be a function"),(e,n)=>{i.b(Array.isArray(e)&&e.every(t=>t instanceof a.a),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),i.b(null==n||n instanceof a.a,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=r.a.gradients(()=>t(...e),e,n);return null!=n&&i.e(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(s.grads),s}}function d(t,e){i.b(i.u(t),()=>"The f passed in variableGrads(f) must be a function"),i.b(null==e||Array.isArray(e)&&e.every(t=>t instanceof a.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in r.a.registeredVariables)e.push(r.a.registeredVariables[t])}const s=n?e.filter(t=>!t.trainable):null,o=e.length;e=e.filter(t=>t.trainable),i.b(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const{value:u,grads:c}=r.a.gradients(t,e,null,!0);i.b(c.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),i.b(0===u.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`);const l={};return e.forEach((t,e)=>{null!=c[e]&&(l[t.name]=c[e])}),null!=s&&s.forEach(t=>l[t.name]=null),{value:u,grads:l}}function h(t){return r.a.customGrad(t)}function p(t){if(t.filter(t=>null==t).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},UI8N:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({floorDiv_:function(t,e){let n=Object(i.a)(t,"a","floorDiv"),o=Object(i.a)(e,"b","floorDiv");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.floorDiv(n,o);return e([n,o]),r},u,null,a.db)}})},Ug8H:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({prelu_:function(t,e){const n=Object(s.a)(t,"x","prelu"),i=Object(s.a)(e,"alpha","prelu"),o={x:n,alpha:i};return r.a.runKernelFunc((t,e)=>{const r=t.prelu(n,i);return e([n,i]),r},o,null,a.ac)}})},Um8L:function(t,e,n){"use strict";function r(t,e){const n=t.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=t[s]||1;(e[e.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(t,e){const n=[];for(let r=0;r<e.length;r++){const a=t[t.length-r-1],s=e.length-r-1,i=e[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(t,e){const n=[],r=Math.max(t.length,e.length);for(let a=0;a<r;a++){let r=t[t.length-a-1];null==r&&(r=1);let s=e[e.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`)}n.unshift(r)}}return n}n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return a})),n.d(e,"a",(function(){return s}))},Umw7:function(t,e,n){"use strict";n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return s})),n.d(e,"f",(function(){return i})),n.d(e,"b",(function(){return o})),n.d(e,"g",(function(){return c})),n.d(e,"c",(function(){return l})),n.d(e,"a",(function(){return d}));var r=n("+hG3");function a(t,e,n,a,i){const o=e.inputParams[t];if(o&&void 0!==o.inputIndexStart){const t=o.inputIndexStart,u=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?t+1:o.inputIndexEnd;if("tensor"===o.type)return s(e.inputNames[o.inputIndexStart],n,a,i);if("tensors"===o.type){return e.inputNames.slice(t,u).map(t=>s(t,n,a,i))}const c=s(e.inputNames.slice(t)[0],n,a,i),l=c.dataSync();return"number"===o.type?l[0]:r.util.toNestedArray(c.shape,l)}const u=e.attrParams[t];return u&&u.value}function s(t,e,n,r){const[a,s]=c(t);if(null!=r){const t=r.getHashTableHandleByName(a);if(null!=t)return t}const i=n.currentContextIds.find(t=>!!e[u(a,t)]);return void 0!==i?e[u(a,i)][s]:void 0}function i(t,e,n){return e[u(t,n.currentContextId)]}function o(t,e){const[n,r]=c(t);return[u(n,e&&e.currentContextId),r]}function u(t,e){return e?`${t}-${e}`:t}function c(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function l(t,e,n){let r=a("pad",t,e,n);if("explicit"===r){r=a("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function d(t){return t.kept?t:Object(r.clone)(t)}},"V+B2":function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},VO80:function(t,e,n){"use strict";n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return i}));var r=n("auKK"),a=n("atXS");const s="__op";function i(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");let n=e[0];const i=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...t)=>{r.a.startScope(n);try{const e=i(...t);return Object(a.x)(e)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(e),e}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},VRIy:function(t,e){(function(e){t.exports=e}).call(this,{})},VhY8:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({topk_:function(t,e=1,n=!0){const i=Object(s.a)(t,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got `+e);const u={x:i},c={k:e,sorted:n},[l,d]=r.a.runKernelFunc(t=>t.topk(i,e,n),u,null,a.Nc,c);return{values:l,indices:d}}})},WHR0:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},WJRb:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("auKK"),a=n("wFtI");function s(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return r.a.runKernelFunc(r=>r.linspace(t,e,n),{},null,a.wb,s)}},WVnj:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("atXS"),s=n("6366");function i(t,e,n,i){if(null==i&&(i=Object(a.r)(t)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(a.c)(e);const t=Object(a.N)(e),r=Object(a.N)(n);Object(a.b)(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let s=0;s<n.length;++s){const t=n[s],r=s!==n.length-1||t!==Object(a.N)(e.slice(s));Object(a.b)(n[s]===e[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return Object(a.A)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==i?Object(s.toTypedArray)(t,i):Object(a.m)(t,[],!0),r.a.makeTensor(t,e,i)}},WWBm:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({ceil_:function(t){const e=Object(s.a)(t,"x","ceil"),n={x:e};return r.a.runKernelFunc(t=>t.ceil(e),n,null,a.w)}})},WYAb:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({isInf_:function(t){const e=Object(s.a)(t,"x","isInf"),n={x:e};return r.a.runKernelFunc(t=>t.isInf(e),n,null,a.qb)}})},Wiw4:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("atXS"),s=n("B3db");function i(t,e="float32"){if("complex64"===e){const e=i(t,"float32"),n=i(t,"float32");return Object(s.a)(e,n)}const n=Object(a.F)(Object(a.N)(t),e);return r.a.makeTensor(n,t,e)}},X4fa:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({softmax_:function(t,e=-1){const n=Object(s.a)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const i={logits:n},o={dim:e};return r.a.runKernelFunc((t,r)=>{const a=t.softmax(n,e);return r([a]),a},i,null,a.yc,o)}})},XcSs:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sinh_:function(t){const e=Object(s.a)(t,"x","sinh"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.sinh(e);return n([e]),r},n,null,a.wc)}})},Xr0w:function(t,e,n){"use strict";n.r(e),n.d(e,"assertParamsValid",(function(){return a})),n.d(e,"maskToAxes",(function(){return s})),n.d(e,"computeOutShape",(function(){return i})),n.d(e,"stridesWithElidedDims",(function(){return o})),n.d(e,"getNormalizedAxes",(function(){return l})),n.d(e,"startIndicesWithElidedDims",(function(){return d})),n.d(e,"stopIndicesWithElidedDims",(function(){return h})),n.d(e,"stridesForAxis",(function(){return p})),n.d(e,"startForAxis",(function(){return f})),n.d(e,"stopForAxis",(function(){return m})),n.d(e,"isSliceContinous",(function(){return b})),n.d(e,"computeFlatOffset",(function(){return g})),n.d(e,"parseSliceParams",(function(){return y}));var r=n("atXS");function a(t,e,n){const a=t.shape.length;r.b(a===e.length,()=>`Error in slice${a}D: Length of begin ${e} must match the rank of the array (${a}).`),r.b(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let s=0;s<a;++s)r.b(e[s]+n[s]<=t.shape[s],()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`)}function s(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function i(t,e,n){const r=[];for(let a=0;a<t.length;a++)r[a]=Math.ceil((e[a]-t[a])/n[a]);return r}function o(t,e,n,r){const a=[...t];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[e]=1:(a.splice(e,0,1),a.pop());return a}function u(t,e,n){return n<=t?n:n-(e-1)}function c(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function l(t,e,n,r,a,s,i,u,c){const l=t.length;let b=new Array(l),g=new Array(l),y=new Array(l);if(e.length&&n>0){const c=e[0],l=n+1;b=d(i,c,l,r,t),g=h(u,c,l,a,t),y=o(s,c,l,t)}else for(let o=0;o<l;o++)b[o]=f(i,r,s,t,o,c),g[o]=m(u,a,s,t,o,c),y[o]=p(s,o,c);return{begin:b,end:g,strides:y}}function d(t,e,n,r,a){const s=[...a],i=c(n,e);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{const a=u(e,n,o);let i=r[a];t&1<<a&&(i=0),s[o]=i}return s}function h(t,e,n,a,s){const i=[...s],o=c(n,e);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const s=u(e,n,r);let o=a[s];t&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let u=0;u<i.length;u++){const t=s[u];i[u]<0&&(i[u]+=t),i[u]=r.i(0,i[u],s[u])}return i}function p(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function f(t,e,n,a,s,i){let o=e[s];const u=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=r.i(0,o,c-1),o}function m(t,e,n,a,s,i){let o=e[s];const u=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=u>0?r.i(0,o,c):r.i(-1,o,c-1),o}function b(t,e,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(e[a]>0||n[a]!==t[a])return!1;return!0}function g(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function y(t,e,n){let a;const s=t.shape.length;let i;return a="number"===typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),a.forEach(t=>{r.b(-1!==t,()=>"slice() does not support negative begin indexing.")}),i=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map((e,n)=>e>=0?e:(r.b(-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`),t.shape[n]-a[n])),[a,i]}},Xyqe:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({rsqrt_:function(t){const e=Object(s.a)(t,"x","rsqrt"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.rsqrt(e);return n([e]),r},n,null,a.pc)}})},YAKK:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({atan2_:function(t,e){let n=Object(i.a)(t,"a","atan2"),o=Object(i.a)(e,"b","atan2");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.atan2(n,o);return e([n,o]),r},u,null,a.m)}})},YFqc:function(t,e,n){t.exports=n("cTJO")},YSVl:function(t,e,n){var r=n("EhIR"),a=n("uDiL"),s=n("pJ6O"),i=n("yuCN"),o=n("euyF"),u=n("ie1u"),c=n("pJ3+");c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,t.exports=c},Z5Ez:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("SNsm"),u=n("Um8L"),c=n("VO80");const l=Object(c.b)({where_:function(t,e,n){const c=Object(s.a)(e,"a","where"),l=Object(s.a)(n,"b","where"),d=Object(s.a)(t,"condition","where","bool"),h=Object(u.a)(c.shape,l.shape),p=Object(o.a)(c,h),f=Object(o.a)(l,h);1===d.rank&&Object(i.b)(d.shape[0]===c.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==d.rank&&Object(i.e)(d.shape,f.shape,"Error in where: ");const m={condition:d,t:p,e:f};return r.a.runKernelFunc((t,e)=>{const n=t.select(d,p,f);return e([d]),n},m,null,a.rc)}})},ZJ6U:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("87nf"),u=n("VO80"),c=n("NX3e");const l=Object(u.b)({concat_:function(t,e=0){Object(i.b)(t.length>=1,()=>"Pass at least one tensor to concat");let n=Object(s.b)(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)});const u=n,l={axis:e};return r.a.runKernelFunc((t,r)=>{const a=Object(i.I)(e,n[0].shape)[0],s=Object(o.b)(n.map(t=>t.shape),a);if(0===Object(i.N)(s))return Object(c.a)([],s);if(n=n.filter(t=>t.size>0),1===n.length)return n[0];const u=n.map(t=>t.shape);Object(o.a)(u,a);const l=t.concat(n,a);return r(n),l},u,null,a.z,l)}})},Zz2E:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},aSZd:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("uBja"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,i,u,c=[1,1],l){let d=t;3===t.rank&&(d=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let h=e;3===h.rank&&(h=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const p={x:d,dy:h},f={strides:i,pad:u,dimRoundingMode:l,dilations:c,filterShape:n};return r.a.runKernelFunc(e=>{const r=s.a(t.shape,n,i,c,u,l,!0);return e.depthwiseConv2DDerFilter(d,h,r)},p,null,a.M,f)}})},aTLu:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sin_:function(t){const e=Object(s.a)(t,"x","sin"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.sin(e);return n([e]),r},n,null,a.vc)}})},adw1:function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n("B3db"),a=n("ZJ6U"),s=n("JLAb"),i=n("parS"),o=n("VO80"),u=n("17CO"),c=n("NclT"),l=n("0I63"),d=n("AV8V"),h=n("bTzI"),p=n("THqV");const f=Object(o.b)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let o;if(e<=2){const r=Object(c.a)(t,[n,e]);o=Object(p.a)(r)}else{const f=[n,2*(e-1)],m=Object(c.a)(Object(u.a)(t),[n,e]),b=Object(c.a)(Object(s.a)(t),[n,e]),g=Object(l.a)(Object(h.a)(m,[0,1],[n,e-2]),1),y=Object(i.a)(Object(l.a)(Object(h.a)(b,[0,1],[n,e-2]),1),Object(d.a)(-1)),v=Object(a.a)([m,g],1),x=Object(a.a)([b,y],1),O=Object(c.a)(Object(r.a)(v,x),[f[0],f[1]]);o=Object(p.a)(O)}if(o=Object(u.a)(o),3===t.rank&&0!==t.shape[0]){const e=o,n=t.shape[0];o=Object(c.a)(o,[n,o.shape[0]/n,o.shape[1]]),e.dispose()}return o}})},atXS:function(t,e,n){"use strict";function r(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function a(t,e,n){return Math.max(t,Math.min(e,n))}function s(t){return t%2===0?t:t+1}function i(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function o(t,e){const n=Math.random();return e*n+(1-n)*t}function u(t,e){let n=0;for(let r=0;r<t.length;r++){const a=Number(t[r])-Number(e[r]);n+=a*a}return n}function c(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function l(t,e,n=""){c(m(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function d(t){c(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function h(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||A(t)&&!n)for(let r=0;r<t.length;++r)h(t[r],e,n);else e.push(t);return e}function p(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function f(t){return 0===t.length}function m(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function b(t){return t%1===0}function g(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function y(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function v(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return r(e),e}function x(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function O(t,e=(t=>0),n){return new Promise((r,a)=>{let s=0;const i=()=>{if(t())return void r();s++;const o=e(s);null!=n&&s>=n?a():setTimeout(i,o)};i()})}function w(t,e){let n=1,r=-1;for(let s=0;s<t.length;++s)if(t[s]>=0)n*=t[s];else if(-1===t[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(t[s]<0)throw Error(`Shapes can not be < 0. Found ${t[s]} at dim ${s}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const a=t.slice();return a[r]=e/n,a}function k(t,e){const n=e.length;return c((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+t),c(t.every(t=>b(t)),()=>"All values in axis param must be integers but got axis "+t),t.map(t=>t<0?n+t:t)}function j(t,e){const n=[],r=[],a=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||a?null:k(e,t).sort();let i=0;for(let o=0;o<t.length;++o){if(null!=s){if(s[i]===o&&1!==t[o])throw new Error(`Can't squeeze axis ${o} since its dim '${t[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===t[o]&&(n.push(t[o]),r.push(o)),s[i]<=o&&i++}1!==t[o]&&(n.push(t[o]),r.push(o))}return{newShape:n,keptDims:r}}function N(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function S(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function I(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function C(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function T(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function A(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function E(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function R(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function $(t){return"string"===typeof t||t instanceof String}function _(t){return"boolean"===typeof t}function F(t){return"number"===typeof t}function D(t){return Array.isArray(t)?D(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":F(t)?"float32":$(t)?"string":_(t)?"bool":"float32"}function M(t){return!!(t&&t.constructor&&t.call&&t.apply)}function z(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function L(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function B(t,e){if(0===t.length)return e[0];const n=t.reduce((t,e)=>t*e);if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return function t(e,n,r){const a=new Array;if(1===n.length){const t=n[0];for(let n=0;n<t;n++)a[n]=r[e+n]}else{const s=n[0],i=n.slice(1),o=i.reduce((t,e)=>t*e);for(let n=0;n<s;n++)a[n]=t(e+n*o,i,r)}return a}(0,t,e)}function P(t,e){const n=V(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function V(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function W(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return B(t,new Float32Array(n));if("int32"===e)return B(t,new Int32Array(n));if("bool"===e)return B(t,new Uint8Array(n));throw new Error("Unknown data type "+e)}function U(t){t.forEach(e=>{c(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function K(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let a=0;a<t.length-1;++a)r+=n[a]*t[a];return r}function G(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(t/n[a]),t-=r[a]*n[a];return r[r.length-1]=t,r}function H(t){return t&&t.then&&"function"===typeof t.then}n.d(e,"M",(function(){return r})),n.d(e,"i",(function(){return a})),n.d(e,"H",(function(){return s})),n.d(e,"Q",(function(){return i})),n.d(e,"J",(function(){return o})),n.d(e,"l",(function(){return u})),n.d(e,"b",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"d",(function(){return d})),n.d(e,"m",(function(){return h})),n.d(e,"N",(function(){return p})),n.d(e,"y",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"v",(function(){return b})),n.d(e,"R",(function(){return g})),n.d(e,"O",(function(){return y})),n.d(e,"k",(function(){return v})),n.d(e,"L",(function(){return x})),n.d(e,"K",(function(){return O})),n.d(e,"s",(function(){return w})),n.d(e,"I",(function(){return k})),n.d(e,"P",(function(){return j})),n.d(e,"o",(function(){return N})),n.d(e,"n",(function(){return S})),n.d(e,"h",(function(){return I})),n.d(e,"B",(function(){return C})),n.d(e,"p",(function(){return T})),n.d(e,"A",(function(){return A})),n.d(e,"g",(function(){return E})),n.d(e,"f",(function(){return R})),n.d(e,"z",(function(){return $})),n.d(e,"t",(function(){return _})),n.d(e,"w",(function(){return F})),n.d(e,"r",(function(){return D})),n.d(e,"u",(function(){return M})),n.d(e,"G",(function(){return z})),n.d(e,"j",(function(){return L})),n.d(e,"S",(function(){return B})),n.d(e,"D",(function(){return P})),n.d(e,"F",(function(){return V})),n.d(e,"E",(function(){return W})),n.d(e,"c",(function(){return U})),n.d(e,"C",(function(){return K})),n.d(e,"q",(function(){return G})),n.d(e,"x",(function(){return H}))},auKK:function(t,e,n){"use strict";n.d(e,"b",(function(){return g})),n.d(e,"a",(function(){return y}));var r=n("i4e/"),a=n("szMd"),s=n("9JAK"),i=n("wFtI"),o=n("c7gn"),u=n("atXS");class c{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new d)}profileKernel(t,e,n){let r;const a=this.backendTimer.time(()=>{r=n()});for(let s=0;s<r.length;s++){const e=r[s];e.data().then(n=>{l(n,e.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:a.then(t=>t.kernelMs),extraInfo:a.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:a,extraInfo:s}=t;n.forEach(t=>{Promise.all([t.data(),r,s]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],a,n[2])})})}}function l(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return console.warn(`Found ${e} in the result of '${n}'`),!0}return!1}class d{logKernelProfile(t,e,n,r,a,s){const i="number"===typeof r?u.L(r+"ms",9):r.error,o=u.L(t,25),c=e.rank,l=e.size,d=u.L(e.shape.toString(),14);let h="";for(const u in a){const t=a[u];if(null!=t){const n=t.shape||e.shape,r=n.length;h+=`${u}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${c}D ${d}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var h=n("NNfn"),p=n("dsKV"),f=n("6366");class m{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class b{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new m}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){Object(o.d)(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Object(o.d)(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof r.b||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,a=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(r){throw e(),r}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x:()=>{const e={x:t},n={dtype:"float32"};return y.runKernelFunc(e=>e.cast(t,"float32"),e,null,i.v,n)}}),[],{}),e}runKernel(t,e,n,r,a){return this.runKernelFunc(null,e,null,t,n,r,a)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let a=0;n.forEach(t=>{a+="complex64"===t.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,a,s,i){let u,c=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const d=this.state.numBytes,h=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const f=Object(o.c)(r,this.backendName);let m,b;if(null!=f)p=()=>{const t=this.backend.numDataIds();m=f.kernelFunc({inputs:e,attrs:a,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const o=n.map(({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n));if(l){let t=this.getTensorsForGradient(r,e,o);if(null==t){null==i&&(i=[]);const e=o.filter((t,e)=>i[e]);t=(s||[]).slice().concat(e)}c=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{l&&(c=t.map(t=>this.keep(this.clone(t))))};p=()=>{const n=this.backend.numDataIds();m=this.tidy(()=>t(this.backend,e));const a=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,a),a}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(b=this.profiler.profileKernel(r,e,()=>p()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(b),u=b.outputs):u=p()}),l&&this.addTapeNode(r,e,u,n,c,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(t=>null!=e[t]?e[t].shape:null),outputShapes:u.map(t=>t.shape),kernelTimeMs:b.timeMs,extraInfo:b.extraInfo}),Array.isArray(m)?u:u[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=Object(o.b)(t);if(null!=r){const t=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(u.b(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(e).map(t=>e[t])):s=t.map(t=>e[t]);const i=n.filter((t,e)=>a[e]);return s.concat(i)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=t;"string"===n&&u.z(t[0])&&(a=t.map(t=>f.encodeString(t)));const s=r.write(a,e,n),i=new h.a(e,n,s,this.nextTensorId());if(this.incRef(i,r),"string"===n){const t=this.state.tensorInfo.get(s),e=Object(u.f)(a);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,r){n=n||"float32";const a=new h.a(e,n,t,this.nextTensorId());return this.incRef(a,r),a}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const a=new h.c(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*u.g(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof h.c||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:a},c=Object(o.b)(t);null!=c&&(r=c.gradFunc),null!=r&&(i.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=u.F(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],a,s))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(p.getTensorsInContainer)(t),n=new Set(e.map(t=>t.id));for(let a=0;a<this.state.activeScope.track.length;a++){const t=this.state.activeScope.track[a];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(u.b(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));u.b(a instanceof h.a,()=>"The result y returned by f() must be a tensor.");const s=function(t,e,n){const r={},a={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<t.length;u++){const n=t[u],s=n.inputs;for(const t in s){const i=s[t];let o=!1;for(let t=0;t<e.length;t++)if(r[i.id]){n.outputs.forEach(t=>r[t.id]=!0),o=!0,a[n.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let u=t.length-1;u>=0;u--){const e=t[u],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(s[e.outputs[t].id]){for(const t in n)s[n[t].id]=!0,i[e.id]=!0;break}}const o=[];for(let u=0;u<t.length;u++){const e=t[u];if(a[e.id]&&i[e.id]){const t={};for(const a in e.inputs){const n=e.inputs[a];r[n.id]&&(t[a]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,o.push(n)}}return o}(this.state.activeTape,e,a);if(!r&&0===s.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[a.id]=null==n?function(t){const e=Object(u.D)(Object(u.N)(t),"float32");return y.makeTensor(e,t,"float32")}(a.shape):n,function(t,e,n,r){for(let a=e.length-1;a>=0;a--){const s=e[a],i=[];if(s.outputs.forEach(e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const e in s.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const a=n(()=>o[e]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[e];if(!u.a(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${e}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=a;else{const e=t[i.id];t[i.id]=r(e,a),e.dispose()}}}}(t,s,t=>this.tidy(t),v);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(t){return u.b(u.u(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;u.b(e.every(t=>t instanceof h.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((t,e)=>{r[e]=t}),this.runKernelFunc((r,a)=>(n=t(...e,a),u.b(n.value instanceof h.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),u.b(u.u(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(t,r)=>{const a=n.gradFunc(t,r),s=Array.isArray(a)?a:[a];u.b(s.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),u.b(s.every(t=>t instanceof h.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return s.forEach((t,e)=>{i[e]=()=>t}),i})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Object(f.now)(),n=await this.backend.time(t);return n.wallMs=Object(f.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new m;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function g(){const t=Object(s.b)();if(null==t._tfengine){const e=new a.b(t);t._tfengine=new b(e)}return Object(a.d)(t._tfengine.ENV),Object(h.f)(()=>t._tfengine),t._tfengine}b.nextTensorId=0,b.nextVariableId=0;const y=g();function v(t,e){const n={a:t,b:e};return y.runKernelFunc((n,r)=>{const a=n.add(t,e);return r([t,e]),a},n,null,i.d)}},"b++O":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({isNaN_:function(t){const e=Object(s.a)(t,"x","isNaN"),n={x:e};return r.a.runKernelFunc(t=>t.isNaN(e),n,null,a.rb)}})},bSXR:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/camera",function(){return n("Lbv+")}])},bTzI:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("Xr0w");const u=Object(i.b)({slice_:function(t,e,n){const i=Object(s.a)(t,"x","slice");if(0===i.rank)throw new Error("Slicing scalar is not possible");const u={x:i},c={begin:e,size:n};return r.a.runKernelFunc((t,r)=>{const[a,s]=o.parseSliceParams(i,e,n);return o.assertParamsValid(i,a,s),r([i]),t.slice(i,a,s)},u,null,a.xc,c)}})},bVZc:function(t,e,n){"use strict";(function(t){function n(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}e.__esModule=!0,e.default=void 0;var r="undefined"!==typeof t&&t.env&&!0,a=function(t){return"[object String]"===Object.prototype.toString.call(t)},s=function(){function t(t){var e=void 0===t?{}:t,n=e.name,s=void 0===n?"stylesheet":n,o=e.optimizeForSpeed,u=void 0===o?r:o,c=e.isBrowser,l=void 0===c?"undefined"!==typeof window:c;i(a(s),"`name` must be a string"),this._name=s,this._deletedRulePlaceholder="#"+s+"-deleted-rule____{}",i("boolean"===typeof u,"`optimizeForSpeed` must be a boolean"),this._optimizeForSpeed=u,this._isBrowser=l,this._serverSheet=void 0,this._tags=[],this._injected=!1,this._rulesCount=0;var d=this._isBrowser&&document.querySelector('meta[property="csp-nonce"]');this._nonce=d?d.getAttribute("content"):null}var e,s,o,u=t.prototype;return u.setOptimizeForSpeed=function(t){i("boolean"===typeof t,"`setOptimizeForSpeed` accepts a boolean"),i(0===this._rulesCount,"optimizeForSpeed cannot be when rules have already been inserted"),this.flush(),this._optimizeForSpeed=t,this.inject()},u.isOptimizeForSpeed=function(){return this._optimizeForSpeed},u.inject=function(){var t=this;if(i(!this._injected,"sheet already injected"),this._injected=!0,this._isBrowser&&this._optimizeForSpeed)return this._tags[0]=this.makeStyleTag(this._name),this._optimizeForSpeed="insertRule"in this.getSheet(),void(this._optimizeForSpeed||(r||console.warn("StyleSheet: optimizeForSpeed mode not supported falling back to standard mode."),this.flush(),this._injected=!0));this._serverSheet={cssRules:[],insertRule:function(e,n){return"number"===typeof n?t._serverSheet.cssRules[n]={cssText:e}:t._serverSheet.cssRules.push({cssText:e}),n},deleteRule:function(e){t._serverSheet.cssRules[e]=null}}},u.getSheetForTag=function(t){if(t.sheet)return t.sheet;for(var e=0;e<document.styleSheets.length;e++)if(document.styleSheets[e].ownerNode===t)return document.styleSheets[e]},u.getSheet=function(){return this.getSheetForTag(this._tags[this._tags.length-1])},u.insertRule=function(t,e){if(i(a(t),"`insertRule` accepts only strings"),!this._isBrowser)return"number"!==typeof e&&(e=this._serverSheet.cssRules.length),this._serverSheet.insertRule(t,e),this._rulesCount++;if(this._optimizeForSpeed){var n=this.getSheet();"number"!==typeof e&&(e=n.cssRules.length);try{n.insertRule(t,e)}catch(o){return r||console.warn("StyleSheet: illegal rule: \n\n"+t+"\n\nSee https://stackoverflow.com/q/20007992 for more info"),-1}}else{var s=this._tags[e];this._tags.push(this.makeStyleTag(this._name,t,s))}return this._rulesCount++},u.replaceRule=function(t,e){if(this._optimizeForSpeed||!this._isBrowser){var n=this._isBrowser?this.getSheet():this._serverSheet;if(e.trim()||(e=this._deletedRulePlaceholder),!n.cssRules[t])return t;n.deleteRule(t);try{n.insertRule(e,t)}catch(s){r||console.warn("StyleSheet: illegal rule: \n\n"+e+"\n\nSee https://stackoverflow.com/q/20007992 for more info"),n.insertRule(this._deletedRulePlaceholder,t)}}else{var a=this._tags[t];i(a,"old rule at index `"+t+"` not found"),a.textContent=e}return t},u.deleteRule=function(t){if(this._isBrowser)if(this._optimizeForSpeed)this.replaceRule(t,"");else{var e=this._tags[t];i(e,"rule at index `"+t+"` not found"),e.parentNode.removeChild(e),this._tags[t]=null}else this._serverSheet.deleteRule(t)},u.flush=function(){this._injected=!1,this._rulesCount=0,this._isBrowser?(this._tags.forEach((function(t){return t&&t.parentNode.removeChild(t)})),this._tags=[]):this._serverSheet.cssRules=[]},u.cssRules=function(){var t=this;return this._isBrowser?this._tags.reduce((function(e,n){return n?e=e.concat(Array.prototype.map.call(t.getSheetForTag(n).cssRules,(function(e){return e.cssText===t._deletedRulePlaceholder?null:e}))):e.push(null),e}),[]):this._serverSheet.cssRules},u.makeStyleTag=function(t,e,n){e&&i(a(e),"makeStyleTag acceps only strings as second parameter");var r=document.createElement("style");this._nonce&&r.setAttribute("nonce",this._nonce),r.type="text/css",r.setAttribute("data-"+t,""),e&&r.appendChild(document.createTextNode(e));var s=document.head||document.getElementsByTagName("head")[0];return n?s.insertBefore(r,n):s.appendChild(r),r},e=t,(s=[{key:"length",get:function(){return this._rulesCount}}])&&n(e.prototype,s),o&&n(e,o),t}();function i(t,e){if(!t)throw new Error("StyleSheet: "+e+".")}e.default=s}).call(this,n("8oxB"))},boNM:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}]},bzdD:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("o/e8"),a=n("CfTU"),s=n("parS"),i=n("VO80"),o=n("AV8V");const u=Object(i.b)({leakyRelu_:function(t,e=.2){const n=Object(r.a)(t,"x","leakyRelu");return Object(a.a)(Object(s.a)(Object(o.a)(e),n),n)}})},"c/ib":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({resizeBilinear_:function(t,e,n=!1){const o=Object(s.a)(t,"images","resizeBilinear");i.b(3===o.rank||4===o.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),i.b(2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+e+".");let c=o,l=!1;3===o.rank&&(l=!0,c=Object(u.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const[d,h]=e,p={images:c},f={alignCorners:n,size:e},m=r.a.runKernelFunc((t,e)=>(e([c]),t.resizeBilinear(c,d,h,n)),p,null,a.ic,f);return l?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},c7gn:function(t,e,n){"use strict";n.d(e,"c",(function(){return o})),n.d(e,"b",(function(){return u})),n.d(e,"d",(function(){return c})),n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return h})),n.d(e,"g",(function(){return p})),n.d(e,"a",(function(){return f}));var r=n("szMd"),a=n("9JAK");const s=Object(a.a)("kernelRegistry",()=>new Map),i=Object(a.a)("gradRegistry",()=>new Map);function o(t,e){const n=m(t,e);return s.get(n)}function u(t){return i.get(t)}function c(t){const e=s.entries(),n=[];for(;;){const{done:r,value:a}=e.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===t&&n.push(i)}return n}function l(t){const{kernelName:e,backendName:n}=t,r=m(e,n);s.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),s.set(r,t)}function d(t){const{kernelName:e}=t;i.has(e)&&Object(r.c)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),i.set(e,t)}function h(t,e){const n=m(t,e);if(!s.has(n))throw new Error(`The kernel '${t}' for backend '${e}' is not registered`);s.delete(n)}function p(t){if(!i.has(t))throw new Error(`The gradient '${t}' for backend is not registered`);i.delete(t)}function f(t,e){c(t).forEach(t=>{l(Object.assign({},t,{backendName:e}))})}function m(t,e){return`${e}_${t}`}},c9N1:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("uBja"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({conv2DBackpropInput_:function(t,e,n,o,c,l="NHWC",d){s.b(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let h=t,p=e,f=!1;3===e.rank&&(f=!0,p=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),h=[1,t[0],t[1],t[2]]),s.b(4===h.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+h.length+"."),s.b(4===p.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+p.rank),s.b(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const m="NHWC"===l?h[3]:h[1],b="NHWC"===l?p.shape[3]:p.shape[1];s.b(m===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`),s.b(b===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${b}) must match output depth for filter ${n.shape[3]}.`),null!=d&&s.b(s.v(c),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const g={dy:p,filter:n},y={strides:o,pad:c,dataFormat:l,dimRoundingMode:d,inputShape:h},v=r.a.runKernelFunc((t,e)=>{const r=i.g(l),a=i.a(h,n.shape,o,1,c,d,!1,r),s=t.conv2dDerInput(p,n,a);return e([p,n]),s},g,null,a.C,y);return f?Object(u.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},cTJO:function(t,e,n){"use strict";var r=n("zoAU"),a=n("7KCV");e.__esModule=!0,e.default=void 0;var s,i=a(n("q1tI")),o=n("elyg"),u=n("nOHt"),c=new Map,l=window.IntersectionObserver,d={};var h=function(t,e){var n=s||(l?s=new l((function(t){t.forEach((function(t){if(c.has(t.target)){var e=c.get(t.target);(t.isIntersecting||t.intersectionRatio>0)&&(s.unobserve(t.target),c.delete(t.target),e())}}))}),{rootMargin:"200px"}):void 0);return n?(n.observe(t),c.set(t,e),function(){try{n.unobserve(t)}catch(e){console.error(e)}c.delete(t)}):function(){}};function p(t,e,n,r){(0,o.isLocalURL)(e)&&(t.prefetch(e,n,r).catch((function(t){0})),d[e+"%"+n]=!0)}var f=function(t){var e=!1!==t.prefetch,n=i.default.useState(),a=r(n,2),s=a[0],c=a[1],f=(0,u.useRouter)(),m=f&&f.pathname||"/",b=i.default.useMemo((function(){var e=(0,o.resolveHref)(m,t.href,!0),n=r(e,2),a=n[0],s=n[1];return{href:a,as:t.as?(0,o.resolveHref)(m,t.as):s||a}}),[m,t.href,t.as]),g=b.href,y=b.as;i.default.useEffect((function(){if(e&&l&&s&&s.tagName&&(0,o.isLocalURL)(g)&&!d[g+"%"+y])return h(s,(function(){p(f,g,y)}))}),[e,s,g,y,f]);var v=t.children,x=t.replace,O=t.shallow,w=t.scroll;"string"===typeof v&&(v=i.default.createElement("a",null,v));var k=i.Children.only(v),j={ref:function(t){t&&c(t),k&&"object"===typeof k&&k.ref&&("function"===typeof k.ref?k.ref(t):"object"===typeof k.ref&&(k.ref.current=t))},onClick:function(t){k.props&&"function"===typeof k.props.onClick&&k.props.onClick(t),t.defaultPrevented||function(t,e,n,r,a,s,i){("A"!==t.currentTarget.nodeName||!function(t){var e=t.currentTarget.target;return e&&"_self"!==e||t.metaKey||t.ctrlKey||t.shiftKey||t.altKey||t.nativeEvent&&2===t.nativeEvent.which}(t)&&(0,o.isLocalURL)(n))&&(t.preventDefault(),null==i&&(i=r.indexOf("#")<0),e[a?"replace":"push"](n,r,{shallow:s}).then((function(t){t&&i&&(window.scrollTo(0,0),document.body.focus())})))}(t,f,g,y,x,O,w)}};return e&&(j.onMouseEnter=function(t){(0,o.isLocalURL)(g)&&(k.props&&"function"===typeof k.props.onMouseEnter&&k.props.onMouseEnter(t),p(f,g,y,{priority:!0}))}),(t.passHref||"a"===k.type&&!("href"in k.props))&&(j.href=(0,o.addBasePath)((0,o.addLocale)(y,f&&f.locale,f&&f.defaultLocale))),i.default.cloneElement(k,j)};e.default=f},cdtJ:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NclT");var u=n("VO80");function c(t){return null==t?null:0===t.rank?Object(o.a)(t,[t.size]):1===t.rank?t:2===t.rank?Object(o.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const l=Object(u.b)({batchNorm_:function(t,e,n,u,l,d){null==d&&(d=.001);const h=Object(s.a)(t,"x","batchNorm"),p=Object(s.a)(e,"mean","batchNorm"),f=Object(s.a)(n,"variance","batchNorm");let m,b;null!=l&&(m=Object(s.a)(l,"scale","batchNorm")),null!=u&&(b=Object(s.a)(u,"offset","batchNorm")),i.b(p.rank===f.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),i.b(null==b||p.rank===b.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),i.b(null==m||p.rank===m.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const g=function(t){let e;return e=0===t.rank||1===t.rank?Object(o.a)(t,[1,1,1,t.size]):2===t.rank?Object(o.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(h),y={x:g,scale:m,offset:b,mean:p,variance:f},v={varianceEpsilon:d},x=r.a.runKernelFunc((t,e)=>(e([g,p,f,m]),t.batchNorm(g,c(p),c(f),c(b),c(m),d)),y,null,a.fb,v);return Object(o.a)(x,h.shape)}})},dWjR:function(t,e,n){"use strict";function r(t,e=!1){console.log(t.toString(e))}n.d(e,"a",(function(){return r}))},dYAU:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({spaceToBatchND_:function(t,e,n){const o=Object(s.a)(t,"x","spaceToBatchND");i.b(o.rank>=1+e.length,()=>`input rank ${o.rank} should be > than [blockShape] ${e.length}`),i.b(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),i.b(o.shape.reduce((t,r,a)=>a>0&&a<=e.length?t&&(r+n[a-1][0]+n[a-1][1])%e[a-1]===0:t,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const u={x:o},c={blockShape:e,paddings:n};return r.a.runKernelFunc(t=>t.spaceToBatchND(o,e,n),u,null,a.Ac,c)}})},dnXz:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("o/e8"),a=n("atXS"),s=n("3X4V"),i=n("uBja"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({conv1d_:function(t,e,n,o,c="NWC",l=1,d){const h=Object(r.a)(t,"x","conv1d"),p=Object(r.a)(e,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1]])),a.b(3===f.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),a.b(3===p.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+p.rank+"."),null!=d&&a.b(a.v(o),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`),a.b(f.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`),a.b(i.h(n,l),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`),a.b("NWC"===c,()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`);const b=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),g=Object(u.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],v=[1,l],x=Object(s.a)(g,b,y,o,"NHWC",v,d);return m?Object(u.a)(x,[x.shape[2],x.shape[3]]):Object(u.a)(x,[x.shape[0],x.shape[2],x.shape[3]])}})},dsKV:function(t,e,n){"use strict";n.r(e),n.d(e,"makeTypesMatch",(function(){return i})),n.d(e,"assertTypesMatch",(function(){return o})),n.d(e,"isTensorInList",(function(){return u})),n.d(e,"getTensorsInContainer",(function(){return c}));var r=n("NNfn"),a=n("I79q"),s=n("atXS");function i(t,e){if(t.dtype===e.dtype)return[t,e];const n=Object(a.c)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function o(t,e){Object(s.b)(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function u(t,e){return e.some(e=>e.id===t.id)}function c(t){const e=[];return function t(e,n,a){if(null==e)return;if(e instanceof r.a)return void n.push(e);if(s=e,!Array.isArray(s)&&"object"!==typeof s)return;var s;const i=e;for(const r in i){const e=i[r];a.has(e)||(a.add(e),t(e,n,a))}}(t,e,new Set),e}},euyF:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this;e.next=function(){var t,n,r=e.w,a=e.X,s=e.i;return e.w=r=r+1640531527|0,n=a[s+34&127],t=a[s=s+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=a[s]=n^t,e.i=s,n+(r^r>>>16)|0},function(t,e){var n,r,a,s,i,o=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),a=0,s=-32;s<u;++s)e&&(r^=e.charCodeAt((s+32)%e.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(e&&e.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;t.w=i,t.X=o,t.i=a}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("uQAw")&&n("VRIy")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xor4096=u}(0,t,n("uQAw"))}).call(this,n("1/IK")(t))},fjZN:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({atan_:function(t){const e=Object(s.a)(t,"x","atan"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.atan(e);return n([e]),r},n,null,a.l)}})},fmoR:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("BD40"),a=n("VO80"),s=n("1OSX");const i=Object(a.b)({truncatedNormal_:function(t,e=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s.a(e,n,a,!0,i),u=Object(r.a)(t,a);for(let r=0;r<u.values.length;r++)u.values[r]=o.nextValue();return u.toTensor()}})},ftYm:function(t,e,n){"use strict";function r(){if("undefined"!==typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function a(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(e),n.d(e,"isMobile",(function(){return r})),n.d(e,"isBrowser",(function(){return a}))},"g4+C":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({depthwiseConv2d_:function(t,e,n,u,l="NHWC",d=[1,1],h){const p=Object(s.a)(t,"x","depthwiseConv2d"),f=Object(s.a)(e,"filter","depthwiseConv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.b(4===m.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),i.b(4===f.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+f.rank+"."),i.b(m.shape[3]===f.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),null!=h&&i.b(i.v(u),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${u}.`);const g={x:m,filter:f},y={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h},v=r.a.runKernelFunc((t,e)=>{null==d&&(d=[1,1]),i.b(o.h(n,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`);const r=o.a(m.shape,f.shape,n,d,u,h,!0),a=t.depthwiseConv2D(m,f,r);return e([m,f]),a},g,null,a.L,y);return b?Object(c.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},g4m1:function(t,e,n){"use strict";n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return u})),n.d(e,"c",(function(){return c}));var r=n("AV8V"),a=n("lg8H");function s(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,a=t.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(e,t[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(t,e,n||i)}(t,e,n),a=r<0?-(r+1):r;t.splice(a,0,e)}function i(t,e){return t>e?1:t<e?-1:0}function o(t,e,n,r,a){return l(t,e,n,r,a,0).selectedIndices}function u(t,e,n,r,a,s){return l(t,e,n,r,a,0,!1,s,!0)}function c(t,e,n,r,a,s){return l(t,e,n,r,a,s,!0)}function l(t,e,n,i,o,u,c=!1,l=!1,f=!1){const m=[];for(let r=0;r<e.length;r++)e[r]>o&&m.push({score:e[r],boxIndex:r,suppressBeginIndex:0});m.sort(p);const b=u>0?-.5/u:0,g=[],y=[];for(;g.length<n&&m.length>0;){const e=m.pop(),{score:n,boxIndex:r,suppressBeginIndex:a}=e;if(n<o)break;let u=!1;for(let s=g.length-1;s>=a;--s){const n=d(t,r,g[s]);if(n>=i){u=!0;break}if(e.score=e.score*h(i,b,n),e.score<=o)break}e.suppressBeginIndex=g.length,u||(e.score===n?(g.push(r),y.push(e.score)):e.score>o&&s(m,e,p))}const v=g.length,x=n-v;l&&x>0&&(g.push(...new Array(x).fill(0)),y.push(...new Array(x).fill(0)));const O={selectedIndices:Object(a.a)(g,"int32")};return c&&(O.selectedScores=Object(a.a)(y,"float32")),f&&(O.validOutputs=Object(r.a)(v,"int32")),O}function d(t,e,n){const r=t.subarray(4*e,4*e+4),a=t.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(s,c),b=Math.max(i,l),g=Math.min(o,d),y=Math.min(u,h),v=Math.max(g-m,0)*Math.max(y-b,0);return v/(p+f-v)}function h(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function p(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}},gErV:function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("3rNm"),o=n("TyAZ"),u=n("E1lT"),c=n("wCH+"),l=n("VO80"),d=n("oAkI"),h=n("4FMF");const p=Object(l.b)({logSoftmax_:function(t,e=-1){const n=Object(s.a)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const l={logits:n},p={axis:e};return r.a.runKernelFunc((n,r)=>{const a=Object(c.a)(t,e,!0),s=Object(d.a)(t,a),l=Object(d.a)(Object(i.a)(s,"float32"),Object(u.a)(Object(h.a)(Object(o.a)(s),e,!0)));return r([l]),l},l,null,a.zb,p)}})},hNYx:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("lg8H"),o=n("Wiw4");function u(t,e,n=1,u="float32"){if(0===n)throw new Error("Cannot have a step of zero");const c={start:t,stop:e,step:n,dtype:u};return r.a.runKernelFunc(()=>{if(t===e||t<e&&n<0||e<t&&n>1)return Object(o.a)([0],u);const r=Math.abs(Math.ceil((e-t)/n)),a=Object(s.F)(r,u);e<t&&1===n&&(n=-1),a[0]=t;for(let t=1;t<a.length;t++)a[t]=a[t-1]+n;return Object(i.a)(a,u)},{},null,a.cc,c)}},hT5K:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({unique_:function(t,e=0){const n=Object(s.a)(t,"x","unique",null);Object(i.b)(n.rank>0,()=>"The input tensor must be at least 1D");const o={x:n},u={axis:e},[c,l]=r.a.runKernel(a.Pc,o,u);return{values:c,indices:l}}})},hinG:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("BD40"),a=n("VO80"),s=n("1OSX");const i=Object(a.b)({randomUniform_:function(t,e=0,n=1,a="float32",i){const o=Object(r.a)(t,a),u=new s.c(e,n,null,i);for(let r=0;r<o.values.length;r++)o.values[r]=u.nextValue();return o.toTensor()}})},"i/oj":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("o0+U");const u=Object(i.b)({scatterND_:function(t,e,n){const i=Object(s.a)(t,"indices","scatterND","int32"),u=Object(s.a)(e,"updates","scatterND");o.validateInput(u,i,n);const c={indices:i,updates:u},l={shape:n};return r.a.runKernelFunc(t=>t.scatterND(i,u,n),c,null,a.qc,l)}})},"i4e/":function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a}));class r{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{time(t){return s("time")}read(t){return s("read")}readSync(t){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(t){return s("disposeData")}write(t,e,n){return s("write")}move(t,e,n,r){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return s("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:a,activation:i,preluActivationWeights:o}){return s("fusedBatchMatMul")}slice(t,e,n){return s("slice")}stridedSlice(t,e,n,r){return s("stridedSlice")}unstack(t,e){return s("unstack")}reverse(t,e){return s("reverse")}concat(t,e){return s("concat")}neg(t){return s("neg")}add(t,e){return s("add")}addN(t){return s("addN")}subtract(t,e){return s("subtract")}multiply(t,e){return s("multiply")}realDivide(t,e){return s("realDivide")}floorDiv(t,e){return s("floorDiv")}sum(t,e){return s("sum")}prod(t,e){return s("prod")}unsortedSegmentSum(t,e,n){return s("unsortedSegmentSum")}argMin(t,e){return s("argMin")}argMax(t,e){return s("argMax")}equal(t,e){return s("equal")}notEqual(t,e){return s("notEqual")}less(t,e){return s("less")}lessEqual(t,e){return s("lessEqual")}greater(t,e){return s("greater")}greaterEqual(t,e){return s("greaterEqual")}logicalNot(t){return s("logicalNot")}logicalAnd(t,e){return s("logicalAnd")}logicalOr(t,e){return s("logicalOr")}where(t){return s("where")}select(t,e,n){return s("select")}topk(t,e,n){return s("topk")}min(t,e){return s("min")}minimum(t,e){return s("minimum")}mod(t,e){return s("mod")}max(t,e){return s("max")}maximum(t,e){return s("maximum")}all(t,e){return s("all")}any(t,e){return s("any")}squaredDifference(t,e){return s("squaredDifference")}ceil(t){return s("ceil")}floor(t){return s("floor")}round(t){return s("round")}sign(t){return s("sign")}isNaN(t){return s("isNaN")}isInf(t){return s("isInf")}isFinite(t){return s("isFinite")}pow(t,e){return s("pow")}exp(t){return s("exp")}expm1(t){return s("expm1")}softmax(t,e){return s("softmax")}log(t){return s("log")}log1p(t){return s("log1p")}sqrt(t){return s("sqrt")}rsqrt(t){return s("rsqrt")}square(t){return s("square")}reciprocal(t){return s("reciprocal")}relu(t){return s("relu")}relu6(t){return s("relu6")}prelu(t,e){return s("prelu")}elu(t){return s("elu")}eluDer(t,e){return s("eluDer")}selu(t){return s("selu")}int(t){return s("int")}clip(t,e,n){return s("clip")}abs(t){return s("abs")}complexAbs(t){return s("complexAbs")}sigmoid(t){return s("sigmoid")}softplus(t){return s("softplus")}sin(t){return s("sin")}cos(t){return s("cos")}tan(t){return s("tan")}asin(t){return s("asin")}acos(t){return s("acos")}atan(t){return s("atan")}atan2(t,e){return s("atan2")}sinh(t){return s("sinh")}cosh(t){return s("cosh")}tanh(t){return s("tanh")}asinh(t){return s("asinh")}acosh(t){return s("acosh")}atanh(t){return s("atanh")}erf(t){return s("erf")}step(t,e){return s("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:i}){return s("fusedConv2d")}conv2d(t,e,n){return s("conv2d")}conv2dDerInput(t,e,n){return s("conv2dDerInput")}conv2dDerFilter(t,e,n){return s("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:i}){return s("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return s("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return s("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return s("depthwiseConv2DDerFilter")}conv3d(t,e,n){return s("conv3d")}conv3dDerInput(t,e,n){return s("conv3dDerInput")}conv3dDerFilter(t,e,n){return s("conv3dDerFilter")}maxPool(t,e){return s("maxPool")}maxPoolBackprop(t,e,n,r){return s("maxPoolBackprop")}avgPool(t,e){return s("avgPool")}avgPoolBackprop(t,e,n){return s("avgPoolBackprop")}avgPool3d(t,e){return s("avgPool3d")}avgPool3dBackprop(t,e,n){return s("avgPool3dBackprop")}maxPool3d(t,e){return s("maxPool3d")}maxPool3dBackprop(t,e,n,r){return s("maxPool3dBackprop")}reshape(t,e){return s("reshape")}cast(t,e){return s("cast")}tile(t,e){return s("tile")}pad(t,e,n){return s("pad")}transpose(t,e){return s("transpose")}gather(t,e,n){return s("gather")}gatherND(t,e){return s("gatherND")}scatterND(t,e,n){return s("scatterND")}batchToSpaceND(t,e,n){return s("batchToSpaceND")}spaceToBatchND(t,e,n){return s("spaceToBatchND")}resizeBilinear(t,e,n,r){return s("resizeBilinear")}resizeBilinearBackprop(t,e,n){return s("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return s("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return s("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,a,i){return s("batchNorm")}localResponseNormalization4D(t,e,n,r,a){return s("localResponseNormalization4D")}LRNGrad(t,e,n,r,a,i,o){return s("LRNGrad")}multinomial(t,e,n,r){return s("multinomial")}oneHot(t,e,n,r){return s("oneHot")}cumsum(t,e,n,r){return s("cumsum")}nonMaxSuppression(t,e,n,r,a){return s("nonMaxSuppression")}fft(t){return s("fft")}ifft(t){return s("ifft")}complex(t,e){return s("complex")}real(t){return s("real")}imag(t){return s("imag")}cropAndResize(t,e,n,r,a,i){return s("cropAndResize")}depthToSpace(t,e,n){return s("depthToSpace")}split(t,e,n){return s("split")}sparseToDense(t,e,n,r){return s("sparseToDense")}diag(t){return s("diag")}fill(t,e,n){return s("fill")}onesLike(t){return s("onesLike")}zerosLike(t){return s("zerosLike")}linspace(t,e,n){return s("linspace")}dispose(){return s("dispose")}}function s(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},i8k8:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({maxPoolWithArgmax_:function(t,e,n,i,o=!1){const u={x:Object(s.a)(t,"x","maxPoolWithArgmax")},c={filterSize:e,strides:n,pad:i,includeBatchInIndex:o},l=r.a.runKernel(a.Ib,u,c);return{result:l[0],indexes:l[1]}}})},iIjY:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({tanh_:function(t){const e=Object(s.a)(t,"x","tanh"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.tanh(e);return n([r]),r},n,null,a.Lc)}})},iMkW:function(t,e,n){var r;window,t.exports=(r=n("zhpf"),function(t){var e={};function n(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(r,a,function(e){return t[e]}.bind(null,a));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=46)}([function(t,e){var n=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(t,e,n){var r=n(32)("wks"),a=n(33),s=n(0).Symbol,i="function"==typeof s;(t.exports=function(t){return r[t]||(r[t]=i&&s[t]||(i?s:a)("Symbol."+t))}).store=r},function(t,e){var n=t.exports={version:"2.6.5"};"number"==typeof __e&&(__e=n)},function(t,e,n){var r=n(9);t.exports=function(t){if(!r(t))throw TypeError(t+" is not an object!");return t}},function(t,e,n){var r=n(8),a=n(19);t.exports=n(10)?function(t,e,n){return r.f(t,e,a(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e){t.exports={}},function(t,e,n){var r=n(0),a=n(2),s=n(7),i=n(4),o=n(13),u=function(t,e,n){var c,l,d,h=t&u.F,p=t&u.G,f=t&u.S,m=t&u.P,b=t&u.B,g=t&u.W,y=p?a:a[e]||(a[e]={}),v=y.prototype,x=p?r:f?r[e]:(r[e]||{}).prototype;for(c in p&&(n=e),n)(l=!h&&x&&void 0!==x[c])&&o(y,c)||(d=l?x[c]:n[c],y[c]=p&&"function"!=typeof x[c]?n[c]:b&&l?s(d,r):g&&x[c]==d?function(t){var e=function(e,n,r){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,r)}return t.apply(this,arguments)};return e.prototype=t.prototype,e}(d):m&&"function"==typeof d?s(Function.call,d):d,m&&((y.virtual||(y.virtual={}))[c]=d,t&u.R&&v&&!v[c]&&i(v,c,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,t.exports=u},function(t,e,n){var r=n(12);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,a){return t.call(e,n,r,a)}}return function(){return t.apply(e,arguments)}}},function(t,e,n){var r=n(3),a=n(54),s=n(55),i=Object.defineProperty;e.f=n(10)?Object.defineProperty:function(t,e,n){if(r(t),e=s(e,!0),r(n),a)try{return i(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e,n){t.exports=!n(31)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(t,e,n){"use strict";var r=n(53)(!0);n(30)(String,"String",(function(t){this._t=String(t),this._i=0}),(function(){var t,e=this._t,n=this._i;return n>=e.length?{value:void 0,done:!0}:(t=r(e,n),this._i+=t.length,{value:t,done:!1})}))},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?r:n)(t)}},function(t,e){t.exports=function(t){if(null==t)throw TypeError("Can't call method on  "+t);return t}},function(t,e){t.exports=!0},function(t,e,n){var r=n(9),a=n(0).document,s=r(a)&&r(a.createElement);t.exports=function(t){return s?a.createElement(t):{}}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var r=n(62),a=n(16);t.exports=function(t){return r(a(t))}},function(t,e,n){var r=n(15),a=Math.min;t.exports=function(t){return t>0?a(r(t),9007199254740991):0}},function(t,e,n){var r=n(32)("keys"),a=n(33);t.exports=function(t){return r[t]||(r[t]=a(t))}},function(t,e,n){var r=n(8).f,a=n(13),s=n(1)("toStringTag");t.exports=function(t,e,n){t&&!a(t=n?t:t.prototype,s)&&r(t,s,{configurable:!0,value:e})}},function(t,e,n){n(66);for(var r=n(0),a=n(4),s=n(5),i=n(1)("toStringTag"),o="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<o.length;u++){var c=o[u],l=r[c],d=l&&l.prototype;d&&!d[i]&&a(d,i,c),s[c]=s.Array}},function(t,e,n){var r=n(14),a=n(1)("toStringTag"),s="Arguments"==r(function(){return arguments}());t.exports=function(t){var e,n,i;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),a))?n:s?r(e):"Object"==(i=r(e))&&"function"==typeof e.callee?"Arguments":i}},function(t,e,n){var r=n(25),a=n(1)("iterator"),s=n(5);t.exports=n(2).getIteratorMethod=function(t){if(null!=t)return t[a]||t["@@iterator"]||s[r(t)]}},function(t,e,n){"use strict";var r=n(12);function a(t){var e,n;this.promise=new t((function(t,r){if(void 0!==e||void 0!==n)throw TypeError("Bad Promise constructor");e=t,n=r})),this.resolve=r(e),this.reject=r(n)}t.exports.f=function(t){return new a(t)}},function(t,e,n){t.exports=n(48)},function(t,e,n){"use strict";e.__esModule=!0;var r,a=(r=n(50))&&r.__esModule?r:{default:r};e.default=function(t){return function(){var e=t.apply(this,arguments);return new a.default((function(t,n){return function r(s,i){try{var o=e[s](i),u=o.value}catch(t){return void n(t)}if(!o.done)return a.default.resolve(u).then((function(t){r("next",t)}),(function(t){r("throw",t)}));t(u)}("next")}))}}},function(t,e,n){"use strict";var r=n(17),a=n(6),s=n(56),i=n(4),o=n(5),u=n(57),c=n(23),l=n(65),d=n(1)("iterator"),h=!([].keys&&"next"in[].keys()),p=function(){return this};t.exports=function(t,e,n,f,m,b,g){u(n,e,f);var y,v,x,O=function(t){if(!h&&t in N)return N[t];switch(t){case"keys":case"values":return function(){return new n(this,t)}}return function(){return new n(this,t)}},w=e+" Iterator",k="values"==m,j=!1,N=t.prototype,S=N[d]||N["@@iterator"]||m&&N[m],I=S||O(m),C=m?k?O("entries"):I:void 0,T="Array"==e&&N.entries||S;if(T&&(x=l(T.call(new t)))!==Object.prototype&&x.next&&(c(x,w,!0),r||"function"==typeof x[d]||i(x,d,p)),k&&S&&"values"!==S.name&&(j=!0,I=function(){return S.call(this)}),r&&!g||!h&&!j&&N[d]||i(N,d,I),o[e]=I,o[w]=p,m)if(y={values:k?I:O("values"),keys:b?I:O("keys"),entries:C},g)for(v in y)v in N||s(N,v,y[v]);else a(a.P+a.F*(h||j),e,y);return y}},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,n){var r=n(2),a=n(0),s=a["__core-js_shared__"]||(a["__core-js_shared__"]={});(t.exports=function(t,e){return s[t]||(s[t]=void 0!==e?e:{})})("versions",[]).push({version:r.version,mode:n(17)?"pure":"global",copyright:"\xa9 2019 Denis Pushkarev (zloirock.ru)"})},function(t,e){var n=0,r=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++n+r).toString(36))}},function(t,e){t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(t,e,n){var r=n(0).document;t.exports=r&&r.documentElement},function(t,e,n){var r=n(16);t.exports=function(t){return Object(r(t))}},function(t,e,n){var r=n(3);t.exports=function(t,e,n,a){try{return a?e(r(n)[0],n[1]):e(n)}catch(e){var s=t.return;throw void 0!==s&&r(s.call(t)),e}}},function(t,e,n){var r=n(5),a=n(1)("iterator"),s=Array.prototype;t.exports=function(t){return void 0!==t&&(r.Array===t||s[a]===t)}},function(t,e,n){var r=n(3),a=n(12),s=n(1)("species");t.exports=function(t,e){var n,i=r(t).constructor;return void 0===i||null==(n=r(i)[s])?e:a(n)}},function(t,e,n){var r,a,s,i=n(7),o=n(72),u=n(35),c=n(18),l=n(0),d=l.process,h=l.setImmediate,p=l.clearImmediate,f=l.MessageChannel,m=l.Dispatch,b=0,g={},y=function(){var t=+this;if(g.hasOwnProperty(t)){var e=g[t];delete g[t],e()}},v=function(t){y.call(t.data)};h&&p||(h=function(t){for(var e=[],n=1;arguments.length>n;)e.push(arguments[n++]);return g[++b]=function(){o("function"==typeof t?t:Function(t),e)},r(b),b},p=function(t){delete g[t]},"process"==n(14)(d)?r=function(t){d.nextTick(i(y,t,1))}:m&&m.now?r=function(t){m.now(i(y,t,1))}:f?(s=(a=new f).port2,a.port1.onmessage=v,r=i(s.postMessage,s,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(r=function(t){l.postMessage(t+"","*")},l.addEventListener("message",v,!1)):r="onreadystatechange"in c("script")?function(t){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),y.call(t)}}:function(t){setTimeout(i(y,t,1),0)}),t.exports={set:h,clear:p}},function(t,e){t.exports=function(t){try{return{e:!1,v:t()}}catch(t){return{e:!0,v:t}}}},function(t,e,n){var r=n(3),a=n(9),s=n(27);t.exports=function(t,e){if(r(t),a(e)&&e.constructor===t)return e;var n=s.f(t);return(0,n.resolve)(e),n.promise}},function(t,e,n){var r=n(1)("iterator"),a=!1;try{var s=[7][r]();s.return=function(){a=!0},Array.from(s,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!a)return!1;var n=!1;try{var s=[7],i=s[r]();i.next=function(){return{done:n=!0}},s[r]=function(){return i},t(s)}catch(t){}return n}},function(t,e){t.exports=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.v1_tiny_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v1tiny/model.json",e.v2_tiny_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v2tiny/model.json",e.v3_tiny_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v3tiny/model.json",e.v3_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v3/model.json",e.v1_tiny_anchors=[1.08,1.19,3.42,4.41,6.63,11.38,9.42,5.11,16.62,10.52],e.v2_tiny_anchors=[.57273,.677385,1.87446,2.06253,3.33843,5.47434,7.88282,3.52778,9.77052,9.16828],e.v3_anchors=[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326],e.v3_tiny_anchors=[10,14,23,27,37,58,81,82,135,169,344,319],e.v3_masks={3:[[6,7,8],[3,4,5],[0,1,2]],2:[[3,4,5],[1,2,3]]}},function(t,e,n){t.exports=n(47)},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,a,s,i,o,u,c=w(n(28)),l=w(n(29)),d=(r=(0,l.default)(c.default.mark((function t(e,n){return c.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!n){t.next=6;break}return t.next=3,g.loadGraphModel(n,e);case 3:return t.abrupt("return",t.sent);case 6:return t.next=8,g.loadLayersModel(e);case 8:return t.abrupt("return",t.sent);case 9:case"end":return t.stop()}}),t,this)}))),function(t,e){return r.apply(this,arguments)}),h=(a=(0,l.default)(c.default.mark((function t(e,n,r,a,s,i,o,u,l,d){var h,p;return c.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return h=g.tidy((function(){var t=document.createElement("canvas");t.width=d,t.height=d,t.getContext("2d").drawImage(r,0,0,d,d);var e=g.browser.fromPixels(t,3);return e=e.expandDims(0).toFloat().div(g.scalar(255)),n.predict(e)})),t.next=3,(0,O.default)(e,h,u,o,l,"HTMLVideoElement"===r.constructor.name?[r.videoHeight,r.videoWidth]:[r.height,r.width],a,s,i);case 3:return p=t.sent,g.dispose(h),t.abrupt("return",p);case 6:case"end":return t.stop()}}),t,this)}))),function(t,e,n,r,s,i,o,u,c,l){return a.apply(this,arguments)}),p=(s=(0,l.default)(c.default.mark((function t(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x.v1_tiny_model,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return c.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,d(n,r);case 2:return e=t.sent,t.abrupt("return",{predict:function(){var t=(0,l.default)(c.default.mark((function t(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.maxBoxes,s=void 0===a?k:a,i=r.scoreThreshold,o=void 0===i?N:i,u=r.iouThreshold,l=void 0===u?S:u,d=r.numClasses,p=void 0===d?v.default.length:d,f=r.anchors,m=void 0===f?x.v1_tiny_anchors:f,b=r.classNames,g=void 0===b?v.default:b,y=r.inputSize,O=void 0===y?j:y;return c.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,h("v1tiny",e,n,s,o,l,p,m,g,O);case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),dispose:function(){e.dispose(),e=null}});case 4:case"end":return t.stop()}}),t,this)}))),function(){return s.apply(this,arguments)}),f=(i=(0,l.default)(c.default.mark((function t(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x.v2_tiny_model,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return c.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,d(n,r);case 2:return e=t.sent,t.abrupt("return",{predict:function(){var t=(0,l.default)(c.default.mark((function t(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.maxBoxes,s=void 0===a?k:a,i=r.scoreThreshold,o=void 0===i?N:i,u=r.iouThreshold,l=void 0===u?S:u,d=r.numClasses,p=void 0===d?y.default.length:d,f=r.anchors,m=void 0===f?x.v2_tiny_anchors:f,b=r.classNames,g=void 0===b?y.default:b,v=r.inputSize,O=void 0===v?j:v;return c.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,h("v2tiny",e,n,s,o,l,p,m,g,O);case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),dispose:function(){e.dispose(),e=null}});case 4:case"end":return t.stop()}}),t,this)}))),function(){return i.apply(this,arguments)}),m=(o=(0,l.default)(c.default.mark((function t(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x.v3_tiny_model,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return c.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,d(n,r);case 2:return e=t.sent,t.abrupt("return",{predict:function(){var t=(0,l.default)(c.default.mark((function t(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.maxBoxes,s=void 0===a?k:a,i=r.scoreThreshold,o=void 0===i?N:i,u=r.iouThreshold,l=void 0===u?S:u,d=r.numClasses,p=void 0===d?y.default.length:d,f=r.anchors,m=void 0===f?x.v3_tiny_anchors:f,b=r.classNames,g=void 0===b?y.default:b,v=r.inputSize,O=void 0===v?j:v;return c.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,h("v3tiny",e,n,s,o,l,p,m,g,O);case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),dispose:function(){e.dispose(),e=null}});case 4:case"end":return t.stop()}}),t,this)}))),function(){return o.apply(this,arguments)}),b=(u=(0,l.default)(c.default.mark((function t(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x.v3_model,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return c.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,d(n,r);case 2:return e=t.sent,t.abrupt("return",{predict:function(){var t=(0,l.default)(c.default.mark((function t(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.maxBoxes,s=void 0===a?k:a,i=r.scoreThreshold,o=void 0===i?N:i,u=r.iouThreshold,l=void 0===u?S:u,d=r.numClasses,p=void 0===d?y.default.length:d,f=r.anchors,m=void 0===f?x.v3_anchors:f,b=r.classNames,g=void 0===b?y.default:b,v=r.inputSize,O=void 0===v?j:v;return c.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,h("v3",e,n,s,o,l,p,m,g,O);case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}(),dispose:function(){e.dispose(),e=null}});case 4:case"end":return t.stop()}}),t,this)}))),function(){return u.apply(this,arguments)}),g=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e}(n(44)),y=w(n(79)),v=w(n(80)),x=n(45),O=w(n(81));function w(t){return t&&t.__esModule?t:{default:t}}var k=20,j=416,N=.5,S=.3,I={v1tiny:p,v2tiny:f,v3tiny:m,v3:b};e.default=I},function(t,e,n){var r=function(){return this}()||Function("return this")(),a=r.regeneratorRuntime&&Object.getOwnPropertyNames(r).indexOf("regeneratorRuntime")>=0,s=a&&r.regeneratorRuntime;if(r.regeneratorRuntime=void 0,t.exports=n(49),a)r.regeneratorRuntime=s;else try{delete r.regeneratorRuntime}catch(t){r.regeneratorRuntime=void 0}},function(t,e){!function(e){"use strict";var n,r=Object.prototype,a=r.hasOwnProperty,s="function"==typeof Symbol?Symbol:{},i=s.iterator||"@@iterator",o=s.asyncIterator||"@@asyncIterator",u=s.toStringTag||"@@toStringTag",c="object"==typeof t,l=e.regeneratorRuntime;if(l)c&&(t.exports=l);else{(l=e.regeneratorRuntime=c?t.exports:{}).wrap=x;var d="suspendedStart",h="suspendedYield",p="executing",f="completed",m={},b={};b[i]=function(){return this};var g=Object.getPrototypeOf,y=g&&g(g(E([])));y&&y!==r&&a.call(y,i)&&(b=y);var v=j.prototype=w.prototype=Object.create(b);k.prototype=v.constructor=j,j.constructor=k,j[u]=k.displayName="GeneratorFunction",l.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===k||"GeneratorFunction"===(e.displayName||e.name))},l.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,j):(t.__proto__=j,u in t||(t[u]="GeneratorFunction")),t.prototype=Object.create(v),t},l.awrap=function(t){return{__await:t}},N(S.prototype),S.prototype[o]=function(){return this},l.AsyncIterator=S,l.async=function(t,e,n,r){var a=new S(x(t,e,n,r));return l.isGeneratorFunction(e)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},N(v),v[u]="Generator",v[i]=function(){return this},v.toString=function(){return"[object Generator]"},l.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},l.values=E,A.prototype={constructor:A,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(T),!t)for(var e in this)"t"===e.charAt(0)&&a.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=n)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(r,a){return o.type="throw",o.arg=t,e.next=r,a&&(e.method="next",e.arg=n),!!a}for(var s=this.tryEntries.length-1;s>=0;--s){var i=this.tryEntries[s],o=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var u=a.call(i,"catchLoc"),c=a.call(i,"finallyLoc");if(u&&c){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&a.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var s=r;break}}s&&("break"===t||"continue"===t)&&s.tryLoc<=e&&e<=s.finallyLoc&&(s=null);var i=s?s.completion:{};return i.type=t,i.arg=e,s?(this.method="next",this.next=s.finallyLoc,m):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),T(n),m}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var a=r.arg;T(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:E(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=n),m}}}function x(t,e,n,r){var a=e&&e.prototype instanceof w?e:w,s=Object.create(a.prototype),i=new A(r||[]);return s._invoke=function(t,e,n){var r=d;return function(a,s){if(r===p)throw new Error("Generator is already running");if(r===f){if("throw"===a)throw s;return R()}for(n.method=a,n.arg=s;;){var i=n.delegate;if(i){var o=I(i,n);if(o){if(o===m)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===d)throw r=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=p;var u=O(t,e,n);if("normal"===u.type){if(r=n.done?f:h,u.arg===m)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r=f,n.method="throw",n.arg=u.arg)}}}(t,n,i),s}function O(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}function w(){}function k(){}function j(){}function N(t){["next","throw","return"].forEach((function(e){t[e]=function(t){return this._invoke(e,t)}}))}function S(t){var e;this._invoke=function(n,r){function s(){return new Promise((function(e,s){!function e(n,r,s,i){var o=O(t[n],t,r);if("throw"!==o.type){var u=o.arg,c=u.value;return c&&"object"==typeof c&&a.call(c,"__await")?Promise.resolve(c.__await).then((function(t){e("next",t,s,i)}),(function(t){e("throw",t,s,i)})):Promise.resolve(c).then((function(t){u.value=t,s(u)}),i)}i(o.arg)}(n,r,e,s)}))}return e=e?e.then(s,s):s()}}function I(t,e){var r=t.iterator[e.method];if(r===n){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=n,I(t,e),"throw"===e.method))return m;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var a=O(r,t.iterator,e.arg);if("throw"===a.type)return e.method="throw",e.arg=a.arg,e.delegate=null,m;var s=a.arg;return s?s.done?(e[t.resultName]=s.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=n),e.delegate=null,m):s:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,m)}function C(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function T(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function A(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(C,this),this.reset(!0)}function E(t){if(t){var e=t[i];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,s=function e(){for(;++r<t.length;)if(a.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=n,e.done=!0,e};return s.next=s}}return{next:R}}function R(){return{value:n,done:!0}}}(function(){return this}()||Function("return this")())},function(t,e,n){t.exports={default:n(51),__esModule:!0}},function(t,e,n){n(52),n(11),n(24),n(69),n(77),n(78),t.exports=n(2).Promise},function(t,e){},function(t,e,n){var r=n(15),a=n(16);t.exports=function(t){return function(e,n){var s,i,o=String(a(e)),u=r(n),c=o.length;return u<0||u>=c?t?"":void 0:(s=o.charCodeAt(u))<55296||s>56319||u+1===c||(i=o.charCodeAt(u+1))<56320||i>57343?t?o.charAt(u):s:t?o.slice(u,u+2):i-56320+(s-55296<<10)+65536}}},function(t,e,n){t.exports=!n(10)&&!n(31)((function(){return 7!=Object.defineProperty(n(18)("div"),"a",{get:function(){return 7}}).a}))},function(t,e,n){var r=n(9);t.exports=function(t,e){if(!r(t))return t;var n,a;if(e&&"function"==typeof(n=t.toString)&&!r(a=n.call(t)))return a;if("function"==typeof(n=t.valueOf)&&!r(a=n.call(t)))return a;if(!e&&"function"==typeof(n=t.toString)&&!r(a=n.call(t)))return a;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){t.exports=n(4)},function(t,e,n){"use strict";var r=n(58),a=n(19),s=n(23),i={};n(4)(i,n(1)("iterator"),(function(){return this})),t.exports=function(t,e,n){t.prototype=r(i,{next:a(1,n)}),s(t,e+" Iterator")}},function(t,e,n){var r=n(3),a=n(59),s=n(34),i=n(22)("IE_PROTO"),o=function(){},u=function(){var t,e=n(18)("iframe"),r=s.length;for(e.style.display="none",n(35).appendChild(e),e.src="javascript:",(t=e.contentWindow.document).open(),t.write("<script>document.F=Object<\/script>"),t.close(),u=t.F;r--;)delete u.prototype[s[r]];return u()};t.exports=Object.create||function(t,e){var n;return null!==t?(o.prototype=r(t),n=new o,o.prototype=null,n[i]=t):n=u(),void 0===e?n:a(n,e)}},function(t,e,n){var r=n(8),a=n(3),s=n(60);t.exports=n(10)?Object.defineProperties:function(t,e){a(t);for(var n,i=s(e),o=i.length,u=0;o>u;)r.f(t,n=i[u++],e[n]);return t}},function(t,e,n){var r=n(61),a=n(34);t.exports=Object.keys||function(t){return r(t,a)}},function(t,e,n){var r=n(13),a=n(20),s=n(63)(!1),i=n(22)("IE_PROTO");t.exports=function(t,e){var n,o=a(t),u=0,c=[];for(n in o)n!=i&&r(o,n)&&c.push(n);for(;e.length>u;)r(o,n=e[u++])&&(~s(c,n)||c.push(n));return c}},function(t,e,n){var r=n(14);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==r(t)?t.split(""):Object(t)}},function(t,e,n){var r=n(20),a=n(21),s=n(64);t.exports=function(t){return function(e,n,i){var o,u=r(e),c=a(u.length),l=s(i,c);if(t&&n!=n){for(;c>l;)if((o=u[l++])!=o)return!0}else for(;c>l;l++)if((t||l in u)&&u[l]===n)return t||l||0;return!t&&-1}}},function(t,e,n){var r=n(15),a=Math.max,s=Math.min;t.exports=function(t,e){return(t=r(t))<0?a(t+e,0):s(t,e)}},function(t,e,n){var r=n(13),a=n(36),s=n(22)("IE_PROTO"),i=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=a(t),r(t,s)?t[s]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?i:null}},function(t,e,n){"use strict";var r=n(67),a=n(68),s=n(5),i=n(20);t.exports=n(30)(Array,"Array",(function(t,e){this._t=i(t),this._i=0,this._k=e}),(function(){var t=this._t,e=this._k,n=this._i++;return!t||n>=t.length?(this._t=void 0,a(1)):a(0,"keys"==e?n:"values"==e?t[n]:[n,t[n]])}),"values"),s.Arguments=s.Array,r("keys"),r("values"),r("entries")},function(t,e){t.exports=function(){}},function(t,e){t.exports=function(t,e){return{value:e,done:!!t}}},function(t,e,n){"use strict";var r,a,s,i,o=n(17),u=n(0),c=n(7),l=n(25),d=n(6),h=n(9),p=n(12),f=n(70),m=n(71),b=n(39),g=n(40).set,y=n(73)(),v=n(27),x=n(41),O=n(74),w=n(42),k=u.TypeError,j=u.process,N=j&&j.versions,S=N&&N.v8||"",I=u.Promise,C="process"==l(j),T=function(){},A=a=v.f,E=!!function(){try{var t=I.resolve(1),e=(t.constructor={})[n(1)("species")]=function(t){t(T,T)};return(C||"function"==typeof PromiseRejectionEvent)&&t.then(T)instanceof e&&0!==S.indexOf("6.6")&&-1===O.indexOf("Chrome/66")}catch(t){}}(),R=function(t){var e;return!(!h(t)||"function"!=typeof(e=t.then))&&e},$=function(t,e){if(!t._n){t._n=!0;var n=t._c;y((function(){for(var r=t._v,a=1==t._s,s=0,i=function(e){var n,s,i,o=a?e.ok:e.fail,u=e.resolve,c=e.reject,l=e.domain;try{o?(a||(2==t._h&&D(t),t._h=1),!0===o?n=r:(l&&l.enter(),n=o(r),l&&(l.exit(),i=!0)),n===e.promise?c(k("Promise-chain cycle")):(s=R(n))?s.call(n,u,c):u(n)):c(r)}catch(t){l&&!i&&l.exit(),c(t)}};n.length>s;)i(n[s++]);t._c=[],t._n=!1,e&&!t._h&&_(t)}))}},_=function(t){g.call(u,(function(){var e,n,r,a=t._v,s=F(t);if(s&&(e=x((function(){C?j.emit("unhandledRejection",a,t):(n=u.onunhandledrejection)?n({promise:t,reason:a}):(r=u.console)&&r.error&&r.error("Unhandled promise rejection",a)})),t._h=C||F(t)?2:1),t._a=void 0,s&&e.e)throw e.v}))},F=function(t){return 1!==t._h&&0===(t._a||t._c).length},D=function(t){g.call(u,(function(){var e;C?j.emit("rejectionHandled",t):(e=u.onrejectionhandled)&&e({promise:t,reason:t._v})}))},M=function(t){var e=this;e._d||(e._d=!0,(e=e._w||e)._v=t,e._s=2,e._a||(e._a=e._c.slice()),$(e,!0))},z=function(t){var e,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===t)throw k("Promise can't be resolved itself");(e=R(t))?y((function(){var r={_w:n,_d:!1};try{e.call(t,c(z,r,1),c(M,r,1))}catch(t){M.call(r,t)}})):(n._v=t,n._s=1,$(n,!1))}catch(t){M.call({_w:n,_d:!1},t)}}};E||(I=function(t){f(this,I,"Promise","_h"),p(t),r.call(this);try{t(c(z,this,1),c(M,this,1))}catch(t){M.call(this,t)}},(r=function(t){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(75)(I.prototype,{then:function(t,e){var n=A(b(this,I));return n.ok="function"!=typeof t||t,n.fail="function"==typeof e&&e,n.domain=C?j.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&$(this,!1),n.promise},catch:function(t){return this.then(void 0,t)}}),s=function(){var t=new r;this.promise=t,this.resolve=c(z,t,1),this.reject=c(M,t,1)},v.f=A=function(t){return t===I||t===i?new s(t):a(t)}),d(d.G+d.W+d.F*!E,{Promise:I}),n(23)(I,"Promise"),n(76)("Promise"),i=n(2).Promise,d(d.S+d.F*!E,"Promise",{reject:function(t){var e=A(this);return(0,e.reject)(t),e.promise}}),d(d.S+d.F*(o||!E),"Promise",{resolve:function(t){return w(o&&this===i?I:this,t)}}),d(d.S+d.F*!(E&&n(43)((function(t){I.all(t).catch(T)}))),"Promise",{all:function(t){var e=this,n=A(e),r=n.resolve,a=n.reject,s=x((function(){var n=[],s=0,i=1;m(t,!1,(function(t){var o=s++,u=!1;n.push(void 0),i++,e.resolve(t).then((function(t){u||(u=!0,n[o]=t,--i||r(n))}),a)})),--i||r(n)}));return s.e&&a(s.v),n.promise},race:function(t){var e=this,n=A(e),r=n.reject,a=x((function(){m(t,!1,(function(t){e.resolve(t).then(n.resolve,r)}))}));return a.e&&r(a.v),n.promise}})},function(t,e){t.exports=function(t,e,n,r){if(!(t instanceof e)||void 0!==r&&r in t)throw TypeError(n+": incorrect invocation!");return t}},function(t,e,n){var r=n(7),a=n(37),s=n(38),i=n(3),o=n(21),u=n(26),c={},l={};(e=t.exports=function(t,e,n,d,h){var p,f,m,b,g=h?function(){return t}:u(t),y=r(n,d,e?2:1),v=0;if("function"!=typeof g)throw TypeError(t+" is not iterable!");if(s(g)){for(p=o(t.length);p>v;v++)if((b=e?y(i(f=t[v])[0],f[1]):y(t[v]))===c||b===l)return b}else for(m=g.call(t);!(f=m.next()).done;)if((b=a(m,y,f.value,e))===c||b===l)return b}).BREAK=c,e.RETURN=l},function(t,e){t.exports=function(t,e,n){var r=void 0===n;switch(e.length){case 0:return r?t():t.call(n);case 1:return r?t(e[0]):t.call(n,e[0]);case 2:return r?t(e[0],e[1]):t.call(n,e[0],e[1]);case 3:return r?t(e[0],e[1],e[2]):t.call(n,e[0],e[1],e[2]);case 4:return r?t(e[0],e[1],e[2],e[3]):t.call(n,e[0],e[1],e[2],e[3])}return t.apply(n,e)}},function(t,e,n){var r=n(0),a=n(40).set,s=r.MutationObserver||r.WebKitMutationObserver,i=r.process,o=r.Promise,u="process"==n(14)(i);t.exports=function(){var t,e,n,c=function(){var r,a;for(u&&(r=i.domain)&&r.exit();t;){a=t.fn,t=t.next;try{a()}catch(r){throw t?n():e=void 0,r}}e=void 0,r&&r.enter()};if(u)n=function(){i.nextTick(c)};else if(!s||r.navigator&&r.navigator.standalone)if(o&&o.resolve){var l=o.resolve(void 0);n=function(){l.then(c)}}else n=function(){a.call(r,c)};else{var d=!0,h=document.createTextNode("");new s(c).observe(h,{characterData:!0}),n=function(){h.data=d=!d}}return function(r){var a={fn:r,next:void 0};e&&(e.next=a),t||(t=a,n()),e=a}}},function(t,e,n){var r=n(0).navigator;t.exports=r&&r.userAgent||""},function(t,e,n){var r=n(4);t.exports=function(t,e,n){for(var a in e)n&&t[a]?t[a]=e[a]:r(t,a,e[a]);return t}},function(t,e,n){"use strict";var r=n(0),a=n(2),s=n(8),i=n(10),o=n(1)("species");t.exports=function(t){var e="function"==typeof a[t]?a[t]:r[t];i&&e&&!e[o]&&s.f(e,o,{configurable:!0,get:function(){return this}})}},function(t,e,n){"use strict";var r=n(6),a=n(2),s=n(0),i=n(39),o=n(42);r(r.P+r.R,"Promise",{finally:function(t){var e=i(this,a.Promise||s.Promise),n="function"==typeof t;return this.then(n?function(n){return o(e,t()).then((function(){return n}))}:t,n?function(n){return o(e,t()).then((function(){throw n}))}:t)}})},function(t,e,n){"use strict";var r=n(6),a=n(27),s=n(41);r(r.S,"Promise",{try:function(t){var e=a.f(this),n=s(t);return(n.e?e.reject:e.resolve)(n.v),e.promise}})},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=["person","bicycle","car","motorbike","aeroplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","sofa","pottedplant","bed","diningtable","toilet","tvmonitor","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"]},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=["aeroplane","bicycle","bird","boat","bottle","bus","car","cat","chair","cow","diningtable","dog","horse","motorbike","person","pottedplant","sheep","sofa","train","tvmonitor"]},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,a=d(n(82)),s=d(n(28)),i=d(n(87)),o=d(n(29)),u=(r=(0,o.default)(s.default.mark((function t(e,n,r,a,o,u,l,d,p){var f,m,b,g,y,v,x,O,w,k,j;return s.default.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return f=e.indexOf("v3")>-1,m=h(f,n,r,a,u),b=(0,i.default)(m,2),g=b[0],y=b[1],v=[],x=[],O=[],w=c.argMax(y,-1),k=c.max(y,-1),t.next=9,c.image.nonMaxSuppressionAsync(g,k,l,p,d);case 9:return(j=t.sent).size&&c.tidy((function(){var t=c.gather(g,j),e=c.gather(k,j);t.split(j.size).map((function(t){v.push(t.dataSync())})),e.dataSync().map((function(t){x.push(t)})),O=w.gather(j).dataSync()})),k.dispose(),w.dispose(),j.dispose(),g.dispose(),y.dispose(),t.abrupt("return",v.map((function(t,e){var n=Math.max(0,t[0]),r=Math.max(0,t[1]),a=Math.min(u[0],t[2]),s=Math.min(u[1],t[3]);return{top:n,left:r,bottom:a,right:s,height:a-n,width:s-r,score:x[e],class:o[O[e]]}})));case 17:case"end":return t.stop()}}),t,this)}))),function(t,e,n,a,s,i,o,u,c){return r.apply(this,arguments)}),c=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e}(n(44)),l=n(45);function d(t){return t&&t.__esModule?t:{default:t}}function h(t,e,n,r,a){return c.tidy((function(){var s=1,o=void 0,u=void 0;t?(s=e.length,u=l.v3_masks[s],o=e[0].shape.slice(1,3).map((function(t){return 32*t}))):o=e.shape.slice(1,3);for(var d=c.tensor1d(n).reshape([-1,2]),h=[],f=[],m=0;m<s;m++){var b=p(t,t?e[m]:e,t?d.gather(c.tensor1d(u[m],"int32")):d,r,o,a),g=(0,i.default)(b,2),y=g[0],v=g[1];h.push(y),f.push(v)}return[h=c.concat(h),f=c.concat(f)]}))}function p(t,e,n,r,s,o){var u=function(t,e,n,r,a){var s=n.shape[0],o=c.reshape(n,[1,1,s,2]),u=e.shape.slice(1,3),l=c.tile(c.reshape(c.range(0,u[0]),[-1,1,1,1]),[1,u[1],1,1]),d=c.tile(c.reshape(c.range(0,u[1]),[1,-1,1,1]),[u[0],1,1,1]),h=c.concat([d,l],3).cast(e.dtype);e=e.reshape([u[0],u[1],s,r+5]);var p=c.split(e,[2,2,1,r],3),f=(0,i.default)(p,4),m=f[0],b=f[1],g=f[2],y=f[3];return[c.div(c.add(c.sigmoid(m),h),u.reverse()),c.div(c.mul(c.exp(b),o),a.reverse()),c.sigmoid(g),t?c.sigmoid(y):c.softmax(y)]}(t,e,n,r,s),l=(0,i.default)(u,4),d=l[0],h=l[1],p=l[2],f=l[3],m=function(t,e,n){var r=c.concat(c.split(t,2,3).reverse(),3),s=c.concat(c.split(e,2,3).reverse(),3),i=c.mul(c.sub(r,c.div(s,2)),n),o=c.mul(c.add(r,c.div(s,2)),n);return c.concat([].concat((0,a.default)(c.split(i,2,3)),(0,a.default)(c.split(o,2,3))),3)}(d,h,o);m=m.reshape([-1,4]);var b=c.mul(p,f);return[m,b=c.reshape(b,[-1,r])]}e.default=u},function(t,e,n){"use strict";e.__esModule=!0;var r,a=(r=n(83))&&r.__esModule?r:{default:r};e.default=function(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return(0,a.default)(t)}},function(t,e,n){t.exports={default:n(84),__esModule:!0}},function(t,e,n){n(11),n(85),t.exports=n(2).Array.from},function(t,e,n){"use strict";var r=n(7),a=n(6),s=n(36),i=n(37),o=n(38),u=n(21),c=n(86),l=n(26);a(a.S+a.F*!n(43)((function(t){Array.from(t)})),"Array",{from:function(t){var e,n,a,d,h=s(t),p="function"==typeof this?this:Array,f=arguments.length,m=f>1?arguments[1]:void 0,b=void 0!==m,g=0,y=l(h);if(b&&(m=r(m,f>2?arguments[2]:void 0,2)),null==y||p==Array&&o(y))for(n=new p(e=u(h.length));e>g;g++)c(n,g,b?m(h[g],g):h[g]);else for(d=y.call(h),n=new p;!(a=d.next()).done;g++)c(n,g,b?i(d,m,[a.value,g],!0):a.value);return n.length=g,n}})},function(t,e,n){"use strict";var r=n(8),a=n(19);t.exports=function(t,e,n){e in t?r.f(t,e,a(0,n)):t[e]=n}},function(t,e,n){"use strict";e.__esModule=!0;var r=s(n(88)),a=s(n(91));function s(t){return t&&t.__esModule?t:{default:t}}e.default=function(t,e){if(Array.isArray(t))return t;if((0,r.default)(Object(t)))return function(t,e){var n=[],r=!0,s=!1,i=void 0;try{for(var o,u=(0,a.default)(t);!(r=(o=u.next()).done)&&(n.push(o.value),!e||n.length!==e);r=!0);}catch(t){s=!0,i=t}finally{try{!r&&u.return&&u.return()}finally{if(s)throw i}}return n}(t,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}},function(t,e,n){t.exports={default:n(89),__esModule:!0}},function(t,e,n){n(24),n(11),t.exports=n(90)},function(t,e,n){var r=n(25),a=n(1)("iterator"),s=n(5);t.exports=n(2).isIterable=function(t){var e=Object(t);return void 0!==e[a]||"@@iterator"in e||s.hasOwnProperty(r(e))}},function(t,e,n){t.exports={default:n(92),__esModule:!0}},function(t,e,n){n(24),n(11),t.exports=n(93)},function(t,e,n){var r=n(3),a=n(26);t.exports=n(2).getIterator=function(t){var e=a(t);if("function"!=typeof e)throw TypeError(t+" is not iterable!");return r(e.call(t))}}]))},ie1u:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,a=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^a,e.a=a-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("uQAw")&&n("VRIy")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.tychei=u}(0,t,n("uQAw"))}).call(this,n("1/IK")(t))},iuCH:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({abs_:function(t){const e=Object(s.a)(t,"x","abs"),n={x:e};return r.a.runKernelFunc((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e)),n,null,a.a)}})},jLCh:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("uBja"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,i,u,c=[1,1],l){let d=e,h=!1;3===e.rank&&(h=!0,d=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const p={dy:d,filter:n},f={strides:i,pad:u,dimRoundingMode:l,dilations:c,inputShape:t},m=r.a.runKernelFunc(e=>{const r=s.a(t,n.shape,i,c,u,l,!0);return e.depthwiseConv2DDerInput(d,n,r)},p,null,a.N,f);return h?Object(o.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},jXH2:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({tile_:function(t,e){const n=Object(s.a)(t,"x","tile",null);i.b(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const o=[n],u={x:n},c={reps:e};return r.a.runKernelFunc((t,r)=>{const a=t.tile(n,e);return r([n]),a},u,null,a.Mc,c,o)}})},jgXy:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("3rNm"),u=n("VO80");const c=Object(u.b)({erf_:function(t){let e=Object(s.a)(t,"x","erf");i.b("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Object(o.a)(e,"float32"));const n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.erf(e);return n([e]),r},n,null,a.W)}})},k7Jv:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("o/e8"),s=n("VO80");const i=Object(s.b)({square_:function(t){const e=Object(a.a)(t,"x","square"),n=[e];return r.a.runKernelFunc((t,n)=>(n([e]),t.square(e)),{x:e},null,"Square",{},n,[])}})},k9tH:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({mirrorPad_:function(t,e,n){i.b("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const o=Object(s.a)(t,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.b(e.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${e.length}.`);const u="reflect"===n?1:0;for(let r=0;r<o.rank;r++)i.b(2===e[r].length,()=>"Invalid number of paddings. Must be length of 2 each."),i.b(e[r][0]>=0&&e[r][0]<=o.shape[r]-u&&e[r][1]>=0&&e[r][1]<=o.shape[r]-u,()=>`Padding in dimension ${r} cannot be greater than or equal to ${o.shape[r]-u} or less than 0 for input of shape `+o.shape);const c={paddings:e,mode:n},l={x:o};return r.a.runKernel(a.Nb,l,c)}})},kRdc:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({add_:function(t,e){let n=Object(i.a)(t,"a","add"),o=Object(i.a)(e,"b","add");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.add(n,o);return e([n,o]),r},u,null,a.d)}})},kXpR:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("3rNm");const u=Object(i.b)({relu_:function(t){const e=Object(s.a)(t,"x","relu"),n={x:e};return r.a.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?Object(o.a)(e,"int32"):t.relu(e)),n,null,a.fc)}})},kaMP:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT"),c=n("0+74");const l=Object(o.b)({gather_:function(t,e,n=0){const o=Object(s.a)(t,"x","gather"),l=Object(s.a)(e,"indices","gather","int32"),d={x:o,indices:l},h={axis:n};return r.a.runKernelFunc((t,e)=>{const r=Object(i.I)(n,o.shape)[0],a=Object(c.collectGatherOpShapeInfo)(o,l,r),s=t.gather(o,Object(u.a)(l,[l.size]),r);return e([o,l]),Object(u.a)(s,a.outputShape)},d,null,a.jb,h)}})},l0gX:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("3rNm"),u=n("uBja"),c=n("VO80"),l=n("NclT");const d=Object(c.b)({avgPool_:function(t,e,n,c,d){const h=Object(s.a)(t,"x","avgPool","float32");i.b(u.h(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let p=h,f=!1;3===h.rank&&(f=!0,p=Object(l.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.b(4===p.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`),null!=d&&i.b(i.v(c),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const m={x:p},b={filterSize:e,strides:n,pad:c,dimRoundingMode:d};let g=r.a.runKernelFunc((t,r)=>{const a=u.e(p.shape,e,n,1,c,d);return r([p]),1===a.filterWidth&&1===a.filterHeight&&i.a(a.inShape,a.outShape)?p.clone():t.avgPool(p,a)},m,null,a.o,b);return g=Object(o.a)(g,h.dtype),f?Object(l.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},"lIk/":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},lg8H:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("o/e8"),a=n("atXS"),s=n("WVnj");function i(t,e){Object(a.d)(t);const n=Object(r.c)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(s.a)(t,null,n,e)}},mEeB:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},mdDO:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("uBja"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({conv3DBackpropInput_:function(t,e,n,o,c){s.b(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let l=t,d=e,h=!1;4===e.rank&&(h=!0,d=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),l=[1,t[0],t[1],t[2],t[3]]);const p=l[4],f=d.shape[4];s.b(5===l.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+l.length+"."),s.b(5===d.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+d.rank),s.b(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),s.b(p===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[3]}.`),s.b(f===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${f}) must match output depth for filter ${n.shape[4]}.`);const m={dy:d,filter:n},b={pad:c,strides:o,inputShape:l},g=r.a.runKernelFunc(t=>{const e=i.b(l,n.shape,o,1,c);return t.conv3dDerInput(d,n,e)},m,null,a.F,b);return h?Object(u.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},"n+ZZ":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({maxPool_:function(t,e,n,u,l){const d=Object(s.a)(t,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.b(4===h.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`),i.b(o.h(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=l&&i.b(i.v(u),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const f={x:h},m={filterSize:e,strides:n,pad:u,dimRoundingMode:l},b=r.a.runKernelFunc((t,r)=>{const a=o.e(h.shape,e,n,1,u,l);let s;return s=1===a.filterWidth&&1===a.filterHeight&&i.a(a.inShape,a.outShape)?h.clone():t.maxPool(h,a),r([h,s]),s},f,null,a.Eb,m);return p?Object(c.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},"n/2y":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({softplus_:function(t){const e=Object(s.a)(t,"x","softplus"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.softplus(e);return n([e]),r},n,null,a.zc)}})},njhW:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({elu_:function(t){const e=Object(s.a)(t,"x","elu"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.elu(e);return n([r]),r},n,null,a.T)}})},nnua:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},"o/e8":function(t,e,n){"use strict";n.d(e,"c",(function(){return u})),n.d(e,"a",(function(){return l})),n.d(e,"b",(function(){return d}));var r=n("auKK"),a=n("szMd"),s=n("NNfn"),i=n("atXS"),o=n("6366");function u(t,e){let n=t;if(Object(i.A)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Object(i.A)(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,n,r){if(r=r||[],!Array.isArray(e)&&!Object(i.A)(e))return void Object(i.b)(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);Object(i.b)(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Object(i.b)(e.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${e.length} elements`);const a=n.slice(1);for(let s=0;s<e.length;++s)t(e[s],a,r.concat(s))}(t,r,[]),r}function c(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function l(t,e,n,a="numeric"){if(t instanceof s.a)return c(a,t.dtype,e,n),t;let l=Object(i.r)(t);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),c(a,l,e,n),null==t||!Object(i.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(t,l);Object(i.A)(t)||Array.isArray(t)||(t=[t]);const h="string"!==l?Object(o.toTypedArray)(t,l):Object(i.m)(t,[],!0);return r.a.makeTensor(h,d,l)}function d(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((t,r)=>l(t,`${e}[${r}]`,n),r)}},"o0+U":function(t,e,n){"use strict";n.r(e),n.d(e,"validateUpdateShape",(function(){return a})),n.d(e,"validateInput",(function(){return s})),n.d(e,"calculateShapes",(function(){return i}));var r=n("atXS");function a(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${e.shape}, shape: ${t}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(t.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+t.length-r)throw new Error(s+" update.rank != "+(a+t.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==e.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==t[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${t[i+a]})`)}function s(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}a(n,e,t)}function i(t,e,n){const a=e.shape.length,s=a>1?e.shape[a-1]:1,i=n.length;let o=1;for(let r=s;r<i;++r)o*=n[r];const u=s<1?1:s;return{sliceRank:s,numUpdates:Object(r.N)(e.shape)/u,sliceSize:o,strides:[...Object(r.j)(n.slice(0,s)),1],outputSize:Object(r.N)(n)}}},o0o1:function(t,e,n){t.exports=n("ls82")},o3Rt:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({acos_:function(t){const e=Object(s.a)(t,"x","acos"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.acos(e);return n([e]),r},n,null,a.b)}})},oAkI:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({sub_:function(t,e){let n=Object(i.a)(t,"a","sub"),o=Object(i.a)(e,"b","sub");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.subtract(n,o);return e([n,o]),r},u,null,a.Ic)}})},"oJu+":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({zerosLike_:function(t){const e=Object(s.a)(t,"x","zerosLike"),n={x:e};return r.a.runKernelFunc(t=>t.zerosLike(e),n,null,a.Sc)}})},p4Cv:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("AoCb"),a=n("o/e8");const s=async function(t){const e=Object(a.a)(t,"condition","whereAsync","bool"),n=await e.data(),s=Object(r.a)(e.shape,n);return t!==e&&e.dispose(),s}},"pJ3+":function(t,e,n){var r;!function(a,s){var i,o=this,u=s.pow(256,6),c=s.pow(2,52),l=2*c;function d(t,e,n){var r=[],d=f(function t(e,n){var r,a=[],s=typeof e;if(n&&"object"==s)for(r in e)try{a.push(t(e[r],n-1))}catch(i){}return a.length?a:"string"==s?e:e+"\0"}((e=1==e?{entropy:!0}:e||{}).entropy?[t,m(a)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(256):(t=new Uint8Array(256),(o.crypto||o.msCrypto).getRandomValues(t)),m(t)}catch(r){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,m(a)]}}():t,3),r),b=new h(r),g=function(){for(var t=b.g(6),e=u,n=0;t<c;)t=256*(t+n),e*=256,n=b.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return g.int32=function(){return 0|b.g(4)},g.quick=function(){return b.g(4)/4294967296},g.double=g,f(m(b.S),a),(e.pass||n||function(t,e,n,r){return r&&(r.S&&p(r,b),t.state=function(){return p(b,{})}),n?(s.random=t,e):t})(g,d,"global"in e?e.global:this==s,e.state)}function h(t){var e,n=t.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(t=[n++]);a<256;)i[a]=a++;for(a=0;a<256;a++)i[a]=i[s=255&s+t[a%n]+(e=i[a])],i[s]=e;(r.g=function(t){for(var e,n=0,a=r.i,s=r.j,i=r.S;t--;)e=i[a=255&a+1],n=256*n+i[255&(i[a]=i[s=255&s+e])+(i[s]=e)];return r.i=a,r.j=s,n})(256)}function p(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function f(t,e){for(var n,r=t+"",a=0;a<r.length;)e[255&a]=255&(n^=19*e[255&a])+r.charCodeAt(a++);return m(e)}function m(t){return String.fromCharCode.apply(0,t)}if(s.seedrandom=d,f(s.random(),a),t.exports){t.exports=d;try{i=n(3)}catch(b){}}else void 0===(r=function(){return d}.call(e,n,e,t))||(t.exports=r)}([],Math)},pJ6O:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("uQAw")&&n("VRIy")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xorwow=u}(0,t,n("uQAw"))}).call(this,n("1/IK")(t))},parS:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({mul_:function(t,e){let n=Object(i.a)(t,"a","mul"),o=Object(i.a)(e,"b","mul");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.multiply(n,o);return e([n,o]),r},u,null,a.Pb)}})},q5K1:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("YFqc"),a=n.n(r),s=n("q1tI"),i=n.n(s).a.createElement;function o(){return i("nav",{className:"flex justify-between items-center mb-5 p-4 md:flex-row flex-col"},i("div",{className:"flex items-center flex-row"},i("img",{src:"/img/morianimal.svg",className:"mr-4",style:{width:"50px"}}),i("h1",{className:"md:text-3xl text-xl font-semibold py-4",style:{fontFamily:"Montserrat"}},"MORI ANIMAL")),i("div",{className:"md:flex md:items-center md:w-auto mt-3 md:mt-0"},i("ul",{className:"flex items-center flex-wrap justify-between",id:"mobileMenu"},i("li",{className:"pr-4"},i(a.a,{href:"/list"},i("a",null,"\u4e00\u89a7"))),i("li",{className:"pr-4"},i(a.a,{href:"/camera"},i("a",null,"\u30ab\u30e1\u30e9"))),i("li",{className:""},i(a.a,{href:"/remote"},i("a",null,"\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0"))))))}},"qA+V":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},r9q9:function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n("o/e8"),a=n("atXS"),s=n("kRdc"),i=n("NuWS"),o=n("TyAZ"),u=n("E1lT"),c=n("wCH+"),l=n("VO80"),d=n("NclT"),h=n("oAkI"),p=n("4FMF");const f=Object(l.b)({logSumExp_:function(t,e=null,n=!1){const l=Object(r.a)(t,"x","logSumExp"),f=Object(a.I)(e,l.shape),m=Object(c.a)(l,f,!0),b=Object(h.a)(l,m),g=Object(o.a)(b),y=Object(p.a)(g,f),v=Object(u.a)(y),x=Object(s.a)(Object(d.a)(m,v.shape),v);if(n){const t=Object(i.e)(x.shape,f);return Object(d.a)(x,t)}return x}})},rm0a:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("VO80"),c=n("NclT"),l=n("yRKQ");const d=Object(u.b)({min_:function(t,e=null,n=!1){const u=Object(s.a)(t,"x","min"),d={x:u},h={axis:e,keepDims:n};return r.a.runKernelFunc((t,r)=>{const a=Object(i.I)(e,u.shape);let s=a;const d=o.f(s,u.rank);let h=u;null!=d&&(h=Object(l.a)(u,d),s=o.g(s.length,u.rank));const p=t.min(h,s);null!=d&&h.dispose();let f=p;if(n){const t=o.e(f.shape,a);f=Object(c.a)(p,t),p.dispose()}return r([u,f]),f},d,null,a.Lb,h)}})},rqsJ:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},s57M:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({selu_:function(t){const e=Object(s.a)(t,"x","selu"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.selu(e);return n([e]),r},n,null,a.sc)}})},shz4:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({lessEqual_:function(t,e){let n=Object(i.a)(t,"a","lessEqual"),u=Object(i.a)(e,"b","lessEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc((t,e)=>{const r=t.lessEqual(n,u);return e([n,u]),r},c,null,a.vb)}})},srVO:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("o0o1"),a=n.n(r),s=n("HaE+"),i=n("v4IS");function o(){return u.apply(this,arguments)}function u(){return(u=Object(s.a)(a.a.mark((function t(){var e;return a.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,i.a.currentAuthenticatedUser();case 3:return e=t.sent,t.abrupt("return",{error:null,result:e});case 7:return t.prev=7,t.t0=t.catch(0),console.log("error signing in",t.t0),t.abrupt("return",{error:"Can't sign in",result:""});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))).apply(this,arguments)}},szMd:function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"a",(function(){return i})),n.d(e,"d",(function(){return o}));var r=n("atXS");class a{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Object(r.x)(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("="))),e}(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)})}}}function s(){return i}let i=null;function o(t){i=t}},tQDl:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({reciprocal_:function(t){const e=Object(s.a)(t,"x","reciprocal"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.reciprocal(e);return n([e]),r},n,null,a.ec)}})},th0q:function(t,e,n){"use strict";n.d(e,"a",(function(){return m}));var r=n("atXS"),a=n("B3db"),s=n("ZJ6U"),i=n("JLAb"),o=n("VO80"),u=n("17CO"),c=n("NclT"),l=n("bTzI"),d=n("RbuM"),h=n("Wiw4"),p=n("oJu+"),f=n("Grcp");const m=Object(o.b)({rfft_:function(t,e){Object(r.b)("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got "+t.dtype);let n=t.shape[t.shape.length-1];const o=t.size/n;let m;if(null!=e&&e<n){const r=t.shape.map(t=>0),a=t.shape.map(t=>t);a[t.shape.length-1]=e,m=Object(l.a)(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,m=Object(s.a)([t,Object(h.a)(r)],t.shape.length-1),n=e}else m=t;const b=Object(p.a)(m),g=Object(c.a)(Object(a.a)(m,b),[o,n]),y=Object(f.a)(g),v=Math.floor(n/2)+1,x=Object(u.a)(y),O=Object(i.a)(y),w=Object(d.a)(x,[v,n-v],x.shape.length-1),k=Object(d.a)(O,[v,n-v],O.shape.length-1),j=m.shape.slice();return j[m.shape.length-1]=v,Object(c.a)(Object(a.a)(w[0],k[0]),j)}})},uBja:function(t,e,n){"use strict";n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return s})),n.d(e,"f",(function(){return i})),n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return u})),n.d(e,"c",(function(){return c})),n.d(e,"i",(function(){return f})),n.d(e,"h",(function(){return m})),n.d(e,"g",(function(){return b}));var r=n("atXS");function a(t,e,n,r,a="NHWC",s){return o(t,[...e,t[3]],n,s,r,null,null,b(a))}function s(t,e,n,r,a,s,i="channelsLast"){const[u,c]=l(e);let d;if("channelsLast"===i)d=[u,c,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);d=[u,c,t[1],t[1]]}return o(t,d,n,r,a,s,!1,i)}function i(t,e,n,r,a,s,i="NDHWC"){const[o,c,l]=d(e);let h,p;if("NDHWC"===i)p="channelsLast",h=[o,c,l,t[4],t[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);p="channelsFirst",h=[o,c,l,t[1],t[1]]}return u(t,h,n,r,a,!1,p,s)}function o(t,e,n,a,s,i,o=!1,u="channelsLast"){let[d,f,m,b]=[-1,-1,-1,-1];if("channelsLast"===u)[d,f,m,b]=t;else{if("channelsFirst"!==u)throw new Error("Unknown dataFormat "+u);[d,b,f,m]=t}const[g,y,,v]=e,[x,O]=l(n),[w,k]=l(a),j=h(g,w),N=h(y,k),{padInfo:S,outHeight:I,outWidth:C}=function(t,e,n,a,s,i,o,u,l){let d,h,f;if("number"===typeof t){d={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,a,s){null==a&&(a=c(t,e,n));const i=t[0],o=t[1],u=p((i-e+2*a)/n+1,s);r.b(r.v(u),()=>`The output # of rows (${u}) must be an integer. Change the stride and/or zero pad parameters`);const l=p((o-e+2*a)/n+1,s);return r.b(r.v(l),()=>`The output # of columns (${l}) must be an integer. Change the stride and/or zero pad parameters`),[u,l]}([e,n],i,a,t,u);h=s[0],f=s[1]}else if("same"===t){h=Math.ceil(e/a),f=Math.ceil(n/s);const t=Math.max(0,(h-1)*a+i-e),r=Math.max(0,(f-1)*s+o-n),u=Math.floor(t/2),c=t-u,l=Math.floor(r/2);d={top:u,bottom:c,left:l,right:r-l,type:"SAME"}}else if("valid"===t)d={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-i+1)/a),f=Math.ceil((n-o+1)/s);else{if("object"!==typeof t)throw Error("Unknown padding parameter: "+t);{const r="channelsLast"===l?t[1][0]:t[2][0],c="channelsLast"===l?t[1][1]:t[2][1],m="channelsLast"===l?t[2][0]:t[3][0],b="channelsLast"===l?t[2][1]:t[3][1];d={top:r,bottom:c,left:m,right:b,type:0===r&&0===c&&0===m&&0===b?"VALID":"EXPLICIT"},h=p((e-i+r+c)/a+1,u),f=p((n-o+m+b)/s+1,u)}}return{padInfo:d,outHeight:h,outWidth:f}}(s,f,m,x,O,j,N,i,u),T=o?v*b:v;let A;return"channelsFirst"===u?A=[d,T,I,C]:"channelsLast"===u&&(A=[d,I,C,T]),{batchSize:d,dataFormat:u,inHeight:f,inWidth:m,inChannels:b,outHeight:I,outWidth:C,outChannels:T,padInfo:S,strideHeight:x,strideWidth:O,filterHeight:g,filterWidth:y,effectiveFilterHeight:j,effectiveFilterWidth:N,dilationHeight:w,dilationWidth:k,inShape:t,outShape:A,filterShape:e}}function u(t,e,n,a,s,i=!1,o="channelsLast",u){let[l,f,m,b,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[l,f,m,b,g]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[l,g,f,m,b]=t}const[y,v,x,,O]=e,[w,k,j]=d(n),[N,S,I]=d(a),C=h(y,N),T=h(v,S),A=h(x,I),{padInfo:E,outDepth:R,outHeight:$,outWidth:_}=function(t,e,n,a,s,i,o,u,l,d,h){let f,m,b,g;if("number"===typeof t){f={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,a,s,i){null==s&&(s=c(t,e,a));const o=t[0],u=t[1],l=t[2],d=p((o-e+2*s)/a+1,i);r.b(r.v(d),()=>`The output # of depths (${d}) must be an integer. Change the stride and/or zero pad parameters`);const h=p((u-e+2*s)/a+1,i);r.b(r.v(h),()=>`The output # of rows (${h}) must be an integer. Change the stride and/or zero pad parameters`);const f=p((l-e+2*s)/a+1,i);return r.b(r.v(f),()=>`The output # of columns (${f}) must be an integer. Change the stride and/or zero pad parameters`),[d,h,f,n]}([e,n,a,1],u,1,s,t,h);m=i[0],b=i[1],g=i[2]}else if("same"===t){m=Math.ceil(e/s),b=Math.ceil(n/i),g=Math.ceil(a/o);const t=(m-1)*s+u-e,r=(b-1)*i+l-n,c=(g-1)*o+d-a,h=Math.floor(t/2),p=t-h,y=Math.floor(r/2),v=r-y,x=Math.floor(c/2);f={top:y,bottom:v,left:x,right:c-x,front:h,back:p,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);f={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((e-u+1)/s),b=Math.ceil((n-l+1)/i),g=Math.ceil((a-d+1)/o)}return{padInfo:f,outDepth:m,outHeight:b,outWidth:g}}(s,f,m,b,w,k,j,C,T,A,u),F=i?O*g:O;let D;return"channelsFirst"===o?D=[l,F,R,$,_]:"channelsLast"===o&&(D=[l,R,$,_,F]),{batchSize:l,dataFormat:o,inDepth:f,inHeight:m,inWidth:b,inChannels:g,outDepth:R,outHeight:$,outWidth:_,outChannels:F,padInfo:E,strideDepth:w,strideHeight:k,strideWidth:j,filterDepth:y,filterHeight:v,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:T,effectiveFilterWidth:A,dilationDepth:N,dilationHeight:S,dilationWidth:I,inShape:t,outShape:D,filterShape:e}}function c(t,e,n,r=1){const a=h(e,r);return Math.floor((t[0]*(n-1)-n+a)/2)}function l(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function d(t){return"number"===typeof t?[t,t,t]:t}function h(t,e){return e<=1?t:t+(t-1)*(e-1)}function p(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function f(t){const[e,n,r]=l(t);return 1===e&&1===n&&1===r}function m(t,e){return f(t)||f(e)}function b(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}},uDiL:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("uQAw")&&n("VRIy")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xor128=u}(0,t,n("uQAw"))}).call(this,n("1/IK")(t))},uQAw:function(t,e){t.exports=function(){throw new Error("define cannot be used indirect")}},ubnP:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({equal_:function(t,e){let n=Object(i.a)(t,"a","equal"),u=Object(i.a)(e,"b","equal");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc(t=>t.equal(n,u),c,null,a.V)}})},ukBL:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({gatherND_:function(t,e){const n=Object(s.a)(e,"indices","gatherND","int32"),i=Object(s.a)(t,"x","gatherND"),o={params:i,indices:n};return r.a.runKernelFunc(t=>t.gatherND(i,n),o,null,a.ib)}})},ulO0:function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n("auKK"),a=n("wE5H"),s=n("wFtI"),i=n("o/e8"),o=n("atXS"),u=n("3rNm"),c=n("uBja"),l=n("VO80"),d=n("NclT");const h=Object(l.b)({avgPool3d_:function(t,e,n,l,h,p="NDHWC",f){null==f?f=[1,1,1]:Object(a.b)("dilations is deprecated, this field will be gone in v3.0.0.");const m=Object(i.a)(t,"x","avgPool3d","float32");let b=m,g=!1;4===m.rank&&(g=!0,b=Object(d.a)(m,[1,m.shape[0],m.shape[1],m.shape[2],m.shape[3]])),o.b(5===b.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${b.rank}.`),o.b("NDHWC"===p,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+p),o.b(c.h(n,f),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${f}'`),null!=h&&o.b(o.v(l),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${l}.`);const y={x:b},v={filterSize:e,strides:n,pad:l,dimRoundingMode:h,dataFormat:p,dilations:f};let x=r.a.runKernelFunc((t,r)=>{null==f&&(f=[1,1,1]);const a=c.f(b.shape,e,n,f,l,h,p);return r([b]),t.avgPool3d(b,a)},y,null,s.p,v);return x=Object(u.a)(x,b.dtype),g?Object(d.a)(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}})},uy0A:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({greaterEqual_:function(t,e){let n=Object(i.a)(t,"a","greaterEqual"),u=Object(i.a)(e,"b","greaterEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc((t,e)=>{const r=t.greaterEqual(n,u);return e([n,u]),r},c,null,a.lb)}})},vGLV:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI");var s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sparseToDense_:function(t,e,n,i=0){const o=Object(s.a)(t,"sparseIndices","sparseToDense","int32"),u=Object(s.a)(e,"sparseValues","sparseToDense"),c=Object(s.a)(i,"defaultValue","sparseToDense",u.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const a=t.rank>0?t.shape[0]:1,s=t.rank>1?t.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${a}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,u,n,c);const l={sparseIndices:o,sparseValues:u,defaultValue:c},d={outputShape:n};return r.a.runKernelFunc(t=>t.sparseToDense(o,u,n,c),l,null,a.Bc,d)}})},vc8R:function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"d",(function(){return i})),n.d(e,"f",(function(){return o})),n.d(e,"c",(function(){return u})),n.d(e,"e",(function(){return c})),n.d(e,"a",(function(){return l}));var r=n("+hG3");function a(t,e){return s(t,e)}function s(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const a=e(t);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(c(t)){const a=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const o=s(t[i],e,n,r);a[i]=o}return r.delete(t),a}throw new Error("Can't recurse into non-iterable type: "+t)}return n.set(t,a.value),a.value}function i(t,e=o){return function t(e,n,r=new Set){const a=e[0];if(r.has(a))throw new Error("Circular references are not supported.");const s=n(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(c(a)){const s=Array.isArray(a)?[]:{};r.add(a);for(const i in a){const a=t(e.map(t=>t[i]),n,r);s[i]=a}return r.delete(a),s}throw new Error("Can't recurse into non-iterable type: "+a)}return s.value}(t,e)}function o(t){return null===t?null:c(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function u(t,e){const n=new Map;s(t,e,n);for(const a of Array.from(n.keys())){const t=n.get(a);if(r.util.isPromise(t)){const e=await t;n.set(a,e)}}return s(t,e,n)}function c(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"===typeof t&&!(t instanceof r.Tensor))}function l(t){return null==t||(null===(e=t)||"object"!==typeof e&&"function"!==typeof e)||Array.isArray(t)||"object"===typeof t&&t instanceof r.Tensor||r.util.isTypedArray(t);var e}},w4jT:function(t,e,n){"use strict";n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"d",(function(){return h})),n.d(e,"g",(function(){return p})),n.d(e,"a",(function(){return f})),n.d(e,"b",(function(){return N})),n.d(e,"c",(function(){return r}));var r,a=n("+hG3"),s=n("YSVl"),i=n("vc8R");function o(t){return t instanceof a.Tensor?{value:t.clone(),recurse:!1}:Object(i.e)(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class u{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class c extends u{constructor(){super(c.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let r=0;r<n;r++)e[r]=this.get(this.wrap(this.begin+r));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function l(t){return new m(t)}function d(t){return new b(t)}function h(t,e){return new I(t,e)}function p(t,e=r.FAIL){return new C(t,e)}c.INITIAL_CAPACITY=32;class f{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new k(this,t)}filter(t){return new O(this,t)}map(t){return new w(this,t)}mapAsync(t){return new j(this,t)}serialMapAsync(t){return new j(this,t).serial()}flatmap(t){return new S(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t,e=!0){return new x(this,t,e)}columnMajorBatch(t,e=!0,n=i.f){return this.rowMajorBatch(t,e).map(t=>Object(i.d)(t,n))}concatenate(t,e){return new I(l([this,t]),e)}take(t){return t<0||null==t?this:new v(this,t)}skip(t){return t<0||null==t?this:new y(this,t)}prefetch(t){return new T(this,t)}shuffle(t,e){return new A(this,t,e)}serial(){return new g(this)}}class m extends f{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Object(i.b)(e,o)),done:!1};var e}}class b extends f{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: "+t.message,t}}}class g extends f{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class y extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;a.dispose(t.value)}return this.upstream.next()}}class v extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class x extends f{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class O extends f{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;a.dispose(t.value)}}}class w extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Map"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.tensor_util.getTensorsInContainer(t.value),n=this.transform(t.value),r=a.tensor_util.getTensorsInContainer(n);for(const s of e)a.tensor_util.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class k extends f{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class j extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.tensor_util.getTensorsInContainer(t.value),n=await this.transform(t.value),r=a.tensor_util.getTensorsInContainer(n);for(const s of e)a.tensor_util.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class N extends f{constructor(){super(),this.outputQueue=new c,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class S extends N{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=a.tensor_util.getTensorsInContainer(t.value),n=this.transform(t.value),r=a.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of e)a.tensor_util.isTensorInList(s,r)||s.dispose();return!0}}class I extends f{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(r||(r={}));class C extends f{constructor(t,e=r.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;const a=await Object(i.c)(this.iterators,(function(t){if(t instanceof f){return{value:t.next().then(t=>(e++,t.done&&n++,t.value)),recurse:!1}}return{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class T extends f{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new u(e)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class A extends T{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=s.alea(n||a.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}},"wCH+":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("VO80"),c=n("NclT"),l=n("yRKQ");const d=Object(u.b)({max_:function(t,e=null,n=!1){const u=Object(s.a)(t,"x","max"),d={x:u},h={reductionIndices:e,keepDims:n};return r.a.runKernelFunc((t,r)=>{let a=i.I(e,u.shape);const s=o.f(a,u.rank);let d=u;null!=s&&(d=Object(l.a)(u,s),a=o.g(a.length,d.rank));const h=t.max(d,a);null!=s&&d.dispose();let p=h;if(n){const t=o.e(p.shape,i.I(e,u.shape));p=Object(c.a)(p,t),h.dispose()}return r([u,p]),p},d,null,a.Db,h)}})},wE5H:function(t,e,n){"use strict";n.d(e,"g",(function(){return o})),n.d(e,"f",(function(){return u})),n.d(e,"c",(function(){return c})),n.d(e,"b",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return h})),n.d(e,"m",(function(){return p})),n.d(e,"n",(function(){return f})),n.d(e,"t",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"l",(function(){return g})),n.d(e,"u",(function(){return y})),n.d(e,"r",(function(){return v})),n.d(e,"o",(function(){return x})),n.d(e,"k",(function(){return O})),n.d(e,"q",(function(){return w})),n.d(e,"i",(function(){return k})),n.d(e,"j",(function(){return j})),n.d(e,"p",(function(){return N})),n.d(e,"a",(function(){return S})),n.d(e,"s",(function(){return I}));var r=n("auKK"),a=n("szMd"),s=n("NNfn"),i=n("dsKV");function o(){Object(a.c)().set("PROD",!0)}function u(){Object(a.c)().set("DEBUG",!0)}function c(){Object(a.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(t){Object(a.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.a.disposeVariables()}function h(){return r.a}function p(){return r.a.memory()}function f(t){return r.a.profile(t)}function m(t,e){return r.a.tidy(t,e)}function b(t){Object(i.getTensorsInContainer)(t).forEach(t=>t.dispose())}function g(t){return r.a.keep(t)}function y(t){return r.a.time(t)}function v(t){return r.a.setBackend(t)}function x(){return r.a.ready()}function O(){return r.a.backendName}function w(t){r.a.removeBackend(t)}function k(t){return r.a.findBackend(t)}function j(t){return r.a.findBackendFactory(t)}function N(t,e,n=1){return r.a.registerBackend(t,e,n)}function S(){return r.a.backend}function I(t,e){Object(a.c)().setPlatform(t,e)}Object(s.d)(l)},wFtI:function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return i})),n.d(e,"e",(function(){return o})),n.d(e,"f",(function(){return u})),n.d(e,"g",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"i",(function(){return d})),n.d(e,"j",(function(){return h})),n.d(e,"k",(function(){return p})),n.d(e,"l",(function(){return f})),n.d(e,"n",(function(){return m})),n.d(e,"m",(function(){return b})),n.d(e,"o",(function(){return g})),n.d(e,"r",(function(){return y})),n.d(e,"p",(function(){return v})),n.d(e,"q",(function(){return x})),n.d(e,"s",(function(){return O})),n.d(e,"t",(function(){return w})),n.d(e,"u",(function(){return k})),n.d(e,"v",(function(){return j})),n.d(e,"w",(function(){return N})),n.d(e,"x",(function(){return S})),n.d(e,"y",(function(){return I})),n.d(e,"z",(function(){return C})),n.d(e,"A",(function(){return T})),n.d(e,"B",(function(){return A})),n.d(e,"C",(function(){return E})),n.d(e,"D",(function(){return R})),n.d(e,"E",(function(){return $})),n.d(e,"F",(function(){return _})),n.d(e,"G",(function(){return F})),n.d(e,"H",(function(){return D})),n.d(e,"J",(function(){return M})),n.d(e,"I",(function(){return z})),n.d(e,"K",(function(){return L})),n.d(e,"L",(function(){return B})),n.d(e,"M",(function(){return P})),n.d(e,"N",(function(){return V})),n.d(e,"O",(function(){return W})),n.d(e,"P",(function(){return U})),n.d(e,"R",(function(){return K})),n.d(e,"Q",(function(){return G})),n.d(e,"S",(function(){return H})),n.d(e,"T",(function(){return q})),n.d(e,"U",(function(){return X})),n.d(e,"W",(function(){return Y})),n.d(e,"V",(function(){return J})),n.d(e,"X",(function(){return Z})),n.d(e,"Y",(function(){return Q})),n.d(e,"Z",(function(){return tt})),n.d(e,"ab",(function(){return et})),n.d(e,"bb",(function(){return nt})),n.d(e,"cb",(function(){return rt})),n.d(e,"db",(function(){return at})),n.d(e,"fb",(function(){return st})),n.d(e,"jb",(function(){return it})),n.d(e,"ib",(function(){return ot})),n.d(e,"kb",(function(){return ut})),n.d(e,"lb",(function(){return ct})),n.d(e,"nb",(function(){return lt})),n.d(e,"mb",(function(){return dt})),n.d(e,"ob",(function(){return ht})),n.d(e,"pb",(function(){return pt})),n.d(e,"qb",(function(){return ft})),n.d(e,"rb",(function(){return mt})),n.d(e,"ub",(function(){return bt})),n.d(e,"vb",(function(){return gt})),n.d(e,"wb",(function(){return yt})),n.d(e,"xb",(function(){return vt})),n.d(e,"yb",(function(){return xt})),n.d(e,"Ab",(function(){return Ot})),n.d(e,"Bb",(function(){return wt})),n.d(e,"Cb",(function(){return kt})),n.d(e,"zb",(function(){return jt})),n.d(e,"sb",(function(){return Nt})),n.d(e,"tb",(function(){return St})),n.d(e,"Db",(function(){return It})),n.d(e,"Jb",(function(){return Ct})),n.d(e,"Eb",(function(){return Tt})),n.d(e,"Hb",(function(){return At})),n.d(e,"Fb",(function(){return Et})),n.d(e,"Gb",(function(){return Rt})),n.d(e,"Ib",(function(){return $t})),n.d(e,"Kb",(function(){return _t})),n.d(e,"Lb",(function(){return Ft})),n.d(e,"Mb",(function(){return Dt})),n.d(e,"Nb",(function(){return Mt})),n.d(e,"Ob",(function(){return zt})),n.d(e,"Pb",(function(){return Lt})),n.d(e,"Qb",(function(){return Bt})),n.d(e,"Ub",(function(){return Pt})),n.d(e,"Rb",(function(){return Vt})),n.d(e,"Sb",(function(){return Wt})),n.d(e,"Tb",(function(){return Ut})),n.d(e,"Wb",(function(){return Kt})),n.d(e,"Vb",(function(){return Gt})),n.d(e,"Xb",(function(){return Ht})),n.d(e,"Yb",(function(){return qt})),n.d(e,"Zb",(function(){return Xt})),n.d(e,"ac",(function(){return Yt})),n.d(e,"bc",(function(){return Jt})),n.d(e,"cc",(function(){return Zt})),n.d(e,"dc",(function(){return Qt})),n.d(e,"ec",(function(){return te})),n.d(e,"fc",(function(){return ee})),n.d(e,"hc",(function(){return ne})),n.d(e,"kc",(function(){return re})),n.d(e,"lc",(function(){return ae})),n.d(e,"ic",(function(){return se})),n.d(e,"jc",(function(){return ie})),n.d(e,"gc",(function(){return oe})),n.d(e,"mc",(function(){return ue})),n.d(e,"oc",(function(){return ce})),n.d(e,"pc",(function(){return le})),n.d(e,"qc",(function(){return de})),n.d(e,"rc",(function(){return he})),n.d(e,"sc",(function(){return pe})),n.d(e,"xc",(function(){return fe})),n.d(e,"vc",(function(){return me})),n.d(e,"wc",(function(){return be})),n.d(e,"uc",(function(){return ge})),n.d(e,"tc",(function(){return ye})),n.d(e,"zc",(function(){return ve})),n.d(e,"Dc",(function(){return xe})),n.d(e,"Jc",(function(){return Oe})),n.d(e,"Ac",(function(){return we})),n.d(e,"Cc",(function(){return ke})),n.d(e,"yc",(function(){return je})),n.d(e,"Fc",(function(){return Ne})),n.d(e,"Ec",(function(){return Se})),n.d(e,"Ic",(function(){return Ie})),n.d(e,"Bc",(function(){return Ce})),n.d(e,"Hc",(function(){return Te})),n.d(e,"Kc",(function(){return Ae})),n.d(e,"Lc",(function(){return Ee})),n.d(e,"Mc",(function(){return Re})),n.d(e,"Nc",(function(){return $e})),n.d(e,"Oc",(function(){return _e})),n.d(e,"Pc",(function(){return Fe})),n.d(e,"Qc",(function(){return De})),n.d(e,"Rc",(function(){return Me})),n.d(e,"Sc",(function(){return ze})),n.d(e,"Gc",(function(){return Le})),n.d(e,"eb",(function(){return Be})),n.d(e,"nc",(function(){return Pe})),n.d(e,"Tc",(function(){return Ve})),n.d(e,"gb",(function(){return We})),n.d(e,"hb",(function(){return Ue}));const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolBackprop",v="AvgPool3D",x="AvgPool3DBackprop",O="BatchMatMul",w="BatchToSpaceND",k="BroadcastTo",j="Cast",N="Ceil",S="ClipByValue",I="Complex",C="Concat",T="Conv2D",A="Conv2DBackpropFilter",E="Conv2DBackpropInput",R="Conv3D",$="Conv3DBackpropFilterV2",_="Conv3DBackpropInputV2",F="Cos",D="Cosh",M="Cumsum",z="CropAndResize",L="DepthToSpace",B="DepthwiseConv2dNative",P="DepthwiseConv2dNativeBackpropFilter",V="DepthwiseConv2dNativeBackpropInput",W="Diag",U="Dilation2D",K="Dilation2DBackpropInput",G="Dilation2DBackpropFilter",H="Div",q="Elu",X="EluGrad",Y="Erf",J="Equal",Z="Exp",Q="Expm1",tt="FFT",et="Fill",nt="FlipLeftRight",rt="Floor",at="FloorDiv",st="FusedBatchNorm",it="GatherV2",ot="GatherNd",ut="Greater",ct="GreaterEqual",lt="Identity",dt="IFFT",ht="Imag",pt="IsFinite",ft="IsInf",mt="IsNan",bt="Less",gt="LessEqual",yt="LinSpace",vt="Log",xt="Log1p",Ot="LogicalAnd",wt="LogicalNot",kt="LogicalOr",jt="LogSoftmax",Nt="LRN",St="LRNBackprop",It="Max",Ct="Maximum",Tt="MaxPool",At="MaxPoolBackprop",Et="MaxPool3D",Rt="MaxPool3DBackprop",$t="MaxPoolWithArgmax",_t="Mean",Ft="Min",Dt="Minimum",Mt="MirrorPad",zt="Mod",Lt="Multiply",Bt="Negate",Pt="NotEqual",Vt="NonMaxSuppressionV3",Wt="NonMaxSuppressionV4",Ut="NonMaxSuppressionV5",Kt="OnesLike",Gt="OneHot",Ht="PadV2",qt="Pool",Xt="Pow",Yt="Prelu",Jt="Prod",Zt="Range",Qt="Real",te="Reciprocal",ee="Relu",ne="Reshape",re="ResizeNearestNeighbor",ae="ResizeNearestNeighborGrad",se="ResizeBilinear",ie="ResizeBilinearGrad",oe="Relu6",ue="Reverse",ce="Round",le="Rsqrt",de="ScatterNd",he="SelectV2",pe="Selu",fe="Slice",me="Sin",be="Sinh",ge="Sign",ye="Sigmoid",ve="Softplus",xe="Sqrt",Oe="Sum",we="SpaceToBatchND",ke="SplitV",je="Softmax",Ne="SquaredDifference",Se="Square",Ie="Sub",Ce="SparseToDense",Te="StridedSlice",Ae="Tan",Ee="Tanh",Re="Tile",$e="TopK",_e="Transpose",Fe="Unique",De="Unpack",Me="UnsortedSegmentSum",ze="ZerosLike",Le="Step",Be="FromPixels",Pe="RotateWithOffset",Ve="_FusedMatMul",We="FusedConv2D",Ue="FusedDepthwiseConv2D"},"wI/y":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({clipByValue_:function(t,e,n){const o=Object(s.a)(t,"x","clipByValue");i.b(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`);const u={x:o},c={clipValueMin:e,clipValueMax:n};return r.a.runKernelFunc((t,r)=>{const a=t.clip(o,e,n);return r([o]),a},u,null,a.x,c)}})},wXC5:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({dilation2d_:function(t,e,n,o,c=[1,1],l="NHWC"){const d=Object(s.a)(t,"x","dilation2d"),h=Object(s.a)(e,"filter","dilation2d");i.b(3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+d.rank+"."),i.b(3===h.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+h.rank+"."),i.b("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+l);let p=d,f=!1;3===d.rank&&(p=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:p,filter:h},b={strides:n,pad:o,dilations:c},g=r.a.runKernel(a.P,m,b);return f?Object(u.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},waK1:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({cosh_:function(t){const e=Object(s.a)(t,"x","cosh"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.cosh(e);return n([e]),r},n,null,a.H)}})},wion:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("atXS"),s=n("B3db"),i=n("Wiw4");function o(t,e="float32"){if("complex64"===e){const e=o(t,"float32"),n=Object(i.a)(t,"float32");return Object(s.a)(e,n)}const n=Object(a.D)(Object(a.N)(t),e);return r.a.makeTensor(n,t,e)}},wxQM:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("U45G"),a=n("o/e8"),s=n("parS"),i=n("O7f5"),o=n("VO80"),u=n("/7N0"),c=n("n/2y");const l=Object(o.b)({logSigmoid_:function(t){const e=Object(a.a)(t,"x","logSigmoid");return Object(r.a)(t=>({value:Object(i.a)(Object(c.a)(Object(i.a)(t))),gradFunc:e=>Object(s.a)(e,Object(u.a)(Object(i.a)(t)))}))(e)}})},x3y4:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("UI8N"),u=n("VO80");const c=Object(u.b)({div_:function(t,e){let n=Object(i.a)(t,"a","div"),u=Object(i.a)(e,"b","div");if([n,u]=Object(s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return Object(o.a)(n,u);const c={a:n,b:u};return r.a.runKernelFunc((t,e)=>{const r=t.realDivide(n,u);return e([n,u]),r},c,null,a.S,{})}})},yK2v:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},yRKQ:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({transpose_:function(t,e){const n=Object(s.a)(t,"x","transpose");if(null==e&&(e=n.shape.map((t,e)=>e).reverse()),i.b(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(t=>{i.b(t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e)}),n.rank<=1)return n.clone();const o={x:n},u={perm:e};return r.a.runKernelFunc(t=>t.transpose(n,e),o,null,a.Oc,u)}})},yfHJ:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({pow_:function(t,e){let n=Object(i.a)(t,"base","pow"),o=Object(i.a)(e,"exp","pow");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.pow(n,o);return e([n,o,r]),r},u,null,a.Zb)}})},yuCN:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this;e.next=function(){var t,n,r=e.x,a=e.i;return t=r[a],n=(t^=t>>>7)^t<<24,n^=(t=r[a+1&7])^t>>>10,n^=(t=r[a+3&7])^t>>>3,n^=(t=r[a+4&7])^t<<7,t=r[a+7&7],n^=(t^=t<<13)^t<<9,r[a]=n,e.i=a+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("uQAw")&&n("VRIy")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xorshift7=u}(0,t,n("uQAw"))}).call(this,n("1/IK")(t))},zLES:function(t,e,n){"use strict";n.d(e,"a",(function(){return b})),n.d(e,"b",(function(){return g})),n.d(e,"c",(function(){return y})),n.d(e,"d",(function(){return v})),n.d(e,"e",(function(){return x})),n.d(e,"f",(function(){return O})),n.d(e,"g",(function(){return w})),n.d(e,"h",(function(){return k})),n.d(e,"i",(function(){return j}));var r=n("wE5H"),a=n("o/e8"),s=n("atXS"),i=n("kRdc"),o=n("x3y4"),u=n("CfTU"),c=n("8OX7"),l=n("RhH0"),d=n("parS"),h=n("VO80"),p=n("yfHJ"),f=n("QYQ3"),m=n("oAkI");const b=Object(h.b)({addStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","addStrict"),o=Object(a.a)(e,"b","addStrict");return s.e(n.shape,o.shape,"Error in addStrict: "),Object(i.a)(n,o)}}),g=Object(h.b)({divStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","div"),i=Object(a.a)(e,"b","div");return s.e(n.shape,i.shape,"Error in divideStrict: "),Object(o.a)(n,i)}}),y=Object(h.b)({maximumStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","maximumStrict"),i=Object(a.a)(e,"b","maximumStrict");return s.e(n.shape,i.shape,"Error in maximumStrict: "),Object(u.a)(n,i)}}),v=Object(h.b)({minimumStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","minimumStrict"),i=Object(a.a)(e,"b","minimumStrict");return s.e(n.shape,i.shape,"Error in minimumStrict: "),Object(c.a)(n,i)}}),x=Object(h.b)({modStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","modStrict"),i=Object(a.a)(e,"b","modStrict");return s.e(n.shape,i.shape,"Error in modStrict: "),Object(l.a)(n,i)}}),O=Object(h.b)({mulStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","mul"),i=Object(a.a)(e,"b","mul");return s.e(n.shape,i.shape,"Error in multiplyStrict: "),Object(d.a)(n,i)}}),w=Object(h.b)({powStrict_:function(t,e){return Object(r.b)("strict variants of ops have been deprecated and will be removed in future"),s.e(t.shape,e.shape,"Error in powStrict: "),Object(p.a)(t,e)}}),k=Object(h.b)({squaredDifferenceStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","squaredDifferenceStrict"),i=Object(a.a)(e,"b","squaredDifferenceStrict");return s.e(n.shape,i.shape,"Error in squaredDifferenceStrict: "),Object(f.a)(n,i)}}),j=Object(h.b)({subStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","subStrict"),i=Object(a.a)(e,"b","subStrict");return s.e(n.shape,i.shape,"Error in subStrict: "),Object(m.a)(n,i)}})},"zR+/":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("o/e8"),a=n("c9N1"),s=n("VO80");const i=Object(s.b)({conv2dTranspose_:function(t,e,n,s,i,o){const u=Object(r.a)(t,"x","conv2dTranspose"),c=Object(r.a)(e,"filter","conv2dTranspose");return Object(a.a)(n,u,c,s,i,"NHWC",o)}})},zhpf:function(t,e,n){"use strict";n.r(e),n.d(e,"AdadeltaOptimizer",(function(){return d.AdadeltaOptimizer})),n.d(e,"AdagradOptimizer",(function(){return d.AdagradOptimizer})),n.d(e,"AdamOptimizer",(function(){return d.AdamOptimizer})),n.d(e,"AdamaxOptimizer",(function(){return d.AdamaxOptimizer})),n.d(e,"MomentumOptimizer",(function(){return d.MomentumOptimizer})),n.d(e,"Optimizer",(function(){return d.Optimizer})),n.d(e,"RMSPropOptimizer",(function(){return d.RMSPropOptimizer})),n.d(e,"SGDOptimizer",(function(){return d.SGDOptimizer})),n.d(e,"Tensor",(function(){return d.Tensor})),n.d(e,"TensorBuffer",(function(){return d.TensorBuffer})),n.d(e,"Variable",(function(){return d.Variable})),n.d(e,"Rank",(function(){return d.Rank})),n.d(e,"sumOutType",(function(){return d.sumOutType})),n.d(e,"upcastType",(function(){return d.upcastType})),n.d(e,"abs",(function(){return d.abs})),n.d(e,"acos",(function(){return d.acos})),n.d(e,"acosh",(function(){return d.acosh})),n.d(e,"add",(function(){return d.add})),n.d(e,"addN",(function(){return d.addN})),n.d(e,"all",(function(){return d.all})),n.d(e,"any",(function(){return d.any})),n.d(e,"argMax",(function(){return d.argMax})),n.d(e,"argMin",(function(){return d.argMin})),n.d(e,"asin",(function(){return d.asin})),n.d(e,"asinh",(function(){return d.asinh})),n.d(e,"atan",(function(){return d.atan})),n.d(e,"atan2",(function(){return d.atan2})),n.d(e,"atanh",(function(){return d.atanh})),n.d(e,"avgPool",(function(){return d.avgPool})),n.d(e,"avgPool3d",(function(){return d.avgPool3d})),n.d(e,"basicLSTMCell",(function(){return d.basicLSTMCell})),n.d(e,"batchToSpaceND",(function(){return d.batchToSpaceND})),n.d(e,"batchNorm",(function(){return d.batchNorm})),n.d(e,"batchNorm2d",(function(){return d.batchNorm2d})),n.d(e,"batchNorm3d",(function(){return d.batchNorm3d})),n.d(e,"batchNorm4d",(function(){return d.batchNorm4d})),n.d(e,"broadcastTo",(function(){return d.broadcastTo})),n.d(e,"buffer",(function(){return d.buffer})),n.d(e,"cast",(function(){return d.cast})),n.d(e,"ceil",(function(){return d.ceil})),n.d(e,"clipByValue",(function(){return d.clipByValue})),n.d(e,"clone",(function(){return d.clone})),n.d(e,"complex",(function(){return d.complex})),n.d(e,"concat",(function(){return d.concat})),n.d(e,"concat1d",(function(){return d.concat1d})),n.d(e,"concat2d",(function(){return d.concat2d})),n.d(e,"concat3d",(function(){return d.concat3d})),n.d(e,"concat4d",(function(){return d.concat4d})),n.d(e,"conv1d",(function(){return d.conv1d})),n.d(e,"conv2d",(function(){return d.conv2d})),n.d(e,"conv2dTranspose",(function(){return d.conv2dTranspose})),n.d(e,"conv3d",(function(){return d.conv3d})),n.d(e,"conv3dTranspose",(function(){return d.conv3dTranspose})),n.d(e,"cos",(function(){return d.cos})),n.d(e,"cosh",(function(){return d.cosh})),n.d(e,"cumsum",(function(){return d.cumsum})),n.d(e,"depthToSpace",(function(){return d.depthToSpace})),n.d(e,"depthwiseConv2d",(function(){return d.depthwiseConv2d})),n.d(e,"diag",(function(){return d.diag})),n.d(e,"dilation2d",(function(){return d.dilation2d})),n.d(e,"div",(function(){return d.div})),n.d(e,"divNoNan",(function(){return d.divNoNan})),n.d(e,"dot",(function(){return d.dot})),n.d(e,"elu",(function(){return d.elu})),n.d(e,"equal",(function(){return d.equal})),n.d(e,"erf",(function(){return d.erf})),n.d(e,"exp",(function(){return d.exp})),n.d(e,"expandDims",(function(){return d.expandDims})),n.d(e,"expm1",(function(){return d.expm1})),n.d(e,"eye",(function(){return d.eye})),n.d(e,"fill",(function(){return d.fill})),n.d(e,"floor",(function(){return d.floor})),n.d(e,"floorDiv",(function(){return d.floorDiv})),n.d(e,"gather",(function(){return d.gather})),n.d(e,"greater",(function(){return d.greater})),n.d(e,"greaterEqual",(function(){return d.greaterEqual})),n.d(e,"imag",(function(){return d.imag})),n.d(e,"isFinite",(function(){return d.isFinite})),n.d(e,"isInf",(function(){return d.isInf})),n.d(e,"isNaN",(function(){return d.isNaN})),n.d(e,"leakyRelu",(function(){return d.leakyRelu})),n.d(e,"less",(function(){return d.less})),n.d(e,"lessEqual",(function(){return d.lessEqual})),n.d(e,"linspace",(function(){return d.linspace})),n.d(e,"localResponseNormalization",(function(){return d.localResponseNormalization})),n.d(e,"log",(function(){return d.log})),n.d(e,"log1p",(function(){return d.log1p})),n.d(e,"logSigmoid",(function(){return d.logSigmoid})),n.d(e,"logSoftmax",(function(){return d.logSoftmax})),n.d(e,"logSumExp",(function(){return d.logSumExp})),n.d(e,"logicalAnd",(function(){return d.logicalAnd})),n.d(e,"logicalNot",(function(){return d.logicalNot})),n.d(e,"logicalOr",(function(){return d.logicalOr})),n.d(e,"logicalXor",(function(){return d.logicalXor})),n.d(e,"matMul",(function(){return d.matMul})),n.d(e,"max",(function(){return d.max})),n.d(e,"maxPool",(function(){return d.maxPool})),n.d(e,"maxPool3d",(function(){return d.maxPool3d})),n.d(e,"maxPoolWithArgmax",(function(){return d.maxPoolWithArgmax})),n.d(e,"maximum",(function(){return d.maximum})),n.d(e,"mean",(function(){return d.mean})),n.d(e,"min",(function(){return d.min})),n.d(e,"minimum",(function(){return d.minimum})),n.d(e,"mirrorPad",(function(){return d.mirrorPad})),n.d(e,"mod",(function(){return d.mod})),n.d(e,"moments",(function(){return d.moments})),n.d(e,"mul",(function(){return d.mul})),n.d(e,"multiRNNCell",(function(){return d.multiRNNCell})),n.d(e,"multinomial",(function(){return d.multinomial})),n.d(e,"neg",(function(){return d.neg})),n.d(e,"notEqual",(function(){return d.notEqual})),n.d(e,"oneHot",(function(){return d.oneHot})),n.d(e,"ones",(function(){return d.ones})),n.d(e,"onesLike",(function(){return d.onesLike})),n.d(e,"outerProduct",(function(){return d.outerProduct})),n.d(e,"pad",(function(){return d.pad})),n.d(e,"pad1d",(function(){return d.pad1d})),n.d(e,"pad2d",(function(){return d.pad2d})),n.d(e,"pad3d",(function(){return d.pad3d})),n.d(e,"pad4d",(function(){return d.pad4d})),n.d(e,"pool",(function(){return d.pool})),n.d(e,"pow",(function(){return d.pow})),n.d(e,"prelu",(function(){return d.prelu})),n.d(e,"print",(function(){return d.print})),n.d(e,"prod",(function(){return d.prod})),n.d(e,"rand",(function(){return d.rand})),n.d(e,"randomGamma",(function(){return d.randomGamma})),n.d(e,"randomNormal",(function(){return d.randomNormal})),n.d(e,"randomUniform",(function(){return d.randomUniform})),n.d(e,"range",(function(){return d.range})),n.d(e,"real",(function(){return d.real})),n.d(e,"reciprocal",(function(){return d.reciprocal})),n.d(e,"relu",(function(){return d.relu})),n.d(e,"relu6",(function(){return d.relu6})),n.d(e,"reshape",(function(){return d.reshape})),n.d(e,"reverse",(function(){return d.reverse})),n.d(e,"reverse1d",(function(){return d.reverse1d})),n.d(e,"reverse2d",(function(){return d.reverse2d})),n.d(e,"reverse3d",(function(){return d.reverse3d})),n.d(e,"reverse4d",(function(){return d.reverse4d})),n.d(e,"round",(function(){return d.round})),n.d(e,"rsqrt",(function(){return d.rsqrt})),n.d(e,"scalar",(function(){return d.scalar})),n.d(e,"selu",(function(){return d.selu})),n.d(e,"separableConv2d",(function(){return d.separableConv2d})),n.d(e,"setdiff1dAsync",(function(){return d.setdiff1dAsync})),n.d(e,"sigmoid",(function(){return d.sigmoid})),n.d(e,"sign",(function(){return d.sign})),n.d(e,"sin",(function(){return d.sin})),n.d(e,"sinh",(function(){return d.sinh})),n.d(e,"slice",(function(){return d.slice})),n.d(e,"slice1d",(function(){return d.slice1d})),n.d(e,"slice2d",(function(){return d.slice2d})),n.d(e,"slice3d",(function(){return d.slice3d})),n.d(e,"slice4d",(function(){return d.slice4d})),n.d(e,"softmax",(function(){return d.softmax})),n.d(e,"softplus",(function(){return d.softplus})),n.d(e,"spaceToBatchND",(function(){return d.spaceToBatchND})),n.d(e,"fft",(function(){return d.fft})),n.d(e,"ifft",(function(){return d.ifft})),n.d(e,"irfft",(function(){return d.irfft})),n.d(e,"rfft",(function(){return d.rfft})),n.d(e,"split",(function(){return d.split})),n.d(e,"sqrt",(function(){return d.sqrt})),n.d(e,"square",(function(){return d.square})),n.d(e,"squaredDifference",(function(){return d.squaredDifference})),n.d(e,"squeeze",(function(){return d.squeeze})),n.d(e,"stack",(function(){return d.stack})),n.d(e,"step",(function(){return d.step})),n.d(e,"stridedSlice",(function(){return d.stridedSlice})),n.d(e,"sub",(function(){return d.sub})),n.d(e,"sum",(function(){return d.sum})),n.d(e,"tan",(function(){return d.tan})),n.d(e,"tanh",(function(){return d.tanh})),n.d(e,"tensor",(function(){return d.tensor})),n.d(e,"tensor1d",(function(){return d.tensor1d})),n.d(e,"tensor2d",(function(){return d.tensor2d})),n.d(e,"tensor3d",(function(){return d.tensor3d})),n.d(e,"tensor4d",(function(){return d.tensor4d})),n.d(e,"tensor5d",(function(){return d.tensor5d})),n.d(e,"tensor6d",(function(){return d.tensor6d})),n.d(e,"tile",(function(){return d.tile})),n.d(e,"topk",(function(){return d.topk})),n.d(e,"truncatedNormal",(function(){return d.truncatedNormal})),n.d(e,"unique",(function(){return d.unique})),n.d(e,"unsortedSegmentSum",(function(){return d.unsortedSegmentSum})),n.d(e,"unstack",(function(){return d.unstack})),n.d(e,"variable",(function(){return d.variable})),n.d(e,"where",(function(){return d.where})),n.d(e,"whereAsync",(function(){return d.whereAsync})),n.d(e,"zeros",(function(){return d.zeros})),n.d(e,"zerosLike",(function(){return d.zerosLike})),n.d(e,"booleanMaskAsync",(function(){return d.booleanMaskAsync})),n.d(e,"equalStrict",(function(){return d.equalStrict})),n.d(e,"greaterEqualStrict",(function(){return d.greaterEqualStrict})),n.d(e,"greaterStrict",(function(){return d.greaterStrict})),n.d(e,"lessEqualStrict",(function(){return d.lessEqualStrict})),n.d(e,"lessStrict",(function(){return d.lessStrict})),n.d(e,"notEqualStrict",(function(){return d.notEqualStrict})),n.d(e,"addStrict",(function(){return d.addStrict})),n.d(e,"divStrict",(function(){return d.divStrict})),n.d(e,"maximumStrict",(function(){return d.maximumStrict})),n.d(e,"minimumStrict",(function(){return d.minimumStrict})),n.d(e,"modStrict",(function(){return d.modStrict})),n.d(e,"mulStrict",(function(){return d.mulStrict})),n.d(e,"powStrict",(function(){return d.powStrict})),n.d(e,"squaredDifferenceStrict",(function(){return d.squaredDifferenceStrict})),n.d(e,"subStrict",(function(){return d.subStrict})),n.d(e,"transpose",(function(){return d.transpose})),n.d(e,"norm",(function(){return d.norm})),n.d(e,"movingAverage",(function(){return d.movingAverage})),n.d(e,"scatterND",(function(){return d.scatterND})),n.d(e,"sparseToDense",(function(){return d.sparseToDense})),n.d(e,"gatherND",(function(){return d.gatherND})),n.d(e,"dropout",(function(){return d.dropout})),n.d(e,"enclosingPowerOfTwo",(function(){return d.enclosingPowerOfTwo})),n.d(e,"cosineWindow",(function(){return d.cosineWindow})),n.d(e,"inTopKAsync",(function(){return d.inTopKAsync})),n.d(e,"op",(function(){return d.op})),n.d(e,"OP_SCOPE_SUFFIX",(function(){return d.OP_SCOPE_SUFFIX})),n.d(e,"image",(function(){return d.image})),n.d(e,"linalg",(function(){return d.linalg})),n.d(e,"losses",(function(){return d.losses})),n.d(e,"spectral",(function(){return d.spectral})),n.d(e,"fused",(function(){return d.fused})),n.d(e,"signal",(function(){return d.signal})),n.d(e,"Reduction",(function(){return d.Reduction})),n.d(e,"train",(function(){return d.train})),n.d(e,"enableProdMode",(function(){return d.enableProdMode})),n.d(e,"enableDebugMode",(function(){return d.enableDebugMode})),n.d(e,"disableDeprecationWarnings",(function(){return d.disableDeprecationWarnings})),n.d(e,"deprecationWarn",(function(){return d.deprecationWarn})),n.d(e,"disposeVariables",(function(){return d.disposeVariables})),n.d(e,"engine",(function(){return d.engine})),n.d(e,"memory",(function(){return d.memory})),n.d(e,"profile",(function(){return d.profile})),n.d(e,"tidy",(function(){return d.tidy})),n.d(e,"dispose",(function(){return d.dispose})),n.d(e,"keep",(function(){return d.keep})),n.d(e,"time",(function(){return d.time})),n.d(e,"setBackend",(function(){return d.setBackend})),n.d(e,"ready",(function(){return d.ready})),n.d(e,"getBackend",(function(){return d.getBackend})),n.d(e,"removeBackend",(function(){return d.removeBackend})),n.d(e,"findBackend",(function(){return d.findBackend})),n.d(e,"findBackendFactory",(function(){return d.findBackendFactory})),n.d(e,"registerBackend",(function(){return d.registerBackend})),n.d(e,"backend",(function(){return d.backend})),n.d(e,"setPlatform",(function(){return d.setPlatform})),n.d(e,"getKernel",(function(){return d.getKernel})),n.d(e,"getGradient",(function(){return d.getGradient})),n.d(e,"getKernelsForBackend",(function(){return d.getKernelsForBackend})),n.d(e,"registerKernel",(function(){return d.registerKernel})),n.d(e,"registerGradient",(function(){return d.registerGradient})),n.d(e,"unregisterKernel",(function(){return d.unregisterKernel})),n.d(e,"unregisterGradient",(function(){return d.unregisterGradient})),n.d(e,"copyRegisteredKernels",(function(){return d.copyRegisteredKernels})),n.d(e,"customGrad",(function(){return d.customGrad})),n.d(e,"grad",(function(){return d.grad})),n.d(e,"grads",(function(){return d.grads})),n.d(e,"valueAndGrad",(function(){return d.valueAndGrad})),n.d(e,"valueAndGrads",(function(){return d.valueAndGrads})),n.d(e,"variableGrads",(function(){return d.variableGrads})),n.d(e,"Environment",(function(){return d.Environment})),n.d(e,"env",(function(){return d.env})),n.d(e,"ENV",(function(){return d.ENV})),n.d(e,"version_core",(function(){return d.version_core})),n.d(e,"nextFrame",(function(){return d.nextFrame})),n.d(e,"browser",(function(){return d.browser})),n.d(e,"io",(function(){return d.io})),n.d(e,"math",(function(){return d.math})),n.d(e,"serialization",(function(){return d.serialization})),n.d(e,"test_util",(function(){return d.test_util})),n.d(e,"util",(function(){return d.util})),n.d(e,"backend_util",(function(){return d.backend_util})),n.d(e,"tensor_util",(function(){return d.tensor_util})),n.d(e,"slice_util",(function(){return d.slice_util})),n.d(e,"gather_util",(function(){return d.gather_util})),n.d(e,"scatter_util",(function(){return d.scatter_util})),n.d(e,"device_util",(function(){return d.device_util})),n.d(e,"kernel_impls",(function(){return d.kernel_impls})),n.d(e,"KernelBackend",(function(){return d.KernelBackend})),n.d(e,"DataStorage",(function(){return d.DataStorage})),n.d(e,"Abs",(function(){return d.Abs})),n.d(e,"Acos",(function(){return d.Acos})),n.d(e,"Acosh",(function(){return d.Acosh})),n.d(e,"Add",(function(){return d.Add})),n.d(e,"AddN",(function(){return d.AddN})),n.d(e,"All",(function(){return d.All})),n.d(e,"Any",(function(){return d.Any})),n.d(e,"ArgMax",(function(){return d.ArgMax})),n.d(e,"ArgMin",(function(){return d.ArgMin})),n.d(e,"Asin",(function(){return d.Asin})),n.d(e,"Asinh",(function(){return d.Asinh})),n.d(e,"Atan",(function(){return d.Atan})),n.d(e,"Atanh",(function(){return d.Atanh})),n.d(e,"Atan2",(function(){return d.Atan2})),n.d(e,"AvgPool",(function(){return d.AvgPool})),n.d(e,"AvgPoolBackprop",(function(){return d.AvgPoolBackprop})),n.d(e,"AvgPool3D",(function(){return d.AvgPool3D})),n.d(e,"AvgPool3DBackprop",(function(){return d.AvgPool3DBackprop})),n.d(e,"BatchMatMul",(function(){return d.BatchMatMul})),n.d(e,"BatchToSpaceND",(function(){return d.BatchToSpaceND})),n.d(e,"BroadcastTo",(function(){return d.BroadcastTo})),n.d(e,"Cast",(function(){return d.Cast})),n.d(e,"Ceil",(function(){return d.Ceil})),n.d(e,"ClipByValue",(function(){return d.ClipByValue})),n.d(e,"Complex",(function(){return d.Complex})),n.d(e,"Concat",(function(){return d.Concat})),n.d(e,"Conv2D",(function(){return d.Conv2D})),n.d(e,"Conv2DBackpropFilter",(function(){return d.Conv2DBackpropFilter})),n.d(e,"Conv2DBackpropInput",(function(){return d.Conv2DBackpropInput})),n.d(e,"Conv3D",(function(){return d.Conv3D})),n.d(e,"Conv3DBackpropFilterV2",(function(){return d.Conv3DBackpropFilterV2})),n.d(e,"Conv3DBackpropInputV2",(function(){return d.Conv3DBackpropInputV2})),n.d(e,"Cos",(function(){return d.Cos})),n.d(e,"Cosh",(function(){return d.Cosh})),n.d(e,"Cumsum",(function(){return d.Cumsum})),n.d(e,"CropAndResize",(function(){return d.CropAndResize})),n.d(e,"DepthToSpace",(function(){return d.DepthToSpace})),n.d(e,"DepthwiseConv2dNative",(function(){return d.DepthwiseConv2dNative})),n.d(e,"DepthwiseConv2dNativeBackpropFilter",(function(){return d.DepthwiseConv2dNativeBackpropFilter})),n.d(e,"DepthwiseConv2dNativeBackpropInput",(function(){return d.DepthwiseConv2dNativeBackpropInput})),n.d(e,"Diag",(function(){return d.Diag})),n.d(e,"Dilation2D",(function(){return d.Dilation2D})),n.d(e,"Dilation2DBackpropInput",(function(){return d.Dilation2DBackpropInput})),n.d(e,"Dilation2DBackpropFilter",(function(){return d.Dilation2DBackpropFilter})),n.d(e,"Div",(function(){return d.Div})),n.d(e,"Elu",(function(){return d.Elu})),n.d(e,"EluGrad",(function(){return d.EluGrad})),n.d(e,"Erf",(function(){return d.Erf})),n.d(e,"Equal",(function(){return d.Equal})),n.d(e,"Exp",(function(){return d.Exp})),n.d(e,"Expm1",(function(){return d.Expm1})),n.d(e,"FFT",(function(){return d.FFT})),n.d(e,"Fill",(function(){return d.Fill})),n.d(e,"FlipLeftRight",(function(){return d.FlipLeftRight})),n.d(e,"Floor",(function(){return d.Floor})),n.d(e,"FloorDiv",(function(){return d.FloorDiv})),n.d(e,"FusedBatchNorm",(function(){return d.FusedBatchNorm})),n.d(e,"GatherV2",(function(){return d.GatherV2})),n.d(e,"GatherNd",(function(){return d.GatherNd})),n.d(e,"Greater",(function(){return d.Greater})),n.d(e,"GreaterEqual",(function(){return d.GreaterEqual})),n.d(e,"Identity",(function(){return d.Identity})),n.d(e,"IFFT",(function(){return d.IFFT})),n.d(e,"Imag",(function(){return d.Imag})),n.d(e,"IsFinite",(function(){return d.IsFinite})),n.d(e,"IsInf",(function(){return d.IsInf})),n.d(e,"IsNan",(function(){return d.IsNan})),n.d(e,"Less",(function(){return d.Less})),n.d(e,"LessEqual",(function(){return d.LessEqual})),n.d(e,"LinSpace",(function(){return d.LinSpace})),n.d(e,"Log",(function(){return d.Log})),n.d(e,"Log1p",(function(){return d.Log1p})),n.d(e,"LogicalAnd",(function(){return d.LogicalAnd})),n.d(e,"LogicalNot",(function(){return d.LogicalNot})),n.d(e,"LogicalOr",(function(){return d.LogicalOr})),n.d(e,"LogSoftmax",(function(){return d.LogSoftmax})),n.d(e,"LRN",(function(){return d.LRN})),n.d(e,"LRNBackprop",(function(){return d.LRNBackprop})),n.d(e,"Max",(function(){return d.Max})),n.d(e,"Maximum",(function(){return d.Maximum})),n.d(e,"MaxPool",(function(){return d.MaxPool})),n.d(e,"MaxPoolBackprop",(function(){return d.MaxPoolBackprop})),n.d(e,"MaxPool3D",(function(){return d.MaxPool3D})),n.d(e,"MaxPool3DBackprop",(function(){return d.MaxPool3DBackprop})),n.d(e,"MaxPoolWithArgmax",(function(){return d.MaxPoolWithArgmax})),n.d(e,"Mean",(function(){return d.Mean})),n.d(e,"Min",(function(){return d.Min})),n.d(e,"Minimum",(function(){return d.Minimum})),n.d(e,"MirrorPad",(function(){return d.MirrorPad})),n.d(e,"Mod",(function(){return d.Mod})),n.d(e,"Multiply",(function(){return d.Multiply})),n.d(e,"Negate",(function(){return d.Negate})),n.d(e,"NotEqual",(function(){return d.NotEqual})),n.d(e,"NonMaxSuppressionV3",(function(){return d.NonMaxSuppressionV3})),n.d(e,"NonMaxSuppressionV4",(function(){return d.NonMaxSuppressionV4})),n.d(e,"NonMaxSuppressionV5",(function(){return d.NonMaxSuppressionV5})),n.d(e,"OnesLike",(function(){return d.OnesLike})),n.d(e,"OneHot",(function(){return d.OneHot})),n.d(e,"PadV2",(function(){return d.PadV2})),n.d(e,"Pool",(function(){return d.Pool})),n.d(e,"Pow",(function(){return d.Pow})),n.d(e,"Prelu",(function(){return d.Prelu})),n.d(e,"Prod",(function(){return d.Prod})),n.d(e,"Range",(function(){return d.Range})),n.d(e,"Real",(function(){return d.Real})),n.d(e,"Reciprocal",(function(){return d.Reciprocal})),n.d(e,"Relu",(function(){return d.Relu})),n.d(e,"Reshape",(function(){return d.Reshape})),n.d(e,"ResizeNearestNeighbor",(function(){return d.ResizeNearestNeighbor})),n.d(e,"ResizeNearestNeighborGrad",(function(){return d.ResizeNearestNeighborGrad})),n.d(e,"ResizeBilinear",(function(){return d.ResizeBilinear})),n.d(e,"ResizeBilinearGrad",(function(){return d.ResizeBilinearGrad})),n.d(e,"Relu6",(function(){return d.Relu6})),n.d(e,"Reverse",(function(){return d.Reverse})),n.d(e,"Round",(function(){return d.Round})),n.d(e,"Rsqrt",(function(){return d.Rsqrt})),n.d(e,"ScatterNd",(function(){return d.ScatterNd})),n.d(e,"SelectV2",(function(){return d.SelectV2})),n.d(e,"Selu",(function(){return d.Selu})),n.d(e,"Slice",(function(){return d.Slice})),n.d(e,"Sin",(function(){return d.Sin})),n.d(e,"Sinh",(function(){return d.Sinh})),n.d(e,"Sign",(function(){return d.Sign})),n.d(e,"Sigmoid",(function(){return d.Sigmoid})),n.d(e,"Softplus",(function(){return d.Softplus})),n.d(e,"Sqrt",(function(){return d.Sqrt})),n.d(e,"Sum",(function(){return d.Sum})),n.d(e,"SpaceToBatchND",(function(){return d.SpaceToBatchND})),n.d(e,"SplitV",(function(){return d.SplitV})),n.d(e,"Softmax",(function(){return d.Softmax})),n.d(e,"SquaredDifference",(function(){return d.SquaredDifference})),n.d(e,"Square",(function(){return d.Square})),n.d(e,"Sub",(function(){return d.Sub})),n.d(e,"SparseToDense",(function(){return d.SparseToDense})),n.d(e,"StridedSlice",(function(){return d.StridedSlice})),n.d(e,"Tan",(function(){return d.Tan})),n.d(e,"Tanh",(function(){return d.Tanh})),n.d(e,"Tile",(function(){return d.Tile})),n.d(e,"TopK",(function(){return d.TopK})),n.d(e,"Transpose",(function(){return d.Transpose})),n.d(e,"Unique",(function(){return d.Unique})),n.d(e,"Unpack",(function(){return d.Unpack})),n.d(e,"UnsortedSegmentSum",(function(){return d.UnsortedSegmentSum})),n.d(e,"ZerosLike",(function(){return d.ZerosLike})),n.d(e,"Step",(function(){return d.Step})),n.d(e,"FromPixels",(function(){return d.FromPixels})),n.d(e,"RotateWithOffset",(function(){return d.RotateWithOffset})),n.d(e,"_FusedMatMul",(function(){return d._FusedMatMul})),n.d(e,"FusedConv2D",(function(){return d.FusedConv2D})),n.d(e,"FusedDepthwiseConv2D",(function(){return d.FusedDepthwiseConv2D})),n.d(e,"CallbackList",(function(){return ze})),n.d(e,"CustomCallback",(function(){return Pe})),n.d(e,"History",(function(){return Be})),n.d(e,"Callback",(function(){return Gi})),n.d(e,"callbacks",(function(){return Yi})),n.d(e,"EarlyStopping",(function(){return Xi})),n.d(e,"InputSpec",(function(){return Se})),n.d(e,"SymbolicTensor",(function(){return Ie})),n.d(e,"LayersModel",(function(){return Zn})),n.d(e,"input",(function(){return ir})),n.d(e,"loadLayersModel",(function(){return sr})),n.d(e,"model",(function(){return rr})),n.d(e,"registerCallbackConstructor",(function(){return or})),n.d(e,"sequential",(function(){return ar})),n.d(e,"RNN",(function(){return sa})),n.d(e,"Sequential",(function(){return nr})),n.d(e,"LayerVariable",(function(){return ke})),n.d(e,"version_layers",(function(){return jn})),n.d(e,"constraints",(function(){return r})),n.d(e,"initializers",(function(){return a})),n.d(e,"layers",(function(){return s})),n.d(e,"metrics",(function(){return i})),n.d(e,"models",(function(){return o})),n.d(e,"regularizers",(function(){return u})),n.d(e,"GraphModel",(function(){return Ji.a})),n.d(e,"loadGraphModel",(function(){return Ji.c})),n.d(e,"deregisterOp",(function(){return Ji.b})),n.d(e,"registerOp",(function(){return Ji.d})),n.d(e,"version_converter",(function(){return Ji.e})),n.d(e,"data",(function(){return c})),n.d(e,"version",(function(){return Jm}));var r={};n.r(r),n.d(r,"maxNorm",(function(){return G})),n.d(r,"unitNorm",(function(){return H})),n.d(r,"nonNeg",(function(){return q})),n.d(r,"minMaxNorm",(function(){return X}));var a={};n.r(a),n.d(a,"zeros",(function(){return Qt})),n.d(a,"ones",(function(){return te})),n.d(a,"constant",(function(){return ee})),n.d(a,"randomUniform",(function(){return ne})),n.d(a,"randomNormal",(function(){return re})),n.d(a,"truncatedNormal",(function(){return ae})),n.d(a,"identity",(function(){return se})),n.d(a,"varianceScaling",(function(){return ie})),n.d(a,"glorotUniform",(function(){return oe})),n.d(a,"glorotNormal",(function(){return ue})),n.d(a,"heNormal",(function(){return ce})),n.d(a,"heUniform",(function(){return le})),n.d(a,"leCunNormal",(function(){return de})),n.d(a,"leCunUniform",(function(){return he})),n.d(a,"orthogonal",(function(){return pe}));var s={};n.r(s),n.d(s,"inputLayer",(function(){return hs})),n.d(s,"elu",(function(){return ps})),n.d(s,"reLU",(function(){return fs})),n.d(s,"leakyReLU",(function(){return ms})),n.d(s,"prelu",(function(){return bs})),n.d(s,"softmax",(function(){return gs})),n.d(s,"thresholdedReLU",(function(){return ys})),n.d(s,"conv1d",(function(){return vs})),n.d(s,"conv2d",(function(){return xs})),n.d(s,"conv2dTranspose",(function(){return Os})),n.d(s,"conv3d",(function(){return ws})),n.d(s,"separableConv2d",(function(){return ks})),n.d(s,"cropping2D",(function(){return js})),n.d(s,"upSampling2d",(function(){return Ns})),n.d(s,"depthwiseConv2d",(function(){return Ss})),n.d(s,"activation",(function(){return Is})),n.d(s,"dense",(function(){return Cs})),n.d(s,"dropout",(function(){return Ts})),n.d(s,"spatialDropout1d",(function(){return As})),n.d(s,"flatten",(function(){return Es})),n.d(s,"repeatVector",(function(){return Rs})),n.d(s,"reshape",(function(){return $s})),n.d(s,"permute",(function(){return _s})),n.d(s,"embedding",(function(){return Fs})),n.d(s,"add",(function(){return Ds})),n.d(s,"average",(function(){return Ms})),n.d(s,"concatenate",(function(){return zs})),n.d(s,"maximum",(function(){return Ls})),n.d(s,"minimum",(function(){return Bs})),n.d(s,"multiply",(function(){return Ps})),n.d(s,"dot",(function(){return Vs})),n.d(s,"batchNormalization",(function(){return Ws})),n.d(s,"layerNormalization",(function(){return Us})),n.d(s,"zeroPadding2d",(function(){return Ks})),n.d(s,"averagePooling1d",(function(){return Gs})),n.d(s,"avgPool1d",(function(){return Hs})),n.d(s,"avgPooling1d",(function(){return qs})),n.d(s,"averagePooling2d",(function(){return Xs})),n.d(s,"avgPool2d",(function(){return Ys})),n.d(s,"avgPooling2d",(function(){return Js})),n.d(s,"averagePooling3d",(function(){return Zs})),n.d(s,"avgPool3d",(function(){return Qs})),n.d(s,"avgPooling3d",(function(){return ti})),n.d(s,"globalAveragePooling1d",(function(){return ei})),n.d(s,"globalAveragePooling2d",(function(){return ni})),n.d(s,"globalMaxPooling1d",(function(){return ri})),n.d(s,"globalMaxPooling2d",(function(){return ai})),n.d(s,"maxPooling1d",(function(){return si})),n.d(s,"maxPooling2d",(function(){return ii})),n.d(s,"maxPooling3d",(function(){return oi})),n.d(s,"gru",(function(){return ui})),n.d(s,"gruCell",(function(){return ci})),n.d(s,"lstm",(function(){return li})),n.d(s,"lstmCell",(function(){return di})),n.d(s,"simpleRNN",(function(){return hi})),n.d(s,"simpleRNNCell",(function(){return pi})),n.d(s,"convLstm2d",(function(){return fi})),n.d(s,"convLstm2dCell",(function(){return mi})),n.d(s,"rnn",(function(){return bi})),n.d(s,"stackedRNNCells",(function(){return gi})),n.d(s,"bidirectional",(function(){return yi})),n.d(s,"timeDistributed",(function(){return vi})),n.d(s,"globalMaxPool1d",(function(){return xi})),n.d(s,"globalMaxPool2d",(function(){return Oi})),n.d(s,"maxPool1d",(function(){return wi})),n.d(s,"maxPool2d",(function(){return ki})),n.d(s,"Layer",(function(){return Ee})),n.d(s,"RNN",(function(){return sa})),n.d(s,"RNNCell",(function(){return ia})),n.d(s,"input",(function(){return ir})),n.d(s,"gaussianNoise",(function(){return ji})),n.d(s,"gaussianDropout",(function(){return Ni})),n.d(s,"alphaDropout",(function(){return Si})),n.d(s,"masking",(function(){return Ii}));var i={};n.r(i),n.d(i,"binaryAccuracy",(function(){return Ci})),n.d(i,"binaryCrossentropy",(function(){return Ti})),n.d(i,"sparseCategoricalAccuracy",(function(){return Ai})),n.d(i,"categoricalAccuracy",(function(){return Ei})),n.d(i,"categoricalCrossentropy",(function(){return Ri})),n.d(i,"precision",(function(){return $i})),n.d(i,"recall",(function(){return _i})),n.d(i,"cosineProximity",(function(){return Fi})),n.d(i,"meanAbsoluteError",(function(){return Di})),n.d(i,"meanAbsolutePercentageError",(function(){return Mi})),n.d(i,"MAPE",(function(){return zi})),n.d(i,"mape",(function(){return Li})),n.d(i,"meanSquaredError",(function(){return Bi})),n.d(i,"MSE",(function(){return Pi})),n.d(i,"mse",(function(){return Vi}));var o={};n.r(o),n.d(o,"modelFromJSON",(function(){return tr}));var u={};n.r(u),n.d(u,"l1l2",(function(){return Wi})),n.d(u,"l1",(function(){return Ui})),n.d(u,"l2",(function(){return Ki}));var c={};n.r(c),n.d(c,"array",(function(){return ro})),n.d(c,"Dataset",(function(){return eo})),n.d(c,"zip",(function(){return ao})),n.d(c,"CSVDataset",(function(){return po})),n.d(c,"TextLineDataset",(function(){return io})),n.d(c,"csv",(function(){return ko})),n.d(c,"func",(function(){return jo})),n.d(c,"generator",(function(){return No})),n.d(c,"microphone",(function(){return Io})),n.d(c,"webcam",(function(){return So})),n.d(c,"FileDataSource",(function(){return Oo})),n.d(c,"URLDataSource",(function(){return wo})),n.d(c,"version_data",(function(){return Co}));var l={};n.r(l),n.d(l,"simpleAbsImpl",(function(){return fu})),n.d(l,"addImpl",(function(){return su})),n.d(l,"ceilImpl",(function(){return _u})),n.d(l,"expImpl",(function(){return yc})),n.d(l,"expm1Impl",(function(){return Oc})),n.d(l,"floorImpl",(function(){return Bc})),n.d(l,"logImpl",(function(){return Zc})),n.d(l,"maxImpl",(function(){return sl})),n.d(l,"multiplyImpl",(function(){return jc})),n.d(l,"notEqualImpl",(function(){return bl})),n.d(l,"rsqrtImpl",(function(){return Nl})),n.d(l,"sliceImpl",(function(){return Cc})),n.d(l,"squaredDifferenceImpl",(function(){return Xl})),n.d(l,"subImpl",(function(){return Ec})),n.d(l,"transposeImpl",(function(){return il})),n.d(l,"uniqueImpl",(function(){return ad}));var d=n("+hG3");let h;function p(){return null==h&&(h=Object(d.backend)().epsilon()),h}class f extends Error{constructor(t){super(t),Object.setPrototypeOf(this,f.prototype)}}class m extends Error{constructor(t){super(t),Object.setPrototypeOf(this,m.prototype)}}class b extends Error{constructor(t){super(t),Object.setPrototypeOf(this,b.prototype)}}class g extends Error{constructor(t){super(t),Object.setPrototypeOf(this,g.prototype)}}class y extends Error{constructor(t){super(t),Object.setPrototypeOf(this,y.prototype)}}Error;function v(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function x(t,e){if(!t)throw new y(e)}function O(t,e){let n=0;for(const r of t)r===e&&n++;return n}function w(t){return 1===t.length?t[0]:t}function k(t){return Array.isArray(t)?t:[t]}function j(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function N(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let S={};function I(t){if(null===t||void 0===t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function C(t,e={},n={},r="object",a=!1){if("string"===typeof t){const a=t;let s;if(a in n)s=n[a];else if(a in S)s=S[a];else if(s=e[a],null==s)throw new b(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=t;if(null==s.className||null==s.config)throw new b(r+": Improper config format: "+JSON.stringify(s)+".\n'className' and 'config' must set.");const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in S?[o,u]=S.className:i in e&&([o,u]=e[i]),null==o)throw new b(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const n of Object.keys(S))t[n]=S[n];for(const a of Object.keys(n))t[a]=n[a];s.config.customObjects=t;const e=Object.assign({},S);for(const a of Object.keys(n))S[a]=n[a];!function t(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach(e=>t(e));else{const n=Object.keys(e);for(const r of n){const n=e[r];null!=n&&"object"===typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!==typeof n.value?t(n):e[r]=n.value)}}}(s.config);const r=u(o,s.config,n,a);return S=Object.assign({},e),r}{const t=Object.assign({},S);for(const r of Object.keys(n))S[r]=n[r];const e=new o(s.config);return S=Object.assign({},t),e}}}function T(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function A(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function E(t){if(null==t)throw new b("Invalid value in obj: "+JSON.stringify(t));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function R(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new b(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function $(t,e,n=0,r=1/0){return x(n>=0),x(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function _(t,e){Array.isArray(t)?(d.util.assert(t.length>0,()=>e+" is unexpectedly an empty array."),t.forEach((t,n)=>_(t,`element ${n+1} of ${e}`))):d.util.assert(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got `+function t(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>t(e)).join(",")+"]":"string"===typeof e?`"${e}"`:""+e}(t)+".")}function F(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function D(t,e){return Object(d.tidy)(()=>d.sqrt(d.sum(d.mul(t,t),e,!0)))}class M extends d.serialization.Serializable{getConfig(){return{}}}class z extends M{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(d.tidy)(()=>{const e=D(t,this.axis),n=d.clipByValue(e,0,this.maxValue);return d.mul(t,d.div(n,d.add(p(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}z.className="MaxNorm",d.serialization.registerClass(z);class L extends M{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(d.tidy)(()=>d.div(t,d.add(p(),D(t,this.axis))))}getConfig(){return{axis:this.axis}}}L.className="UnitNorm",d.serialization.registerClass(L);class B extends M{apply(t){return d.relu(t)}}B.className="NonNeg",d.serialization.registerClass(B);class P extends M{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(d.tidy)(()=>{const e=D(t,this.axis),n=d.add(d.mul(this.rate,d.clipByValue(e,this.minValue,this.maxValue)),d.mul(1-this.rate,e));return d.mul(t,d.div(n,d.add(p(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}P.className="MinMaxNorm",d.serialization.registerClass(P);const V={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function W(t){return I(t)}function U(t,e={}){return C(t,d.serialization.SerializationMap.getMap().classNameMap,e,"constraint")}function K(t){if(null==t)return null;if("string"===typeof t){return U({className:t in V?V[t]:t,config:{}})}return t instanceof M?t:U(t)}function G(t){return new z(t)}function H(t){return new L(t)}function q(){return new B}function X(t){return new P(t)}const Y=["channelsFirst","channelsLast"],J=["valid","same","causal"],Z=["max","avg"],Q=["sum","mul","concat","ave"],tt=new Map;function et(t){R(Y,"DataFormat",t)}function nt(t){R(J,"PaddingMode",t)}function rt(t){R(Z,"PoolMode",t)}const at=[];function st(t,e){at.push(t);try{const t=e();return at.pop(),t}catch(n){throw at.pop(),n}}function it(t){if(!ct(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===at.length?"":at.join("/")+"/")+t}function ot(t){if(!ct(t))throw new Error("Not a valid tensor name: '"+t+"'");tt.has(t)||tt.set(t,0);const e=tt.get(t);if(tt.set(t,tt.get(t)+1),e>0){const n=`${t}_${e}`;return tt.set(n,1),n}return t}const ut=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ct(t){return!!t.match(ut)}function lt(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let a=e;a<n;++a)r*=t[a];return r}function dt(t){return t=Array.isArray(t)?new Float32Array(t):t,Object(d.tensor1d)(t)}function ht(t){return d.min(dt(t)).dataSync()[0]}function pt(t){return d.max(dt(t)).dataSync()[0]}function ft(t,e){if(e<t)throw new b(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function mt(t,e){return t.asType(e)}function bt(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function gt(t,e,n){return Object(d.tidy)(()=>{switch(t.rank){case 1:return d.slice1d(t,e,n);case 2:return d.slice2d(t,[e,0],[n,t.shape[1]]);case 3:return d.slice3d(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return d.slice4d(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return d.slice(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return d.slice(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new b("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}})}function yt(t,e,n){return Object(d.tidy)(()=>{switch(t.rank){case 1:return d.slice1d(t,e,n);case 2:return d.slice2d(t,[0,e],[t.shape[0],n]);case 3:return d.slice3d(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return d.slice4d(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new b("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function vt(t,e,n,r){return Object(d.tidy)(()=>{switch(t.rank){case 1:return d.slice1d(t,e,n);case 2:switch(r){case 1:return gt(t,e,n);case 2:return yt(t,e,n);default:throw new b("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return gt(t,e,n);case 2:return d.slice3d(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return yt(t,e,n);default:throw new b("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return gt(t,e,n);case 2:return d.slice4d(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return d.slice4d(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return yt(t,e,n);default:throw new b("The axis is not within the rank of the tensor "+r)}default:throw new b("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function xt(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),d.concat(t,e)}function Ot(t,e){switch(t.rank){case 1:return d.concat1d([t,e]);case 2:return d.concat2d([t,e],0);case 3:return d.concat3d([t,e],0);case 4:return d.concat4d([t,e],0);default:throw new b("concatAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}function wt(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new b(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return d.tile(t,e)}function kt(t,e=0,n=1,r,a){return d.randomNormal(t,e,n,r,a)}function jt(t,e,n,r){if(t.rank<2||e.rank<2)throw new g(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new g(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = `+e.shape)}if(2===t.rank&&2===e.rank){const a=!1,s=!1;return d.fused.matMul({a:t,b:e,transposeA:a,transposeB:s,bias:r?It(t.rank,r,"channelsLast"):null,activation:n})}{const a=t.shape.slice(),s=a.pop();t=t.reshape([-1,s]);const i=e.shape.slice(),o=i.pop(),u=i.pop(),c=[...i,o],l=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=e.transpose(l).reshape([u,-1]);const h=[...a,...c],p=!1,f=!1;return d.fused.matMul({a:t,b:e,transposeA:p,transposeB:f,bias:r?It(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function Nt(t,e,n){return Object(d.tidy)(()=>(e=Array.isArray(e)?Object(d.tensor1d)(e,"int32"):e.toInt(),d.gather(t,e,n)))}function St(t){return d.mul(t,t)}function It(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new b("Unexpected bias dimensions: "+e.rank+"; expected it to be 1 or "+t);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new b("Unsupported input rank by biasAdd: "+e.rank)}function Ct(t,e,n){return Object(d.tidy)(()=>(null==n&&(n="channelsLast"),et(n),t.add(It(t.rank,e,n))))}function Tt(t,e,n,r){return Object(d.tidy)(()=>d.dropout(t,e,n,r))}function At(t,e,n=!1){return n?t():e()}const Et=["fanIn","fanOut","fanAvg"],Rt=["normal","uniform","truncatedNormal"];class $t extends d.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class _t extends $t{apply(t,e){return Object(d.zeros)(t,e)}}_t.className="Zeros",d.serialization.registerClass(_t);class Ft extends $t{apply(t,e){return Object(d.ones)(t,e)}}Ft.className="Ones",d.serialization.registerClass(Ft);class Dt extends $t{constructor(t){if(super(),"object"!==typeof t)throw new b("Expected argument of type ConstantConfig but got "+t);if(void 0===t.value)throw new b("config must have value set but got "+t);this.value=t.value}apply(t,e){return Object(d.tidy)(()=>Object(d.mul)(Object(d.scalar)(this.value),Object(d.ones)(t,e)))}getConfig(){return{value:this.value}}}Dt.className="Constant",d.serialization.registerClass(Dt);class Mt extends $t{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Object(d.randomUniform)(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Mt.className="RandomUniform",d.serialization.registerClass(Mt);class zt extends $t{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new g(`randomNormal does not support dType ${e}.`);return kt(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}zt.className="RandomNormal",d.serialization.registerClass(zt);class Lt extends $t{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new g(`truncatedNormal does not support dType ${e}.`);return Object(d.truncatedNormal)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Lt.className="TruncatedNormal",d.serialization.registerClass(Lt);class Bt extends $t{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Object(d.tidy)(()=>{if(2!==t.length||t[0]!==t[1])throw new b("Identity matrix initializer can only be used for 2D square matrices.");return Object(d.mul)(this.gain,Object(d.eye)(t[0]))})}getConfig(){return{gain:this.gain}}}Bt.className="Identity",d.serialization.registerClass(Bt);class Pt extends $t{constructor(t){if(super(),t.scale<0)throw new b("scale must be a positive float. Got: "+t.scale);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,R(Et,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){R(Rt,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(et(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=lt(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=lt(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=lt(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new g(`${this.getClassName()} does not support dType ${e}.`);return Object(d.truncatedNormal)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*s);return Object(d.randomUniform)(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Pt.className="VarianceScaling",d.serialization.registerClass(Pt);class Vt extends Pt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Pt.className}}Vt.className="GlorotUniform",d.serialization.registerClass(Vt);class Wt extends Pt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Pt.className}}Wt.className="GlorotNormal",d.serialization.registerClass(Wt);class Ut extends Pt{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Pt.className}}Ut.className="HeNormal",d.serialization.registerClass(Ut);class Kt extends Pt{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Pt.className}}Kt.className="HeUniform",d.serialization.registerClass(Kt);class Gt extends Pt{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Pt.className}}Gt.className="LeCunNormal",d.serialization.registerClass(Gt);class Ht extends Pt{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Pt.className}}Ht.className="LeCunNormal",d.serialization.registerClass(Ht);class qt extends $t{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new g("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Object(d.tidy)(()=>{if(t.length<2)throw new g("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=kt(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=d.linalg.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Object(d.mul)(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}qt.className="Orthogonal",d.serialization.registerClass(qt);const Xt={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Yt(t,e={}){return C(t,d.serialization.SerializationMap.getMap().classNameMap,e,"initializer")}function Jt(t){return I(t)}function Zt(t){if("string"===typeof t){const e=t in Xt?Xt[t]:t;if("GlorotNormal"===e)return new Wt;if("GlorotUniform"===e)return new Vt;if("HeNormal"===e)return new Ut;if("HeUniform"===e)return new Kt;if("LeCunNormal"===e)return new Gt;if("LeCunUniform"===e)return new Ht;{const t={};return t.className=e,t.config={},Yt(t)}}return t instanceof $t?t:Yt(t)}function Qt(){return new _t}function te(){return new Ft}function ee(t){return new Dt(t)}function ne(t){return new Mt(t)}function re(t){return new zt(t)}function ae(t){return new Lt(t)}function se(t){return new Bt(t)}function ie(t){return new Pt(t)}function oe(t){return new Vt(t)}function ue(t){return new Wt(t)}function ce(t){return new Ut(t)}function le(t){return new Kt(t)}function de(t){return new Gt(t)}function he(t){return new Ht(t)}function pe(t){return new qt(t)}let fe=0;function me(){return fe++}const be={};function ge(t=""){return t in be||(be[t]=0),be[t]+=1,t+be[t].toString()}function ye(t){return Array.isArray(t)&&Array.isArray(t[0])}function ve(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function xe(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new b("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function Oe(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new b("Expected exactly 1 Shape; got "+t.length)}return t}function we(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}class ke{constructor(t,e="float32",n="Variable",r=!0,a=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=me(),n=null==n?"Variable":n,this.originalName=it(n),this.name=ot(this.originalName),this.trainable_=r,this.constraint=a,this.val=d.variable(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function je(t){return t.map(t=>t.read())}function Ne(t){t.forEach(t=>{t[0].write(t[1])})}class Se{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Ie{constructor(t,e,n,r,a,s,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=me(),null!=s&&(this.originalName=it(s),this.name=ot(this.originalName)),this.rank=e.length}}let Ce=0;class Te{constructor(t,e){this.callArgs=e,this.id=Ce++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ae=0;class Ee extends d.serialization.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ae++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=j(t)+"_"+ge(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new m(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new b(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return w(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return w(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new f("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new f("Layer "+this.name+" is not connected, no input to return.");return w(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new f("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new f("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return w(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=k(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=k(this.inputSpec);if(t.length!==e.length)throw new b(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: `+t);for(let n=0;n<t.length;n++){const r=t[n],a=e[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new b(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new b(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new b(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new b(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const t=r.shape;for(const e in a.axes){const r=Number(e),s=a.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new b(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const e=a.shape[t],s=r.shape[t];if(null!=e&&null!=s&&e!==s)throw new b(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=k(t);let r=!0;for(const s of n)if(!(s instanceof Ie)){r=!1;break}let a=!0;for(const s of n)if(s instanceof Ie){a=!1;break}if(r===a)throw new b("Arguments to apply() must be all SymbolicTensors or all Tensors");return st(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of k(t))e.push(n.shape);this.build(w(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let r=this.call(t,e);const a=k(r),s=[];for(let t of a)-1!==n.indexOf(t)&&(t=t.clone()),s.push(t);if(r=w(s),null!=this.activityRegularizer)throw new g("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=k(t);const e=[];for(const n of t)e.push(n.shape);return w(e)}(t),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new Ie(s,n,this,k(t),e,this.name,r)):new Ie(s,r,this,k(t),e,this.name),this.addInboundNode(t,a,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new g("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(t)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new f(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new f(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new m(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return we(this.weights)}build(t){this.built=!0}getWeights(t=!1){return je(t?this.trainableWeights:this.weights)}setWeights(t){Object(d.tidy)(()=>{const e=this.weights;if(e.length!==t.length)throw new b(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=je(e);for(let a=0;a<r.length;++a){const s=r[a],i=e[a],o=t[a];if(!d.util.arraysEqual(s.shape,o.shape))throw new b(`Layer weight shape ${s.shape} not compatible with provided weight shape `+o.shape);n.push([i,o])}Ne(n)})}addWeight(t,e,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(t))throw new b(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Zt("zeros"));const o=r.apply(e,n),u=new ke(o,n,t,s,i);return o.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=k(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,n,r,a,s,i=null){const o=k(t);e=k(e),n=k(n),r=k(r),a=ve(a),s=ve(s);const u=[],c=[],l=[];for(const d of o)u.push(d.sourceLayer),c.push(d.nodeIndex),l.push(d.tensorIndex);new Te({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}class Re extends Ee{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:ge("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new b("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new b("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new b("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new Ie(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Te({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new b("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function $e(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new b("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");return new Re({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}async function _e(t){if(null==t)return;const e=[],n=[],r=[];for(const a in t){const s=t[a];if("number"!==typeof s){const t=s;e.push(t.data()),n.push(a),r.push(t)}}if(e.length>0){const a=await Promise.all(e);for(let e=0;e<a.length;++e)t[n[e]]=a[e][0];Object(d.dispose)(r)}}function Fe(t){if(null!=t)for(const e in t){const n=t[e];"number"!==typeof n&&n.dispose()}}var De;Re.className="InputLayer",d.serialization.registerClass(Re),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(De||(De={}));class Me{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class ze{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Le extends Me{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const r in e){const t=e[r];if("number"===typeof t)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+t*n;else{let e;r in this.totals?e=this.totals[r]:this.totals[r]=0;const a=Object(d.tidy)(()=>Object(d.add)(this.totals[r],Object(d.mul)(t,n)));this.totals[r]=a,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?e[n]=this.totals[n]/this.seen:Object(d.tidy)(()=>{const t=Object(d.mul)(Object(d.div)(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),Object(d.keep)(e[n])}))}}class Be extends Me{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)if("number"!==typeof r[s]){const i=r[s];t.push(i.data()),e.push(a),n.push(s)}}const r=await Promise.all(t);for(let a=0;a<r.length;++a){this.history[e[a]][n[a]].dispose(),this.history[e[a]][n[a]]=r[a][0]}}}class Pe extends Me{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");d.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=d.util.now();return(...a)=>{const s=d.util.now();return s-r<e||(r=s,n=t(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await _e(n),r.push(this.yield(t,e,n))),r.push(Object(d.nextFrame)()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await _e(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await _e(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Object(d.nextFrame)()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await _e(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await _e(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Object(d.nextFrame)()):d.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await _e(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await _e(t),await this.trainEnd(t))}}function Ve(t,e){if(null==t&&(t={}),t instanceof Me)return[t];if(Array.isArray(t)&&t[0]instanceof Me)return t;return k(t).map(t=>new Pe(t,e))}class We{constructor(){}static registerCallbackConstructor(t,e){d.util.assert(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, but got "+t),We.checkForDuplicate(e),null==We.constructors[t]&&(We.constructors[t]=[]),We.constructors[t].push(e)}static checkForDuplicate(t){for(const e in We.constructors){We.constructors[+e].forEach(e=>{if(e===t)throw new b("Duplicate callback constructor.")})}}static clear(){We.constructors={}}static createCallbacks(t){const e=[];for(const n in We.constructors){const r=+n;t>=r&&e.push(...We.constructors[r])}return e.map(t=>new t)}}function Ue(t,e,n,r,a,s,i,o,u){const c=new Be,l=[new Le,...We.createCallbacks(e)];null!=t&&l.push(...t),l.push(c);const d=new ze(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:e,doValidation:o,metrics:u}),{callbackList:d,history:c}}function Ke(t,e={},n=!1){return C(t,d.serialization.SerializationMap.getMap().classNameMap,e,"layer",n)}function Ge(t,e){return Object(d.tidy)(()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=d.sum(St(t),e,!0),r=d.fill(n.shape,p()),a=d.sqrt(d.maximum(n,r));return d.div(t,a)})}function He(t,e){return Object(d.tidy)(()=>d.mean(St(d.sub(e,t)),-1))}function qe(t,e){return Object(d.tidy)(()=>d.mean(d.abs(d.sub(e,t)),-1))}function Xe(t,e){return Object(d.tidy)(()=>{const n=d.sub(t,e),r=d.clipByValue(d.abs(t),p(),Number.MAX_VALUE),a=d.abs(d.div(n,r));return d.mul(100,d.mean(a,-1))})}function Ye(t,e){return Object(d.tidy)(()=>{const n=d.clipByValue(e,p(),Number.MAX_VALUE),r=d.log(d.add(1,n)),a=d.clipByValue(t,p(),Number.MAX_VALUE),s=d.log(d.add(1,a));return d.mean(St(d.sub(r,s)),-1)})}function Je(t,e,n=!1){return Object(d.tidy)(()=>{if(n)e=d.softmax(e);else{const t=d.sum(e,e.shape.length-1,!0);e=d.div(e,t)}return e=d.clipByValue(e,p(),1-p()),d.neg(d.sum(d.mul(t.toFloat(),d.log(e)),e.shape.length-1))})}function Ze(t,e,n=!1){return Object(d.tidy)(()=>{const r=d.floor(function(t){const e=[lt(t.shape)];return t.reshape(e)}(t)).toInt(),a=(e=d.clipByValue(e,p(),1-p())).shape;return Je(d.oneHot(r,a[a.length-1]).reshape(a),e,n)})}function Qe(t,e){return Object(d.tidy)(()=>{let n;return n=d.clipByValue(e,p(),1-p()),n=d.log(d.div(n,d.sub(1,n))),d.mean(function(t,e){if(!d.util.arraysEqual(t.shape,e.shape))throw new b(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Object(d.tidy)(()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())})}(t,n),-1)})}function tn(t,e){return Object(d.tidy)(()=>{const n=d.clipByValue(t,p(),1),r=d.clipByValue(e,p(),1);return d.sum(d.mul(t,d.log(d.div(n,r))),-1)})}function en(t,e){return Object(d.tidy)(()=>{const n=Ge(t,-1),r=Ge(e,-1),a=d.mul(n,r);return d.neg(d.sum(a,-1))})}We.constructors={};const nn={meanSquaredError:He,meanAbsoluteError:qe,meanAbsolutePercentageError:Xe,meanSquaredLogarithmicError:Ye,squaredHinge:function(t,e){return Object(d.tidy)(()=>{const n=d.maximum(0,d.sub(1,d.mul(t,e)));return d.mean(St(n),-1)})},hinge:function(t,e){return Object(d.tidy)(()=>{const n=d.maximum(0,d.sub(1,d.mul(t,e)));return d.mean(n,-1)})},categoricalHinge:function(t,e){return Object(d.tidy)(()=>{const n=d.sum(d.mul(t,e),-1),r=d.max(d.mul(d.sub(1,t),e),-1);return d.maximum(0,d.add(1,d.sub(r,n)))})},logcosh:function(t,e){return Object(d.tidy)(()=>{const n=Math.log(2),r=d.sub(e,t),a=d.sub(d.add(r,d.softplus(d.mul(-2,r))),n);return d.mean(a,-1)})},categoricalCrossentropy:Je,sparseCategoricalCrossentropy:Ze,binaryCrossentropy:Qe,kullbackLeiblerDivergence:tn,poisson:function(t,e){return Object(d.tidy)(()=>{const n=d.log(d.add(p(),e));return d.mean(d.sub(e,d.mul(t,n)),-1)})},cosineProximity:en};function rn(t){if("string"===typeof t){if(t in nn)return nn[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new b(e)}return t}function an(t,e){return Object(d.tidy)(()=>{const n=d.mul(.5,d.onesLike(e)),r=mt(d.greater(e,n),t.dtype);return d.mean(d.equal(t,r),-1)})}function sn(t,e){return Object(d.tidy)(()=>mt(d.equal(d.argMax(t,-1),d.argMax(e,-1)),"float32"))}function on(t,e){return Object(d.tidy)(()=>d.logicalAnd(t.equal(1),e.equal(1)).sum().cast("float32"))}function un(t,e){return Object(d.tidy)(()=>{const n=on(t,e),r=function(t,e){return Object(d.tidy)(()=>d.logicalAnd(t.equal(0),e.equal(1)).sum().cast("float32"))}(t,e),a=n.add(r);return d.where(d.greater(a,0),n.div(a),0).cast("float32")})}function cn(t,e){return Object(d.tidy)(()=>{const n=on(t,e),r=function(t,e){return Object(d.tidy)(()=>d.logicalAnd(t.equal(1),e.equal(0)).sum().cast("float32"))}(t,e),a=n.add(r);return d.where(d.greater(a,0),n.div(a),0).cast("float32")})}function ln(t,e){return Qe(t,e)}function dn(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),d.equal(t,e).asType("float32")}const hn=Je,pn=Ze,fn={binaryAccuracy:an,categoricalAccuracy:sn,precision:un,categoricalCrossentropy:hn,sparseCategoricalCrossentropy:pn,mse:He,MSE:He,mae:qe,MAE:qe,mape:Xe,MAPE:Xe,cosine:en};function mn(t){if("string"===typeof t&&t in fn)return fn[t];if("string"!==typeof t&&null!=t)return t;throw new b("Unknown metric "+t)}function bn(t){if(x(null!==t,"Unknown LossOrMetricFn "+t),"string"===typeof t)return t;{let e;for(const n of Object.keys(nn))if(nn[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(fn))if(fn[n]===t){e=n;break}return void 0!==e?e:t.name}}function gn(t,e,n=!1){if(null==t||"object"!==typeof t||Object.getPrototypeOf(t)!==Object.prototype||!function t(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const n=Object.keys(e);for(const r of n){if("string"!==typeof r)return!1;if(!t(e[r]))return!1}return!0}if(Array.isArray(e)){for(const n of e)if(!t(n))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function yn(t,e,n,r=console.log){const a=function(t){let e=!0;const n=[],r=[];for(const a in t.nodesByDepth)n.push(t.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){e=!1;break}r.push(...a)}if(e)for(const a of t.layers){let t=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),s=["Layer (type)","Output shape","Param #"];let i;if(a?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!a){s.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),vn(s,n,r),r("=".repeat(e));const o=t.layers;for(let l=0;l<o.length;++l)a?xn(o[l],n,r):On(o[l],n,i,r),r((l===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=function(t){let e;e=null!=t.collectedTrainableWeights?we(t.collectedTrainableWeights):we(t.trainableWeights);return e}(t),c=we(t.nonTrainableWeights);r("Total params: "+(u+c)),r("Trainable params: "+u),r("Non-trainable params: "+c),r("_".repeat(e))}function vn(t,e,n=console.log){let r="";for(let a=0;a<t.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=t[a],r=r.slice(0,e[a]),r+=" ".repeat(e[a]-r.length);n(r)}function xn(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(a){r="multiple"}vn([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function On(t,e,n,r){let a;try{a=JSON.stringify(t.outputShape)}catch(c){a="multiple"}const s=[];for(const l of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let t=0;t<l.inboundLayers.length;++t){const e=l.inboundLayers[t].name,n=l.nodeIndices[t],r=l.tensorIndices[t];s.push(`${e}[${n}][${r}]`)}const i=t.name,o=t.getClassName(),u=0===s.length?"":s[0];vn([`${i} (${o})`,a,t.countParams().toString(),u],e,r);for(let l=1;l<s.length;++l)vn(["","","",s[l]],e,r)}function wn(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"===typeof n}function kn(t,e){if(null===t)return null;if("string"===typeof t)return N(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let a=0;a<r;++a){const r=t[a];wn(e,a,r)?n.push(r):n.push(kn(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"===typeof r)e[n]=r;else{const t=N(n);e[t]=kn(r,t)}}return e}}const jn="2.7.0";class Nn{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Nn)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new b(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Object(d.cast)(e,t.dtype)}catch(n){throw new b(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Ie){if(null==this.id2Value[t.id])throw new b("Nonexistent key: "+t.name);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new b("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]}}getMask(t){if(t instanceof Ie){if(null==this.id2Value[t.id])throw new b("Nonexistent key: "+t.name);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new b("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Object(d.dispose)(this.id2Mask)}}const Sn={},In={};function Cn(t,e,n,r){const a=null!=n&&n.training,s=Array.isArray(t),i=s?t:[t],o=i.map(t=>t.name),u=[],c=e.names();for(const d of o)-1!==c.indexOf(d)?u.push(e.getValue(d)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const l=o.join(",")+"|"+e.names().join(",");let h,p;if(null==Sn[l]){const t=function(t,e){d.util.assert(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const a=An(t[0],e);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of t){const{sorted:t,recipientMap:i}=An(s,e);for(const e of t)a.has(e.name)||(n.push(e),a.add(e.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:Tn(r)}}(i,e);h=t.sorted,p=t.recipientCounts,Sn[l]=h,In[l]=p}h=Sn[l],p={},a||Object.assign(p,In[l]);const f=new Nn(e);for(let m=0;m<h.length;++m){if(null!=r){const t=Object(d.memory)().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const t=h[m],s=t.sourceLayer;if(s instanceof Re)continue;const i=[],c=[],l=[];let b=!1;for(const n of t.inputs){const t=f.getValue(n),r=f.getMask(n);i.push(t),c.push(r),null!=r&&(b=!0),a||(p[n.name]--,0!==p[n.name]||e.hasKey(n)||-1!==o.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||l.push(t))}b&&((n=n||{}).mask=c[0]);const g=k(s.apply(i,n));let y=null;s.supportsMasking&&(y=s.computeMask(i,c));const v=En(t),x=Array.isArray(v)?v:[v];for(let e=0;e<x.length;++e){f.hasKey(x[e])||f.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}a||Object(d.dispose)(l)}return f.disposeMasks(),s?u:u[0]}function Tn(t){const e={};for(const n in t)e[n]=t[n].size;return e}function An(t,e){const n=new Set,r=[],a={};for(const o of e.names())n.add(o);const s=[],i=[];for(s.push(t);s.length>0;){const t=s[s.length-1];if(n.has(t.name)){s.pop();continue}const e=i[i.length-1]===s.length-1;if(0===t.inputs.length||e)s.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(s.length-1);for(const e of t.inputs)null==a[e.name]&&(a[e.name]=new Set),a[e.name].add(t.name),n.has(e.name)||s.push(e)}}return{sorted:r,recipientMap:a}}function En(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class Rn extends Ee{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=ge(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],A(this.inputs).length!==this.inputs.length)throw new b("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(t=>t.name));A(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(t=>t.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const m of this.outputs){const t=m.sourceLayer,e=m.nodeIndex,n=m.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const m of this.inputs){const t=m.sourceLayer,e=m.nodeIndex,n=m.tensorIndex;x(0===e,"input layer has >1 nodes"),x(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let m=0;m<this.inputLayers.length;m++){const e=this.inputLayers[m];if(!(e instanceof Re))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${m} (0-based) originates from layer type ${e.getClassName()}.`);this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const m of this.outputLayers)this.outputNames.push(m.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},a={},s={},i=[],o=(t,e,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=t.sourceLayer,a=t.nodeIndex,u=t.tensorIndex);const c=r.inboundNodes[a];if(-1!==n.indexOf(c))throw new m(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(c))return;this.containerNodes.add(Rn.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let s=0;s<l;s++){const t=c.inputTensors[s],r=c.inboundLayers[s],a=c.nodeIndices[s],i=c.tensorIndices[s];o(t,e,n,r,a,i)}for(e.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);i.push(c)},u=[],c=[];for(const m of this.outputs)o(m,u,c);const l=i.slice().reverse();for(const m of l){n[m.id]=m,m.id in e||(e[m.id]=0);let t=e[m.id];const s=null==r[m.outboundLayer.id]?0:r[m.outboundLayer.id];t=Math.max(t,s),r[m.outboundLayer.id]=t,a[m.outboundLayer.id]=m.outboundLayer,e[m.id]=t;for(let r=0;r<m.inboundLayers.length;r++){const a=m.inboundLayers[r],s=m.nodeIndices[r],i=a.inboundNodes[s],o=null==e[i.id]?0:e[i.id];e[i.id]=Math.max(t+1,o),n[i.id]=i}}const d={};for(const m in e){const t=e[m];t in d||(d[t]=[]),d[t].push(n[m])}const h={};for(const m in r){const t=r[m];t in h||(h[t]=[]),h[t].push(a[m])}let p=Object.keys(h).map(t=>parseInt(t,10)).sort(T);this.layers=[];for(const m of p){const t=h[m];t.sort((t,e)=>{const n=s[t.id],r=s[e.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof Rn&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,p=Object.keys(d).map(t=>parseInt(t,10)).sort(T);const f=this.inputs.slice(),g=[];for(const b of p)for(const t of d[b]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new m("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${e.name}". The following previous layers were accessed without issue: `+g);for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=d;const y=this.layers.map(t=>t.name);for(const b of y){const t=y.filter(t=>t===b).length;if(1!==t)throw new m(`The name "${b}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Te({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new b("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const s of this.layers)for(const t of s.weights){if(null!=n[t.originalName])throw new b("Duplicate weight name: "+t.originalName);n[t.originalName]=t,r++}const a=[];for(const s in t){let r=s;if(null==n[s]){const t=s.split("/");r=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[r])a.push([n[r],t[s]]);else if(e)throw new b("Provided weight data has no target variable: "+s);delete n[r]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new b(`${t.length} of ${r} weights are not set: `+t)}Ne(a)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers "+jn,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=function t(e,n){if(null===e||void 0===e)return null;if("string"===typeof e)return j(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const r=[],a=e.length;for(let s=0;s<a;++s){const a=e[s];wn(n,s,a)?r.push(a):r.push(t(a,n))}return r}{const n={};for(const r of Object.keys(e)){const a=e[r];n[j(r)]="name"!==r&&"className"!==r||"string"!==typeof a?t(a,r):a}return n}}(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Object(d.tidy)(()=>{t=k(t);const n=new Nn;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Cn(this.outputs,n,e)})}computeMask(t,e){return Object(d.tidy)(()=>{let n;return t=k(t),n=null==e?v(null,t.length):k(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=ve(t);if(e.length!==this.inputLayers.length)throw new b(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<e.length;i++){const t=this.inputLayers[i],r=e[i];n[t.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(T);if(r.length>1)for(const i of r){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(t.id))continue;const r=[];for(let i=0;i<e.inboundLayers.length;i++){const t=e.inboundLayers[i],a=e.nodeIndices[i],s=e.tensorIndices[i],o=n[`${t.name}_${a}_${s}`];r.push(o)}const a=ve(t.computeOutputShape(w(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}const a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],e=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${t.name}_${e}_${n}`;s.push(r)}for(let i=0;i<s.length;i++){const t=s[i];x(t in n),a.push(n[t])}return w(a)}runInternalGraph(t,e){null==e&&(e=v(null,t.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],a=t[o],s=e[o];n[r.id]=[a,s]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(T);for(const o of r){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,c={};if(null!=e.callArgs&&(c=e.callArgs),1===s.length){const[e,n]=s[0];null==c.mask&&(c.mask=n),o=k(t.call(e,c)),u=k(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map(t=>t[0]),i=s.map(t=>t[1]),null==c.mask&&(c.mask=i),o=k(t.call(r,c)),u=k(t.computeMask(r,i));if(t.activityRegularizer)throw new g("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<a.length;++t){const e=a[t],r=o[t],s=u[t];n[e.id]=[r,s]}}}}const a=[],s=[],i=[];for(const o of this.outputs){x(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[t,e]=n[o.id];i.push(t.shape),a.push(t),s.push(e)}return[a,s,i]}buildNodeConversionMap(t){const e={};let n;for(const r of this.layers){n=r instanceof Rn?1:0;for(let t=0;t<r.inboundNodes.length;t++){const a=Rn.nodeKey(r,t);this.containerNodes.has(a)&&(e[a]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new b(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new b("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new b("No such layer: "+t)}calculateLosses(){return Object(d.tidy)(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=Rn.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const t=i.getClassName(),r=i.getConfig(),a=[];for(let n=0;n<i.inboundNodes.length;n++){const t=i.inboundNodes[n],r=Rn.nodeKey(i,n);let o={};if(this.containerNodes.has(r)){if(t.callArgs)try{JSON.stringify(t.callArgs),o=t.callArgs}catch(s){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: `+t.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),o={}}if(t.inboundLayers.length>0){const n=[];for(let r=0;r<t.inboundLayers.length;r++){const a=t.inboundLayers[r],s=t.nodeIndices[r],i=t.tensorIndices[r];let u=e[Rn.nodeKey(a,s)];null==u&&(u=0),n.push([a.name,u,i,o])}a.push(n)}}}const o={};o.name=i.name,o.className=t,o.config=r,o.inboundNodes=a,n.push(o)}t.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const t=this.inputLayers[i],n=this.inputLayersNodeIndices[i],a=Rn.nodeKey(t,n);if(!this.containerNodes.has(a))continue;let s=e[a];null!==s&&void 0!==s||(s=0);const o=this.inputLayersTensorIndices[i];r.push([t.name,s,o])}t.inputLayers=r;const a=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=Rn.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let s=e[r];null!==s&&void 0!==s||(s=0);const o=this.outputLayersTensorIndices[i];a.push([t.name,s,o])}return t.outputLayers=a,t}static fromConfig(t,e,n={},r=!1){const a={},s={};function i(t,e){t.name in s?s[t.name].push(e):s[t.name]=[e]}function o(t,e){const n=[];let r;for(const s of e){const o=s[0],u=s[1],c=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(t,e);const l=a[o];if(l.inboundNodes.length<=u)return void i(t,e);const d=l.inboundNodes[u];n.push(d.outputTensors[c])}n.length>0&&t.apply(w(n),r)}function u(t){const n=t.name,s=Ke(t,null!=e.customObjects?e.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s;t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new b("Corrupted configuration, expected array for nodeData: "+t);i(s,t)})}const c=e.name,l=e.layers;for(const m of l)u(m);for(;!E(s);)for(const t of l){const e=a[t.name];if(e.name in s){const t=s[e.name];delete s[e.name];for(const n of t)o(e,n)}}const d=[],h=[],p=e.inputLayers;for(const m of p){const t=m[0],e=m[1],n=m[2];x(t in a);const r=a[t].inboundNodes[e].outputTensors;d.push(r[n])}const f=e.outputLayers;for(const m of f){const t=m[0],e=m[1],n=m[2];x(t in a);const r=a[t].inboundNodes[e].outputTensors;h.push(r[n])}return new t({inputs:d,outputs:h,name:c})}get stateful(){if(this._stateful)throw new b("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Object(d.tidy)(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function $n(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"===typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"===typeof t&&Object.keys(t).length>0&&"object"===typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function _n(t,e){return $n(t,e,"classWeight")}async function Fn(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Object(d.tidy)(()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await e.data());Object(d.dispose)(e);const a=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);a.push(n[t])}),Object(d.tensor1d)(a,"float32")}return null}function Dn(t,e){return Object(d.mul)(t,e)}function Mn(t,e){let n,r;const a=e;n=a.xs,r=a.ys,d.util.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e);const s=zn("input",t.inputNames,n),i=zn("output",t.outputNames,r),o=s[0].shape[0];d.util.assert(s.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: `+JSON.stringify(t.inputNames)+")"),d.util.assert(i.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: `+JSON.stringify(t.outputNames)+")");for(let u=0;u<s.length;u++)d.util.assert(s[u].shape[0]===o,()=>`Batch size mismatch: input ${t.inputNames[u]} has ${s[u].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);for(let u=0;u<i.length;u++)d.util.assert(i[u].shape[0]===o,()=>`Batch size mismatch: output ${t.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);return{xs:s,ys:i}}function zn(t,e,n){if(n instanceof d.Tensor)return[n];if(Array.isArray(n))return d.util.assert(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const a of e){if(null==n[a])throw new b(`The feature data generated by the dataset lacks the required ${t} key '${a}'.`);r.push(n[a])}return r}}async function Ln(t,e,n){const r=null!=n.batchesPerEpoch;if(d.util.assert(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),d.util.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),d.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),d.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),d.util.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(Bn(n.validationData))d.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const t=function(t){if(3===t.length)throw new g("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);s=t.xs,i=t.ys}const o=t.makeTrainFunction(),u=t.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map(t=>"val_"+t)):u.slice();const l=Ve(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=Ue(l,h,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,a,c);p.setModel(t),t.history=f,await p.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,b=await e.iterator();for(;m<n.epochs;){const c={};await p.onEpochBegin(m);let l=0,h=0;for(r||(b=await e.iterator());!r||l<n.batchesPerEpoch;){const e=await b.next();if(r&&e.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+l+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:a}=Mn(t,e.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const e=_n(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await Fn(a[t],null,e[t]))}const c=r.concat(a).concat(i),f=o(c);d.dispose(c);for(let t=0;t<u.length;++t){const e=u[t],n=f[t];s[e]=n,d.keep(n)}await p.onBatchEnd(h,s),Fe(s),h++,l++}if(r?l>=n.batchesPerEpoch:e.done){if(a){let e;e=Bn(n.validationData)?k(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):k(t.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)c["val_"+t.metricsNames[n]]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(m,c),m++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function Bn(t){return"function"===typeof t.iterator}function Pn(t){d.util.assert(t>0&&Number.isInteger(t),()=>"batchSize is required to be a positive integer, but got "+t)}function Vn(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>gt(t,e,n-e)):gt(t,e,n-e)}function Wn(t,e){return d.tidy(()=>null==t?null:Array.isArray(t)?t.map(t=>Wn(t,e)):Nt(t,"int32"===e.dtype?e:e.toInt()))}function Un(t,e){const n=[];let r=0,a=null;for(;r<t;)a=r+e,a>=t&&(a=t),n.push([r,a]),r=a;return n}async function Kn(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,c,l;t.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;Pn(h);const p=!1,f=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,p,h);a=f[0],s=f[1],l=f[2];let m,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new g("validationData including sample weights is not supported yet."):new b("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");i=r.validationData[0],o=r.validationData[1];const e=!0,n=await t.standardizeUserData(i,o,null,null,e,h);u=n[0],c=n[1],m=u.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const t=Math.floor(a[0].shape[0]*(1-r.validationSplit)),e=a[0].shape[0];u=Vn(a,t,e),a=Vn(a,0,t),c=Vn(s,t,e),s=Vn(s,0,t),m=u.concat(c)}else null!=r.validationSteps&&(y=!0);const v=a.concat(s).concat(l);t.checkTrainableWeightsConsistency();const x=t.makeTrainFunction(),O=t.getDedupedMetricsNames();let w,k;y?(t.makeTestFunction(),w=t.testFunction,k=O.slice().concat(O.map(t=>"val_"+t))):(w=null,m=[],k=O.slice());const j=Ve(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,a,s,i,o,u,c,l,h,p,f,m){null==a&&(a=32),null==s&&(s=1),null==l&&(l=!0),null==p&&(p=0);let y=!1;if(null!=u&&null!=c&&(y=!0),null!=m&&(y=!0,null==f))throw new b("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const v=t.checkNumSamples(n,a,f,"steps_per_epoch");let x;null!=v&&(x=ft(0,v)),null==i&&(i=1);const{callbackList:O,history:w}=Ue(o,i,s,p,v,f,a,y,h);O.setModel(t),t.history=w,await O.onTrainBegin(),t.stopTraining_=!1;for(let b=p;b<s;++b){await O.onEpochBegin(b);const s={};if(null!=f)throw new g("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new g("batch shuffling is not implemneted yet");l&&d.util.shuffle(x);const i=Object(d.tensor1d)(x),o=Un(v,a);for(let l=0;l<o.length;++l){const h={};if(await O.onBatchBegin(l,h),d.tidy(()=>{const p=o[l][0],f=o[l][1],m=gt(i,p,f-p);h.batch=l,h.size=f-p;const b=Wn(n,m),g=e(b);for(let t=0;t<r.length;++t){const e=r[t],n=g[t];h[e]=n,d.keep(n)}if(l===o.length-1&&y){const e=t.testLoop(u,c,a);for(let t=0;t<r.length;++t){const n=r[t],a=e[t];d.keep(a),s["val_"+n]=a}}}),await O.onBatchEnd(l,h),Fe(h),t.stopTraining_)break}i.dispose()}if(await O.onEpochEnd(b,s),t.stopTraining_)break}return await O.onTrainEnd(),await t.history.syncData(),t.history}(t,x,v,O,h,r.epochs,r.verbose,j,w,m,r.shuffle,k,r.initialEpoch,null,null)}finally{t.isTraining=!1,Hn(a,e),Hn(s,n),Hn(u,i),Hn(c,o),null!=l&&d.dispose(l)}}function Gn(t){const e=[];t instanceof d.Tensor&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(bt(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Hn(t,e){if(null==t)return;const n=[];if(e instanceof d.Tensor)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const a in e){const t=e[a];n.push(t.id)}const r=[];if(t instanceof d.Tensor)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const a in t){const e=t[a];-1===n.indexOf(e.id)&&r.push(e)}r.forEach(t=>{t.isDisposed||t.dispose()})}function qn(t){return Array.isArray(t)}function Xn(t){return!function(t){return t instanceof d.Tensor}(t)&&!qn(t)}function Yn(t,e,n,r=!0,a=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(qn(t)&&t.length>0)e=!0;else if(Xn(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new b(`Error when checking model ${a} expected no data, but got `+t)}return[]}if(null==t)return e.map(t=>null);let s;if(Xn(t)){t=t,s=[];for(const n of e){if(null==t[n])throw new b(`No data provided for "${n}". Need data for each key in: `+e);s.push(t[n])}}else if(qn(t)){if((t=t).length!==e.length)throw new b(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): `+t);s=t}else{if(t=t,e.length>1)throw new b(`The model ${a} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+t.shape);s=[t]}if(s=Gn(s),null!=n)for(let i=0;i<e.length;++i){if(null==n[i])continue;const t=s[i];if(t.shape.length!==n[i].length)throw new b(`Error when checking ${a}: expected ${e[i]} to have ${n[i].length} dimension(s). but got array with shape `+t.shape);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=t.shape[s],u=n[i][s];if(null!=u&&u>=0&&o!==u)throw new b(`Error when checking ${a}: expected ${e[i]} to have shape [${n[i]}], but got array with shape [${t.shape}].`)}}return s}function Jn(t,e,n,r=!0,a=""){let s;if(Array.isArray(t)){if(t.length!==e.length)throw new b(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);s=t}else{if(e.length>1)throw new b(`The model expects ${e.length} ${a} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(t.shape)+".");s=[t]}if(null!=n)for(let i=0;i<e.length;++i){if(null==n[i])continue;const t=s[i];if(t.shape.length!==n[i].length)throw new b(`Error when checking ${a}: expected ${e[i]} to have ${n[i].length} dimension(s), but got array with shape `+JSON.stringify(t.shape));for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=t.shape[s],u=n[i][s];if(null!=u&&u!==o)throw new b(`Error when checking ${a}: expected ${e[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(t.shape)}.`)}}}class Zn extends Rn{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new b("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");yn(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"===typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>d.train.adagrad(.01),Adadelta:()=>d.train.adadelta(1,.95,p()),Adam:()=>d.train.adam(.001,.9,.999,p()),Adamax:()=>d.train.adamax(.002,.9,.999,p(),0),RMSProp:()=>d.train.rmsprop(.001,.9,0,p()),SGD:()=>d.train.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new b("Unknown Optimizer "+t)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof d.Optimizer))throw new b("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"===typeof t.loss||"function"===typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new b(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map(t=>rn(t))}else{const n=rn(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new b(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(rn(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const t=this.internalOutputShapes[s],e=this.outputNames[s];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],st("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"===typeof t||"function"===typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!==typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+t);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),a=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};st("metric",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,r,s;for(const i of e){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let a;1===e[e.length-1]||this.lossFunctions[t]===Qe?-1!==["accuracy","acc"].indexOf(i)?r=an:-1!==["crossentropy","ce"].indexOf(i)&&(r=ln):this.lossFunctions[t]===Ze?-1!==["accuracy","acc"].indexOf(i)?r=dn:-1!==["crossentropy","ce"].indexOf(i)&&(r=pn):-1!==["accuracy","acc"].indexOf(i)?r=sn:-1!==["crossentropy","ce"].indexOf(i)&&(r=hn),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const t=mn(i);s=t,n=""+bn(i)}let e;st(n,()=>{e=s}),a(t,n,e)}})(r[t])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;Pn(r);const a=this.standardizeUserDataXY(t,e,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return w(this.testLoop(i,s,r,n.verbose,n.steps))}finally{Hn(a[0],t),Hn(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,a=t.testFunction;let s=[];if(n.verbose>0)throw new g("Verbose mode is not implemented yet.");d.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const i="function"===typeof e.next?e:await e.iterator();let o=0,u=0;for(;!r||u<n.batches;){const e=await i.next();if(s=d.tidy(()=>{if(e.value){const{xs:n,ys:r}=Mn(t,e.value),i=n.concat(r),c=d.tidy(()=>a(i));if(d.dispose(i),0===u)for(let t=0;t<c.length;++t)s.push(Object(d.scalar)(0));const l=i[0].shape[0];for(let t=0;t<c.length;++t){const e=c[t],n=s[t];s[t]=d.tidy(()=>d.add(s[t],d.mul(l,e))),u>0&&d.dispose(n)}d.dispose(c),o+=l,++u}return s}),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<s.length;++c){const t=s[c];s[c]=d.div(s[c],o),d.dispose(t)}return w(s)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let a;if(null!=n){if(a=null,null!=e)throw new b(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+e)}else{if(null==t)throw new b("Either the input data should have a defined shape, or "+r+" shoud be specified.");a=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return a}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new b("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],a=this.retrieveSymbolicTensors(r),s=new Nn;if(t instanceof d.Tensor&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new b(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(const o of this.inputs){const e=t[o.name];if(null==e)throw new b("No value is provided for the model's input "+o.name);s.add(o,e)}const i=Cn(a,s);return n?i:i[0]}retrieveSymbolicTensors(t){const e=v(null,t.length);let n=t.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map(t=>t.name);for(let r=0;r<t.length;++r){const i=s.indexOf(t[r]);if(-1!==i&&(e[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new b("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return e}predictLoop(t,e=32,n=!1){return d.tidy(()=>{const r=this.checkNumSamples(t);if(n)throw new g("Verbose predictLoop() is not implemented yet.");const a=Un(r,e),s=this.outputs.map(t=>[]);for(let e=0;e<a.length;++e){d.tidy(()=>{const n=a[e][0],r=a[e][1],s=Vn(t,n,r),i=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)i.push({key:this.inputs[t],value:s[t]});else i.push({key:this.inputs[0],value:s});const o=new Nn(i);return Cn(this.outputs,o)}).forEach((t,e)=>s[e].push(t))}return w(s.map(t=>d.concat(t,0)))})}predict(t,e={}){const n=Gn(t);Jn(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return Pn(r),this.predictLoop(n,r)}finally{Hn(n,t)}}predictOnBatch(t){Jn(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new m("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let s=0;s<this.feedOutputShapes.length;++s){const t=this.feedOutputShapes[s];this.feedLossFns[s]===Ze?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(t,e,n){const r=A(t.map(t=>t.shape[0]));r.sort();const a=A(e.map(t=>t.shape[0]));if(a.sort(),r.length>1)throw new b("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(t=>t.shape)));if(a.length>1)throw new b("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(t=>t.shape)));if(r.length>0&&a.length>0&&!d.util.arraysEqual(r,a))throw new b(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(t=Yn(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Yn(e,this.feedOutputNames,a,!1,"target")),function(t,e,n){const r=[He,Qe,Je];for(let a=0;a<t.length;++a){const s=t[a],i=e[a],o=n[a];if(null!=i){if(i===Je&&1===s.shape[s.shape.length-1])throw new b(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=s.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],a=e[n];if(null!=a&&r!==a)throw new b(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!==0)throw new b(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(t,e,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=_n(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await Fn(o[e],null,t[e]))}return[i,o,u]}testLoop(t,e,n,r=0,a){return d.tidy(()=>{const s=this.checkNumSamples(e,n,a,"steps"),i=[];if(r>0)throw new g("Verbose mode is not implemented yet.");if(null!=a)throw new g("steps mode in testLoop() is not implemented yet");{const r=Un(s,n),a=Object(d.tensor1d)(ft(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=gt(a,s,o-s),c=Wn(e,u),l=t(c);if(0===n)for(let t=0;t<l.length;++t)i.push(Object(d.scalar)(0));for(let t=0;t<l.length;++t){const e=l[t];i[t]=d.add(i[t],d.mul(o-s,e))}}for(let t=0;t<i.length;++t)i[t]=d.div(i[t],s)}return i})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let a=r;if(O(t,r)>1){a+="_"+O(t.slice(0,n),r)}e.push(a)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map(t=>t.read());return[this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new Nn(t),o=Cn(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(r[n],o[n]);null!=a[n]&&(t=Dn(t,a[n]));const s=d.mean(t);e.push(s),u=0===n?t:d.add(u,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],a=this.metricsTensors[n][1];t=d.mean(e(r[a],o[a]))}d.keep(t),s.push(t)}return u=d.mean(u),this.calculateLosses().forEach(t=>{u=d.add(u,t)}),u},!0,i)].concat(s)}}makeTestFunction(){this.testFunction=t=>d.tidy(()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let t=0;t<this.inputs.length;++t)s.push({key:this.inputs[t],value:r[t]});const i=new Nn(s),o=Cn(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],s=d.mean(r(a[t],o[t]));n=0===t?s:d.add(n,s),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],s=d.mean(n(a[r],o[r]));e.push(s)}return e})}async fit(t,e,n={}){return Kn(this,t,e,n)}async fitDataset(t,e){return Ln(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const o of s){const t=await o.data();i.push(t[0])}return d.dispose(s),w(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||e.push({name:r[s].originalName,tensor:a[s]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=d.memory().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-d.memory().numTensors}return t}getLossIdentifiers(){let t;if("string"===typeof this.loss)t=j(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!==typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>j(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=j(n[r])}}return t}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[j(bn(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>j(bn(t)));{const t={};for(const e in this.metrics)t[e]=j(bn(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Ke(kn(t.optimizer_config));let n,r;if("string"===typeof t.loss)n=N(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>N(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=N(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>N(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=N(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"===typeof t){const e=d.io.getSaveHandlers(t);if(0===e.length)throw new b(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new b(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new b("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await d.io.encodeWeights(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v"+jn,convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:a}=await d.io.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...a),n.data=d.io.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;gn(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){gn(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Zn.className="Model",d.serialization.registerClass(Zn);class Qn extends Zn{}async function tr(t,e){"modelTopology"in t||(t={modelTopology:t});let n=(t=t).modelTopology;null!=n.model_config&&(n=n.model_config);const r=Ke(kn(n),e);if(null!=t.weightsManifest){const e=await d.io.loadWeights(t.weightsManifest,t.pathPrefix,r.weights.map(t=>t.originalName)),n={};for(const t of r.weights)n[t.originalName]=e[t.originalName];r.loadWeights(n),Object(d.dispose)(e)}return r}async function er(t,e){if(null==e&&(e={}),"string"===typeof t){const n=d.io.getLoadHandlers(t,e);if(0===n.length)n.push(d.io.browserHTTPRequest(t,e));else if(n.length>1)throw new b(`Found more than one (${n.length}) load handlers for URL '${t}'`);t=n[0]}return async function(t,e,n){null==n&&(n={});if(null==t.load)throw new b("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await t.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=Ke(kn(a),e,i),u=r.trainingConfig;null!=u&&o.loadTrainingConfig(u);null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata);if(null!=r.weightData){if(null==r.weightSpecs)throw new b("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:e}=function(t,e){const n=d.io.decodeWeights(t,e),r={},a=[];return e.forEach(t=>{"optimizer"===t.group?a.push({name:t.name,tensor:n[t.name]}):r[t.name]=n[t.name]}),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(t,s),null!=o.optimizer&&e.length>0&&await o.optimizer.setWeights(e),Object(d.dispose)(t),Object(d.dispose)(e.map(t=>t.tensor))}return o}(t,void 0,e)}Qn.className="Functional",d.serialization.registerClass(Qn);class nr extends Zn{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:ge("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new b("Negative dimension size caused by adding layer "+t.name+" with input shape ["+t.inboundNodes[0].inputTensors[0].shape+"]")}add(t){const e=t instanceof nr||t instanceof Zn;let n;if(e){if(n=t,1!==n.outputs.length)throw new b("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new b("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new b("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=$e({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new b(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new b("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=function t(e,n,r){if((null==n||null!=r&&r>0)&&(n=e.sourceLayer,r=e.nodeIndex),0===n.inboundNodes.length)return[e];{const e=n.inboundNodes[r];if(0===e.inboundLayers.length)return e.inputTensors;{const n=[];for(let r=0;r<e.inboundLayers.length;r++){const a=t(e.inputTensors[r],e.inboundLayers[r],e.nodeIndices[r]);for(const t of a)-1===n.indexOf(t)&&n.push(t)}return n}}}(this.outputs[0])}this.inboundNodes=[],new Te({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:v(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Oe(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Zn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new m("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new m("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new m("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new m("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let a,s={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new b("Legacy serialization format not supported yet.");a=e}else d.util.assert(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=e.layers,delete e.layers,s=e;const i=new t(s);if(!(i instanceof nr))throw new g("Sequential.fromConfig called on non-Sequential input: "+i);for(const o of a){const t=Ke(o,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(t){if(null==this.model)throw new b("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new b("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}function rr(t){return new Zn(t)}function ar(t){return new nr(t)}function sr(t,e){return null==e&&(e={}),er(t,e)}function ir(t){return $e(t)}function or(t,e){We.registerCallbackConstructor(t,e)}nr.className="Sequential",d.serialization.registerClass(nr);class ur extends d.serialization.Serializable{getConfig(){return{}}}class cr extends ur{apply(t,e=1){return function(t,e=1){if(1!==e)throw new g(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return d.elu(t)}(t,e)}}cr.className="elu",d.serialization.registerClass(cr);class lr extends ur{apply(t){return d.selu(t)}}lr.className="selu",d.serialization.registerClass(lr);class dr extends ur{apply(t){return d.relu(t)}}dr.className="relu",d.serialization.registerClass(dr);class hr extends ur{apply(t){return Object(d.tidy)(()=>d.minimum(6,d.relu(t)))}}hr.className="relu6",d.serialization.registerClass(hr);class pr extends ur{apply(t){return t}}pr.className="linear",d.serialization.registerClass(pr);class fr extends ur{apply(t){return d.sigmoid(t)}}fr.className="sigmoid",d.serialization.registerClass(fr);class mr extends ur{apply(t){return function(t){return Object(d.tidy)(()=>{const e=d.add(.5,d.mul(.2,t));return d.clipByValue(e,0,1)})}(t)}}mr.className="hardSigmoid",d.serialization.registerClass(mr);class br extends ur{apply(t){return d.softplus(t)}}br.className="softplus",d.serialization.registerClass(br);class gr extends ur{apply(t){return function(t){return Object(d.tidy)(()=>d.div(t,d.abs(t).add(1)))}(t)}}gr.className="softsign",d.serialization.registerClass(gr);class yr extends ur{apply(t){return d.tanh(t)}}yr.className="tanh",d.serialization.registerClass(yr);class vr extends ur{apply(t,e=-1){return d.softmax(t,e)}}vr.className="softmax",d.serialization.registerClass(vr);class xr extends ur{apply(t,e=-1){return d.logSoftmax(t,e)}}xr.className="logSoftmax",d.serialization.registerClass(xr);class Or extends ur{apply(t,e=1){return Object(d.tidy)(()=>d.sigmoid(t.mul(e)).mul(t))}}function wr(t){return t.getClassName()}function kr(t,e={}){return C(t,d.serialization.SerializationMap.getMap().classNameMap,e,"activation")}function jr(t){if(null==t){const t={className:"linear",config:{}};return kr(t)}if("string"===typeof t){const e={};return e.className=t,e.config={},kr(e)}return t instanceof ur?t:kr(t)}function Nr(t){if(null!=t&&"object"!==typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+t)}Or.className="swish",d.serialization.registerClass(Or);class Sr extends d.serialization.Serializable{}class Ir extends Sr{constructor(t){super(),Nr(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Object(d.tidy)(()=>{let e=Object(d.zeros)([1]);return this.hasL1&&(e=Object(d.add)(e,Object(d.sum)(d.mul(this.l1,Object(d.abs)(t))))),this.hasL2&&(e=Object(d.add)(e,Object(d.sum)(d.mul(this.l2,St(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Ir.className="L1L2",d.serialization.registerClass(Ir);const Cr={l1l2:"L1L2"};function Tr(t){return I(t)}function Ar(t,e={}){return C(t,d.serialization.SerializationMap.getMap().classNameMap,e,"regularizer")}function Er(t){if(null==t)return null;if("string"===typeof t){return Ar({className:t in Cr?Cr[t]:t,config:{}})}return t instanceof Sr?t:Ar(t)}class Rr extends Ee{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=xe(t);let n=Object(d.relu)(t);return null!=this.maxValue&&(n=Object(d.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Rr.className="ReLU",d.serialization.registerClass(Rr);class $r extends Ee{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=xe(t);return Object(d.leakyRelu)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}$r.className="LeakyReLU",d.serialization.registerClass($r);class _r extends Ee{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Zt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Er(t.alphaRegularizer),this.alphaConstraint=K(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!==typeof t.sharedAxes)throw new b("Expected sharedAxes to be a number or an array of numbers, but got "+t.sharedAxes);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Oe(t)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<t.length;++r)n[r]=t[r];this.inputSpec=[new Se({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=xe(t),Object(d.prelu)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Jt(this.alphaInitializer),alphaRegularizer:Tr(this.alphaRegularizer),alphaConstraint:W(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}_r.className="PReLU",d.serialization.registerClass(_r);class Fr extends Ee{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new g(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=xe(t);return Object(d.elu)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Fr.className="ELU",d.serialization.registerClass(Fr);class Dr extends Ee{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=xe(t);return n.mul(mt(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Dr.className="ThresholdedReLU",d.serialization.registerClass(Dr);class Mr extends Ee{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new vr).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=xe(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function zr(t,e,n){if("number"===typeof t)return v(t,e);if(t.length!==e)throw new b(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let a=0;a<e;++a){const s=t[a];if((r=s)!==parseInt(r.toString(),10))throw new b(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number `+s)}return t;var r}function Lr(t,e,n,r,a=1){if(null==t)return t;let s;return s="same"===n?t:t-(e+(e-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Br(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+pt([n-e,0]);else{if("same"!==r)throw new b(`Unsupport padding mode: ${r}.`);t*=e}return t}function Pr(t,e){return Object(d.tidy)(()=>(et(e),"channelsFirst"===e?d.transpose(t,[0,2,3,1]):t))}function Vr(t,e){return Object(d.tidy)(()=>(et(e),"channelsFirst"===e?d.transpose(t,[0,2,3,4,1]):t))}function Wr(t,e,n,r=1,a="valid",s,i=1){return Object(d.tidy)(()=>{if(null==s&&(s="channelsLast"),et(s),3!==t.shape.length)throw new b("The input of a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead.");if(3!==e.shape.length)throw new b("The kernel for a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new b("The bias for a conv1dWithBias operation should be 1, but is "+e.shape.length+" instead");if("channelsFirst"===s&&(t=d.transpose(t,[0,2,1])),"causal"===a)throw new g("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=d.conv1d(t,e,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Ct(o,n)),o})}function Ur(t,e,n,r=[1,1],a="valid",s,i,o=null){return Object(d.tidy)(()=>{if(null==s&&(s="channelsLast"),et(s),3!==t.rank&&4!==t.rank)throw new b(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new b(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let u=Pr(t,s);if("causal"===a)throw new g("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=d.fused.conv2d({x:u,filter:e,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=d.transpose(u,[0,3,1,2])),u})}function Kr(t,e,n,r=[1,1,1],a="valid",s,i){return Object(d.tidy)(()=>{if(null==s&&(s="channelsLast"),et(s),4!==t.rank&&5!==t.rank)throw new b("conv3dWithBias expects input to be of rank 4 or 5, but received "+t.rank+".");if(4!==e.rank&&5!==e.rank)throw new b("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+t.rank+".");let o=Vr(t,s);if("causal"===a)throw new g("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=d.conv3d(o,e,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Ct(o,n)),"channelsFirst"===s&&(o=d.transpose(o,[0,4,1,2,3])),o})}Mr.className="Softmax",d.serialization.registerClass(Mr);class Gr extends Ee{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Gr.verifyArgs(e),this.rank=t,_(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new g(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=zr(e.kernelSize,t,"kernelSize"),this.strides=zr(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,nt(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,et(this.dataFormat),this.activation=jr(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Zt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=K(e.biasConstraint),this.biasRegularizer=Er(e.biasRegularizer),this.activityRegularizer=Er(e.activityRegularizer),this.dilationRate=zr(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new b("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new b("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new b("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(t){if(x("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!==typeof t.kernelSize&&!$(t.kernelSize,"number",1,3))throw new b(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:wr(this.activation),useBias:this.useBias,biasInitializer:Jt(this.biasInitializer),biasRegularizer:Tr(this.biasRegularizer),activityRegularizer:Tr(this.activityRegularizer),biasConstraint:W(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Hr extends Gr{constructor(t,e){super(t,e),this.kernel=null,Hr.verifyArgs(e),this.filters=e.filters,_(this.filters,"filters"),this.kernelInitializer=Zt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=K(e.kernelConstraint),this.kernelRegularizer=Er(e.kernelRegularizer)}build(t){t=Oe(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new b("The channel dimension of the input should be defined. Found "+t[e]);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Object(d.tidy)(()=>{let e;t=xe(t);const n=null==this.bias?null:this.bias.read(),r=F(this.activation.getClassName());if(null!=r&&2===this.rank)e=Ur(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=Wr(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Ur(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new g("convolutions greater than 3D are not implemented yet.");e=Kr(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=Oe(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<n.length;++a){const t=Lr(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Jt(this.kernelInitializer),kernelRegularizer:Tr(this.kernelRegularizer),kernelConstraint:W(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!==typeof t.filters||t.filters<1)throw new b("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))}}class qr extends Hr{constructor(t){super(2,t),qr.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!$(t.kernelSize,"number",1,2))throw new b(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}qr.className="Conv2D",d.serialization.registerClass(qr);class Xr extends Hr{constructor(t){super(3,t),Xr.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new b(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Xr.className="Conv3D",d.serialization.registerClass(Xr);class Yr extends qr{constructor(t){if(super(t),this.inputSpec=[new Se({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new b("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(4!==(t=Oe(t)).length)throw new b("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new b("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Se({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return d.tidy(()=>{let e=xe(t);if(4!==e.shape.length)throw new b("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);const n=e.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],c=this.kernelSize[1],l=this.strides[0],h=this.strides[1],p=[r,Br(i,l,u,this.padding),Br(o,h,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=d.transpose(e,[0,2,3,1]));let f=d.conv2dTranspose(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=d.transpose(f,[0,3,1,2])),null!=this.bias&&(f=Ct(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f})}computeOutputShape(t){const e=(t=Oe(t)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=Br(e[r],o,s,this.padding),e[a]=Br(e[a],u,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Yr.className="Conv2DTranspose",d.serialization.registerClass(Yr);class Jr extends Hr{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new b("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new b("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new b(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(e.padding));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Zt(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Er(e.depthwiseRegularizer),this.depthwiseConstraint=K(e.depthwiseConstraint),this.pointwiseInitializer=Zt(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Er(e.pointwiseRegularizer),this.pointwiseConstraint=K(e.pointwiseConstraint)}build(t){if((t=Oe(t)).length<this.rank+2)throw new b(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new b("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let s=0;s<this.rank;++s)a.push(1);a.push(n*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,true,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,true,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,true,this.biasConstraint):this.bias=null,this.inputSpec=[new Se({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Object(d.tidy)(()=>{let e;if(t=xe(t),1===this.rank)throw new g("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=d.transpose(t,[0,2,3,1])),e=d.separableConv2d(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Ct(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=d.transpose(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Jt(this.depthwiseInitializer),t.pointwiseInitializer=Jt(this.pointwiseInitializer),t.depthwiseRegularizer=Tr(this.depthwiseRegularizer),t.pointwiseRegularizer=Tr(this.pointwiseRegularizer),t.depthwiseConstraint=W(this.depthwiseConstraint),t.pointwiseConstraint=W(this.pointwiseConstraint),t}}Jr.className="SeparableConv";class Zr extends Jr{constructor(t){super(2,t)}}Zr.className="SeparableConv2D",d.serialization.registerClass(Zr);class Qr extends Hr{constructor(t){super(1,t),Qr.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!$(t.kernelSize,"number",1,1))throw new b(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Qr.className="Conv1D",d.serialization.registerClass(Qr);class ta extends Ee{constructor(t){super(t),"number"===typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"===typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Object(d.tidy)(()=>{if(t=xe(t),"channelsLast"===this.dataFormat){const e=vt(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return vt(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=vt(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return vt(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}ta.className="Cropping2D",d.serialization.registerClass(ta);class ea extends Ee{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return d.tidy(()=>{let e=xe(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=d.transpose(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],a=e.resizeNearestNeighbor([t,r]);return d.transpose(a,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return e.resizeNearestNeighbor([t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}ea.className="UpSampling2D",d.serialization.registerClass(ea);class na extends Gr{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Zt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=K(t.depthwiseConstraint),this.depthwiseRegularizer=Er(t.depthwiseRegularizer)}build(t){if((t=Oe(t)).length<4)throw new b(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new b(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(d.tidy)(()=>{let e=function(t,e,n=[1,1],r="valid",a,s){return Object(d.tidy)(()=>{null==a&&(a="channelsLast"),et(a);let i=Pr(t,a);if(4!==t.rank)throw new b("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==e.rank)throw new b("depthwiseKernel is required to be 4-D, but is instead "+e.rank+"-D");return i=d.depthwiseConv2d(i,e,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=d.transpose(i,[0,3,1,2])),i})}(t=xe(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Ct(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=Oe(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,a=Lr(e,this.kernelSize[0],this.padding,this.strides[0]),s=Lr(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,a,s]:[t[0],a,s,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Jt(this.depthwiseInitializer),t.depthwiseRegularizer=Tr(this.depthwiseRegularizer),t.depthwiseConstraint=W(this.depthwiseRegularizer),t}}function ra(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new b("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function a(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=a(e),constants:n=a(n)}}function aa(t,e,n,r=!1,a,s,i=!1,o=!1){return d.tidy(()=>{const u=e.shape.length;if(u<3)throw new b(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(ft(2,u));if(e=d.transpose(e,c),null!=s)throw new g("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===u-1&&(a=d.expandDims(a,-1)),a=d.transpose(a,c)),r&&(e=d.reverse(e,0),null!=a&&(a=d.reverse(a,0)));const l=[];let h,p=n;const f=e.shape[0],m=d.unstack(e);let y,v;null!=a&&(y=d.unstack(a));for(let e=0;e<f;++e){const n=m[e],r=d.tidy(()=>t(n,p));if(null==a)h=r[0],p=r[1];else{const t=d.tidy(()=>{const t=y[e],n=d.onesLike(t).sub(t);return{output:r[0].mul(t).add(p[0].mul(n)),newStates:p.map((e,a)=>r[1][a].mul(t).add(e.mul(n)))}});h=t.output,p=t.newStates}o&&l.push(h)}if(o){const t=1;v=d.stack(l,t)}return[h,v,p]})}na.className="DepthwiseConv2D",d.serialization.registerClass(na);class sa extends Ee{constructor(t){let e;if(super(t),null==t.cell)throw new b("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new pa({cells:t.cell}):t.cell,null==e.stateSize)throw new b("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Se({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return ft(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null)}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){ye(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return d.tidy(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new g("Constants support is not implemented in RNN yet.");ye(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Se({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!d.util.arraysEqual(this.stateSpec.map(t=>t.shape[t.shape.length-1]),a))throw new b(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=a.map(t=>new Se({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){Object(d.tidy)(()=>{if(!this.stateful)throw new f("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new b("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>d.zeros([n,t])):this.states_=[d.zeros([n,this.cell.stateSize])];else if(null==t)d.dispose(this.states_),null!=this.keptStates&&(d.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>d.zeros([n,t])):this.states_[0]=d.zeros([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new b(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);!0===e?this.keptStates.push(this.states_.slice()):d.dispose(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,s=[n,a];if(!d.util.arraysEqual(r.shape,s))throw new b(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>d.keep(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const a=ra(t,n,r,this.numConstants);t=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){e.initialState=n,s=s.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Se({shape:t.shape}));i=i.concat(this.stateSpec)}null!=r&&(e.constants=r,s=s.concat(r),this.numConstants=r.length);if(s[0]instanceof Ie){const n=[t].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=a,o}return super.apply(t,e)}call(t,e){return Object(d.tidy)(()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let a=null==e?null:e.initialState;t=xe(t),null==a&&(a=this.stateful?this.states_:this.getInitialState(t));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new b(`RNN Layer has ${s} state(s) but was passed `+a.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=aa((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]},t,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],c=o[1],l=o[2];this.stateful&&this.resetStates(l,r);const d=this.returnSequences?c:u;return this.returnState?[d].concat(l):d})}getInitialState(t){return Object(d.tidy)(()=>{let e=d.zeros(t.shape);return e=d.sum(e,[1,2]),e=bt(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?wt(e,[1,t]):e):this.cell.stateSize>1?[wt(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===sa.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=Ke(e.cell,n);return new t(Object.assign(e,{cell:r}))}}sa.className="RNN",d.serialization.registerClass(sa);class ia extends Ee{}class oa extends ia{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,_(this.units,"units"),this.activation=jr(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Zt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Er(t.kernelRegularizer),this.recurrentRegularizer=Er(t.recurrentRegularizer),this.biasRegularizer=Er(t.biasRegularizer),this.kernelConstraint=K(t.kernelConstraint),this.recurrentConstraint=K(t.recurrentConstraint),this.biasConstraint=K(t.biasConstraint),this.dropout=ht([1,pt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ht([1,pt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Oe(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(d.tidy)(()=>{if(2!==(t=t).length)throw new b(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fa({ones:()=>d.onesLike(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fa({ones:()=>d.onesLike(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=jt(null!=s?d.mul(t,s):t,this.kernel.read()),null!=this.bias&&(a=Ct(a,this.bias.read())),null!=i&&(n=d.mul(n,i));let o=d.add(a,jt(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:wr(this.activation),useBias:this.useBias,kernelInitializer:Jt(this.kernelInitializer),recurrentInitializer:Jt(this.recurrentInitializer),biasInitializer:Jt(this.biasInitializer),kernelRegularizer:Tr(this.kernelRegularizer),recurrentRegularizer:Tr(this.recurrentRegularizer),biasRegularizer:Tr(this.biasRegularizer),activityRegularizer:Tr(this.activityRegularizer),kernelConstraint:W(this.kernelConstraint),recurrentConstraint:W(this.recurrentConstraint),biasConstraint:W(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}oa.className="SimpleRNNCell",d.serialization.registerClass(oa);class ua extends sa{constructor(t){t.cell=new oa(t),super(t)}call(t,e){return Object(d.tidy)(()=>{null!=this.cell.dropoutMask&&(d.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(d.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})})}static fromConfig(t,e){return new t(e)}}ua.className="SimpleRNN",d.serialization.registerClass(ua);class ca extends ia{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new b("GRUCell does not support reset_after parameter set to true.");this.units=t.units,_(this.units,"units"),this.activation=jr(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=jr(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Zt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Er(t.kernelRegularizer),this.recurrentRegularizer=Er(t.recurrentRegularizer),this.biasRegularizer=Er(t.biasRegularizer),this.kernelConstraint=K(t.kernelConstraint),this.recurrentConstraint=K(t.recurrentConstraint),this.biasConstraint=K(t.biasConstraint),this.dropout=ht([1,pt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ht([1,pt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Oe(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(d.tidy)(()=>{if(2!==(t=t).length)throw new b("GRUCell expects 2 input Tensors (inputs, h, c), got "+t.length+".");const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fa({ones:()=>d.onesLike(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fa({ones:()=>d.onesLike(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(t=d.mul(t,a[0]));let c=jt(t,this.kernel.read());this.useBias&&(c=Ct(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=d.mul(r,s[0]));const l=this.recurrentKernel.read(),[h,p]=d.split(l,[2*this.units,this.units],l.rank-1),f=jt(r,h),[m,g,y]=d.split(c,3,c.rank-1),[v,x]=d.split(f,2,f.rank-1);i=this.recurrentActivation.apply(d.add(m,v)),o=this.recurrentActivation.apply(d.add(g,x));const O=jt(d.mul(o,r),p);u=this.activation.apply(d.add(y,O));const w=d.add(d.mul(i,r),d.mul(d.add(1,d.neg(i)),u));return[w,w]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:wr(this.activation),recurrentActivation:wr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Jt(this.kernelInitializer),recurrentInitializer:Jt(this.recurrentInitializer),biasInitializer:Jt(this.biasInitializer),kernelRegularizer:Tr(this.kernelRegularizer),recurrentRegularizer:Tr(this.recurrentRegularizer),biasRegularizer:Tr(this.biasRegularizer),activityRegularizer:Tr(this.activityRegularizer),kernelConstraint:W(this.kernelConstraint),recurrentConstraint:W(this.recurrentConstraint),biasConstraint:W(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}ca.className="GRUCell",d.serialization.registerClass(ca);class la extends sa{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new ca(t),super(t)}call(t,e){return Object(d.tidy)(()=>{null!=this.cell.dropoutMask&&(d.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(d.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}la.className="GRU",d.serialization.registerClass(la);class da extends ia{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,_(this.units,"units"),this.activation=jr(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=jr(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Zt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Er(t.kernelRegularizer),this.recurrentRegularizer=Er(t.recurrentRegularizer),this.biasRegularizer=Er(t.biasRegularizer),this.kernelConstraint=K(t.kernelConstraint),this.recurrentConstraint=K(t.recurrentConstraint),this.biasConstraint=K(t.biasConstraint),this.dropout=ht([1,pt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ht([1,pt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Oe(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends $t{apply(e,r){const a=t.apply([n]),s=(new Ft).apply([n]),i=t.apply([2*n]);return Ot(Ot(a,s),i)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Object(d.tidy)(()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new b("LSTMCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");let r=t[1];const a=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fa({ones:()=>d.onesLike(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fa({ones:()=>d.onesLike(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,c,l;0<this.dropout&&this.dropout<1&&(t=d.mul(t,s[0]));let h=jt(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=d.mul(r,i[0])),h=d.add(h,jt(r,this.recurrentKernel.read())),this.useBias&&(h=Ct(h,this.bias.read()));const[p,f,m,g]=d.split(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=d.add(d.mul(u,a),d.mul(o,this.activation.apply(m))),l=this.recurrentActivation.apply(g);const y=d.mul(l,this.activation.apply(c));return[y,y,c]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:wr(this.activation),recurrentActivation:wr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Jt(this.kernelInitializer),recurrentInitializer:Jt(this.recurrentInitializer),biasInitializer:Jt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Tr(this.kernelRegularizer),recurrentRegularizer:Tr(this.recurrentRegularizer),biasRegularizer:Tr(this.biasRegularizer),activityRegularizer:Tr(this.activityRegularizer),kernelConstraint:W(this.kernelConstraint),recurrentConstraint:W(this.recurrentConstraint),biasConstraint:W(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}da.className="LSTMCell",d.serialization.registerClass(da);class ha extends sa{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new da(t),super(t)}call(t,e){return Object(d.tidy)(()=>{null!=this.cell.dropoutMask&&(d.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(d.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}ha.className="LSTM",d.serialization.registerClass(ha);class pa extends ia{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Object(d.tidy)(()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[t[0]].concat(n):[s[0]].concat(n),s=o.call(s,e),a.push(s.slice(1))}n=[];for(const t of a.slice().reverse())n.push(...t);return[s[0]].concat(n)})}build(t){let e;ye(t)&&(t=t[0]),t=t,this.cells.forEach((n,r)=>{st("RNNCell_"+r,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map(t=>({className:t.getClassName(),config:t.getConfig()}))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const a of e.cells)r.push(Ke(a,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return je(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,a=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],a[t]])}Ne(e)}}function fa(t){const{ones:e,rate:n,training:r=!1,count:a=1}=t,s=()=>Tt(e(),n),i=()=>At(s,e,r);if(!a||a<=1)return d.keep(i().clone());return Array(a).fill(void 0).map(i).map(t=>d.keep(t.clone()))}pa.className="StackedRNNCells",d.serialization.registerClass(pa);var ma=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(t);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(t,r[a])&&(n[r[a]]=t[r[a]])}return n};class ba extends sa{constructor(t){if(t.unroll)throw new g("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new g("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Se({ndim:5})]}call(t,e){return d.tidy(()=>{if(null!=this.cell.dropoutMask&&(d.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(d.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new b("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return d.tidy(()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=d.zeros(a);return Array.isArray(e)?Array(e.length).fill(s):[s]})}resetStates(t,e=!1){d.tidy(()=>{if(!this.stateful)throw new f("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new b("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>d.zeros(a)):this.states_=[d.zeros(a)];else if(null==t)d.dispose(this.states_),null!=this.keptStates&&(d.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>d.zeros(a)):this.states_[0]=d.zeros(a);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new b(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);e?this.keptStates.push(this.states_.slice()):d.dispose(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=a;if(!d.util.arraysEqual(n.shape,r))throw new b(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map(t=>d.keep(t.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===e,u=t[o?3:2],c=t[o?4:3],l=Lr(u,r[0],a,s[0],i[0]),d=Lr(c,r[1],a,s[1],i[1]);return[...t.slice(0,2),...o?[n,l,d]:[l,d,n]]}}ba.className="ConvRNN2D";class ga extends da{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,_(this.filters,"filters"),this.kernelSize=zr(n,2,"kernelSize"),this.kernelSize.forEach(t=>_(t,"kernelSize")),this.strides=zr(r||1,2,"strides"),this.strides.forEach(t=>_(t,"strides")),this.padding=a||"valid",nt(this.padding),this.dataFormat=s||"channelsLast",et(this.dataFormat),this.dilationRate=zr(i||1,2,"dilationRate"),this.dilationRate.forEach(t=>_(t,"dilationRate"))}build(t){var e;t=Oe(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new b("The channel dimension of the input should be defined. Found "+t[n]);const r=t[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends $t{apply(t,e){return xt([n.apply([r]),d.ones([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return d.tidy(()=>{if(3!==t.length)throw new b("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");const n=e.training||!1,r=t[0],a=t[1],s=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fa({ones:()=>d.onesLike(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(t,e,n)=>e&&e[n]?d.mul(e[n],t):t;let u=o(r,i,0),c=o(r,i,1),l=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fa({ones:()=>d.onesLike(a),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let f=o(a,p,0),m=o(a,p,1),g=o(a,p,2),y=o(a,p,3);const[v,x,O,w]=d.split(this.kernel.read(),4,3),[k,j,N,S]=this.useBias?d.split(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,v,k,this.padding),c=this.inputConv(c,x,j,this.padding),l=this.inputConv(l,O,N,this.padding),h=this.inputConv(h,w,S,this.padding);const[I,C,T,A]=d.split(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,I),m=this.recurrentConv(m,C),g=this.recurrentConv(g,T),y=this.recurrentConv(y,A);const E=this.recurrentActivation.apply(d.add(u,f)),R=this.recurrentActivation.apply(d.add(c,m)),$=d.add(d.mul(R,s),d.mul(E,this.activation.apply(d.add(l,g)))),_=d.mul(this.recurrentActivation.apply(d.add(h,y)),this.activation.apply($));return[_,_,$]})}getConfig(){const t=super.getConfig(),{units:e}=t,n=ma(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const a=d.conv2d(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Ct(a,n,this.dataFormat):a}recurrentConv(t,e){return d.conv2d(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ga.className="ConvLSTM2DCell",d.serialization.registerClass(ga);class ya extends ba{constructor(t){const e=new ga(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}ya.className="ConvLSTM2D",d.serialization.registerClass(ya);class va extends Ee{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n}call(t,e){return Object(d.tidy)(()=>{this.invokeCallHook(t,e);const n=xe(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return At(()=>Tt(n,this.rate,r,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}va.className="Dropout",d.serialization.registerClass(va);class xa extends va{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}xa.className="SpatialDropout1D",d.serialization.registerClass(xa);class Oa extends Ee{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,_(this.units,"units"),this.activation=jr(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Zt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Zt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=K(t.kernelConstraint),this.biasConstraint=K(t.biasConstraint),this.kernelRegularizer=Er(t.kernelRegularizer),this.biasRegularizer=Er(t.biasRegularizer),this.activityRegularizer=Er(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Oe(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Oe(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Object(d.tidy)(()=>{this.invokeCallHook(t,e);const n=xe(t),r=F(this.activation.getClassName());let a;return null!=r?a=jt(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=jt(n,this.kernel.read()),null!=this.bias&&(a=Ct(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const t={units:this.units,activation:wr(this.activation),useBias:this.useBias,kernelInitializer:Jt(this.kernelInitializer),biasInitializer:Jt(this.biasInitializer),kernelRegularizer:Tr(this.kernelRegularizer),biasRegularizer:Tr(this.biasRegularizer),activityRegularizer:Tr(this.activityRegularizer),kernelConstraint:W(this.kernelConstraint),biasConstraint:W(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Oa.className="Dense",d.serialization.registerClass(Oa);class wa extends Ee{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Oe(t);for(const e of t.slice(1))if(null==e)throw new b(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],lt(t,1)]}call(t,e){return Object(d.tidy)(()=>{this.invokeCallHook(t,e);let n=xe(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new b(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],lt(t.shape,1)];return t.reshape(e)}(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}wa.className="Flatten",d.serialization.registerClass(wa);class ka extends Ee{constructor(t){super(t),this.supportsMasking=!0,this.activation=jr(t.activation)}call(t,e){return Object(d.tidy)(()=>{this.invokeCallHook(t,e);const n=xe(t);return this.activation.apply(n)})}getConfig(){const t={activation:wr(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}ka.className="Activation",d.serialization.registerClass(ka);class ja extends Ee{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Object(d.tidy)(()=>{return t=xe(t),e=t,n=this.n,Object(d.tidy)(()=>{if(2!==e.shape.length)throw new b(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return wt(bt(e,1),[1,n,1])});var e,n})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}ja.className="RepeatVector",d.serialization.registerClass(ja);class Na extends Ee{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let a=1,s=null;for(let o=0;o<r.length;++o){const t=r[o];if(this.isUnknown(t)){if(null!==s)throw new b("Can only specifiy one unknown dimension.");s=o}else a*=t}const i=lt(t);if(null!==s){if(0===a||i%a!==0)throw new b(n);r[s]=i/a}else if(i!==a)throw new b(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Object(d.tidy)(()=>{this.invokeCallHook(t,e);const n=xe(t),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Na.className="Reshape",d.serialization.registerClass(Na);class Sa extends Ee{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+t.dims+" instead.");const e=ft(1,t.dims.length+1);if(!d.util.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Se({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Oe(t)).slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return Object(d.transpose)(xe(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Sa.className="Permute",d.serialization.registerClass(Sa);class Ia extends Ee{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=xe(t);return Object(d.any)(Object(d.notEqual)(n,this.maskValue),-1)}call(t,e){return Object(d.tidy)(()=>{this.invokeCallHook(t,e);const n=xe(t),r=Object(d.any)(Object(d.notEqual)(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}Ia.className="Masking",d.serialization.registerClass(Ia);class Ca extends Ee{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(k(t.inputLength))}this.inputDim=t.inputDim,_(this.inputDim,"inputDim"),this.outputDim=t.outputDim,_(this.outputDim,"outputDim"),this.embeddingsInitializer=Zt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Er(t.embeddingsRegularizer),this.activityRegularizer=Er(t.activityRegularizer),this.embeddingsConstraint=K(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Object(d.tidy)(()=>this.maskZero?(t=xe(t),Object(d.notEqual)(t,Object(d.zerosLike)(t))):null)}computeOutputShape(t){if(t=Oe(t),null==this.inputLength)return[...t,this.outputDim];const e=k(this.inputLength);if(e.length!==t.length-1)throw new b(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);{let n=0;for(let r=0;r<e.length;++r){const a=e[r],s=t[r+1];if(null!=a&&null!=s&&a!==s)throw new b(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);null==a&&(e[n]=s),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Object(d.tidy)(()=>{this.invokeCallHook(t,e);let n=xe(t);"int32"!==n.dtype&&(n=mt(n,"int32"));return Nt(this.embeddings.read(),n.as1D()).reshape(Oe(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Jt(this.embeddingsInitializer),embeddingsRegularizer:Tr(this.embeddingsRegularizer),activityRegularizer:Tr(this.activityRegularizer),embeddingsConstraint:W(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Ca.className="Embedding",d.serialization.registerClass(Ca);class Ta extends Ee{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new g}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const a=t[t.length-e.length+r],s=e[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new b("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(a)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Oe(t)]),(t=t).length<2)throw new b(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const a of t)null!=a&&null!==a[0]&&e.push(a[0]);if(e=A(e),e.length>1)throw new b(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const e=null==t[a]?null:t[a].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===A(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Object(d.tidy)(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=pt(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=bt(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],a=t.slice(1).concat([r]);let i=s.reshape([r].concat(lt(t.slice(1))));i=d.transpose(i,[1,0]),i=i.reshape(a),e.push(i),n=!0}else if(t>1){const r=ft(1,t).concat([0]);e.push(d.transpose(s,r)),n=!0}else e.push(s)}let r=this.mergeFunction(e);const a=r.rank;if(n)if(null==a){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=d.transpose(r.reshape([-1,e]),[1,0]).reshape(n)}else if(a>1){const t=[a-1].concat(ft(0,a-1));r=d.transpose(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const n=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const r of t)null!=r&&null!==r[0]&&n.push(r[0]);return n=A(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return d.tidy(()=>{if(null==e)return null;if(!Array.isArray(e))throw new b("`mask` should be an Array");if(!Array.isArray(t))throw new b("`inputs` should be an Array");if(e.length!==t.length)throw new b(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:d.expandDims(t,0)))[0];for(let t=1;t<e.length-1;++t)n=d.logicalAnd(n,e[t]);return n})}}class Aa extends Ta{constructor(t){super(t)}mergeFunction(t){return Object(d.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=d.add(e,t[n]);return e})}}Aa.className="Add",d.serialization.registerClass(Aa);class Ea extends Ta{constructor(t){super(t)}mergeFunction(t){return Object(d.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=d.mul(e,t[n]);return e})}}Ea.className="Multiply",d.serialization.registerClass(Ea);class Ra extends Ta{constructor(t){super(t)}mergeFunction(t){return Object(d.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=d.add(e,t[n]);return d.mul(1/t.length,e)})}}Ra.className="Average",d.serialization.registerClass(Ra);class $a extends Ta{constructor(t){super(t)}mergeFunction(t){return Object(d.tidy)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=d.maximum(e,t[n]);return e})}}$a.className="Maximum",d.serialization.registerClass($a);class _a extends Ta{constructor(t){super(t)}mergeFunction(t){return Object(d.tidy)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=d.minimum(e,t[n]);return e})}}_a.className="Minimum",d.serialization.registerClass(_a);class Fa extends Ta{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new b("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(null!=r){e=!1;break}if(e)return;const n=[];for(let r=0;r<t.length;++r){const e=t[r].slice();e.splice(this.axis,1);let a=!1;for(const t of n)if(d.util.arraysEqual(t,e)){a=!0;break}a||n.push(e)}if(n.length>1)throw new b("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Object(d.tidy)(()=>xt(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new b("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of e.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new b("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new b("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new b(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return d.tidy(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let s=0;s<t.length;++s)null==e[s]?r.push(d.onesLike(t[s]).asType("bool")):e[s].rank<t[s].rank?r.push(d.expandDims(e[s],-1)):r.push(e[s]);const a=d.concat(r,this.axis);return d.all(a,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Da(t,e){for(;t<0;)t+=e;return t}Fa.className="Concatenate",d.serialization.registerClass(Fa);class Ma extends Ta{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){d.util.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new g("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new b(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new b(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>Da(e,t[n].shape.length)):[Da(this.axes,n.shape.length),Da(this.axes,r.shape.length)],this.normalize&&(n=Ge(n,e[0]),r=Ge(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new g("batchDot is not implemented for tensors of 4D or higher rank yet");if(d.util.assert(t.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+t.shape.length),d.util.assert(t.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+e.shape.length),"number"===typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new g("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,a=e.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return d.tidy(()=>{let n,i;if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=s[0]===s[1]?t.mul(e).sum(s[0]):t.transpose([1,0]).mul(e).sum(s[1]);else{const n=s[0]!==t.shape.length-1,r=s[1]===e.shape.length-1;i=t.matMul(e,n,r)}if(n>0){let t;t=r>a?r+a-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);i=i.squeeze(e)}return 1===i.shape.length&&(i=i.expandDims(1)),i})}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Da(this.axes,t.length),Da(this.axes,e.length)],n}computeOutputShape(t){d.util.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new g("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=e.concat(n);return 1===a.length&&a.push(1),a}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Ma.className="Dot",d.serialization.registerClass(Ma);class za extends Ee{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Object(d.tidy)(()=>{this.invokeCallHook(t,e);const n=xe(t);return At(()=>kt(n.shape,0,this.stddev).add(n),()=>n,e.training||!1)})}}za.className="GaussianNoise",d.serialization.registerClass(za);class La extends Ee{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(d.tidy)(()=>{this.invokeCallHook(t,e);const n=xe(t);if(this.rate>0&&this.rate<1){return At(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(kt(n.shape,1,t))},()=>n,e.training||!1)}return n})}}La.className="GaussianDropout",d.serialization.registerClass(La);class Ba extends Ee{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||xe(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(d.tidy)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return At(()=>{const e=xe(t),r=-1.7580993408473766;let a=Object(d.greaterEqual)(Object(d.randomUniform)(n),this.rate);a=mt(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return e.mul(a).add(a.add(-1).mul(r)).mul(s).add(i)},()=>xe(t),e.training||!1)}return t})}}function Pa(t,e,n,r,a,s=.001){let i;if(2===t.rank)i=d.batchNorm2d(t,e,n,r,a,s);else if(3===t.rank)i=d.batchNorm3d(t,e,n,r,a,s);else{if(4!==t.rank)throw new g(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=d.batchNorm4d(t,e,n,r,a,s)}return i}function Va(t,e,n,r,a=.001){return d.util.arraysEqual(r.slice().sort(),ft(0,t.rank-1))?function(t,e,n,r,a=.001){return Object(d.tidy)(()=>{const s=d.moments(t,r),i=s.mean,o=s.variance;return[Pa(t,i,o,n,e,a),i,o]})}(t,e,n,r,a):function(t,e,n,r,a=.001){return Object(d.tidy)(()=>{const s=d.moments(t,r),i=s.mean,o=s.variance,u=[];for(const e of ft(0,t.rank))-1!==r.indexOf(e)?u.push(1):u.push(t.shape[e]);const c=i.reshape(u),l=o.reshape(u),h=null==e?null:e.reshape(u),p=null==n?null:n.reshape(u);return[Pa(t,c,l,p,h,a),i,o]})}(t,e,n,r,a)}Ba.className="AlphaDropout",d.serialization.registerClass(Ba);class Wa extends Ee{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Zt(t.betaInitializer||"zeros"),this.gammaInitializer=Zt(t.gammaInitializer||"ones"),this.movingMeanInitializer=Zt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Zt(t.movingVarianceInitializer||"ones"),this.betaConstraint=K(t.betaConstraint),this.gammaConstraint=K(t.gammaConstraint),this.betaRegularizer=Er(t.betaRegularizer),this.gammaRegularizer=Er(t.gammaRegularizer)}build(t){t=Oe(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new b(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(t)+".");this.inputSpec=[new Se({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Object(d.tidy)(()=>{const n=null!=e.training&&e.training,r=xe(t),a=r.shape,s=a.length,i=ft(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=v(1,s);u[o]=a[o];const c=i.slice();c.sort();const l=!d.util.arraysEqual(c,ft(0,s).slice(0,s-1));if(!n)return(()=>{if(l){const t=this.movingMean.read().reshape(u),e=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,a=this.scale?this.gamma.read().reshape(u):null;return Pa(r,t,e,n,a,this.epsilon)}return Pa(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=Va(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(t,e,n)=>{d.tidy(()=>{const r=1-n,a=t.read(),s=a.sub(e).mul(r);t.write(a.sub(s))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Jt(this.betaInitializer),gammaInitializer:Jt(this.gammaInitializer),movingMeanInitializer:Jt(this.movingMeanInitializer),movingVarianceInitializer:Jt(this.movingVarianceInitializer),betaRegularizer:Tr(this.betaRegularizer),gammaRegularizer:Tr(this.gammaRegularizer),betaConstraint:W(this.betaConstraint),gammaConstraint:W(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Wa.className="BatchNormalization",d.serialization.registerClass(Wa);class Ua extends Ee{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Zt(t.betaInitializer||"zeros"),this.gammaInitializer=Zt(t.gammaInitializer||"ones"),this.betaRegularizer=Er(t.betaRegularizer),this.gammaRegularizer=Er(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Oe(t)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error("Invalid axis: "+r);if(this.axis.length!==A(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(e=>t[e]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(t,e){const n=xe(t),r=n.shape,a=r.length;return Object(d.tidy)(()=>{let{mean:t,variance:e}=Object(d.moments)(n,this.axis,!0);const s=v(1,a);for(const n of this.axis)s[n]=r[n];const i=t=>null!=t&&t.shape.length!==a&&this.axis!==[a-1]?t.reshape(s):t;let o=i(this.gamma.read()),u=i(this.beta.read());const c=[],l=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(c.push(r[n]),l.push(1)):(c.push(1),l.push(r[n]));return t=t.tile(c),e=e.tile(c),o=o.tile(l),u=u.tile(l),Pa(n,t,e,u,o,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Jt(this.betaInitializer),gammaInitializer:Jt(this.gammaInitializer),betaRegularizer:Tr(this.betaRegularizer),gammaRegularizer:Tr(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Ua.className="LayerNormalization",d.serialization.registerClass(Ua);class Ka extends Ee{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new b(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"===typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new b(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new b(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Se({ndim:4})]}computeOutputShape(t){let e,n;return t=Oe(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Object(d.tidy)(()=>{return e=xe(t),n=this.padding,r=this.dataFormat,Object(d.tidy)(()=>{if(4!==e.rank)throw new b("temporalPadding expects input tensor to be 4-D, but received a "+e.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new b("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new b(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],d.pad(e,t)});var e,n,r})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Ga(t,e,n,r,a,s){return Object(d.tidy)(()=>{let i;et(a),rt(s),nt(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),t=Pr(t,a);const o="same"===r?"same":"valid";return i="max"===s?d.maxPool(t,e,n,o):d.avgPool(t,e,n,o),"channelsFirst"===a&&(i=d.transpose(i,[0,3,1,2])),i})}function Ha(t,e,n,r,a,s){return Object(d.tidy)(()=>{let i;et(a),rt(s),nt(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),t=Vr(t,a);const o="same"===r?"same":"valid";return i="max"===s?d.maxPool3d(t,e,n,o):d.avgPool3d(t,e,n,o),"channelsFirst"===a&&(i=d.transpose(i,[0,4,1,2,3])),i})}Ka.className="ZeroPadding2D",d.serialization.registerClass(Ka);class qa extends Ee{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"===typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!==typeof t.poolSize[0])throw new b("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if(_(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"===typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!==typeof t.strides[0])throw new b("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}_(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,nt(this.padding),this.inputSpec=[new Se({ndim:3})]}computeOutputShape(t){const e=Lr((t=Oe(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Object(d.tidy)(()=>{this.invokeCallHook(t,e),t=bt(xe(t),2);const n=this.poolingFunction(xe(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return d.squeeze(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Xa extends qa{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return et(a),nt(r),Ga(t,e,n,r,a,"max")}}Xa.className="MaxPooling1D",d.serialization.registerClass(Xa);class Ya extends qa{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return et(a),nt(r),Ga(t,e,n,r,a,"avg")}}Ya.className="AveragePooling1D",d.serialization.registerClass(Ya);class Ja extends Ee{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new b("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides];_(this.poolSize,"poolSize"),_(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,et(this.dataFormat),nt(this.padding),this.inputSpec=[new Se({ndim:4})]}computeOutputShape(t){t=Oe(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Lr(e,this.poolSize[0],this.padding,this.strides[0]),n=Lr(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Object(d.tidy)(()=>(this.invokeCallHook(t,e),this.poolingFunction(xe(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Za extends Ja{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return et(a),nt(r),Ga(t,e,n,r,a,"max")}}Za.className="MaxPooling2D",d.serialization.registerClass(Za);class Qa extends Ja{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return et(a),nt(r),Ga(t,e,n,r,a,"avg")}}Qa.className="AveragePooling2D",d.serialization.registerClass(Qa);class ts extends Ee{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new b("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];_(this.poolSize,"poolSize"),_(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,et(this.dataFormat),nt(this.padding),this.inputSpec=[new Se({ndim:5})]}computeOutputShape(t){t=Oe(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Lr(e,this.poolSize[0],this.padding,this.strides[0]),n=Lr(n,this.poolSize[1],this.padding,this.strides[1]),r=Lr(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Object(d.tidy)(()=>(this.invokeCallHook(t,e),this.poolingFunction(xe(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class es extends ts{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return et(a),nt(r),Ha(t,e,n,r,a,"max")}}es.className="MaxPooling3D",d.serialization.registerClass(es);class ns extends ts{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return et(a),nt(r),Ha(t,e,n,r,a,"avg")}}ns.className="AveragePooling3D",d.serialization.registerClass(ns);class rs extends Ee{constructor(t){super(t),this.inputSpec=[new Se({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new g}}class as extends rs{constructor(t){super(t||{})}call(t,e){return Object(d.tidy)(()=>{const e=xe(t);return d.mean(e,1)})}}as.className="GlobalAveragePooling1D",d.serialization.registerClass(as);class ss extends rs{constructor(t){super(t||{})}call(t,e){return Object(d.tidy)(()=>{const e=xe(t);return d.max(e,1)})}}ss.className="GlobalMaxPooling1D",d.serialization.registerClass(ss);class is extends Ee{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,et(this.dataFormat),this.inputSpec=[new Se({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new g}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class os extends is{call(t,e){return Object(d.tidy)(()=>{const e=xe(t);return"channelsLast"===this.dataFormat?d.mean(e,[1,2]):d.mean(e,[2,3])})}}os.className="GlobalAveragePooling2D",d.serialization.registerClass(os);class us extends is{call(t,e){return Object(d.tidy)(()=>{const e=xe(t);return"channelsLast"===this.dataFormat?d.max(e,[1,2]):d.max(e,[2,3])})}}us.className="GlobalMaxPooling2D",d.serialization.registerClass(us);class cs extends Ee{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Ke(e.layer,n);delete e.layer;const a={layer:r};return Object.assign(a,e),new t(a)}}class ls extends cs{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Oe(t)).length<3)throw new b("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(t));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Oe(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Object(d.tidy)(()=>aa((t,n)=>[xe(this.layer.call(t,e)),[]],t=xe(t),[],!1,null,null,!1,!0)[1])}}ls.className="TimeDistributed",d.serialization.registerClass(ls);class ds extends cs{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Ke(n),e.goBackwards=!0!==e.goBackwards;const r={};var a;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Ke(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,a=this.mergeMode,R(Q,"BidirectionalMergeMode",a),t.weights)throw new g("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,a=this.forwardLayer.computeOutputShape(t);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),e=a[0]):e=a[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):w(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const a=ra(t,n,r,this.numConstants);if(t=a.inputs,n=a.initialState,r=a.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const s=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new b("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,s.push(...n);const r=n.map(t=>new Se({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new g("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Ie;for(const u of s)if(u instanceof Ie!==o)throw new b("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=a,o}return super.apply(t,e)}call(t,e){return Object(d.tidy)(()=>{const n=e.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(t,e),a=this.backwardLayer.call(t,e);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:s})),a=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=d.reverse(a,1)),"concat"===this.mergeMode?i=xt([r,a]):"sum"===this.mergeMode?i=d.add(r,a):"ave"===this.mergeMode?i=d.mul(.5,d.add(r,a)):"mul"===this.mergeMode?i=d.mul(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){st(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),st(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Ke(e.layer);if(delete e.layer,null!=e.numConstants)throw new g("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function hs(t){return new Re(t)}function ps(t){return new Fr(t)}function fs(t){return new Rr(t)}function ms(t){return new $r(t)}function bs(t){return new _r(t)}function gs(t){return new Mr(t)}function ys(t){return new Dr(t)}function vs(t){return new Qr(t)}function xs(t){return new qr(t)}function Os(t){return new Yr(t)}function ws(t){return new Xr(t)}function ks(t){return new Zr(t)}function js(t){return new ta(t)}function Ns(t){return new ea(t)}function Ss(t){return new na(t)}function Is(t){return new ka(t)}function Cs(t){return new Oa(t)}function Ts(t){return new va(t)}function As(t){return new xa(t)}function Es(t){return new wa(t)}function Rs(t){return new ja(t)}function $s(t){return new Na(t)}function _s(t){return new Sa(t)}function Fs(t){return new Ca(t)}function Ds(t){return new Aa(t)}function Ms(t){return new Ra(t)}function zs(t){return new Fa(t)}function Ls(t){return new $a(t)}function Bs(t){return new _a(t)}function Ps(t){return new Ea(t)}function Vs(t){return new Ma(t)}function Ws(t){return new Wa(t)}function Us(t){return new Ua(t)}function Ks(t){return new Ka(t)}function Gs(t){return new Ya(t)}function Hs(t){return Gs(t)}function qs(t){return Gs(t)}function Xs(t){return new Qa(t)}function Ys(t){return Xs(t)}function Js(t){return Xs(t)}function Zs(t){return new ns(t)}function Qs(t){return Zs(t)}function ti(t){return Zs(t)}function ei(t){return new as(t)}function ni(t){return new os(t)}function ri(t){return new ss(t)}function ai(t){return new us(t)}function si(t){return new Xa(t)}function ii(t){return new Za(t)}function oi(t){return new es(t)}function ui(t){return new la(t)}function ci(t){return new ca(t)}function li(t){return new ha(t)}function di(t){return new da(t)}function hi(t){return new ua(t)}function pi(t){return new oa(t)}function fi(t){return new ya(t)}function mi(t){return new ga(t)}function bi(t){return new sa(t)}function gi(t){return new pa(t)}function yi(t){return new ds(t)}function vi(t){return new ls(t)}ds.className="Bidirectional",d.serialization.registerClass(ds);const xi=ri,Oi=ai,wi=si,ki=ii;function ji(t){return new za(t)}function Ni(t){return new La(t)}function Si(t){return new Ba(t)}function Ii(t){return new Ia(t)}function Ci(t,e){return an(t,e)}function Ti(t,e){return ln(t,e)}function Ai(t,e){return dn(t,e)}function Ei(t,e){return sn(t,e)}function Ri(t,e){return hn(t,e)}function $i(t,e){return un(t,e)}function _i(t,e){return cn(t,e)}function Fi(t,e){return en(t,e)}function Di(t,e){return qe(t,e)}function Mi(t,e){return Xe(t,e)}function zi(t,e){return Xe(t,e)}function Li(t,e){return Xe(t,e)}function Bi(t,e){return He(t,e)}function Pi(t,e){return He(t,e)}function Vi(t,e){return He(t,e)}function Wi(t){return new Ir(t)}function Ui(t){return Nr(e=t),new Ir({l1:null!=e?e.l1:null,l2:0});var e}function Ki(t){return Nr(e=t),new Ir({l2:null!=e?e.l2:null,l1:0});var e}class Gi extends Me{constructor(){super(...arguments),this.model=null}setModel(t){if(!(t instanceof Zn))throw new Error("model must be a LayersModel, not some other Container");this.model=t}}function Hi(t,e){return t<e}function qi(t,e){return t>e}class Xi extends Gi{constructor(t){if(super(),null==t&&(t={}),t.restoreBestWeights)throw new g("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=Hi:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=qi:this.monitorFunc=Hi,this.monitorFunc===Hi&&(this.minDelta*=-1)}async onTrainBegin(t){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Hi?1/0:-1/0}async onEpochEnd(t,e){await _e(e);const n=this.getMonitorValue(e);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=t,this.model.stopTraining=!0)))}async onTrainEnd(t){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(t){null==t&&(t={});const e=t[this.monitor];return null==e&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: `+Object.keys(t)),e}}const Yi={earlyStopping:function(t){return new Xi(t)}};var Ji=n("CtZu"),Zi=n("YSVl"),Qi=n("w4jT"),to=n("vc8R");class eo{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return d.util.assert(t>0,()=>"batchSize needs to be positive, but it is\n      "+t),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),no(async()=>(await n.iterator()).columnMajorBatch(t,e,so),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,no(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,no(async()=>(await e.iterator()).filter(e=>d.tidy(()=>t(e))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return no(async()=>(await e.iterator()).map(e=>d.tidy(()=>t(e))),this.size)}mapAsync(t){const e=this;return no(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return no(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,no(async()=>{const n=Object(Qi.e)(async()=>({value:await e.iterator(),done:!1}));return Object(Qi.d)(n.take(t))},n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,no(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Zi.alea(e||d.util.now().toString());return no(async()=>{let e=a.int32();return n&&(e+=a.int32()),(await r.iterator()).shuffle(t,e.toString())},this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,no(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function no(t,e=null){return new class extends eo{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function ro(t){return no(async()=>Object(Qi.f)(t),t.length)}function ao(t){if(!Object(to.e)(t))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(t))for(let n=0;n<t.length;n++)e=null==e?t[n].size:Math.min(e,t[n].size);else if(t instanceof Object)for(const n in t)e=null==e?t[n].size:Math.min(e,t[n].size);return no(async()=>{const e=await Object(to.c)(t,t=>{if(t instanceof eo)return{value:t.iterator(),recurse:!1};if(Object(to.e)(t))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return Object(Qi.g)(e,Qi.c.SHORTEST)},e)}function so(t){if(null===t)return null;const e=t[0];if(Object(to.a)(e)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof d.Tensor?d.stack(t):d.tensor(t)}(t),recurse:!1}}return{value:null,recurse:!0}}eo.MAX_BUFFER_SIZE=1e4;class io extends eo{constructor(t){super(),this.input=t}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map(t=>(t.endsWith("\r")&&(t=t.slice(0,-1)),t))}}const oo=Symbol("out"),uo=Symbol("field"),co=Symbol("quote"),lo=Symbol("quoteafterquote"),ho=Symbol("quoteinquote");class po extends eo{constructor(t,e){super(),this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new io(t),e||(e={}),this.hasHeader=!1!==e.hasHeader,this.fullColumnNames=e.columnNames,this.columnConfigs=e.columnConfigs,this.configuredColumnsOnly=e.configuredColumnsOnly,e.delimWhitespace?(d.util.assert(null==e.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=e.delimiter?e.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const t=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&d.util.assert(t.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=t);const e=this.fullColumnNames.reduce((t,e)=>(t[e]=t[e]+1||1,t),{}),n=Object.keys(e).filter(t=>e[t]>1);if(d.util.assert(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const r of Object.keys(this.columnConfigs)){if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const t=await this.base.iterator(),e=await t.next();if(e.done)throw new Error("No data was found for CSV parsing.");const n=e.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let t=await this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map(t=>this.makeDataElement(t))}makeDataElement(t){const e=this.parseRow(t),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=e[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${t}`);u=void 0}else{const t=Number(o);if(isNaN(t))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=t;break;case"int32":u=Math.floor(t);break;case"bool":u=this.getBoolean(o);break;default:u=t}else u=t}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(t){return"1"===t||"true"===t.toLowerCase()?1:0}parseRow(t,e=!0){const n=[];let r=0;const a=t.length;let s=oo;for(let i=0;i<a;i++)switch(s){case oo:switch(t.charAt(i)){case'"':r=i+1,s=co;break;case this.delimiter:if(r=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=oo;break;default:s=uo,r=i}break;case uo:switch(t.charAt(i)){case this.delimiter:n.push(t.substring(r,i)),s=oo,r=i+1}break;case co:switch(t.charAt(i)){case'"':s=lo}break;case lo:switch(t.charAt(i)){case this.delimiter:n.push(t.substring(r,i-1)),s=oo,r=i+1;break;case'"':s=co;break;default:s=ho}break;case ho:switch(t.charAt(i)){case'"':s=co}}if(s===lo?n.push(t.substring(r,a-1)):n.push(t.substring(r)),e&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class fo extends Qi.a{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;const e=Math.log2(this.fftSize);if(this.fftSize<0||e<4||e>14||!Number.isInteger(e))throw new Error("Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got "+this.fftSize);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=!1!==t.includeSpectrogram,this.includeWaveform=!0===t.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(Object(d.env)().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const e=new fo(t);return await e.start(),e}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error("Error thrown while initializing video stream: "+n.message)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: `+this.audioContext.sampleRate)}else this.sampleRateHz=this.audioContext.sampleRate;const e=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,e.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,e;const n=await this.getAudioData();if(this.includeSpectrogram){const e=this.flattenQueue(n.freqDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const t=this.flattenQueue(n.timeDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:e},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const t=[],e=[];let n=0;return new Promise(r=>{const a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:t,timeDataQueue:e}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),e.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:t,timeDataQueue:e}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){const e=t[0].length,n=new Float32Array(t.length*e);return t.forEach((t,r)=>n.set(t,r*e)),n}getTensorFromAudioDataArray(t,e){const n=new Float32Array(d.util.sizeFromShape(e));return n.set(t,n.length-t.length),Object(d.tensor)(n,e)}}class mo extends Qi.a{constructor(t,e){if(super(),this.webcamVideoElement=t,this.webcamConfig=e,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Object(d.tensor1d)([0],"int32"),this.webcamConfig.centerCrop){const t=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,e=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-t)/2,r=(1-e)/2,a=n+t,s=e+r;this.cropBox=Object(d.tensor2d)([r,n,s,a],[1,4])}else this.cropBox=Object(d.tensor2d)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,e={}){if(Object(d.env)().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!e.resizeWidth||!e.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=e.resizeWidth,t.height=e.resizeHeight}const n=new mo(t,e);return await n.start(),n}async start(){this.webcamConfig.facingMode&&d.util.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message="Error thrown while initializing video stream: "+t.message,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=d.browser.fromPixels(this.webcamVideoElement)}catch(e){throw new Error("Error thrown converting video to pixels: "+JSON.stringify(e))}if(!this.resize)return{value:t,done:!1};try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(e){throw new Error("Error thrown cropping the video: "+e.message)}finally{t.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(t){return Object(d.tidy)(()=>{const e=t.toFloat().expandDims(0);let n;n=d.image.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return n.reshape(r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class bo{}var go=n("3BSK");class yo extends go.a{constructor(t,e={}){super(),this.file=t,this.options=e,d.util.assert(t instanceof Uint8Array||!!Object(d.env)().get("IS_BROWSER")&&(t instanceof File||t instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=e.offset||0,this.chunkSize=e.chunkSize||1048576}summary(){return"FileChunks "+this.file}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const t=new Promise((t,e)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return e(new TypeError("FileReader returned unknown type."));t(a)},r.onabort=t=>e(new Error("Aborted")),r.onerror=t=>e(new Error(t.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n});return{value:await t,done:!1}}}const vo=t=>({method:t.method,headers:t.headers,body:t.body,mode:t.mode,credentials:t.credentials,cache:t.cache,redirect:t.redirect,referrer:t.referrer,integrity:t.integrity});function xo(t){return"string"===typeof t&&"file://"===t.substr(0,7)}class Oo extends bo{constructor(t,e={}){super(),this.input=t,this.options=e}async iterator(){if(xo(this.input)&&Object(d.env)().get("IS_NODE")){const t=n(5);this.input=t.readFileSync(this.input.substr(7))}return new yo(this.input,this.options)}}class wo extends bo{constructor(t,e={}){super(),this.url=t,this.fileOptions=e}async iterator(){return xo(this.url)?new Oo(this.url,this.fileOptions).iterator():async function(t,e={}){let n,r;"string"===typeof t?n=t:(n=t.url,r=vo(t));const a=await d.util.fetch(n,r);if(a.ok){const t=new Uint8Array(await a.arrayBuffer());return new yo(t,e)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function ko(t,e={}){return new po(new wo(t),e)}function jo(t){const e=Object(Qi.e)(t);return no(async()=>e)}function No(t){return no(async()=>{const e=await t();return Object(Qi.e)(()=>e.next())})}async function So(t,e){return mo.create(t,e)}async function Io(t){return fo.create(t)}const Co="2.7.0";function To(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&d.util.assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the CPU backend.")})}const Ao=d.kernel_impls.nonMaxSuppressionV3Impl,Eo=d.kernel_impls.split,Ro=d.kernel_impls.tile,$o=d.kernel_impls.topkImpl,_o=d.kernel_impls.whereImpl;class Fo extends d.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new d.DataStorage(this,Object(d.engine)())}write(t,e,n){this.firstUse&&(this.firstUse=!1,Object(d.env)().get("IS_NODE")&&d.backend_util.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&d.util.isString(n[0])){const a=n.map(t=>d.util.encodeString(t));r=this.write(a,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return d.backend_util.mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>d.util.decodeString(t))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return d.buffer(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Object(d.engine)().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=d.util.now();t();return{kernelMs:d.util.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(t,e,n,r){To(t,"stridedSlice");const a=d.slice_util.computeOutShape(e,n,r);if(a.some(t=>0===t))return d.tensor([],a);const s=d.buffer(a,t.dtype),i=this.bufferSync(t);for(let o=0;o<s.size;o++){const t=s.indexToLoc(o),n=new Array(t.length);for(let a=0;a<n.length;a++)n[a]=t[a]*r[a]+e[a];s.set(i.get(...n),...t)}return s.toTensor()}diag(t){const e=this.readSync(t.dataId),n=d.buffer([t.size,t.size],t.dtype),r=n.values;for(let a=0;a<e.length;a++)r[a*t.size+a]=e[a];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let a=0;for(let u=0;u<t.rank;u++)u!==e&&(r[a++]=t.shape[u]);const s=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let u=0;u<o.length;u++)s[e]=u,o[u]=d.slice(t,s,i).reshape(r);return o}reverse(t,e){To(t,"reverse");const n=d.buffer(t.shape,t.dtype),r=this.bufferSync(t);for(let a=0;a<n.size;a++){const s=n.indexToLoc(a),i=s.slice();e.forEach(e=>i[e]=t.shape[e]-1-i[e]),n.set(r.get(...i),...s)}return n.toTensor()}neg(t){return To(t,"neg"),d.mul(d.scalar(-1),t)}addN(t){To(t,"addN");const e=t.map(t=>this.readSync(t.dataId)),n=d.buffer(t[0].shape,t[0].dtype),r=n.values;for(let a=0;a<t.length;a++){const t=e[a];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=d.util.parseAxisParam([e],t.shape),r=Object(d.max)(t,n),a=d.backend_util.expandShapeToKeepDim(r.shape,n),s=d.sub(t,r.reshape(a)),i=d.exp(s),o=this.sum(i,n).reshape(a);return d.div(i,o)}pow(t,e){return To([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.pow(t,e))}floorDiv(t,e){To([t,e],"floorDiv");return this.broadcastedBinaryOp(t,e,"int32",(t,e)=>Math.floor(t/e))}sum(t,e){To(t,"sum"),d.backend_util.assertAxesAreInnerMostDims("sum",e,t.rank);const[n,r]=d.backend_util.computeOutAndReduceShapes(t.shape,e),a=Object(d.upcastType)(t.dtype,"int32"),s=d.zeros(n,a),i=d.util.sizeFromShape(r),o=this.readSync(s.dataId),u=this.readSync(t.dataId);for(let c=0;c<o.length;++c){const t=c*i;let e=0;for(let n=0;n<i;++n)e+=u[t+n];o[c]=e}return s}prod(t,e){To(t,"sum");const[n,r]=d.backend_util.computeOutAndReduceShapes(t.shape,e),a=Object(d.upcastType)(t.dtype,"int32"),s=d.zeros(n,a),i=d.util.sizeFromShape(r),o=this.readSync(s.dataId),u=this.readSync(t.dataId);for(let c=0;c<o.length;++c){const t=c*i;let e=1;for(let n=0;n<i;++n)e*=u[t+n];o[c]=e}return s}unsortedSegmentSum(t,e,n){To(t,"unsortedSegmentSum");const r=[],a=t.rank-e.rank;for(let s=0;s<a;++s)e=e.expandDims(s+1);for(let s=0;s<n;++s){const n=d.scalar(s,"int32"),a=d.equal(n,e).asType("float32").mul(t).sum(0);r.push(a)}return d.stack(r)}argMin(t,e){To(t,"argMin");const n=[e];d.backend_util.assertAxesAreInnerMostDims("argMin",n,t.rank);const[r,a]=d.backend_util.computeOutAndReduceShapes(t.shape,n),s=d.zeros(r,"int32"),i=d.util.sizeFromShape(a),o=this.readSync(s.dataId),u=this.readSync(t.dataId);for(let c=0;c<o.length;++c){const t=c*i;let e=u[t],n=0;for(let r=0;r<i;++r){const a=u[t+r];a<e&&(e=a,n=r)}o[c]=n}return s}argMax(t,e){To(t,"argMax");const n=[e];d.backend_util.assertAxesAreInnerMostDims("argMax",n,t.rank);const[r,a]=d.backend_util.computeOutAndReduceShapes(t.shape,n),s=d.zeros(r,"int32"),i=d.util.sizeFromShape(a),o=this.readSync(s.dataId),u=this.readSync(t.dataId);for(let c=0;c<o.length;++c){const t=c*i;let e=u[t],n=0;for(let r=0;r<i;++r){const a=u[t+r];a>e&&(e=a,n=r)}o[c]=n}return s}cumsum(t,e,n,r){if(To(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=`+e);const a=Object(d.upcastType)(t.dtype,"int32"),s=d.zeros(t.shape,a),i=this.readSync(s.dataId),o=this.readSync(t.dataId),u=t.shape[t.rank-1],c=r?(t,e)=>t+u-e-1:(t,e)=>t+e;for(let l=0;l<o.length;l+=u)for(let t=0;t<u;t++){const e=c(l,t);if(0===t)i[e]=n?0:o[e];else{const r=c(l,t-1);i[e]=n?o[r]+i[r]:o[e]+i[r]}}return s}equal(t,e){return To([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t===e?1:0)}notEqual(t,e){return To([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t!==e?1:0)}less(t,e){return To([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t<e?1:0)}lessEqual(t,e){return To([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t<=e?1:0)}greater(t,e){return To([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t>e?1:0)}greaterEqual(t,e){return To([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t>=e?1:0)}logicalAnd(t,e){return To([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t&&e)}logicalOr(t,e){return To([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t||e)}select(t,e,n){To([t,e,n],"select");const r=this.readSync(t.dataId),a=this.readSync(e.dataId),s=this.readSync(n.dataId),i=d.zeros(e.shape,Object(d.upcastType)(e.dtype,n.dtype)),o=this.readSync(i.dataId);let u=0;const c=0===t.rank||t.rank>1||1===e.rank?1:d.util.sizeFromShape(e.shape.slice(1));for(let l=0;l<r.length;l++)for(let t=0;t<c;t++)1===r[l]?o[u++]=a[l]:o[u++]=s[l];return i}where(t){To([t],"where");const e=this.readSync(t.dataId);return _o(t.shape,e)}topk(t,e,n){To(t,"topk");const r=this.readSync(t.dataId);return $o(r,t.shape,t.dtype,e,n)}min(t,e){To(t,"min"),d.backend_util.assertAxesAreInnerMostDims("min",e,t.rank);const[n,r]=d.backend_util.computeOutAndReduceShapes(t.shape,e),a=d.zeros(n,t.dtype),s=d.util.sizeFromShape(r),i=this.readSync(a.dataId),o=this.readSync(t.dataId);for(let u=0;u<i.length;++u){const t=u*s;let e=o[t];for(let n=0;n<s;++n){const r=o[t+n];r<e&&(e=r)}i[u]=e}return a}minimum(t,e){return To([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.min(t,e))}mod(t,e){return To([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})}maximum(t,e){return To([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.max(t,e))}all(t,e){To(t,"all"),d.backend_util.assertAxesAreInnerMostDims("all",e,t.rank);const[n,r]=d.backend_util.computeOutAndReduceShapes(t.shape,e),a=d.zeros(n,t.dtype),s=d.util.sizeFromShape(r),i=this.readSync(a.dataId),o=this.readSync(t.dataId);for(let u=0;u<i.length;++u){const t=u*s;let e=o[t];for(let n=0;n<s;++n){const r=o[t+n];e=e&&r}i[u]=e}return a}any(t,e){To(t,"any"),d.backend_util.assertAxesAreInnerMostDims("any",e,t.rank);const[n,r]=d.backend_util.computeOutAndReduceShapes(t.shape,e),a=d.zeros(n,t.dtype),s=d.util.sizeFromShape(r),i=this.readSync(a.dataId),o=this.readSync(t.dataId);for(let u=0;u<i.length;++u){const t=u*s;let e=o[t];for(let n=0;n<s;++n){const r=o[t+n];e=e||r}i[u]=e}return a}squaredDifference(t,e){return To([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>{const n=t-e;return n*n})}eluDer(t,e){To([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),a=this.readSync(t.dataId);for(let s=0;s<r.length;++s){const t=r[s];n[s]=t>=1?a[s]:a[s]*(t+1)}return this.makeOutput(n,e.shape,"float32")}atan2(t,e){return To([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.atan2(t,e))}tile(t,e){return To(t,"tile"),Ro(this.bufferSync(t),e)}gather(t,e,n){To([t,e],"gather");const r=t.shape.slice(),a=this.readSync(e.dataId);r[n]=a.length;const s=d.buffer(r,t.dtype),i=this.bufferSync(t);for(let o=0;o<s.size;++o){const t=s.indexToLoc(o),e=t.slice();e[n]=a[t[n]];const r=i.locToIndex(e);s.values[o]=i.values[r]}return s.toTensor()}batchToSpaceND(t,e,n){To([t],"batchToSpaceND");const r=e.reduce((t,e)=>t*e),a=d.backend_util.getReshaped(t.shape,e,r),s=d.backend_util.getPermuted(a.length,e.length),i=d.backend_util.getReshapedPermuted(t.shape,e,r),o=d.backend_util.getSliceBeginCoords(n,e.length),u=d.backend_util.getSliceSize(i,n,e.length);return d.transpose(t.reshape(a),s).reshape(i).slice(o,u)}pool3d(t,e,n){To(t,"pool3d");const r=e.strideDepth,a=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left,b="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(t.dataId),y=d.buffer(e.outShape,t.dtype),v=y.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],O=e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[3]*e.outShape[4],k=e.outShape[4];for(let d=0;d<e.batchSize;++d){const y=d*x,j=d*t.strides[0];for(let d=0;d<e.inChannels;++d)for(let x=0;x<e.outDepth;++x){const N=x*r-p;let S=N;for(;S<0;)S+=i;const I=Math.min(e.inDepth,c+N),C=y+x*O;for(let r=0;r<e.outHeight;++r){const c=r*a-f;let p=c;for(;p<0;)p+=o;const y=Math.min(e.inHeight,l+c),x=C+r*w;for(let r=0;r<e.outWidth;++r){const a=r*s-m;let c=a;for(;c<0;)c+=u;const l=Math.min(e.inWidth,h+a),f=x+r*k;let O=b,w=0,N=0;for(let e=S;e<I;e+=i){const r=j+e*t.strides[1];for(let e=p;e<y;e+=o){const a=r+e*t.strides[2];for(let e=c;e<l;e+=u){const r=g[a+e*t.strides[3]+d];if("max"===n&&r>O?O=r:"avg"===n&&(w+=r,N++),isNaN(O))break}if(isNaN(O))break}if(isNaN(O))break}v[f+d]="avg"===n?w/N:O}}}}return y.toTensor()}avgPool3d(t,e){return To(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){To([t,e],"avgPool3dBackprop");const r=n.strideDepth,a=n.strideHeight,s=n.strideWidth,i=n.filterDepth,o=n.filterHeight,u=n.filterWidth,c=n.dilationDepth,l=n.dilationHeight,h=n.dilationWidth,p=n.effectiveFilterDepth,f=n.effectiveFilterHeight,m=n.effectiveFilterWidth,b=p-1-n.padInfo.front,g=m-1-n.padInfo.left,y=f-1-n.padInfo.top,v=d.buffer(e.shape,"float32"),x=1/(i*o*u),O=this.bufferSync(t);for(let d=0;d<n.batchSize;++d)for(let t=0;t<n.inChannels;++t)for(let e=0;e<n.inDepth;++e)for(let i=0;i<n.inHeight;++i)for(let o=0;o<n.inWidth;++o){const u=e-b,w=i-y,k=o-g;let j=0;for(let e=0;e<p;e+=c){const i=(u+e)/r;if(!(i<0||i>=n.outDepth||Math.floor(i)!==i))for(let e=0;e<f;e+=l){const r=(w+e)/a;if(!(r<0||r>=n.outHeight||Math.floor(r)!==r))for(let e=0;e<m;e+=h){const a=(k+e)/s;if(a<0||a>=n.outWidth||Math.floor(a)!==a)continue;j+=O.get(d,i,r,a,t)}}}v.set(j*x,d,e,i,o,t)}return v.toTensor()}maxPool3d(t,e){return To(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=d.buffer(e.outShape,"int32"),r=e.strideDepth,a=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left,b=this.bufferSync(t);for(let d=0;d<e.batchSize;++d)for(let t=0;t<e.inChannels;++t)for(let g=0;g<e.outDepth;++g){const y=g*r-p;let v=y;for(;v<0;)v+=i;const x=Math.min(e.inDepth,c+y);for(let r=0;r<e.outHeight;++r){const c=r*a-f;let p=c;for(;p<0;)p+=o;const O=Math.min(e.inHeight,l+c);for(let a=0;a<e.outWidth;++a){const f=a*s-m;let w=f;for(;w<0;)w+=u;const k=Math.min(e.inWidth,h+f);let j=Number.NEGATIVE_INFINITY,N=-1;for(let e=v;e<x;e+=i){const n=e-y;for(let r=p;r<O;r+=o){const a=r-c;for(let s=w;s<k;s+=u){const i=s-f,o=b.get(d,e,r,s,t);o>=j&&(j=o,N=n*l*h+a*l+i)}}}n.set(N,d,g,r,a,t)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){To([e,n],"maxPool3dBackprop");const a=this.maxPool3dPositions(e,r),s=r.strideDepth,i=r.strideHeight,o=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=h-1-r.padInfo.front,b=f-1-r.padInfo.left,g=p-1-r.padInfo.top,y=d.buffer(e.shape,"float32"),v=this.bufferSync(a),x=this.bufferSync(t);for(let d=0;d<r.batchSize;++d)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.inDepth;++e)for(let n=0;n<r.inHeight;++n)for(let a=0;a<r.inWidth;++a){const O=e-m,w=n-g,k=a-b;let j=0;for(let e=0;e<h;e+=u){const n=(O+e)/s;if(!(n<0||n>=r.outDepth||Math.floor(n)!==n))for(let a=0;a<p;a+=c){const s=(w+a)/i;if(!(s<0||s>=r.outHeight||Math.floor(s)!==s))for(let i=0;i<f;i+=l){const u=(k+i)/o;if(u<0||u>=r.outWidth||Math.floor(u)!==u)continue;const c=h*p*f-1-v.get(d,n,s,u,t)===e*p*f+a*f+i?1:0;if(0===c)continue;j+=x.get(d,n,s,u,t)*c}}}y.set(j,d,e,n,a,t)}return y.toTensor()}resizeBilinear(t,e,n,r){To(t,"resizeBilinear");const[a,s,i,o]=t.shape,u=this.readSync(t.dataId),c=new Float32Array(d.util.sizeFromShape([a,e,n,o])),l=[r&&e>1?s-1:s,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let p=0;const f=l[0]/h[0],m=l[1]/h[1];for(let d=0;d<a;d++)for(let r=0;r<e;r++){const e=f*r,a=Math.floor(e),l=e-a,h=Math.min(s-1,Math.ceil(e)),b=d*t.strides[0]+a*t.strides[1],g=d*t.strides[0]+h*t.strides[1];for(let r=0;r<n;r++){const e=m*r,n=Math.floor(e),a=e-n,s=Math.min(i-1,Math.ceil(e)),d=b+n*t.strides[2],h=g+n*t.strides[2],f=b+s*t.strides[2],y=g+s*t.strides[2];for(let t=0;t<o;t++){const e=u[d+t],n=u[h+t],r=e+(u[f+t]-e)*a,s=r+(n+(u[y+t]-n)*a-r)*l;c[p++]=s}}}return d.tensor(c,[a,e,n,o])}resizeBilinearBackprop(t,e,n){To([t,e],"resizeBilinearBackprop");const[r,a,s,i]=e.shape,[,o,u]=t.shape,c=new Float32Array(r*a*s*i),l=[n&&o>1?a-1:a,n&&u>1?s-1:s],h=[n&&o>1?o-1:o,n&&u>1?u-1:u],p=l[0]/h[0],f=l[1]/h[1],m=this.readSync(t.dataId);let b=0;for(let d=0;d<r;d++){const t=d*e.strides[0];for(let n=0;n<o;n++){const r=n*p,o=Math.floor(r),l=Math.min(Math.ceil(r),a-1),d=t+o*e.strides[1],h=t+l*e.strides[1],g=r-o,y=1-g;for(let t=0;t<u;t++){const n=t*f,r=Math.floor(n),a=Math.min(Math.ceil(n),s-1),o=n-r,u=1-o,l=d+r*e.strides[2],p=d+a*e.strides[2],v=h+r*e.strides[2],x=h+a*e.strides[2],O=y*u,w=y*o,k=g*u,j=g*o;for(let t=0;t<i;t++){const e=m[b++];c[l+t]+=e*O,c[p+t]+=e*w,c[v+t]+=e*k,c[x+t]+=e*j}}}}return d.tensor4d(c,[r,s,a,i],e.dtype)}resizeNearestNeighbor(t,e,n,r){To(t,"resizeNearestNeighbor");const[a,s,i,o]=t.shape,u=this.readSync(t.dataId),c=new Float32Array(a*e*n*o),l=[r&&e>1?s-1:s,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],p=l[0]/h[0],f=l[1]/h[1];let m=0;for(let d=0;d<a;d++){const a=d*t.strides[0];for(let l=0;l<e;l++){const e=p*l,d=a+Math.min(s-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let a=0;a<n;a++){const e=f*a,n=d+Math.min(i-1,r?Math.round(e):Math.floor(e))*t.strides[2];for(let t=0;t<o;t++){const e=u[n+t];c[m++]=e}}}}return d.tensor(c,[a,e,n,o],t.dtype)}resizeNearestNeighborBackprop(t,e,n){To([t,e],"resizeNearestNeighborBackprop");const[r,a,s,i]=e.shape,[,o,u]=t.shape,c=new Float32Array(r*a*s*i),l=this.readSync(t.dataId),h=[n&&o>1?a-1:a,n&&u>1?s-1:s],p=[n&&o>1?o-1:o,n&&u>1?u-1:u],f=h[0]/p[0],m=h[1]/p[1],b=1/f,g=1/m,y=2*Math.ceil(b)+2,v=2*Math.ceil(g)+2;for(let d=0;d<r;d++){const r=d*e.strides[0];for(let d=0;d<a;d++){const h=r+d*e.strides[1],p=Math.floor(d*b),x=Math.floor(p-y/2);for(let b=0;b<s;b++){const p=h+b*e.strides[2],O=Math.floor(b*g),w=Math.floor(O-v/2);for(let e=0;e<i;e++){let i=0;for(let c=0;c<y;c++){const h=c+x;if(h<0||h>=o)continue;const p=r+h*t.strides[1],g=h*f;if(d===Math.min(a-1,n?Math.round(g):Math.floor(g)))for(let r=0;r<v;r++){const a=r+w;if(a<0||a>=u)continue;const o=p+a*t.strides[2],c=a*m;b===Math.min(s-1,n?Math.round(c):Math.floor(c))&&(i+=l[o+e])}}c[p+e]=i}}}}return d.tensor4d(c,e.shape,e.dtype)}localResponseNormalization4D(t,e,n,r,a){To(t,"localResponseNormalization4D");const s=t.shape[3],i=s-1,o=this.readSync(t.dataId),u=t.size,c=new Float32Array(u);function l(t){const n=t%s;let r=t-n+Math.max(0,n-e);const a=t-n+Math.min(n+e,i);let u=0;for(;r<=a;r++){const t=o[r];u+=t*t}return u}for(let d=0;d<u;d++){const t=l(d),e=o[d]*Math.pow(n+r*t,-a);c[d]=e}return d.tensor4d(c,t.shape)}LRNGrad(t,e,n,r,a,s,i){To(t,"LRNGrad");const o=t.shape[3],u=this.readSync(t.dataId),c=this.readSync(e.dataId),l=this.readSync(n.dataId),h=new Float32Array(t.size),p=t.size;for(let d=0;d<p;d++){const t=d%o,e=d-t+Math.max(0,t-r),n=d-t+Math.min(o,t+r+1);let p=0;for(let r=e;r<n;r++)p+=Math.pow(c[r],2);p=s*p+a;for(let r=e;r<n;r++){let t=-2*s*i*c[r]*l[d]/p;d===r&&(t+=Math.pow(p,-i)),t*=u[d],h[r]+=t}}return d.tensor4d(h,t.shape)}multinomial(t,e,n,r){To(t,"multinomial");const a=e?t:d.softmax(t),s=a.shape[0],i=a.shape[1],o=d.zeros([s,n],"int32"),u=this.readSync(o.dataId),c=this.readSync(a.dataId);for(let l=0;l<s;++l){const t=l*i,e=new Float32Array(i-1);e[0]=c[t];for(let n=1;n<e.length;++n)e[n]=e[n-1]+c[t+n];const a=Zi.alea(r.toString()),s=l*n;for(let r=0;r<n;++r){const t=a();u[s+r]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){u[s+r]=n;break}}}return o}oneHot(t,e,n,r){To(t,"oneHot");const a=new Float32Array(t.size*e);a.fill(r);const s=this.readSync(t.dataId);for(let i=0;i<t.size;++i)s[i]>=0&&s[i]<e&&(a[i*e+s[i]]=n);return d.tensor2d(a,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,a){To(t,"nonMaxSuppression");const s=this.readSync(t.dataId),i=this.readSync(e.dataId);return Ao(s,i,n,r,a)}depthToSpace(t,e,n){d.util.assert("NHWC"===n,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n),d.util.assert(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],a=t.shape[1],s=t.shape[2],i=t.shape[3],o=a*e,u=s*e,c=i/(e*e),l=this.readSync(t.dataId),h=new Float32Array(r*o*u*c);let p=0;for(let d=0;d<r;++d)for(let t=0;t<o;++t){const n=Math.floor(t/e),r=t%e;for(let t=0;t<u;++t){const o=Math.floor(t/e),u=(r*e+t%e)*c;for(let t=0;t<c;++t){const e=t+u+i*(o+s*(n+a*d));h[p++]=l[e]}}}return d.tensor4d(h,[r,o,u,c])}broadcastedBinaryOp(t,e,n,r){const a=d.backend_util.assertAndGetBroadcastShape(t.shape,e.shape),s=d.buffer(a,n),i=this.readSync(t.dataId),o=this.readSync(e.dataId),u=d.backend_util.getBroadcastDims(t.shape,a),c=d.backend_util.getBroadcastDims(e.shape,a),l=s.values;if(u.length+c.length===0)for(let d=0;d<l.length;++d)l[d]=r(i[d%i.length],o[d%o.length]);else{const n=this.bufferSync(t),a=this.bufferSync(e);for(let d=0;d<l.length;++d){const h=s.indexToLoc(d),p=h.slice(-t.rank);u.forEach(t=>p[t]=0);const f=n.locToIndex(p),m=h.slice(-e.rank);c.forEach(t=>m[t]=0);const b=a.locToIndex(m);l[d]=r(i[f],o[b])}}return s.toTensor()}split(t,e,n){return Eo(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,a,s){const[i,o,u,c]=t.shape,l=e.shape[0],[h,p]=r,f=d.buffer([l,h,p,c],"float32"),m=this.readSync(e.dataId),b=this.readSync(n.dataId),g=this.readSync(t.dataId),y=t.strides,v=f.strides;for(let d=0;d<l;d++){const t=4*d,e=m[t],n=m[t+1],r=m[t+2],l=m[t+3],x=b[d];if(x>=i)continue;const O=h>1?(r-e)*(o-1)/(h-1):0,w=p>1?(l-n)*(u-1)/(p-1):0;for(let i=0;i<h;i++){const t=h>1?e*(o-1)+i*O:.5*(e+r)*(o-1);if(t<0||t>o-1)for(let e=0;e<p;e++)for(let t=0;t<c;t++){const n=t+e*v[2]+i*v[1]+d*v[0];f.values[n]=s}else if("bilinear"===a){const e=Math.floor(t),r=Math.ceil(t),a=t-e;for(let t=0;t<p;t++){const o=p>1?n*(u-1)+t*w:.5*(n+l)*(u-1);if(o<0||o>u-1){for(let e=0;e<c;e++){const n=e+t*v[2]+i*v[1]+d*v[0];f.values[n]=s}continue}const h=Math.floor(o),m=Math.ceil(o),b=o-h;for(let n=0;n<c;n++){let s=n+h*y[2]+e*y[1]+x*y[0];const o=g[s];s=n+m*y[2]+e*y[1]+x*y[0];const u=g[s];s=n+h*y[2]+r*y[1]+x*y[0];const c=g[s];s=n+m*y[2]+r*y[1]+x*y[0];const l=o+(u-o)*b,p=c+(g[s]-c)*b;s=n+t*v[2]+i*v[1]+d*v[0],f.values[s]=l+(p-l)*a}}}else for(let e=0;e<p;++e){const r=p>1?n*(u-1)+e*w:.5*(n+l)*(u-1);if(r<0||r>u-1){for(let t=0;t<c;t++){const n=t+e*v[2]+i*v[1]+d*v[0];f.values[n]=s}continue}const a=Math.round(r),o=Math.round(t);for(let t=0;t<c;t++){const n=t+a*y[2]+o*y[1]+x*y[0],r=t+e*v[2]+i*v[1]+d*v[0];f.values[r]=g[n]}}}}return f.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:a,numUpdates:s,sliceSize:i,strides:o,outputSize:u}=d.backend_util.calculateShapes(e,t,n);return this.scatter(t,e,n,u,i,s,a,o,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[a,s,i,o]=d.backend_util.prepareAndValidate(t,e);if(0===s)return d.tensor([],a,t.dtype);const u=new d.TensorBuffer([s,i],t.dtype),c=this.readSync(e.dataId),l=this.readSync(t.dataId);for(let d=0;d<s;d++){const e=[];let n=0;for(let t=0;t<r;t++){const a=c[d*r+t];n+=a*o[t],e.push(a)}if(n<0||n>=t.size/i)throw new Error(`Invalid indices: ${e} does not index into ${t.shape}`);for(let t=0;t<i;t++)u.values[d*i+t]=l[n*i+t]}return u.toTensor().reshape(a)}scatterND(t,e,n){const{sliceRank:r,numUpdates:a,sliceSize:s,strides:i,outputSize:o}=d.backend_util.calculateShapes(e,t,n),u=d.scalar(0);return this.scatter(t,e,n,o,s,a,r,i,u,!0)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return d.fill(t.shape,1,t.dtype)}zerosLike(t){const e=d.util.getArrayFromDType(t.dtype,d.util.sizeFromShape(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return d.backend_util.linspaceImpl(t,e,n)}scatter(t,e,n,r,a,s,i,o,u,c){const l=[r/a,a],h=this.readSync(t.dataId),p=this.readSync(e.dataId);if(0===r)return d.tensor([],n,e.dtype);const f=new d.TensorBuffer(l,e.dtype);f.values.fill(this.readSync(u.dataId)[0]);for(let d=0;d<s;d++){const t=[];let s=0;for(let e=0;e<i;e++){const n=h[d*i+e];t.push(n),s+=n*o[e]}if(s<0||s>=r/a)throw new Error(`Invalid indices: ${t} does not index into ${n}`);for(let n=0;n<a;n++)c?f.values[s*a+n]+=p[d*a+n]:f.values[s*a+n]=0===e.rank?p[0]:p[d*a+n]}return f.toTensor().reshape(n)}}function Do(t,e,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(To(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=d.util.sizeFromShape(i.shape),l=n||i.dtype,h=d.util.getArrayFromDType(l,c);for(let t=0;t<c;++t)h[t]=e(u[t],a);return o.makeTensorInfo(i.shape,l,h)}}function Mo(t,e,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(To(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=n||i.dtype,l=e(u,c,a);return o.makeTensorInfo(i.shape,c,l)}}Object(d.registerBackend)("cpu",()=>new Fo,1);const zo=Do(d.Elu,t=>t>=0?t:Math.exp(t)-1),Lo={kernelName:d.Elu,backendName:"cpu",kernelFunc:zo};function Bo(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Po={kernelName:d.Identity,backendName:"cpu",kernelFunc:Bo};function Vo(t){return(e,n,r,a,s)=>{const i=d.backend_util.assertAndGetBroadcastShape(e,n),o=i.length,u=d.util.computeStrides(i),c=d.util.sizeFromShape(i),l=d.util.getTypedArrayFromDType(s,c),h=e.length,p=n.length,f=d.util.computeStrides(e),m=d.util.computeStrides(n),b=d.backend_util.getBroadcastDims(e,i),g=d.backend_util.getBroadcastDims(n,i);if(b.length+g.length===0)for(let d=0;d<l.length;++d)l[d]=t(r[d%r.length],a[d%a.length]);else for(let y=0;y<l.length;++y){const e=d.util.indexToLoc(y,o,u),n=e.slice(-h);b.forEach(t=>n[t]=0);const s=d.util.locToIndex(n,h,f),i=e.slice(-p);g.forEach(t=>i[t]=0);const c=d.util.locToIndex(i,p,m);l[y]=t(r[s],a[c])}return[l,i]}}const Wo=Vo((t,e)=>t<0?e*t:t);function Uo(t){const{inputs:e,backend:n}=t,{x:r,alpha:a}=e;To([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=Wo(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const Ko={kernelName:d.Prelu,backendName:"cpu",kernelFunc:Uo},Go=Do(d.Relu,t=>Math.max(0,t)),Ho={kernelName:d.Relu,backendName:"cpu",kernelFunc:Go},qo=Do(d.Relu6,t=>Math.min(Math.max(0,t),6)),Xo={kernelName:d.Relu6,backendName:"cpu",kernelFunc:qo};function Yo(t,e,n,r){if("linear"===n)return Bo({inputs:{x:e},backend:t});if("relu"===n)return Go({inputs:{x:e},backend:t});if("elu"===n)return zo({inputs:{x:e},backend:t});if("relu6"===n)return qo({inputs:{x:e},backend:t});if("prelu"===n)return Uo({inputs:{x:e,alpha:r},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Jo(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const Zo={kernelName:d.Complex,backendName:"cpu",kernelFunc:Jo};function Qo(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const tu={kernelName:d.Real,backendName:"cpu",kernelFunc:Qo};function eu(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return Bo({inputs:{x:a},backend:n});const t=d.zeros(a.shape),e=eu({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Jo({inputs:{real:e,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(e),r}if("complex64"===a.dtype){const t=Qo({inputs:{input:a},backend:n}),e=eu({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!d.util.hasEncodingLoss(a.dtype,s)){const t=Bo({inputs:{x:a},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}if("int32"===s){const t=n.data.get(a.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(a.shape,"int32",e)}if("bool"===s){const t=n.data.get(a.dataId).values,e=d.util.toTypedArray([0],a.dtype),[r,s]=Vo((t,e)=>t!==e?1:0)(a.shape,[],t,e,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const nu={kernelName:d.Cast,backendName:"cpu",kernelFunc:eu};function ru(t,e,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;To([s,i],t);const u=o.data.get(s.dataId).values,c=o.data.get(i.dataId).values,l=r||s.dtype,[d,h]=e(s.shape,i.shape,u,c,l);return o.makeTensorInfo(h,l,d)}:({inputs:t,backend:a})=>{const{a:s,b:i}=t,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const t=eu({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,a=e.complexTensorInfos.imag,u=o.data.get(r.dataId).values,c=o.data.get(a.dataId).values,l=eu({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(l.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(p.dataId).values,[b,g,y]=n(s.shape,i.shape,u,c,f,m),v=o.makeTensorInfo(y,"float32",b),x=o.makeTensorInfo(y,"float32",g),O=Jo({inputs:{real:v,imag:x},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(l),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(x),O}{const t=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,c]=e(s.shape,i.shape,t,n,a);return o.makeTensorInfo(c,a,u)}}}function au(t){return(e,n,r,a,s,i)=>{const o=d.backend_util.assertAndGetBroadcastShape(e,n),u=d.util.sizeFromShape(o),c=o.length,l=d.util.computeStrides(o),h=d.util.getTypedArrayFromDType("float32",u),p=d.util.getTypedArrayFromDType("float32",u),f=d.backend_util.getBroadcastDims(e,o),m=d.backend_util.getBroadcastDims(n,o),b=d.backend_util.mergeRealAndImagArrays(r,a),g=d.backend_util.mergeRealAndImagArrays(s,i),y=e.length,v=d.util.computeStrides(e),x=n.length,O=d.util.computeStrides(n);if(f.length+m.length===0)for(let d=0;d<h.length;d++){const e=d%b.length,n=d%g.length,r=t(b[2*e],b[2*e+1],g[2*n],g[2*n+1]);h[d]=r.real,p[d]=r.imag}else for(let w=0;w<h.length;w++){const e=d.util.indexToLoc(w,c,l),n=e.slice(-y);f.forEach(t=>n[t]=0);const r=d.util.locToIndex(n,y,v),a=e.slice(-x);m.forEach(t=>a[t]=0);const s=d.util.locToIndex(a,x,O),i=t(b[2*r],b[2*r+1],g[2*s],g[2*s+1]);h[w]=i.real,p[w]=i.imag}return[h,p,o]}}const su=Vo((t,e)=>t+e),iu=au((t,e,n,r)=>({real:t+n,imag:e+r})),ou=ru(d.Add,su,iu),uu={kernelName:d.Add,backendName:"cpu",kernelFunc:ou};function cu(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{shape:s}=r,i=d.util.sizeFromShape(a.shape),o=d.util.inferFromImplicitShape(s,i),u=d.util.sizeFromShape(o);d.util.assert(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const t=c.complexTensorInfos.real,e=c.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const lu={kernelName:d.Reshape,backendName:"cpu",kernelFunc:cu};function du(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s}=e,{transposeA:i,transposeB:o}=r;To([a,s],"matMul");const u=a.shape.length,c=s.shape.length,l=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[c-1]:s.shape[c-2],p=i?a.shape[u-1]:a.shape[u-2],f=o?s.shape[c-2]:s.shape[c-1],m=a.shape.slice(0,-2),b=s.shape.slice(0,-2),g=d.util.sizeFromShape(m),y=d.util.sizeFromShape(b),v=g===y||1===g||1===y;d.util.assert(u>=2&&c>=2&&v,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${b}).`);const x=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([p,f]);d.util.assert(l===h,()=>`Error in matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);const O=o?[y,f,h]:[y,h,f],w=cu({inputs:{x:a},backend:n,attrs:{shape:i?[g,l,p]:[g,p,l]}}),k=cu({inputs:{x:s},backend:n,attrs:{shape:O}}),j=i?w.shape[1]:w.shape[2],N=i?w.shape[2]:w.shape[1],S=o?k.shape[1]:k.shape[2],I=Math.max(g,y),C=n.data.get(w.dataId).values,T=n.data.get(k.dataId).values,A=d.util.computeStrides(w.shape),E=d.util.computeStrides(k.shape),[R,$,_]=i?[A[0],1,A[1]]:[A[0],A[1],1],[F,D,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],z=N*S,L=Object(d.buffer)([I,N,S],w.dtype),B=L.values,P=n.blockSize;for(let d=0;d<I;d++)for(let t=0;t<N;t+=P)for(let e=0;e<S;e+=P)for(let n=0;n<j;n+=P){const r=Math.min(t+P,N),a=Math.min(e+P,S),s=Math.min(n+P,j);for(let i=t;i<r;i++)for(let t=e;t<a;t++){let e=0;for(let r=n;r<s;r++){const n=Math.min(d,g-1)*R,a=Math.min(d,y-1)*M;e+=C[n+i*$+r*_]*T[r*F+t*D+a]}B[d*z+(i*S+t)]+=e}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,L.dtype,L.values)}const hu={kernelName:d.BatchMatMul,backendName:"cpu",kernelFunc:du};const pu={kernelName:d._FusedMatMul,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s,bias:i,preluActivationWeights:o}=e,{transposeA:u,transposeB:c,activation:l}=r;let d,h,p;const f=[];d=du({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),i&&(h=ou({inputs:{a:d,b:i},backend:n}),f.push(d),d=h),l&&(p=Yo(n,d,l,o),f.push(d),d=p);for(const m of f)n.disposeIntermediateTensorInfo(m);return d}};function fu(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const mu={kernelName:d.Abs,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;let r=new Float32Array(d.util.sizeFromShape(e.shape));if("complex64"!==e.dtype){r=fu(n.data.get(e.dataId).values)}else{const t=n.data.get(e.dataId),a=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;e++){const t=i[e],n=o[e];r[e]=Math.hypot(t,n)}}return n.makeOutput(r,e.shape,"float32")}},bu=Do(d.Acos,t=>Math.acos(t)),gu={kernelName:d.Acos,backendName:"cpu",kernelFunc:bu},yu=Do(d.Acosh,t=>Math.acosh(t)),vu={kernelName:d.Acosh,backendName:"cpu",kernelFunc:yu},xu=Do(d.Asin,t=>Math.asin(t)),Ou={kernelName:d.Asin,backendName:"cpu",kernelFunc:xu},wu=Do(d.Asinh,t=>Math.asinh(t)),ku={kernelName:d.Asinh,backendName:"cpu",kernelFunc:wu},ju=Do(d.Atan,t=>Math.atan(t)),Nu={kernelName:d.Atan,backendName:"cpu",kernelFunc:ju},Su=Do(d.Atanh,t=>Math.atanh(t)),Iu={kernelName:d.Atanh,backendName:"cpu",kernelFunc:Su};function Cu(t,e,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,l=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(d.buffer)(a.outShape,n),g=b.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],v=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let d=0;d<a.batchSize;++d){const e=d*y,n=d*r[0];for(let d=0;d<a.inChannels;++d)for(let b=0;b<a.outHeight;++b){const y=b*i-p,O=Math.max(0,y),w=Math.min(a.inHeight,l+y),k=e+b*v;for(let e=0;e<a.outWidth;++e){const i=e*o-f,l=Math.max(0,i),p=Math.min(a.inWidth,h+i);let b=m,y=0,v=0;for(let e=O;e<w;e+=u){const a=n+e*r[1];for(let e=l;e<p;e+=c){const n=t[a+e*r[2]+d];"max"===s&&n>b?b=n:"avg"===s&&(y+=n,v++)}if(isNaN(b))break}g[k+e*x+d]="avg"===s?y/v:b}}}return b}function Tu(t,e,n,r,a=!1,s=!1){const i=Object(d.buffer)(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,b=Object(d.buffer)(e,n,t);for(let d=0;d<r.batchSize;++d)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*o-f;let g=n;for(;g<0;)g+=c;const y=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*u-m;let f=h;for(;f<0;)f+=l;const v=Math.min(r.inWidth,p+h);let x=Number.NEGATIVE_INFINITY,O=-1;for(let e=g;e<y;e+=c){const i=e-n;for(let n=f;n<v;n+=l){const o=n-h,u=b.get(d,e,n,t);u>x&&(x=u,O=a?s?((d*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:i*p+o)}}i.set(O,d,e,o,t)}}return i}const Au={kernelName:d.AvgPool,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;To(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=d.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&d.util.arraysEqual(c.inShape,c.outShape))l=Bo({inputs:{x:a},backend:n});else{const t=n.data.get(a.dataId).values,e=d.util.computeStrides(a.shape),r=Cu(t,a.shape,a.dtype,e,c,"avg");l=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return l}};const Eu={kernelName:d.AvgPoolBackprop,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,i=s;To([a,s],"avgPoolBackprop");const{filterSize:o,strides:u,pad:c}=r,l=d.backend_util.computePool2DInfo(i.shape,o,u,1,c),h=l.strideHeight,p=l.strideWidth,f=l.filterHeight,m=l.filterWidth,b=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,v=l.effectiveFilterWidth,x=v-1-l.padInfo.left,O=y-1-l.padInfo.top,w=Object(d.buffer)(i.shape,"float32"),k=1/(f*m),j=n.data.get(a.dataId).values,N=Object(d.buffer)(a.shape,"float32",j);for(let d=0;d<l.batchSize;++d)for(let t=0;t<l.inChannels;++t)for(let e=0;e<l.inHeight;++e)for(let n=0;n<l.inWidth;++n){const r=e-O,a=n-x;let s=0;for(let e=0;e<y;e+=b){const n=(r+e)/h;if(!(n<0||n>=l.outHeight||Math.floor(n)!==n))for(let e=0;e<v;e+=g){const r=(a+e)/p;if(r<0||r>=l.outWidth||Math.floor(r)!==r)continue;s+=N.get(d,n,r,t)}}w.set(s*k,d,e,n,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Ru={kernelName:d.FusedBatchNorm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,scale:s,offset:i,mean:o,variance:u}=e;d.util.assert(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),d.util.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),d.util.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),To([a,o,u,s,i],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const l=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,f=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),b=new Float32Array(l.length),g=m.length,y=f.length,v=p.length,x=h.length;let O=0,w=0,k=0,j=0;for(let d=0;d<l.length;++d)b[d]=m[O++]+(l[d]-h[w++])*f[k++]/Math.sqrt(p[j++]+c),O>=g&&(O=0),w>=x&&(w=0),k>=y&&(k=0),j>=v&&(j=0);return n.makeTensorInfo(a.shape,a.dtype,b)}};function $u(t){return(e,n,r)=>{const a=d.util.getTypedArrayFromDType(n,e.length);for(let s=0;s<e.length;++s)a[s]=t(e[s],r);return a}}const _u=$u(t=>Math.ceil(t)),Fu=Mo(d.Ceil,_u),Du={kernelName:d.Ceil,backendName:"cpu",kernelFunc:Fu},Mu=Do(d.ClipByValue,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),zu={kernelName:d.ClipByValue,backendName:"cpu",kernelFunc:Mu};function Lu(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Bu={kernelName:d.Imag,backendName:"cpu",kernelFunc:Lu};function Pu(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r,s=d.util.parseAxisParam(a,e[0].shape)[0];let i=d.backend_util.computeOutShape(e.map(t=>t.shape),s);if(0===d.util.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter(t=>d.util.sizeFromShape(t.shape)>0);if(1===o.length)return o[0];const u=o.map(t=>t.shape);if(d.backend_util.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const t=o.map(t=>Qo({inputs:{input:t},backend:n})),e=o.map(t=>Lu({inputs:{input:t},backend:n})),r=Pu({inputs:t,backend:n,attrs:{axis:s}}),a=Pu({inputs:e,backend:n,attrs:{axis:s}}),i=Jo({inputs:{real:r,imag:a},backend:n});return t.forEach(t=>n.disposeIntermediateTensorInfo(t)),e.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const c=o.map(t=>{const e=d.util.sizeFromShape(t.shape.slice(s));return cu({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})});i=d.backend_util.computeOutShape(c.map(t=>t.shape),1);const l=d.util.getTypedArrayFromDType(o[0].dtype,d.util.sizeFromShape(i));if(1===c[0].shape[0]){let t=0;c.forEach(e=>{const r=n.data.get(e.dataId).values,a=d.util.sizeFromShape(e.shape);l.set(r,t),t+=a})}else{let t=0;c.forEach(e=>{const r=n.data.get(e.dataId).values;let a=0;for(let n=0;n<e.shape[0];++n){const s=n*i[1]+t;for(let t=0;t<e.shape[1];++t)l[s+t]=r[a++]}t+=e.shape[1]})}const h=d.backend_util.computeOutShape(o.map(t=>t.shape),s),p=n.makeTensorInfo(h,e[0].dtype,l);return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}const Vu={kernelName:d.Concat,backendName:"cpu",kernelFunc:Pu};function Wu(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r;To([a,s],"conv2d");const h=d.backend_util.convertConv2DDataFormat(u),p=d.backend_util.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!1,h),f=p.filterHeight,m=p.filterWidth,b=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,v=p.padInfo.top,x="channelsLast"===p.dataFormat,O=new d.TensorBuffer(p.outShape,a.dtype),w=d.util.computeStrides(a.shape),k=d.util.computeStrides(s.shape),j=w[0],N=x?w[1]:w[2],S=x?w[2]:1,I=x?1:w[1],C=O.strides[0],T=x?O.strides[1]:O.strides[2],A=x?O.strides[2]:1,E=x?1:O.strides[1],R=n.data.get(a.dataId).values,$=n.data.get(s.dataId).values,_=O.values;for(let d=0;d<p.batchSize;++d){const t=d*j,e=d*C;for(let n=0;n<p.outHeight;++n){const r=e+n*T,a=n*p.strideHeight-v;for(let e=0;e<f;++e){const n=a+e*b;if(n<0||n>=p.inHeight)continue;const s=e*k[0],i=t+n*N;for(let t=0;t<p.outWidth;++t){const e=r+t*A,n=t*p.strideWidth-y;for(let t=0;t<m;++t){const r=n+t*g;if(r<0||r>=p.inWidth)continue;const a=i+r*S;let o=s+t*k[1];for(let t=0;t<p.inChannels;++t){const n=R[a+t*I];for(let t=0;t<p.outChannels;++t)_[e+t*E]+=n*$[o+t];o+=p.outChannels}}}}}}return n.makeTensorInfo(O.shape,O.dtype,_)}const Uu={kernelName:d.Conv2D,backendName:"cpu",kernelFunc:Wu};const Ku={kernelName:d.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r;To([a,s],"conv2dBackpropFilter");const h=d.backend_util.convertConv2DDataFormat(u),p=d.backend_util.computeConv2DInfo(a.shape,l,i,1,o,c,!1,h),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=p,y="channelsLast"===p.dataFormat,v=new d.TensorBuffer(p.filterShape,"float32"),x=p.padInfo.left,O=p.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,j=new d.TensorBuffer(a.shape,a.dtype,w),N=new d.TensorBuffer(s.shape,s.dtype,k);for(let d=0;d<b;++d){const t=Math.max(0,Math.ceil((O-d)/f)),e=Math.min(p.outHeight,(p.inHeight+O-d)/f);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((x-n)/m)),a=Math.min(p.outWidth,(p.inWidth+x-n)/m);for(let s=0;s<p.inChannels;++s)for(let i=0;i<p.outChannels;++i){let o=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<e;++c){const t=d+c*f-O;for(let e=r;e<a;++e){const r=n+e*m-x;o+=y?j.get(u,t,r,s)*N.get(u,c,e,i):j.get(u,s,t,r)*N.get(u,i,c,e)}}v.set(o,d,n,s,i)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Gu={kernelName:d.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r;To([a,s],"conv2dBackpropInput");const h=d.util.computeStrides(s.shape),p=d.util.computeStrides(a.shape);let f=d.backend_util.convertConv2DDataFormat(c);const m=d.backend_util.computeConv2DInfo(i,s.shape,o,1,u,l,!1,f),b=new d.TensorBuffer(m.inShape,"float32"),g=b.values,y=n.data.get(a.dataId).values,v=n.data.get(s.dataId).values,[x,O,w]=h,{batchSize:k,filterHeight:j,filterWidth:N,inChannels:S,inHeight:I,inWidth:C,outChannels:T,outHeight:A,outWidth:E,strideHeight:R,strideWidth:$}=m;f=m.dataFormat;const _=j-1-m.padInfo.top,F=N-1-m.padInfo.left,D="channelsLast"===f,M=b.strides[0],z=D?b.strides[1]:b.strides[2],L=D?b.strides[2]:1,B=D?1:b.strides[1],P=p[0],V=D?p[1]:p[2],W=D?p[2]:1,U=D?1:p[1];for(let d=0;d<k;++d)for(let t=0;t<S;++t)for(let e=0;e<I;++e){const n=e-_,r=Math.max(0,Math.ceil(n/R)),a=Math.min(A,(j+n)/R);for(let s=0;s<C;++s){const i=s-F,o=Math.max(0,Math.ceil(i/$)),u=Math.min(E,(N+i)/$);let c=0;for(let e=r;e<a;++e){const r=e*R-n;for(let n=o;n<u;++n){const a=P*d+V*e+W*n,s=x*(j-1-r)+O*(N-1-(n*$-i))+w*t;for(let t=0;t<T;++t){c+=y[a+U*t]*v[s+t]}}}g[M*d+z*e+L*s+B*t]=c}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Hu={kernelName:d.Conv3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dilations:u}=r;To([a,s],"conv3d");const c=d.backend_util.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:l,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:b,padInfo:g}=c,y=g.front,v=g.left,x=g.top,O=new d.TensorBuffer(c.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,j=O.values,N=d.util.computeStrides(a.shape),S=d.util.computeStrides(s.shape);for(let d=0;d<c.batchSize;++d){const t=d*N[0],e=d*O.strides[0];for(let n=0;n<c.outDepth;++n){const r=e+n*O.strides[1],a=n*c.strideDepth-y;for(let e=0;e<l;++e){const n=a+e*f;if(n<0||n>=c.inDepth)continue;const s=e*S[0],i=t+n*N[1];for(let t=0;t<c.outHeight;++t){const e=r+t*O.strides[2],n=t*c.strideHeight-x;for(let t=0;t<h;++t){const r=n+t*m;if(r<0||r>=c.inHeight)continue;const a=s+t*S[1],o=i+r*N[2];for(let t=0;t<c.outWidth;++t){const n=e+t*c.outChannels,r=t*c.strideWidth-v;for(let t=0;t<p;++t){const e=r+t*b;if(e<0||e>=c.inWidth)continue;const s=a+t*S[2],i=o+e*c.inChannels;let u=s;for(let t=0;t<c.inChannels;++t){const e=w[i+t];for(let t=0;t<c.outChannels;++t)j[n+t]+=e*k[u+t];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}};const qu={kernelName:d.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,pad:o,filterShape:u}=r;To([a,s],"conv3dBackpropFilterV2");const c=d.util.computeStrides(a.shape),l=d.util.computeStrides(s.shape),h=d.backend_util.computeConv3DInfo(a.shape,u,i,1,o),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,b=h.filterDepth,g=h.filterHeight,y=h.filterWidth,v=new d.TensorBuffer(h.filterShape,"float32"),x=v.values,[O,w,k,j]=v.strides,N=n.data.get(s.dataId).values,[S,I,C,T]=l,A=n.data.get(a.dataId).values,[E,R,$,_]=c,F=h.padInfo.front,D=h.padInfo.left,M=h.padInfo.top;for(let d=0;d<b;++d){const t=Math.max(0,Math.ceil((F-d)/p)),e=Math.min(h.outDepth,(h.inDepth+F-d)/p),n=d*O;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/f)),s=Math.min(h.outHeight,(h.inHeight+M-r)/f),i=r*w+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((D-n)/m)),u=Math.min(h.outWidth,(h.inWidth+D-n)/m),c=n*k+i;for(let i=0;i<h.inChannels;++i){const l=i*j+c;for(let c=0;c<h.outChannels;++c){let b=0;for(let l=0;l<h.batchSize;++l){const h=l*E,g=l*S;for(let l=t;l<e;++l){const t=(d+l*p-F)*R+h,e=l*I+g;for(let l=a;l<s;++l){const a=(r+l*f-M)*$+t,s=l*C+e;for(let t=o;t<u;++t){const e=t*T+s;b+=A[(n+t*m-D)*_+a+i]*N[e+c]}}}}x[l+c]=b}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Xu={kernelName:d.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{pad:i,strides:o,inputShape:u}=r;To([a],"conv3dBackpropInputV2");const c=d.util.computeStrides(a.shape),l=d.util.computeStrides(s.shape),h=d.backend_util.computeConv3DInfo(u,s.shape,o,1,i),p=new d.TensorBuffer(h.inShape,"float32"),f=p.values,[m,b,g,y]=p.strides,v=n.data.get(a.dataId).values,[x,O,w,k]=c,j=n.data.get(s.dataId).values,[N,S,I,C]=l,{batchSize:T,filterDepth:A,filterHeight:E,filterWidth:R,inChannels:$,inDepth:_,inHeight:F,inWidth:D,outChannels:M,outDepth:z,outHeight:L,outWidth:B,strideDepth:P,strideHeight:V,strideWidth:W}=h,U=A-1-h.padInfo.front,K=E-1-h.padInfo.top,G=R-1-h.padInfo.left;for(let d=0;d<T;++d)for(let t=0;t<$;++t)for(let e=0;e<_;++e){const n=e-U,r=Math.max(0,Math.ceil(n/P)),a=Math.min(z,(A+n)/P);for(let s=0;s<F;++s){const i=s-K,o=Math.max(0,Math.ceil(i/V)),u=Math.min(L,(E+i)/V);for(let c=0;c<D;++c){const l=c-G,h=Math.max(0,Math.ceil(l/W)),p=Math.min(B,(R+l)/W);let T=0;for(let e=r;e<a;++e){const r=e*P-n;for(let n=o;n<u;++n){const a=n*V-i;for(let s=h;s<p;++s){const i=x*d+O*e+w*n+k*s,o=N*(A-1-r)+S*(E-1-a)+I*(R-1-(s*W-l))+C*t;for(let t=0;t<M;++t){T+=v[i+t]*j[o+t]}}}}f[m*d+b*e+g*s+y*c+t]=T}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Yu=Do(d.Cos,t=>Math.cos(t)),Ju={kernelName:d.Cos,backendName:"cpu",kernelFunc:Yu},Zu=Do(d.Cosh,t=>Math.cosh(t)),Qu={kernelName:d.Cosh,backendName:"cpu",kernelFunc:Zu};function tc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;To([a,s],"depthwiseConv2DNative");const l=d.util.computeStrides(a.shape),h=d.util.computeStrides(s.shape);let p=u;null==p&&(p=[1,1]),d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);const f=d.backend_util.computeConv2DInfo(a.shape,s.shape,i,p,o,c,!0),{filterHeight:m,filterWidth:b,dilationHeight:g,dilationWidth:y,padInfo:v}=f,x=v.left,O=v.top,w=f.outChannels/f.inChannels,k=new d.TensorBuffer(f.outShape,a.dtype),j=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,S=k.values;for(let d=0;d<f.batchSize;++d){const t=d*l[0],e=d*k.strides[0];for(let n=0;n<f.outHeight;++n){const r=e+n*k.strides[1],a=n*f.strideHeight-x;for(let e=0;e<m;++e){const n=a+e*g;if(n<0||n>=f.inHeight)continue;const s=e*h[0],i=t+n*l[1];for(let t=0;t<f.outWidth;++t){const e=r+t*k.strides[2],n=t*f.strideWidth-O;for(let t=0;t<b;++t){const r=n+t*y;if(r<0||r>=f.inWidth)continue;const a=s+t*h[1],o=i+r*f.inChannels;let u=e,c=a;for(let t=0;t<f.inChannels;++t){const e=j[o+t];for(let t=0;t<w;++t)S[u+t]+=e*N[c+t];u+=w,c+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const ec={kernelName:d.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:tc};const nc={kernelName:d.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r;To([a,s],"depthwiseConv2dNativeBackpropFilter");const h=d.backend_util.computeConv2DInfo(a.shape,l,i,o,u,c,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:b}=h,g=new d.TensorBuffer(h.filterShape,"float32"),y=h.padInfo.left,v=h.padInfo.top,x=h.outChannels/h.inChannels,O=n.data.get(a.dataId).values,w=new d.TensorBuffer(a.shape,a.dtype,O),k=n.data.get(s.dataId).values,j=new d.TensorBuffer(s.shape,s.dtype,k);for(let d=0;d<m;++d){const t=Math.max(0,Math.ceil((v-d)/p)),e=Math.min(h.outHeight,(h.inHeight+v-d)/p);for(let n=0;n<b;++n){const r=Math.max(0,Math.ceil((y-n)/f)),a=Math.min(h.outWidth,(h.inWidth+y-n)/f);for(let s=0;s<h.outChannels;++s){const i=Math.trunc(s/x),o=s%x;let u=0;for(let c=0;c<h.batchSize;++c)for(let o=t;o<e;++o){const t=d+o*p-v;for(let e=r;e<a;++e){const r=n+e*f-y;u+=w.get(c,t,r,i)*j.get(c,o,e,s)}}g.set(u,d,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const rc={kernelName:d.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r;To([a,s],"depthwiseConv2DNativeBackpropInput");const h=d.util.computeStrides(a.shape),p=d.util.computeStrides(s.shape),f=d.backend_util.computeConv2DInfo(l,s.shape,i,o,u,c,!0),m=new d.TensorBuffer(f.inShape,"float32"),b=m.values,[g,y,v]=m.strides,x=n.data.get(a.dataId).values,[O,w,k]=h,j=n.data.get(s.dataId).values,[N,S,I]=p,{batchSize:C,filterHeight:T,filterWidth:A,inChannels:E,inHeight:R,inWidth:$,outChannels:_,outHeight:F,outWidth:D,strideHeight:M,strideWidth:z}=f,L=T-1-f.padInfo.top,B=A-1-f.padInfo.left,P=_/E;for(let d=0;d<C;++d)for(let t=0;t<E;++t)for(let e=0;e<R;++e){const n=e-L,r=Math.max(0,Math.ceil(n/M)),a=Math.min(F,(T+n)/M);for(let s=0;s<$;++s){const i=s-B,o=Math.max(0,Math.ceil(i/z)),u=Math.min(D,(A+i)/z);let c=0;for(let e=r;e<a;++e){const r=e*M-n;for(let n=o;n<u;++n){const a=O*d+w*e+k*n,s=N*(T-1-r)+S*(A-1-(n*z-i))+I*t;for(let e=0;e<P;++e){c+=x[a+(t*P+e)]*j[s+e]}}}b[g*d+y*e+v*s+t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},ac={kernelName:d.Dilation2D,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:a}=t,{strides:s,pad:i,dilations:o}=n,u=e,c=u.data.get(r.dataId).values,l=r.shape.length,h=u.data.get(a.dataId).values,p=a.shape.length,{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:v,padInfo:x,strideHeight:O,strideWidth:w,filterHeight:k,filterWidth:j,dilationHeight:N,dilationWidth:S,outShape:I}=d.backend_util.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),C=d.util.sizeFromShape(I),T=I.length,A=d.util.getArrayFromDType(r.dtype,C);for(let E=0;E<f;++E)for(let t=0;t<y;++t){const e=t*O-x.top;for(let n=0;n<v;++n){const s=n*w-x.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const n=e+t*N;if(n>=0&&n<m)for(let e=0;e<j;++e){const u=s+e*S;if(u>=0&&u<b){const s=d.util.locToIndex([E,n,u,i],l,d.util.computeStrides(r.shape)),f=d.util.locToIndex([t,e,i],p,d.util.computeStrides(a.shape)),m=c[s]+h[f];m>o&&(o=m)}}}A[d.util.locToIndex([E,t,n,i],T,d.util.computeStrides(I))]=o}}}return{dataId:u.write(d.util.toTypedArray(A,r.dtype),I,r.dtype),shape:I,dtype:r.dtype}}},sc={kernelName:d.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:a,dy:s}=t,{strides:i,pad:o,dilations:u}=n,c=e,l=d.util.toNestedArray(r.shape,c.data.get(r.dataId).values),h=d.util.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:v,strideHeight:x,strideWidth:O,filterHeight:w,filterWidth:k,dilationHeight:j,dilationWidth:N,outShape:S}=d.backend_util.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);d.util.assert(s.rank===S.length,()=>`Error in ${d.Dilation2DBackpropFilter}, dy must have the same rank as output ${S.length}, but got `+s.rank);const I=d.util.toNestedArray(S,c.data.get(s.dataId).values),C=d.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let d=0;d<p;++d)for(let t=0;t<g;++t){const e=t*x-v.top;for(let n=0;n<y;++n){const r=n*O-v.left;for(let a=0;a<b;++a){let s=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let t=0;t<w;++t){const n=e+t*j;if(n>=0&&n<f)for(let e=0;e<k;++e){const u=r+e*N;if(u>=0&&u<m){const r=l[d][n][u][a]+h[t][e][a];r>s&&(s=r,i=t,o=e)}}}C[i][o][a]+=I[d][t][n][a]}}}return{dataId:c.write(d.util.toTypedArray(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},ic={kernelName:d.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:a,dy:s}=t,{strides:i,pad:o,dilations:u}=n,c=e,l=d.util.toNestedArray(r.shape,c.data.get(r.dataId).values),h=d.util.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:v,strideHeight:x,strideWidth:O,filterHeight:w,filterWidth:k,dilationHeight:j,dilationWidth:N,outShape:S}=d.backend_util.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);d.util.assert(s.rank===S.length,()=>`Error in ${d.Dilation2DBackpropInput}, dy must have the same rank as output ${S.length}, but got `+s.rank);const I=d.util.toNestedArray(S,c.data.get(s.dataId).values),C=d.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let d=0;d<p;++d)for(let t=0;t<g;++t){const e=t*x-v.top;for(let n=0;n<y;++n){const r=n*O-v.left;for(let a=0;a<b;++a){let s=Number.MIN_SAFE_INTEGER,i=e<0?0:e,o=r<0?0:r;for(let t=0;t<w;++t){const n=e+t*j;if(n>=0&&n<f)for(let e=0;e<k;++e){const u=r+e*N;if(u>=0&&u<m){const r=l[d][n][u][a]+h[t][e][a];r>s&&(s=r,i=n,o=u)}}}C[d][i][o][a]+=I[d][t][n][a]}}}return{dataId:c.write(d.util.toTypedArray(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},oc=Vo((t,e)=>t/e),uc=ru(d.Div,oc),cc={kernelName:d.Div,backendName:"cpu",kernelFunc:uc},lc=d.backend_util.ERF_P,dc=d.backend_util.ERF_A1,hc=d.backend_util.ERF_A2,pc=d.backend_util.ERF_A3,fc=d.backend_util.ERF_A4,mc=d.backend_util.ERF_A5,bc=Do(d.Erf,t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+lc*n);return e*(1-((((mc*r+fc)*r+pc)*r+hc)*r+dc)*r*Math.exp(-n*n))}),gc={kernelName:d.Erf,backendName:"cpu",kernelFunc:bc},yc=$u(t=>Math.exp(t)),vc=Mo(d.Exp,yc),xc={kernelName:d.Exp,backendName:"cpu",kernelFunc:vc},Oc=$u(t=>Math.expm1(t)),wc=Mo(d.Expm1,Oc),kc={kernelName:d.Expm1,backendName:"cpu",kernelFunc:wc},jc=Vo((t,e)=>t*e),Nc=au((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})),Sc=ru(d.Multiply,jc,Nc),Ic={kernelName:d.Multiply,backendName:"cpu",kernelFunc:Sc};function Cc(t,e,n,r,a){const s=d.slice_util.isSliceContinous(r,e,n),i=d.util.sizeFromShape(n),o=d.util.computeStrides(r);if(s){const n=d.slice_util.computeFlatOffset(e,o);return t.subarray(n,n+i)}const u=d.util.getTypedArrayFromDType(a,i);for(let c=0;c<i;++c){const a=n.length,s=d.util.computeStrides(n),i=d.util.indexToLoc(c,a,s).map((t,n)=>t+e[n]),l=d.util.locToIndex(i,r.length,o);u[c]=t[l]}return u}function Tc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{begin:s,size:i}=r;To(a,"slice");const[o,u]=d.slice_util.parseSliceParams(a,s,i);d.slice_util.assertParamsValid(a,o,u);const c=Cc(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,c)}const Ac={kernelName:d.Slice,backendName:"cpu",kernelFunc:Tc},Ec=Vo((t,e)=>t-e),Rc=au((t,e,n,r)=>({real:t-n,imag:e-r})),$c=ru(d.Sub,Ec,Rc),_c={kernelName:d.Sub,backendName:"cpu",kernelFunc:$c};function Fc(t,e,n){const r=t.shape,a=r[0],s=r[1],i=n.data.get(t.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,c=[a,s],l=d.util.sizeFromShape(c),h=d.util.getTypedArrayFromDType("float32",l),p=d.util.getTypedArrayFromDType("float32",l);for(let g=0;g<a;g++){const t=Tc({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=Tc({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=Jo({inputs:{real:t,imag:r},backend:n}),{real:i,imag:c}=Dc(a,e,n),l=d.backend_util.mergeRealAndImagArrays(i,c);for(let e=0;e<s;e++){const t=d.backend_util.getComplexWithIndex(l,e);h[g*s+e]=t.real,p[g*s+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}const f=n.makeTensorInfo(c,"float32",h),m=n.makeTensorInfo(c,"float32",p),b=Jo({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function Dc(t,e,n){const r=d.util.sizeFromShape(t.shape),a=n.data.get(t.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0===((o=r)&o-1)){const a=function t(e,n,r,a,s){if(1===r)return{real:e,imag:n};const i=d.backend_util.mergeRealAndImagArrays(e,n),o=r/2,u=d.backend_util.complexWithEvenIndex(i),c=u.real,l=u.imag,h=[c.length],p=s.makeTensorInfo(h,"float32",c),f=s.makeTensorInfo(h,"float32",l),m=Jo({inputs:{real:p,imag:f},backend:s}),b=d.backend_util.complexWithOddIndex(i),g=b.real,y=b.imag,v=[g.length],x=s.makeTensorInfo(v,"float32",g),O=s.makeTensorInfo(v,"float32",y),w=Jo({inputs:{real:x,imag:O},backend:s}),k=t(c,l,o,a,s),j=k.real,N=k.imag,S=[j.length],I=s.makeTensorInfo(S,"float32",j),C=s.makeTensorInfo(S,"float32",N),T=Jo({inputs:{real:I,imag:C},backend:s}),A=t(g,y,o,a,s),E=A.real,R=A.imag,$=[E.length],_=s.makeTensorInfo($,"float32",E),F=s.makeTensorInfo($,"float32",R),D=Jo({inputs:{real:_,imag:F},backend:s}),M=d.backend_util.exponents(r,a),z=[M.real.length],L=s.makeTensorInfo(z,"float32",M.real),B=s.makeTensorInfo(z,"float32",M.imag),P=Jo({inputs:{real:L,imag:B},backend:s}),V=Sc({inputs:{a:P,b:D},backend:s}),W=ou({inputs:{a:T,b:V},backend:s}),U=$c({inputs:{a:T,b:V},backend:s}),K=Qo({inputs:{input:W},backend:s}),G=Qo({inputs:{input:U},backend:s}),H=Lu({inputs:{input:W},backend:s}),q=Lu({inputs:{input:U},backend:s}),X=Pu({inputs:[K,G],backend:s,attrs:{axis:0}}),Y=Pu({inputs:[H,q],backend:s,attrs:{axis:0}}),J=s.data.get(X.dataId).values,Z=s.data.get(Y.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(Y),{real:J,imag:Z}}(s,i,r,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",a.real),e=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",d.util.createScalarValue(r,"float32")),i=Bo({inputs:{x:s},backend:n}),u=cc.kernelFunc({inputs:{a:t,b:s},backend:n}),c=cc.kernelFunc({inputs:{a:e,b:i},backend:n}),l=n.data.get(u.dataId).values,h=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:l,imag:h}}return a}{const t=function(t,e,n){const r=new Float32Array(2*e);for(let a=0;a<e;a++){let s=0,i=0;for(let r=0;r<e;r++){const o=d.backend_util.exponent(a*r,e,n),u=d.backend_util.getComplexWithIndex(t,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=e,i/=e),d.backend_util.assignToTypedArray(r,s,i,a)}return r}(d.backend_util.mergeRealAndImagArrays(s,i),r,e);return d.backend_util.splitRealAndImagArrays(t)}var o}const Mc={kernelName:d.FFT,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,a=d.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=cu({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Fc(i,!1,n),u=cu({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};const zc={kernelName:d.Fill,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{shape:r,value:a,dtype:s}=n,i=s||d.util.inferDtype(a),o=d.util.getArrayFromDType(i,d.util.sizeFromShape(r));return function(t,e,n){t.fill(e)}(o,a),e.makeTensorInfo(r,i,o)}};const Lc={kernelName:d.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,a=n,s=d.util.getTypedArrayFromDType(r.dtype,d.util.sizeFromShape(r.shape)),[i,o,u,c]=r.shape,l=a.data.get(r.dataId).values;for(let d=0;d<i;d++){const t=d*u*o*c;for(let e=0;e<o;e++){const n=e*(u*c);for(let r=0;r<u;r++){const a=r*c;for(let o=0;o<c;o++){const d=[i,e,r,o][2],h=Math.round(u-d),p=t+n+a+o;let f=l[p];if(h>=0&&h<u){f=l[t+n+h*c+o]}s[p]=f}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Bc=$u(t=>Math.floor(t)),Pc=Mo(d.Floor,Bc),Vc={kernelName:d.Floor,backendName:"cpu",kernelFunc:Pc};const Wc={kernelName:d.FusedConv2D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:o}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p}=r;let f=Wu({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const t=f;f=ou({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=f;f=Yo(n,f,p,o),n.disposeIntermediateTensorInfo(t)}return f}};const Uc={kernelName:d.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:o}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p}=r;let f=tc({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const t=f;f=ou({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=f;f=Yo(n,f,p,o),n.disposeIntermediateTensorInfo(t)}return f}};const Kc={kernelName:d.IFFT,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,a=d.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=cu({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Fc(i,!0,n),u=cu({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Gc=Do(d.IsFinite,t=>Number.isFinite(t)?1:0,"bool"),Hc={kernelName:d.IsFinite,backendName:"cpu",kernelFunc:Gc},qc=Do(d.IsInf,t=>Math.abs(t)===1/0?1:0,"bool"),Xc={kernelName:d.IsInf,backendName:"cpu",kernelFunc:qc},Yc=Do(d.IsNan,t=>Number.isNaN(t)?1:0,"bool"),Jc={kernelName:d.IsNan,backendName:"cpu",kernelFunc:Yc},Zc=$u(t=>Math.log(t)),Qc=Mo(d.Log,Zc),tl={kernelName:d.Log,backendName:"cpu",kernelFunc:Qc},el=Do(d.Log1p,t=>Math.log1p(t)),nl={kernelName:d.Log1p,backendName:"cpu",kernelFunc:el},rl=Do(d.LogicalNot,t=>t?0:1,"bool"),al={kernelName:d.LogicalNot,backendName:"cpu",kernelFunc:rl};function sl(t,e,n,r){const a=d.util.getTypedArrayFromDType(r,d.util.sizeFromShape(n));for(let s=0;s<a.length;++s){const n=s*e;let r=t[n];for(let a=0;a<e;++a){const e=t[n+a];e>r&&(r=e)}a[s]=r}return a}function il(t,e,n,r,a){const s=e.length,i=d.util.sizeFromShape(e),o=d.util.computeStrides(e),u=d.util.computeStrides(a),c=d.util.getTypedArrayFromDType(n,d.util.sizeFromShape(a));for(let l=0;l<i;++l){const e=d.util.indexToLoc(l,s,o),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];c[d.util.locToIndex(n,s,u)]=t[l]}return c}const ol={kernelName:d.Max,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:a,keepDims:s}=e,i=n;let o=r.shape;const u=o.length,c=d.util.parseAxisParam(a,o);let l=c;const h=d.backend_util.getAxesPermutation(l,u);let p=i.data.get(r.dataId).values;if(null!=h){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=o[h[e]];p=il(p,o,r.dtype,h,t),l=d.backend_util.getInnerMostAxes(l.length,u),o=t}To(r,"max"),d.backend_util.assertAxesAreInnerMostDims("max",l,u);const[f,m]=d.backend_util.computeOutAndReduceShapes(o,l),b=sl(p,d.util.sizeFromShape(m),f,r.dtype),g=i.write(b,f,r.dtype);let y=f;if(s){y=d.backend_util.expandShapeToKeepDim(f,c)}return{dataId:g,shape:y,dtype:r.dtype}}};const ul={kernelName:d.MaxPool,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;To(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=d.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&d.util.arraysEqual(c.inShape,c.outShape))l=Bo({inputs:{x:a},backend:n});else{const t=n.data.get(a.dataId).values,e=d.util.computeStrides(a.shape),r=Cu(t,a.shape,a.dtype,e,c,"max");l=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return l}};const cl={kernelName:d.MaxPoolBackprop,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s,output:i}=e,o=s;To([s,i],"maxPoolBackprop");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=r,p=d.backend_util.computePool2DInfo(o.shape,u,c,1,l,h),f=n.data.get(o.dataId).values,m=Object(d.buffer)(p.outShape,o.dtype,Tu(f,o.shape,o.dtype,p).values),b=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,v=p.dilationWidth,x=p.effectiveFilterHeight,O=p.effectiveFilterWidth,w=O-1-p.padInfo.left,k=x-1-p.padInfo.top,j=Object(d.buffer)(o.shape,"float32"),N=n.data.get(a.dataId).values,S=Object(d.buffer)(a.shape,"float32",N);for(let d=0;d<p.batchSize;++d)for(let t=0;t<p.inChannels;++t)for(let e=0;e<p.inHeight;++e)for(let n=0;n<p.inWidth;++n){const r=e-k,a=n-w;let s=0;for(let e=0;e<x;e+=y){const n=(r+e)/b;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<O;r+=v){const i=(a+r)/g;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const o=x*O-1-m.get(d,n,i,t)===e*O+r?1:0;if(0===o)continue;s+=S.get(d,n,i,t)*o}}j.set(s,d,e,n,t)}return n.makeTensorInfo(j.shape,j.dtype,j.values)}};const ll={kernelName:d.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=e,u=n;To(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,l=d.backend_util.computePool2DInfo(r.shape,a,s,[1,1],i),[h,p]=function(t,e,n,r,a){const s=Cu(t,0,n,d.util.computeStrides(e),a,"max"),i=Tu(t,e,n,a,!0,r);return[s.values,i.values]}(c,r.shape,r.dtype,o,l),f=u.write(h,l.outShape,r.dtype),m=u.write(p,l.outShape,r.dtype);return[{dataId:f,shape:l.outShape,dtype:r.dtype},{dataId:m,shape:l.outShape,dtype:"int32"}]}};const dl={kernelName:d.MirrorPad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{paddings:s,mode:i}=r;To(a,"mirrorPad");const o=s.map((t,e)=>t[0]+a.shape[e]+t[1]),u=s.map(t=>t[0]),c=s.map((t,e)=>t[0]+a.shape[e]),l="reflect"===i?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,f=d.util.computeStrides(a.shape),m=d.util.sizeFromShape(o),b=o.length,g=d.util.computeStrides(o),y=d.util.getTypedArrayFromDType(a.dtype,m);for(let v=0;v<m;v++){let t=d.util.indexToLoc(v,b,g);for(let n=0;n<b;n++)t[n]<u[n]?t[n]=2*u[n]-t[n]-l:t[n]>=c[n]&&(t[n]=2*(c[n]-1)-t[n]+l);t=t.map((t,e)=>t-u[e]);const e=d.util.locToIndex(t,p,f);y[v]=h[e]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},hl=d.kernel_impls.nonMaxSuppressionV4Impl,pl={kernelName:d.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,c=e;To(r,"NonMaxSuppressionPadded");const l=c.data.get(r.dataId).values,d=c.data.get(a.dataId).values,{selectedIndices:h,validOutputs:p}=hl(l,d,s,i,o,u);return[h,p]}},fl=d.kernel_impls.nonMaxSuppressionV5Impl,ml={kernelName:d.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,c=e;To(r,"NonMaxSuppressionWithScore");const l=c.data.get(r.dataId).values,d=c.data.get(a.dataId).values,h=s,p=i,f=o,m=u,{selectedIndices:b,selectedScores:g}=fl(l,d,h,p,f,m);return[b,g]}},bl=Vo((t,e)=>t!==e?1:0),gl=ru(d.NotEqual,bl,null,"bool"),yl={kernelName:d.NotEqual,backendName:"cpu",kernelFunc:gl};const vl={kernelName:d.PadV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{paddings:s,constantValue:i}=r;To(a,"pad");const o=s.map((t,e)=>t[0]+a.shape[e]+t[1]),u=s.map(t=>t[0]),c=n.data.get(a.dataId).values,l=d.util.sizeFromShape(a.shape),h=a.shape.length,p=d.util.computeStrides(a.shape),f=d.util.sizeFromShape(o),m=o.length,b=d.util.computeStrides(o),g=d.util.getTypedArrayFromDType(a.dtype,f);0!==i&&g.fill(i);for(let y=0;y<l;y++){const t=d.util.indexToLoc(y,h,p).map((t,e)=>t+u[e]);g[d.util.locToIndex(t,m,b)]=c[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},xl=Do(d.Reciprocal,t=>1/t),Ol={kernelName:d.Reciprocal,backendName:"cpu",kernelFunc:xl},wl={kernelName:d.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:a,fillValue:s,center:i}=e,o=n,u=d.util.getTypedArrayFromDType(r.dtype,d.util.sizeFromShape(r.shape)),[c,l,h,p]=r.shape,[f,m]=d.backend_util.getImageCenter(i,l,h),b=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let d=0;d<c;d++){const t=d*h*l*p;for(let e=0;e<l;e++){const n=e*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let i=0;i<p;i++){const o=[c,e,r,i],d=o[2],v=o[1];let x=(d-f)*g-(v-m)*b,O=(d-f)*b+(v-m)*g;x=Math.round(x+f),O=Math.round(O+m);let w=s;if("number"!==typeof s&&(w=3===i?255:s[i]),x>=0&&x<h&&O>=0&&O<l){w=y[t+O*(h*p)+x*p+i]}u[t+n+a+i]=w}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},kl=Do(d.Round,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),jl={kernelName:d.Round,backendName:"cpu",kernelFunc:kl},Nl=$u(t=>1/Math.sqrt(t)),Sl=Mo(d.Rsqrt,Nl),Il={kernelName:d.Rsqrt,backendName:"cpu",kernelFunc:Sl},Cl=d.backend_util.SELU_SCALEALPHA,Tl=d.backend_util.SELU_SCALE,Al=Do(d.Selu,t=>t>=0?Tl*t:Cl*(Math.exp(t)-1)),El={kernelName:d.Selu,backendName:"cpu",kernelFunc:Al},Rl=Do(d.Sigmoid,t=>1/(1+Math.exp(-t))),$l={kernelName:d.Sigmoid,backendName:"cpu",kernelFunc:Rl},_l=Do(d.Sign,t=>t<0?-1:t>0?1:0),Fl={kernelName:d.Sign,backendName:"cpu",kernelFunc:_l},Dl=Do(d.Sin,t=>Math.sin(t)),Ml={kernelName:d.Sin,backendName:"cpu",kernelFunc:Dl},zl=Do(d.Sinh,t=>Math.sinh(t)),Ll={kernelName:d.Sinh,backendName:"cpu",kernelFunc:zl},Bl=Math.log(1.1920928955078125e-7)+2,Pl=Do(d.Softplus,t=>{const e=t>-Bl,n=t<Bl,r=Math.exp(t);let a;return a=n?r:e?t:Math.log(1+r),a}),Vl={kernelName:d.Softplus,backendName:"cpu",kernelFunc:Pl};function Wl(t){const{inputs:e,attrs:n,backend:r}=t,{x:a}=e,{perm:s}=n;To(a,"transpose");const i=a.shape.length,o=new Array(i);for(let c=0;c<o.length;c++)o[c]=a.shape[s[c]];const u=il(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const Ul={kernelName:d.Transpose,backendName:"cpu",kernelFunc:Wl};const Kl={kernelName:d.SpaceToBatchND,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockShape:s,paddings:i}=r;To([a],"spaceToBatchND");const o=d.util.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let d=1+s.length;d<a.shape.length;++d)u.push([0,0]);const c=vl.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),l=d.backend_util.getReshaped(c.shape,s,o,!1),h=d.backend_util.getPermuted(l.length,s.length,!1),p=d.backend_util.getReshapedPermuted(c.shape,s,o,!1),f=cu({inputs:{x:c},backend:n,attrs:{shape:l}}),m=Wl({inputs:{x:f},backend:n,attrs:{perm:h}}),b=cu({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}},Gl=Do(d.Sqrt,t=>Math.sqrt(t)),Hl={kernelName:d.Sqrt,backendName:"cpu",kernelFunc:Gl},ql={kernelName:d.Square,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;To(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){const t=a[i];s[i]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Xl=Vo((t,e)=>{const n=t-e;return n*n}),Yl=ru(d.SquaredDifference,Xl),Jl={kernelName:d.SquaredDifference,backendName:"cpu",kernelFunc:Yl},Zl=Do(d.Step,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),Ql={kernelName:d.Step,backendName:"cpu",kernelFunc:Zl},td=Do(d.Tan,t=>Math.tan(t)),ed={kernelName:d.Tan,backendName:"cpu",kernelFunc:td},nd=Do(d.Tanh,t=>Math.tanh(t)),rd={kernelName:d.Tanh,backendName:"cpu",kernelFunc:nd};function ad(t,e,n,r){const a=d.util.parseAxisParam(e,n)[0],s=[1,n[0],1];for(let d=0;d<a;d++)s[0]*=n[d];s[1]=n[a];for(let d=a+1;d<n.length;d++)s[2]*=n[d];const i={},o=new Int32Array(n[a]),u=new d.TensorBuffer(s,r,t),c=[],l=1===s[0]&&1===s[2];for(let d=0;d<n[a];d++){let e;if(l)e=t[d].toString();else{const t=[];for(let e=0;e<s[0];e++)for(let n=0;n<s[2];n++)t.push(u.get(e,d,n));e=t.join(",")}if(void 0!==i[e])o[d]=i[e];else{const t=Object.keys(i).length;i[e]=t,o[d]=t,c.push(d)}}const h=s.slice();h[1]=Object.keys(i).length;const p=new d.TensorBuffer(h,r);c.forEach((t,e)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(u.get(n,t,r),n,e,r)});const f=n.slice();return f[a]=h[1],{outputValues:p.values,outputShape:f,indices:o}}const sd={kernelName:d.Unique,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:s}=e;To(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:c}=ad(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}},id=[pu,mu,gu,vu,uu,Ou,ku,Nu,Iu,Au,Eu,hu,Ru,nu,Du,zu,Zo,Vu,Ku,Gu,Uu,qu,Xu,Hu,Ju,Qu,ec,nc,rc,ac,ic,sc,cc,Lo,gc,xc,kc,Mc,zc,Lc,Vc,Wc,Uc,Po,Kc,Bu,Hc,Xc,Jc,tl,nl,al,ul,cl,ll,ol,dl,Ic,pl,ml,yl,vl,Ko,tu,Ol,Ho,Xo,lu,wl,jl,Il,El,$l,Fl,Ml,Ll,Ac,Vl,Kl,Hl,ql,Jl,Ql,_c,ed,rd,Ul,sd];for(const Zm of id)Object(d.registerKernel)(Zm);const od={},ud={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function cd(t){if(!(t in od)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!==typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete od[t]},!1),1===t)return e.getContext("webgl",ud)||e.getContext("experimental-webgl",ud);return e.getContext("webgl2",ud)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;od[t]=e}const e=od[t];return e.isContextLost()?(delete od[t],cd(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),od[t])}var ld,dd,hd;function pd(t,e){return[e,t]}function fd(t){const e=d.util.sizeFromShape(t),n=Math.ceil(e/4);return d.util.sizeToSquarishShape(n)}function md(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function bd(t,e){const n=t;let r,a,s,i,o,u,c,l,h,p;return 2===Object(d.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,l=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,a=t.RGBA,s=t.RGBA,i=n.RGBA,o=t.RGBA,c=4,l=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),u=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:h,textureTypeFloat:p}}function gd(t,e){const n=e();return Object(d.env)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(ld||(ld={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(dd||(dd={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(hd||(hd={}));function yd(t){return!!(Object(d.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function vd(t,e){return Cd(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function xd(t,e){const n=Cd(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(gd(t,()=>t.shaderSource(n,e)),gd(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=Od.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const r=+n[1],a=t.split("\n"),s=a.length.toString().length+2,i=a.map((t,e)=>d.util.rightPad((e+1).toString(),s)+t);let o=0;for(let d=0;d<i.length;d++)o=Math.max(i[d].length,o);const u=i.slice(0,r-1),c=i.slice(r-1,r),l=i.slice(r);console.log(u.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+d.util.rightPad(c[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Od=/ERROR: [0-9]+:([0-9]+):/g;function wd(t,e){if(gd(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function kd(t,e,n,r,a,s,i){const o=t.getAttribLocation(e,n);return-1!==o&&(gd(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),gd(t,()=>t.vertexAttribPointer(o,a,t.FLOAT,!1,s,i)),gd(t,()=>t.enableVertexAttribArray(o)),!0)}function jd(t,e,n,r){gd(t,()=>function(t,e,n){Td(t,n),gd(t,()=>t.activeTexture(t.TEXTURE0+n)),gd(t,()=>t.bindTexture(t.TEXTURE_2D,e))}(t,e,r)),gd(t,()=>t.uniform1i(n,r))}function Nd(t,e,n){gd(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),gd(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function Sd(t,e){gd(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),gd(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Id(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}(t,e))}function Cd(t,e,n){const r=gd(t,()=>e());if(null==r)throw new Error(n);return r}function Td(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function Ad(t,e=2){return d.util.sizeFromShape(t.slice(0,t.length-e))}function Ed(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Rd(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Ad(t),...Ed(t)]),e}function $d(t){return t%2===0}function _d(t,e){if(t=t.slice(-2),e=e.slice(-2),d.util.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if($d(n)&&$d(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&$d(t[0])&&$d(e[0])}let Fd,Dd;function Md(t,e){return null!=t.getExtension(e)}function zd(t){try{if(null!=cd(t))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Ld(t){if(0===t)return!1;const e=cd(t);if(1!==t){if(Md(e,"EXT_color_buffer_float"))return Bd(e);const t="EXT_color_buffer_half_float";if(Md(e,t)){const n=e.getExtension(t);return function(t,e){const n=bd(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);const a=1,s=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(i),o}(e,n)}return!1}if(!Md(e,"OES_texture_float"))return!1;if(!Md(e,"WEBGL_color_buffer_float"))return!1;return Bd(e)}function Bd(t){const e=bd(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),a}function Pd(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&d.util.assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the WebGL backend.")})}const Vd=Object(d.env)();Vd.registerFlag("HAS_WEBGL",()=>Vd.getNumber("WEBGL_VERSION")>0),Vd.registerFlag("WEBGL_VERSION",()=>zd(2)?2:zd(1)?1:0),Vd.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Vd.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Vd.get("WEBGL_VERSION")),Vd.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Vd.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Vd.registerFlag("WEBGL_PACK",()=>Vd.getBool("HAS_WEBGL")),Vd.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Vd.getBool("WEBGL_PACK")),Vd.registerFlag("WEBGL_PACK_CLIP",()=>Vd.getBool("WEBGL_PACK")),Vd.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),Vd.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Vd.getBool("WEBGL_PACK")),Vd.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Vd.getBool("WEBGL_PACK")),Vd.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Vd.getBool("WEBGL_PACK")),Vd.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Vd.getBool("WEBGL_PACK")),Vd.registerFlag("WEBGL_PACK_REDUCE",()=>Vd.getBool("WEBGL_PACK")),Vd.registerFlag("WEBGL_LAZILY_UNPACK",()=>Vd.getBool("WEBGL_PACK")),Vd.registerFlag("WEBGL_CONV_IM2COL",()=>Vd.getBool("WEBGL_PACK")),Vd.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(t){if(null==Fd){const e=cd(t);Fd=e.getParameter(e.MAX_TEXTURE_SIZE)}return Fd}(Vd.getNumber("WEBGL_VERSION"))),Vd.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(t){if(null==Dd){const e=cd(t);Dd=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Dd)}(Vd.getNumber("WEBGL_VERSION"))),Vd.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=Vd.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=cd(t);return e=Md(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Md(n,"EXT_disjoint_timer_query")?1:0,e}(t)}),Vd.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Vd.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!d.device_util.isMobile()),Vd.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(t){if(0===t)return!1;const e=cd(t);if(1===t){if(!Md(e,"OES_texture_float"))return!1}else if(!Md(e,"EXT_color_buffer_float"))return!1;return Bd(e)}(Vd.getNumber("WEBGL_VERSION"))),Vd.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Vd.getBool("WEBGL_FORCE_F16_TEXTURES")&&Vd.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Vd.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Ld(Vd.getNumber("WEBGL_VERSION"))),Vd.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=Vd.getNumber("WEBGL_VERSION"))&&null!=cd(t).fenceSync;var t}),Vd.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Vd.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Vd.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});const{simpleAbsImpl:Wd,addImpl:Ud,ceilImpl:Kd,expImpl:Gd,expm1Impl:Hd,floorImpl:qd,logImpl:Xd,maxImpl:Yd,multiplyImpl:Jd,rsqrtImpl:Zd,sliceImpl:Qd,subImpl:th,transposeImpl:eh,uniqueImpl:nh}=l;class rh{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class ah{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class sh{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function ih(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function oh(t,e){return 1===e?[t]:ih(t,e)}function uh(){let t,e,n,r,a,s,i,o,u,c;return 2===Object(d.env)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function ch(t,e,n="index"){const r=d.util.computeStrides(e);return r.map((e,a)=>`${`int ${t[a]} = ${n} / ${e}`}; ${a===r.length-1?`int ${t[a+1]} = ${n} - ${t[a]} * ${e}`:`index -= ${t[a]} * ${e}`};`).join("")}function lh(t){const e=d.util.computeStrides(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const dh="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:hh}=d.backend_util;function ph(t,e,n,r){const a=[];t.forEach(t=>{const e=d.util.sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?a.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(a.push(`uniform sampler2D ${t.name};`),a.push(`uniform int offset${t.name};`))});const s=a.join("\n"),i=t.map(t=>function(t,e,n=!1){let r="";r+=n?mh(t):fh(t);const a=t.shapeInfo.logicalShape,s=e.logicalShape;a.length<=s.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=hh(t.shapeInfo.logicalShape,e.logicalShape),u=kh(i),c=i-s;let l;const h=["x","y","z","w","u","v"];l=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map(t=>`coords.${h[t+c]} = 0;`).join("\n");let p="";p=i<2&&s>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+h[e+c]).join(", ");let f="return outputValue;";const m=1===d.util.sizeFromShape(t.shapeInfo.logicalShape),b=1===d.util.sizeFromShape(e.logicalShape);if(1!==s||m||b){if(m&&!b)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=s-2,e=s-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?f="return vec4(outputValue.x);":o.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${l}\n      vec4 outputValue = get${r}(${p});\n      ${f}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===u&&null==t.shapeInfo.flatOffset&&d.util.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=kh(u),l=hh(t.shapeInfo.logicalShape,e.logicalShape),h=u-o;let p;const f=["x","y","z","w","u","v"];p=0===o?"":u<2&&l.length>=1?"coords = 0;":l.map(t=>`coords.${f[t+h]} = 0;`).join("\n");let m="";m=u<2&&o>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+f[e+h]).join(", ");return`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}(t,e));return r}(t,e,r)).join("\n"),o=e.texShape,u=uh(),c=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let l,h,p=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${bh}\n    ${gh}\n    ${yh}\n  `}(u);e.isPacked?(l=function(t,e){switch(t.length){case 0:return xh();case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(d.util.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),a=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),a=r*Math.ceil(t[t.length-2]/2);let s=a,i="",o="b, r, c";for(let u=2;u<t.length-1;u++)s*=t[t.length-u-1],i=`\n      int b${u} = index / ${s};\n      index -= b${u} * ${s};\n    `+i,o=`b${u}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(u)):(l=function(t,e){switch(t.length){case 0:return xh();case 1:return function(t,e){if(1===e[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `;if(1===e[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e);case 2:return function(t,e){if(d.util.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `;if(1===t[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===t[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=ch(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=ch(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=ch(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=ch(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(p+=vh);return[p,c,h,s,l,i,n].join("\n")}function fh(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,a]=t.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[s,i]=t.shapeInfo.texShape,o=Oh(e);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${wh(t)}\n      }\n    `;const r=t.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=Oh(e);if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape;if(null!=a&&d.util.arraysEqual(e,a)){const t=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:i}=d.util.squeezeShape(e),o=s;if(o.length<e.length){const e=["row","col"];return`\n      ${fh(jh(t,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${Nh(e,i)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${wh(t)}\n      }\n    `;const u=a[0],c=a[1],l=Oh(n);if(1===c)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${l}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===u)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${l}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${l};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[1]*e[2],s=e[2],{newShape:i,keptDims:o}=d.util.squeezeShape(e),u=i;if(u.length<e.length){const e=["row","col","depth"];return`\n        ${fh(jh(t,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Nh(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${wh(t)}\n      }\n    `;const c=t.shapeInfo.texShape,l=c[0],h=c[1],p=t.shapeInfo.flatOffset;if(h===a&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${l}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===s&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const f=Oh(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${l}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[3],s=e[2]*a,i=e[1]*s,{newShape:o,keptDims:u}=d.util.squeezeShape(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${fh(jh(t,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Nh(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${a}, 1)));\n        ${wh(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,l=t.shapeInfo.texShape,h=l[0],p=l[1];if(p===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Oh(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${f});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[4],s=e[3]*a,i=e[2]*s,o=e[1]*i,{newShape:u,keptDims:c}=d.util.squeezeShape(e);if(u.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${fh(jh(t,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Nh(e,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${wh(t)}\n      }\n    `;const l=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],f=h[1];if(f===o&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Oh(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=d.util.squeezeShape(e);if(a.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${fh(jh(t,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Nh(e,s)});\n      }\n    `}const i=e[5],o=e[4]*i,u=e[3]*o,c=e[2]*u,l=e[1]*c;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${c}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${wh(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],m=p[1];if(m===l&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const b=Oh(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${c} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${b};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function mh(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=uh();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=uh();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,s=a[0],i=a[1],o=uh();if(null!=a&&d.util.arraysEqual(e,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(e[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===e[0]){const n=[1,2],a=["b","row","col"];return`\n        ${mh(jh(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Nh(a,n)});\n        }\n      `}const i=s[0],o=s[1],u=Math.ceil(e[2]/2),c=u*Math.ceil(e[1]/2),l=uh();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${c}, ${u}, b, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],c=Math.ceil(e[n-1]/2);let l=c*Math.ceil(e[n-2]/2),d="int b, int row, int col",h=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let f=2;f<n-1;f++)d=`int b${f}, `+d,l*=e[n-f-1],h=`b${f} * ${l} + `+h;const p=uh();return`\n    vec4 ${a}(${d}) {\n      int index = ${h};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}(t)}}const bh="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",gh="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",yh="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",vh="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function xh(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Oh(t){return"offset"+t}function wh(t){const e=t.name,n=d.util.sizeFromShape(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function kh(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function jh(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Nh(t,e){return e.map(e=>t[e]).join(", ")}class Sh{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,d.util.assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=t[t.length-1],s=Math.ceil(a/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=kh(o),c=oh("coords",o);let l,h;if(1===s){h=o+1;const t=kh(h);l=`\n        ${t} sourceLocR = ${t}(${c.join()}, 0);\n        ++${c[o-1]};\n        ${t} sourceLocG = ${t}(${c.join()}, 0);\n        ++${c[o-2]};\n        ${t} sourceLocA = ${t}(${c.join()}, 0);\n        --${c[o-1]};\n        ${t} sourceLocB = ${t}(${c.join()}, 0);\n        --${c[o-2]};`}else h=o,l=`\n        ${u} sourceLocR = coords;\n        ++${c[o-1]};\n        ${u} sourceLocG = coords;\n        ++${c[o-2]};\n        ${u} sourceLocA = coords;\n        --${c[o-1]};\n        ${u} sourceLocB = coords;\n        --${c[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(t=>"int "+t),b=oh("sourceLocR",h-1).concat("inIdx.r"),g=oh("sourceLocG",h-1).concat("inIdx.g"),y=oh("sourceLocB",h-1).concat("inIdx.b"),v=oh("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",O=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${v.join()})));`,w=`vec4(\n            getAChannel(${b.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};\n        ${l}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${O}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class Ih{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.top,l=u-1-t.padInfo.left,d=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ch{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=l-1-t.padInfo.front,f=d-1-t.padInfo.top,m=h-1-t.padInfo.left,b=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Th="return (a < 0.) ? b * a : a;";class Ah{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=d.backend_util.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Eh="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class Rh{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=d.backend_util.assertAndGetBroadcastShape(e,n);const a=this.outputShape.length;let s="";if(r)if(0===a||1===d.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(s=`\n          ${kh(a)} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=oh("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${t[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${t[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}class $h{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class _h{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Fh{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class Dh{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,s="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Mh{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zh{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.padInfo.front,s=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${a};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Lh{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,u=n-1-t.padInfo.top,c=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Bh{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ph{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Vh{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.padInfo.top,s=t.padInfo.left,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterHeight,d=t.filterWidth,h=4*Math.floor(t.inChannels/4),p=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,b=f?2:3,g=f?3:1;let y="",v="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${a}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${g}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${l}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${x}\n        ${v}\n        setOutput(result);\n      }\n    `}}class Wh{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterDepth,d=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Uh{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.inHeight,s=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,d=t.dilationWidth,h=t.filterHeight,p=t.filterWidth,f=t.outChannels/t.inChannels;let m="",b="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${s}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${g}\n        ${b}\n        setOutput(result);\n      }\n    `}}class Kh{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const a=t.inHeight,s=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=f;let b="int xR; int xC; int xCOffset;";for(let d=0;d<p;d++)for(let t=0;t<f;t++)b+=`\n          vec4 xTexelR${d}C${2*t} = vec4(0.);\n          vec4 wR${d}C${t} = vec4(0.);\n          vec4 xR${d}C${t} = vec4(0.);`;for(let x=0;x<p;x++)for(let t=0;t<m;t++){const e=2*t;if(b+=`\n          xR = xRCorner + ${x*l};\n          xC = xCCorner + ${e*h};\n        `,1===c){if(e<f&&(b+=o%2===1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${s}) {\n                  xTexelR${x}C${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${s}) {\n                    xTexelR${x}C${e}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${x}C${e} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${s}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${s}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${x}C${e} = vec4(previous.zw, xTexelR${x}C${e}.xy);\n                } else {\n                  xR${x}C${e} = vec4(0, 0, xTexelR${x}C${e}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${s}) {\n                  xTexelR${x}C${e} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${x}C${e} = vec4(0.);\n                }\n\n                xR${x}C${e} = xTexelR${x}C${e};\n              `,e+1<f)){const t=o%2===0?d.util.nearestLargerEven(h):h;h%2===0&&o%2===1||h%2!==0&&o%2!==1?(b+=`\n                  xCOffset = xC + ${o%2} + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${s}) {\n                    xTexelR${x}C${e+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(b+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${s}) {\n                      xTexelR${x}C${e} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${x}C${e} = vec4(0.);\n                    }\n                  `),b+=`\n                  xR${x}C${e+1} = vec4(\n                    xTexelR${x}C${e}.zw, xTexelR${x}C${e+2}.xy);\n                `):b+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${s}) {\n                    xTexelR${x}C${e+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${x}C${e+1} = xTexelR${x}C${e+2};\n                `}}else e<f&&(b+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,o%2===1?(b+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${s}) {\n                  xTexelR${x}C${e} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${x}C${e} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${s}) {\n                  xTexelR${x}C${e+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${x}C${e+2} = vec4(0.);\n                }\n\n                xR${x}C${e} = vec4(\n                  xTexelR${x}C${e}.zw, xTexelR${x}C${e+2}.zw);\n              `,e+1<f&&(b+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${s}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${x}C${e+1} = vec4(xTexelR${x}C${e+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${s}) {\n                  xTexelR${x}C${e} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${x}C${e} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${s}) {\n                  xTexelR${x}C${e+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${x}C${e+2} = vec4(0.);\n                }\n\n                xR${x}C${e} = vec4(\n                  xTexelR${x}C${e}.xy, xTexelR${x}C${e+2}.xy);\n              `,e+1<f&&(b+=`\n                  xR${x}C${e+1} = vec4(\n                    xTexelR${x}C${e}.zw, xTexelR${x}C${e+2}.zw);\n                `)),b+="}");e<f&&(b+=`\n            vec4 wTexelR${x}C${e} = getW(${x}, ${e}, d1, q);\n            wR${x}C${e} = vec4(wTexelR${x}C${e}.xz, wTexelR${x}C${e}.xz);\n          `,e+1<f&&(b+=`\n              vec4 wTexelR${x}C${e+1} = getW(${x}, ${e+1}, d1, q);\n              wR${x}C${e+1} =\n                vec4(wTexelR${x}C${e+1}.xz, wTexelR${x}C${e+1}.xz);`))}for(let d=0;d<p;d++)for(let t=0;t<f;t++)b+=`dotProd += xR${d}C${t} * wR${d}C${t};`;let g="",y="";n&&(g=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${b}\n\n        vec4 result = dotProd;\n        ${v}\n        ${y}\n        setOutput(result);\n      }\n    `}}class Gh{constructor(t,e,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=t,[c]=e,[l,d]=n;this.outputShape=[c,l,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,b,g]=l>1?[""+(i-1)/(l-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[y,v,x]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${v};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class Hh{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,a=e?"0.0":`getX(${qh(r,"coords")})`,s=t[t.length-1];let i="",o="";e?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+s:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${kh(r)} coords = getOutputCoords();\n        int end = ${Xh(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${Xh(r,"coords")} = idx;\n          val += getX(${qh(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function qh(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function Xh(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class Yh{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ld.DENSE;const e=fd(t),n=uh();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ch(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Jh{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ld.DENSE;const e=fd(t),n=uh();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ch(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Zh{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class Qh{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class tp{constructor(t){this.variableNames=["A"],this.outTexUsage=dd.DOWNLOAD;const e=uh();this.outputShape=t,this.userCode=`\n      ${dh}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class ep{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=dd.DOWNLOAD;const e=uh();this.outputShape=t,this.userCode=`\n      ${dh}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class np{constructor(t,e,n=!1){this.variableNames=["A"];const r=uh(),[a,s]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${lh(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class rp{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=uh(),[a,s]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let e=0;e<=1;e++){const n=2*u+e;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${e} < ${t[2]}) {\n            localCoords[2] += ${e};\n            if(localCoords[1] + ${u} < ${t[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${lh(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}class ap{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class sp{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const a=kh(this.rank),s=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let s=0;s<t.length;s++)s===e?a.push(`int(getIndices(${r[s]}))`):a.push(""+r[s]);return a.join()}(t,n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class ip{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=kh(e.length),a=kh(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function op(t){const e=uh();return function(t,e){const n=Cd(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(gd(t,()=>t.shaderSource(n,e)),gd(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function up(t){return function(t,e){const n=Cd(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return gd(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),gd(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function cp(t){return function(t,e){const n=Cd(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return gd(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),gd(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Uint16Array([0,1,2,2,1,3]))}function lp(t,e,n,r,a,s){!function(t,e){const n=Object(d.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const i=function(t){return Cd(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return gd(t,()=>t.bindTexture(o,i)),gd(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),gd(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),gd(t,()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST)),gd(t,()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST)),gd(t,()=>t.texImage2D(o,0,r,e,n,0,a,s,null)),gd(t,()=>t.bindTexture(t.TEXTURE_2D,null)),i}function dp(t){return t.internalFormatFloat}function hp(t){return t.internalFormatHalfFloat}function pp(t){return t.downloadTextureFormat}function fp(t){return t.internalFormatPackedFloat}function mp(t){return t.internalFormatPackedHalfFloat}function bp(t,e,n,r,a,s,i,o){const u=t,c=new Float32Array(function(t,e){const[n,r]=md(t,e);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}class gp{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Object(d.env)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){od[t]=e}(e,t)):this.gl=cd(e);let n="WEBGL_color_buffer_float";if(1===Object(d.env)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=vd(this.gl,t),Md(this.gl,e))this.textureHalfFloatExtension=vd(this.gl,e);else if(Object(d.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Md(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=vd(this.gl,"EXT_color_buffer_half_float");else if(Object(d.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Md(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Md(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=up(this.gl),this.indexBuffer=cp(this.gl),this.framebuffer=function(t){return Cd(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=bd(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(d.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;gd(t,()=>t.finish()),gd(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),gd(t,()=>t.deleteFramebuffer(this.framebuffer)),gd(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),gd(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),gd(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=pd(e,n);return lp(t,a,s,dp(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=pd(e,n);return lp(t,a,s,hp(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=pd(e,n);return lp(t,a,s,pp(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){gd(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?gd(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):gd(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),gd(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,a,s){let i,o,u;gd(t,()=>t.bindTexture(t.TEXTURE_2D,e)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,u=t.RGBA):(i=new Float32Array(n*r*4),o=t.FLOAT,u=s.internalFormatPackedFloat),i.set(a),gd(t,()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,o,i)),gd(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=md(e,n);return lp(t,a,s,mp(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=md(e,n);return lp(t,a,s,fp(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Sd(this.gl,this.framebuffer),this.outputTexture=null),gd(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r){const[a,s]=pd(e,n),i=new Uint8Array(e*n*4);return gd(t,()=>t.readPixels(0,0,a,s,r.downloadTextureFormat,t.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,a,s){return bp(this.gl,t,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const a=t.createBuffer();gd(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a));const s=16*e*n;return gd(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ)),gd(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),gd(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),a}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Object(d.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(a,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=a}else Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n){const r=new Float32Array(e*n*4);return gd(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=xd(e,t),r=op(e),a=function(t){return Cd(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e);return gd(e,()=>e.attachShader(a,r)),gd(e,()=>e.attachShader(a,n)),function(t,e){if(gd(t,()=>t.linkProgram(e)),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,a),this.debug&&wd(e,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(t,e,n){return gd(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),kd(t,e,"clipSpacePos",n,3,20,0)&&kd(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),a}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&gd(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&wd(this.gl,this.program),gd(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return Cd(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),gd(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),jd(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,a]=md(e,n);this.setOutputMatrixTextureDriver(t,r,a)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&wd(this.gl,this.program),Id(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),gd(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),gd(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=vd(this.gl,2===Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await d.util.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||d.util.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Nd(this.gl,t,this.framebuffer),this.debug&&Id(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Nd(this.gl,this.outputTexture,this.framebuffer),this.debug&&Id(this.gl)):Sd(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;Nd(r,t,this.framebuffer),this.debug&&Id(r),this.outputTexture=t,gd(r,()=>r.viewport(0,0,e,n)),gd(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),gd(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function yp(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,a=e[n],s=a.shape;if(!d.util.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(t.isUniform&&a.isUniform)return;const i=t.texShape,o=a.isUniform?null:a.texData.texShape;if(!d.util.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}class vp{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:d}=n,{left:h,top:p}=o,f=a*r,m=uh(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let v="";for(let x=0;x<=1;x++)for(let n=0;n<=1;n++)v+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${x};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${e[g]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${h}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${e[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*x+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*x+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${v}\n\n        ${m.output} = result;\n      }\n    `}}class xp{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Op{constructor(t,e,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class wp{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class kp{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,a=t.effectiveFilterHeight,s=t.effectiveFilterWidth,i=a-1-t.padInfo.top,o=s-1-t.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jp{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.dilationDepth,s=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=o-1-t.padInfo.front,d=u-1-t.padInfo.top,h=c-1-t.padInfo.left,p=o*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Np{constructor(t,e,n,r=!1,a=!1,s=!1,i=null,o=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?t[1]:t[2],c=Math.ceil(u/2),l=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights");let g="rc.x",y="rc.x";t[0]<e[0]?g=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(y=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${g};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${l});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${p[0]});\n          result += (${h[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class Sp{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class Ip{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class Cp{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=oh("rc",e),r=kh(e),a=function(t,e,n){if(1===t)return"rc > "+e[0];let r="";for(let a=t-2;a<t;a++)r+=`${n[a]} >= ${e[a]}`,a<t-1&&(r+="||");return r}(e,t,n),s=function(t,e,n,r){if(1===t)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<t;n++)s=e[e.length-1-n]+","+s;n.push(s)}return n}(n,e);if(1===n)return`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class Tp{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=kh(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Ap{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=kh(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=oh("rc",r),u=oh("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[a+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${c}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${d[f]}\n        if (${h}) {\n          result[${f}] = float(${n});\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}class Ep{constructor(t,e,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(y="avgValue / count");const v=4*Math.floor(s/4),x=s%4,O=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${O}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${O}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${O}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${O}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class Rp{constructor(t,e,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,i=t.strideDepth,o=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,l=t.dilationHeight,d=t.dilationWidth,h=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,b=t.padInfo.top,g=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let v="0.0";if(y||(v="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(x="avgValue / count");const O=4*Math.floor(s/4),w=s%4,k=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${O}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${O};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}}class $p{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=t;this.outputShape=[r,s];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,h="vec4";"all"===e?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===e&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}class _p{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let a=0;a<4;a++){let t="thisRC = rc;";a%2===1&&(t+="thisRC.z += 1;"),a>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${ch(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${lh(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Fp{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,a]=e.shape,[,s,i]=t.shape,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class Dp{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[a,s,i,o]=t;this.outputShape=[a,e,n,o];const u=[r&&e>1?s-1:s,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Mp{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,s,i,o]=t;this.outputShape=[a,e,n,o];const u=[r&&e>1?s-1:s,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class zp{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,a]=e.shape,[,s,i]=t.shape,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class Lp{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[a,s,i,o]=t;this.outputShape=[a,e,n,o];const u=[r&&e>1?s-1:s,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],l=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${l})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Bp{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=kh(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Pp{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=oh("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=kh(n);function o(n){const r=t.map((r,a)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:""+r[n]}(a,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${a}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class Vp{constructor(t,e,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=kh(a.length),u=kh(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class Wp{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,a=t.inSize,s=t.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Up{constructor(t,e,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<e.length;r++)i.push(""+n[r]),r<t&&s.push(""+n[r]);r=s.join(),a=i.join()}const s=kh(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}class Kp{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=kh(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return Gp.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let a;a=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((t,e)=>`sourceLoc.${Gp[e]} = start[${e}] + coords.${Gp[e]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const Gp=["x","y","z","w","u","v"];class Hp{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=kh(this.rank),n=oh("coords",this.rank),r=oh("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`:t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class qp{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=kh(n.length),s=kh(n.length);let i="";if(1===r)i="coords * strides + begin";else{let t=0;i=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${t});\n      ${a} strides = ${a}(${e});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}class Xp{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=Jp(e,n),a=Zp(t,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=Yp(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const t=this.freeTextures[a].shift();return this.usedTextures[a].push(t),t}let i;return r===hd.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===hd.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===hd.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===hd.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===hd.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const a=Jp(n,r),s=Zp(e,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=Yp(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Object(d.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],c=u.indexOf(t);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Yp(t,e,n,r,a){const s=function(t,e){switch(t){case hd.PACKED_2X2_FLOAT32:return fp(e);case hd.PACKED_2X2_FLOAT16:return mp(e);case hd.UNPACKED_FLOAT32:return dp(e);case hd.UNPACKED_FLOAT16:return hp(e);case hd.PACKED_4X1_UNSIGNED_BYTE:return pp(e);default:throw new Error("Unknown physical texture type "+t)}}(e,r);let i;if(a){const[e,n]=md(t[0],t[1]);i=e*n}else{const[e,n]=pd(t[0],t[1]);i=e*n}return i*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format "+e)}(n,s)}function Jp(t,e){if(t===dd.UPLOAD)return hd.PACKED_2X2_FLOAT32;if(t===dd.RENDER||null==t)return function(t){return Object(d.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?hd.PACKED_2X2_FLOAT32:hd.UNPACKED_FLOAT32:t?hd.PACKED_2X2_FLOAT16:hd.UNPACKED_FLOAT16}(e);if(t===dd.DOWNLOAD||t===dd.PIXELS)return hd.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function Zp(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class Qp{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const r=kh(this.rank),a=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<t.length;a++)r.push(`imod(${n[a]}, ${t[a]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class tf{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const ef="return abs(x);",nf="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",rf="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",af=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${d.backend_util.SELU_SCALEALPHA};\n  float scale = ${d.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`;const sf="return -x;",of="return ceil(x);",uf="return floor(x);",cf="return exp(x);",lf="return exp(x) - 1.0;",df=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${d.backend_util.ERF_P};\n  float a1 = ${d.backend_util.ERF_A1};\n  float a2 = ${d.backend_util.ERF_A2};\n  float a3 = ${d.backend_util.ERF_A3};\n  float a4 = ${d.backend_util.ERF_A4};\n  float a5 = ${d.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,hf="return x;",pf="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",ff="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",mf="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class bf{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class gf{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=oh("rc",e),r=kh(e),a=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),s=n.slice(-2),i=e<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const{segment_util:yf}=d.backend_util,vf=d.kernel_impls.split,xf=d.kernel_impls.tile,Of=d.kernel_impls.topkImpl,wf=d.kernel_impls.whereImpl,kf={};function jf(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?pf:nf;if("elu"===t)return e?mf:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?ff:rf;if("prelu"===t)return e?Eh:Th;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class Nf extends d.KernelBackend{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(d.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=cd(Object(d.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Object(d.env)().getNumber("WEBGL_VERSION"))in kf||(kf[e]={}),kf[e]),this.gpgpu=new gp(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new Xp(this.gpgpu),this.numMBBeforeWarning=null==Object(d.env)().global.screen?1024:Object(d.env)().global.screen.height*Object(d.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new d.DataStorage(this,Object(d.engine)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((Object(d.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(d.env)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:dd.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,r){if(Object(d.env)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:dd.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=e;if(null!=s){let e;e=o?new bf(i,hf):new tf(i,hf);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const u=null!=this.activeTimers;let c,l;if(u&&(c=d.util.now()),"complex64"===r){const t=this.readSync(a.real.dataId),e=this.readSync(a.imag.dataId);l=d.backend_util.mergeRealAndImagArrays(t,e)}else l=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=d.util.now()-c),this.convertAndCacheOnCPU(t,l)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=e;if(null!=a){let e;e=o?new bf(r,hf):new tf(r,hf);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Object(d.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(d.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,l=null;if("complex64"!==s&&Object(d.env)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(e.texture,...fd(r))}if(this.pendingRead.set(t,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),e=t[0],n=t[1];c=d.backend_util.mergeRealAndImagArrays(e,n)}else if(null==l)c=this.getValuesFromTexture(t);else{const t=d.util.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,t)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(t,c),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(t=>t(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),h}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!yd(n)){if(Object(d.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),a=d.util.sizeFromShape(e);if(Object(d.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...fd(e)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Object(d.env)().getBool("WEBGL_PACK")&&!0===r,i=s?Rd(e):e,o=s?new ep(i):new tp(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:t}],"float32"),c=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),l}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const a=d.util.flatten(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),s=d.util.flatten(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(a);i.kernelMs=d.util.sum(t),i.getExtraProfileInfo=()=>t.map((t,e)=>({name:s[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:d.util.now(),endMs:null}}endTimer(t){return Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=d.util.now(),t)}async getQueryTime(t){if(Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,a,s)));const c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Object(d.env)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(d.engine)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every(t=>null==this.texData.get(t.dataId).texture&&d.util.sizeFromShape(t.shape)<e)}getGPGPUContext(){return this.gpgpu}slice(t,e,n){if(this.shouldExecuteOnCPU([t])){const r=Qd(this.texData.get(t.dataId).values,e,n,t.shape,t.dtype);return this.makeOutput(n,t.dtype,r)}if(0===d.util.sizeFromShape(n))return Object(d.tensor)([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),a=d.slice_util.isSliceContinous(t.shape,e,n);if(r||!a){const r=Object(d.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Hp(n):new Kp(n),a=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,a)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),a=this.makeOutput(n,t.dtype),s=this.texData.get(a.dataId);Object.assign(s,r),s.shape=n,s.dtype=t.dtype;let i=d.slice_util.computeFlatOffset(e,t.strides);r.slice&&(i+=r.slice.flatOffset),s.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};const o=this.dataRefCount.get(s.slice.origDataId)||1;return this.dataRefCount.set(s.slice.origDataId,o+1),a}stridedSlice(t,e,n,r){const a=this.tryRunOnCpuOrThrow([t],()=>this.cpuBackend.stridedSlice(t,e,n,r));if(a)return a;const s=d.slice_util.computeOutShape(e,n,r);if(s.some(t=>0===t))return Object(d.tensor)([],s);const i=new qp(e,r,s);return this.compileAndRun(i,[t])}reverse(t,e){const n=Object(d.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Pp(t.shape,e):new Bp(t.shape,e);return this.compileAndRun(n,[t])}neg(t){const e=this.tryRunOnCpuOrThrow([t],()=>this.cpuBackend.neg(t));if(e)return e;if(Object(d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,sf,t.dtype);const n=new tf(t.shape,sf);return this.compileAndRun(n,[t])}batchMatMul(t,e,n,r){const a=n?t.shape[2]:t.shape[1],s=r?e.shape[1]:e.shape[2],i=n?t.shape[1]:t.shape[2],o=Math.max(t.shape[0],e.shape[0]);if((1===a||1===s)&&i>1e3){n&&(t=Object(d.transpose)(t,[0,2,1])),r&&(e=Object(d.transpose)(e,[0,2,1]));const a=1===s?t:t.as3D(o,i,1),u=1===s?2:1,c=1===s?e.as3D(o,1,i):e;return d.mul(a,c).sum(u,!0)}const u=Object(d.upcastType)(t.dtype,e.dtype),c=new Np(t.shape,e.shape,[o,a,s],n,r);return this.compileAndRun(c,[t,e],u)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:a,activation:s,preluActivationWeights:i}){const o=n?t.shape[2]:t.shape[1],u=r?e.shape[1]:e.shape[2],c=Math.max(t.shape[0],e.shape[0]),l=Object(d.upcastType)(t.dtype,e.dtype),h=null!=a,p=null!=i,f=s?jf(s,!0):null,m=new Np(t.shape,e.shape,[c,o,u],n,r,h,f,p),b=[t,e];return a&&b.push(a),i&&b.push(i),this.compileAndRun(m,b,l)}localResponseNormalization4D(t,e,n,r,a){const s=Object(d.env)().getBool("WEBGL_PACK_NORMALIZATION")?new wp(t.shape,e,n,r,a):new xp(t.shape,e,n,r,a);return this.compileAndRun(s,[t])}LRNGrad(t,e,n,r,a,s,i){const o=new Op(e.shape,r,a,s,i);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map(t=>d.util.decodeString(t)),r=Object(d.buffer)(t.shape,t.dtype,n);return xf(r,e)}const n=new Qp(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=Object(d.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ap(t.shape,e,n):new Tp(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){const r=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.gather(t,e,n));if(r)return r;const a=new sp(t.shape,e.size,n);return this.compileAndRun(a,[t,e])}batchToSpaceND(t,e,n){d.util.assert(t.rank<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),a=d.backend_util.getReshaped(t.shape,e,r),s=d.backend_util.getPermuted(a.length,e.length),i=d.backend_util.getReshapedPermuted(t.shape,e,r),o=d.backend_util.getSliceBeginCoords(n,e.length),u=d.backend_util.getSliceSize(i,n,e.length);return Object(d.transpose)(t.reshape(a),s).reshape(i).slice(o,u)}spaceToBatchND(t,e,n){d.util.assert(t.rank<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),a=[[0,0]];a.push(...n);for(let l=1+e.length;l<t.shape.length;++l)a.push([0,0]);const s=t.pad(a),i=d.backend_util.getReshaped(s.shape,e,r,!1),o=d.backend_util.getPermuted(i.length,e.length,!1),u=d.backend_util.getReshapedPermuted(s.shape,e,r,!1),c=Object(d.transpose)(s.reshape(i),o);return Object(d.reshape)(c,u)}reduce(t,e,n){const r=t.shape[0],a=t.shape[1],s=d.backend_util.computeOptimalWindowSize(a),i=Math.ceil(a/s),o=new $p({windowSize:s,inSize:a,batchSize:r,outSize:i},e),u=this.compileAndRun(o,[t],n);return 1===u.shape[1]?u:this.reduce(u,e,n)}argReduce(t,e,n=null){let r=t.shape[0],a=t.shape[1];null!=n&&(r=n.shape[0],a=n.shape[1]);const s=d.backend_util.computeOptimalWindowSize(a),i={windowSize:s,inSize:a,batchSize:r,outSize:Math.ceil(a/s)},o=new sh(i,e,null==n),u=[t];null!=n&&u.push(n);const c=this.compileAndRun(o,u,"int32");return 1===c.shape[1]?c:this.argReduce(t,e,c)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,a=r[r.length-1],s=d.backend_util.computeOptimalWindowSize(a),i=new Sh(r,s,e,null==n),o=null==n?[t]:[t,n],u=this.compileAndRun(i,o,"int32");return u.rank===t.rank?this.argReducePacked(t,e,u):u}sum(t,e){d.backend_util.assertAxesAreInnerMostDims("sum",e,t.rank);const[n,r]=d.backend_util.computeOutAndReduceShapes(t.shape,e),a=d.util.sizeFromShape(r),s=t.as2D(-1,a),i=d.sumOutType(t.dtype);return this.reduce(s,"sum",i).reshape(n)}prod(t,e){const n=this.tryRunOnCpuOrThrow([t],()=>this.cpuBackend.prod(t,e));if(n)return n;const[r,a]=d.backend_util.computeOutAndReduceShapes(t.shape,e),s=d.util.sizeFromShape(a),i=t.as2D(-1,s),o=d.sumOutType(t.dtype);return this.reduce(i,"prod",o).reshape(r)}unsortedSegmentSum(t,e,n){let r=0;const a=d.backend_util.getAxesPermutation([r],t.rank);let s=t;null!=a&&(s=Object(d.transpose)(t,a),r=d.backend_util.getInnerMostAxes(1,t.rank)[0]);const i=yf.computeOutShape(s.shape,r,n),o=d.util.sizeFromShape([s.shape[r]]),u=s.as2D(-1,o),c=d.sumOutType(t.dtype);let l=this.segOpCompute(u,"unsortedSegmentSum",e,c,n).reshape(i);return null!=a&&(l=Object(d.transpose)(l,d.backend_util.getUndoAxesPermutation(a))),l}segOpCompute(t,e,n,r,a){const s=t.shape[0],i=t.shape[1],o=yf.segOpComputeOptimalWindowSize(i,a),u=new Wp({windowSize:o,inSize:i,batchSize:s,numSegments:a},e),c=this.compileAndRun(u,[t,n],r);return c.shape[1]===a?c:(n=Object(d.range)(0,a).tile([i/o]),this.segOpCompute(c,e,n,r,a))}argMinMaxReduce(t,e,n){const r=[e];if(d.backend_util.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!Object(d.env)().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,a]=d.backend_util.computeOutAndReduceShapes(t.shape,r),s=d.util.sizeFromShape(a),i=t.as2D(-1,s);return this.argReduce(i,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=`+e);const a=t.shape[e];let s=t;for(let i=0;i<=Math.ceil(Math.log2(a))-1;i++){const e=new Hh(t.shape,!1,r),n=e.getCustomSetupFunc(i),a=s;s=this.compileAndRun(e,[s],s.dtype,n),a.dispose()}if(n){const e=new Hh(t.shape,n,r),a=s;s=this.compileAndRun(e,[s]),a.dispose()}return s}equal(t,e){if(Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new Ah("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){const n=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.less(t,e));if(n)return n;if(Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const r=new Ah("return float(a < b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}lessEqual(t,e){if(Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new Ah("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){const n=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.greater(t,e));if(n)return n;if(Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const r=new Ah("return float(a > b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}greaterEqual(t,e){if(Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new Ah("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new tf(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new Ah("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new Ah("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new Up(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],Object(d.upcastType)(e.dtype,n.dtype))}where(t){d.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return wf(t.shape,e)}topk(t,e,n){const r=t.dataSync();return Of(r,t.shape,t.dtype,e,n)}min(t,e){d.backend_util.assertAxesAreInnerMostDims("min",e,t.rank);const[n,r]=d.backend_util.computeOutAndReduceShapes(t.shape,e),a=d.util.sizeFromShape(r),s=t.as2D(-1,a);return this.reduce(s,"min",s.dtype).reshape(n)}minimum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.minimum(t,e));if(n)return n;const r=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rh("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Ah("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}mod(t,e){const n=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rh("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Ah("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.maximum(t,e));if(n)return n;const r=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rh("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Ah("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}all(t,e){d.backend_util.assertAxesAreInnerMostDims("all",e,t.rank);const[n,r]=d.backend_util.computeOutAndReduceShapes(t.shape,e),a=d.util.sizeFromShape(r),s=t.as2D(-1,a);return this.reduce(s,"all",s.dtype).reshape(n)}any(t,e){d.backend_util.assertAxesAreInnerMostDims("any",e,t.rank);const[n,r]=d.backend_util.computeOutAndReduceShapes(t.shape,e),a=d.util.sizeFromShape(r),s=t.as2D(-1,a);return this.reduce(s,"any",s.dtype).reshape(n)}floorDiv(t,e){if(Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n","int32");const n=new Ah("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(n,[t,e],"int32")}packedUnaryOp(t,e,n){const r=new bf(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,a=!1){const s=new Rh(n,t.shape,e.shape,a);return this.compileAndRun(s,[t,e],r)}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>Object(d.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map(t=>t.dtype).reduce((t,e)=>Object(d.upcastType)(t,e)),n=t.map(t=>t.shape),r=Object(d.env)().getBool("WEBGL_PACK")?new ah(t[0].shape,n):new rh(t[0].shape,n);return this.compileAndRun(r,t,e)}pow(t,e){const n=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rh("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Ah("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=Object(d.upcastType)(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t])){const e=Kd(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,of,t.dtype);const e=new tf(t.shape,of);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t])){const e=qd(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,uf,t.dtype);const e=new tf(t.shape,uf);return this.compileAndRun(e,[t])}sign(t){const e=new tf(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new tf(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new tf(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new tf(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new tf(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t])){const e=Gd(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,cf,t.dtype);const e=new tf(t.shape,cf);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t])){const e=Hd(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,lf,t.dtype);const e=new tf(t.shape,lf);return this.compileAndRun(e,[t])}softmax(t,e){const n=d.util.parseAxisParam([e],t.shape),r=Object(d.max)(t,n),a=d.backend_util.expandShapeToKeepDim(r.shape,n),s=d.sub(t,r.reshape(a)),i=this.exp(s),o=this.sum(i,n).reshape(a);return Object(d.div)(i,o)}log(t){if(this.shouldExecuteOnCPU([t])){const e=Xd(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new tf(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new tf(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new tf(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t])){const e=Zd(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}const e=new tf(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new tf(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=Object(d.env)().getBool("WEBGL_PACK")?new bf(t.shape,pf):new tf(t.shape,nf),this.compileAndRun(e,[t])}relu6(t){let e;return e=Object(d.env)().getBool("WEBGL_PACK")?new bf(t.shape,ff):new tf(t.shape,rf),this.compileAndRun(e,[t])}prelu(t,e){const n=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rh(Eh,t.shape,e.shape):new Ah(Th,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(Object(d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,mf,t.dtype);const e=new tf(t.shape,"return (x >= 0.0) ? x : (exp(x) - 1.0);");return this.compileAndRun(e,[t])}eluDer(t,e){const n=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rh("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new Ah("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new tf(t.shape,af);return this.compileAndRun(e,[t])}clip(t,e,n){let r;r=Object(d.env)().getBool("WEBGL_PACK_CLIP")?new _h(t.shape):new $h(t.shape);const a=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,a)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=Wd(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Object(d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,ef,t.dtype);const e=new tf(t.shape,ef);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new Fh(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.real),this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new tf(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new tf(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}asin(t){const e=new tf(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new tf(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new tf(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}sinh(t){const e=new tf(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new tf(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new tf(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new tf(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new tf(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new tf(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new tf(t.shape,df);return this.compileAndRun(e,[t])}step(t,e){const n=new tf(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,a,s){const i=t.shape,o=this.texData.get(t.dataId),u=n.inChannels,c=i[0]*i[1]*i[2],l=n.outChannels,h="channelsLast"===n.dataFormat,p=(1===c||1===l)&&u>1e3,f=i[2]%2!==0&&!!o.isPacked;if(p||!Object(d.env)().getBool("WEBGL_LAZILY_UNPACK")||!Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const o=h?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],u=Object(d.reshape)(t,[1,o,n.inChannels]),c=Object(d.reshape)(e,[1,n.inChannels,n.outChannels]),l=this.fusedBatchMatMul({a:u,b:c,transposeA:false,transposeB:false,bias:r,activation:a,preluActivationWeights:s});return Object(d.reshape)(l,n.outShape)}const m=h?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),b={dataId:t.dataId,shape:[1,m,n.inChannels],dtype:t.dtype},g=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,d.util.assert(_d(o.shape,b.shape),()=>`packed reshape ${o.shape} to ${b.shape} isn't free`);const y=Object(d.reshape)(e,[1,n.inChannels,n.outChannels]),v=this.fusedBatchMatMul({a:b,b:y,transposeA:false,transposeB:false,bias:r,activation:a,preluActivationWeights:s}),x=this.texData.get(v.dataId);return d.util.assert(x.isPacked,()=>"batchMatMul result is expected to be packed"),o.shape=g,x.shape=n.outShape,Object(d.engine)().makeTensorFromDataId(v.dataId,n.outShape,v.dtype)}conv2dWithIm2Row(t,e,n,r,a,s){const{filterWidth:i,filterHeight:o,inChannels:u,outWidth:c,outHeight:l,dataFormat:d}=n,h="channelsLast"===d,p=i*o*u,f=l*c,m=[p,f],b=t.squeeze([0]),g=e.reshape([1,p,-1]),y=new vp(m,b.shape,n),v=this.compileAndRun(y,[b]).reshape([1,m[0],m[1]]),x=null!=r,O=null!=s,w=a?jf(a,!0):null,k=new Np(v.shape,g.shape,[1,f,n.outChannels],!0,!1,x,w,O),j=[v,g];r&&j.push(r),O&&j.push(s);const N=this.compileAndRun(k,j);return h?N.reshape([1,l,c,n.outChannels]):N.reshape([1,n.outChannels,l,c])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,a,s);if(Object(d.env)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,a,s);const i=null!=r,o=null!=s,u=a?jf(a,!1):null,c=new Vh(n,i,u,o),l=[t,e];return r&&l.push(r),s&&l.push(s),this.compileAndRun(c,l)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(Object(d.env)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new Vh(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new Mh(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new Dh(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){const i=Object(d.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels===1,o=a?jf(a,i):null,u=[t,e],c=null!=r,l=null!=s;let h;return c&&u.push(r),l&&u.push(s),i?(h=new Kh(n,c,o,l),this.compileAndRun(h,u)):(h=new Uh(n,c,o,l),this.compileAndRun(h,u))}depthwiseConv2D(t,e,n){let r;return Object(d.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels===1?(r=new Kh(n),this.compileAndRun(r,[t,e])):(r=new Uh(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new Ph(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new Bh(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new Wh(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new Lh(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new zh(n);return this.compileAndRun(r,[t,e])}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let a=0;for(let u=0;u<t.rank;u++)u!==e&&(r[a++]=t.shape[u]);const s=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let u=0;u<o.length;u++)s[e]=u,o[u]=this.slice(t,s,i).reshape(r);return o}avgPool3d(t,e){const n=new Rp(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new Ch(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new Rp(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const a=new Rp(r,"max",!0),s=this.compileAndRun(a,[e]),i=new jp(r),o=this.compileAndRun(i,[t,s],e.dtype);return s.dispose(),o}resizeBilinear(t,e,n,r){const a=Object(d.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Mp(t.shape,e,n,r):new Dp(t.shape,e,n,r);return this.compileAndRun(a,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new Fp(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const a=new Lp(t.shape,e,n,r);return this.compileAndRun(a,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new zp(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const a=e?t:Object(d.softmax)(t),s=a.shape[0],i=a.shape[1],o=new Sp(s,i,n),u=o.getCustomSetupFunc(r);return this.compileAndRun(o,[a],"int32",u)}oneHot(t,e,n,r){const a=new Ip(t.size,e,n,r);return this.compileAndRun(a,[t])}diag(t){const e=new Qh(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,a,s){const i=new Gh(t.shape,e.shape,r,a,s);return this.compileAndRun(i,[t,e,n],"float32")}depthToSpace(t,e,n){d.util.assert(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],a="NHWC"===n?t.shape[1]:t.shape[2],s="NHWC"===n?t.shape[2]:t.shape[3],i="NHWC"===n?t.shape[3]:t.shape[1],o=a*e,u=s*e,c=i/(e*e),l=new Zh("NHWC"===n?[r,o,u,c]:[r,c,o,u],e,n);return this.compileAndRun(l,[t])}split(t,e,n){return vf(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:a,sliceSize:s,strides:i,outputSize:o}=d.backend_util.calculateShapes(e,t,n),u=[o/s,s],c=t.reshape([a,r]),l=e.reshape([a,s]);if(0===o)return d.backend_util.reshapeTensor(Object(d.tensor)([]),n);const h=Object(d.scalar)(0),p=new Vp(a,r,c.rank,l.rank,i,u);return this.compileAndRun(p,[l,c,h]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:a,numUpdates:s,strides:i,outputSize:o}=d.backend_util.calculateShapes(e,t,n),u=new Vp(s,a,t.rank,e.rank,i,[o,1],!1);return this.compileAndRun(u,[e,t,r]).reshape(n)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[a,s,i,o]=d.backend_util.prepareAndValidate(t,e),u=e.reshape([s,r]),c=t.reshape([t.size/i,i]),l=new ip(r,o,[s,i]);return this.compileAndRun(l,[c,u]).reshape(a)}fill(t,e,n){if("string"===(n=n||d.util.inferDtype(e))){const r=d.util.getArrayFromDType(n,d.util.sizeFromShape(t));return r.fill(e),Object(d.engine)().makeTensor(r,t,n,this)}{const r=new ap(t,e),a=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,a)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return d.backend_util.linspaceImpl(t,e,n)}makeTensorInfo(t,e,n){const r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Object(d.engine)().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new gf(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new Cp(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Ad(t.shape),...Ed(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},a=[Ad(e),...Ed(e)],s=new _p(a,n),i=this.runWebGLProgram(s,[r],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:a}=e,s=Rd(r);let i;i=n?new Jh(s):new Yh(s);return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:t}],a,null,!0).dataId}}runWebGLProgram(t,e,n,r,a=!1){const s=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(s.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===ld.DENSE){const e=fd(t.outputShape);i.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===d.util.sizeFromShape(s.shape))return i.values=d.util.getTypedArrayFromDType(s.dtype,0),s;const o=[],u=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&d.util.sizeFromShape(e.shape)<=Object(d.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!==!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!_d(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:i,isUniform:!1},l=function(t,e,n){let r="";e.concat(n).forEach(t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`});const a=t.userCode;let s=t.constructor.name;return s+="_"+r+"_"+a,s}(t,u,c),h=this.getAndSaveBinary(l,()=>function(t,e,n,r){const a=e.userCode,s=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),i=s.map(t=>t.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=ph(s,o,a,e.packedInputs),c=t.createProgram(u);let l=null;const h=t.getUniformLocation(c,"NAN",!1);1===Object(d.env)().getNumber("WEBGL_VERSION")&&(l=t.getUniformLocation(c,"INFINITY",!1));const p={};for(let d=0;d<e.variableNames.length;d++){const n=e.variableNames[d],r=!1;p[n]=t.getUniformLocation(c,n,r),p["offset"+n]=t.getUniformLocation(c,"offset"+n,r)}return{program:e,source:u,webGLProgram:c,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:l,nanLoc:h}}(this.gpgpu,t,u,c)),p=null!=this.activeTimers;let f;if(p&&(f=this.startTimer()),function(t,e,n,r,a){yp(e.inShapeInfos,n),yp([e.outShapeInfo],[r]);const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(s,i[0],i[1]):t.setOutputMatrixTexture(s,i[0],i[1]),t.setProgram(e.webGLProgram),1===Object(d.env)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const a=e.program.variableNames[r],s=e.uniformLocations[a],i=e.uniformLocations["offset"+a];if(null!=s)if(n.isUniform)if(d.util.sizeFromShape(n.shape)<2)t.gl.uniform1f(s,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(s,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,s,r)}),null!=a&&a(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,u,c,r),o.forEach(t=>this.disposeIntermediateTensorInfo(t)),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!Object(d.env)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const t=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),t}return s}compileAndRun(t,e,n,r,a=!1){n=n||e[0].dtype;const s=this.runWebGLProgram(t,e,n,r,a);return Object(d.engine)().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(d.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(d.tidy)(()=>{if(!Object(d.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Object(d.env)().getBool("DEBUG");Object(d.env)().set("DEBUG",!1);const e=this.abs(Object(d.scalar)(1e-8)).dataSync()[0];if(Object(d.env)().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=e;if(null!=s)return;const u=null!=this.activeTimers;let c;u&&(c=d.util.now());let l=e.texShape;if(null==l&&(l=function(t,e=!1){let n=Object(d.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map((e,n)=>n>=t.length-2?d.util.nearestLargerEven(t[n]):t[n])).length&&(t=[2,t[0]])),2!==t.length){const e=d.util.squeezeShape(t);t=e.newShape}let r=d.util.sizeFromShape(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Ad(t);let n=2,a=2;return t.length&&([n,a]=Ed(t)),r=e*(n/2)*(a/2),d.util.sizeToSquarishShape(r).map(t=>2*t)}return d.util.sizeToSquarishShape(r)}(n,o),e.texShape=l),null!=a){const t=Rd(n);let s,i=l[1],h=l[0];const p=a instanceof Uint8Array;o?([i,h]=md(l[0],l[1]),s=new rp(t,[h,i],p)):s=new np(t,[h,i],p);const f=this.makeTensorInfo([h,i],r);this.texData.get(f.dataId).usage=p?dd.PIXELS:dd.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);const m=!0,b=this.runWebGLProgram(s,[f],r,null,m),g=this.texData.get(b.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),e.values=null,u&&(this.uploadWaitMs+=d.util.now()-c)}else{const t=this.acquireTexture(l,i,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype "+e)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*d.util.bytesPerElement(e)}tryRunOnCpuOrThrow(t,e){if(this.shouldExecuteOnCPU(t))try{return e()}catch(n){if(Object(d.env)().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}d.device_util.isBrowser()&&Object(d.registerBackend)("webgl",()=>new Nf,2);function Sf(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const If={kernelName:d.Identity,backendName:"webgl",kernelFunc:Sf};function Cf(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Sf({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const u=Sf({inputs:{x:a},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:u},s}const Tf={kernelName:d.Complex,backendName:"webgl",kernelFunc:Cf};function Af(t){return({inputs:e,backend:n})=>{const{x:r}=e,a=n,s=new tf(r.shape,t);return a.runWebGLProgram(s,[r],r.dtype)}}function Ef({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:c}=i,l=o;if(r&&"complex64"===u.dtype){const e=l.texData.get(u.dataId),n=l.texData.get(c.dataId),[r,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{const[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new Ah(t,u.shape,c.shape);return l.runWebGLProgram(i,[a,s],Object(d.upcastType)(n.dtype,r.dtype))}),s=Cf({inputs:{real:r,imag:a},backend:l});return l.disposeIntermediateTensorInfo(r),l.disposeIntermediateTensorInfo(a),s}const h=s||Object(d.upcastType)(u.dtype,c.dtype);if(l.shouldExecuteOnCPU([u,c])&&null!=a){const t=l.texData.get(u.dataId),e=l.texData.get(c.dataId),[n,r]=a(u.shape,c.shape,t.values,e.values,h),s=l.makeTensorInfo(r,h);return l.texData.get(s.dataId).values=n,s}let p;return p=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new Rh(e,u.shape,c.shape,n):new Ah(t,u.shape,c.shape),l.runWebGLProgram(p,[u,c],h)}}const Rf="return a + b;",$f=Ef({opSnippet:Rf,packedOpSnippet:Rf,supportsComplex:!0,cpuKernelImpl:Ud}),_f={kernelName:d.Add,backendName:"webgl",kernelFunc:$f},Ff=Ef({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Df={kernelName:d.Atan2,backendName:"webgl",kernelFunc:Ff};const Mf={kernelName:d.AvgPool,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;Pd(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=d.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&d.util.arraysEqual(c.inShape,c.outShape))return Sf({inputs:{x:a},backend:n});const l=new Ep(c,"avg",!1);return n.runWebGLProgram(l,[a],"float32")}};const zf={kernelName:d.AvgPoolBackprop,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,i=s;Pd([a,s],"avgPoolBackprop");const{filterSize:o,strides:u,pad:c}=r,l=d.backend_util.computePool2DInfo(i.shape,o,u,1,c),h=new Ih(l);return n.runWebGLProgram(h,[a],i.dtype)}};class Lf{constructor(t,e,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],d.backend_util.assertAndGetBroadcastShape(t,e),d.backend_util.assertAndGetBroadcastShape(t,n);let i="0.0";null!=r&&(d.backend_util.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(d.backend_util.assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Bf{constructor(t,e,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],d.backend_util.assertAndGetBroadcastShape(t,e),d.backend_util.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";null!=r&&(d.backend_util.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(d.backend_util.assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Pf={kernelName:d.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=t;d.util.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),d.util.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),d.util.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,a,s];let l=null;null!=i&&(l=i.shape,c.push(i));let h=null;null!=o&&(h=o.shape,c.push(o));const p=Object(d.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Bf(r.shape,a.shape,s.shape,l,h,u):new Lf(r.shape,a.shape,s.shape,l,h,u);return e.runWebGLProgram(p,c,c[0].dtype)}},Vf=Ef({opSnippet:"return float(a != b);",dtype:"bool"}),Wf={kernelName:d.NotEqual,backendName:"webgl",kernelFunc:Vf};function Uf(t){const{inputs:e,backend:n}=t,{input:r}=e;return Sf({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Kf={kernelName:d.Real,backendName:"webgl",kernelFunc:Uf};const Gf={kernelName:d.Cast,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return Sf({inputs:{x:s},backend:r});const e=d.zeros(s.shape),n=t({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=Cf({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const e=Uf({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(e),n}if(!d.util.hasEncodingLoss(s.dtype,i)){const t=Sf({inputs:{x:s},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new tf(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const t=r.makeTensorInfo([],"bool",d.util.getTypedArrayFromDType("bool",1)),e=Vf({inputs:{a:s,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}};class Hf{constructor(t){this.outputShape=[],this.outputShape=d.backend_util.computeOutShape(t,1),this.variableNames=t.map((t,e)=>"T"+e);const e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<e.length;s++){const t=e[s-1];n.push(`else if (yC < ${e[s]}) setOutput(getT${s}(yR, yC-${t}));`)}const r=e.length,a=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class qf{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=d.backend_util.computeOutShape(t,e);const n=this.outputShape,r=n.length,a=kh(r),s=oh("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>"T"+e);const o=new Array(t.length-1);o[0]=t[0][e];for(let d=1;d<o.length;d++)o[d]=o[d-1]+t[d][e];const u=i[e],c=i.slice(-2),l=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${l}), vec2(${c.join()}));\n        }`;for(let d=1;d<o.length;d++){const t=o[d-1];h+=`\n        if (${u} < ${o[d]}  && ${u} >= ${o[d-1]}) {\n          return getChannel(\n            getT${d}(${Xf(i,u,t)}),\n            vec2(${Xf(c,u,t)}));\n        }`}const p=o.length,f=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${Xf(i,u,f)}),\n          vec2(${Xf(c,u,f)}));`,this.userCode=`\n      float getValue(${i.map(t=>"int "+t)}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function Xf(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?`${t} - ${n}`:t).join()}function Yf(t){const{inputs:e,backend:n}=t,{input:r}=e;return Sf({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Jf={kernelName:d.Imag,backendName:"webgl",kernelFunc:Yf};function Zf(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{shape:s}=r,i=n,o=d.util.sizeFromShape(a.shape),u=d.util.inferFromImplicitShape(s,o),c=d.util.sizeFromShape(u);d.util.assert(o===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const l=i.texData.get(a.dataId);return!l.isPacked||_d(a.shape,u)||null!==l.texture&&_d(l.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(t,e,n){const r=[Ad(t.shape),...Ed(t.shape)],a={dtype:t.dtype,shape:r,dataId:t.dataId},s=[Ad(e),...Ed(e)],i=new _p(s,r),o=n.runWebGLProgram(i,[a],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(a,u,i)}const Qf={kernelName:d.Reshape,backendName:"webgl",kernelFunc:Zf};const tm={kernelName:d.Concat,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r,s=d.util.parseAxisParam(a,e[0].shape)[0],i=d.backend_util.computeOutShape(e.map(t=>t.shape),s);if(0===d.util.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter(t=>d.util.sizeFromShape(t.shape)>0);if(1===o.length)return o[0];const u=o.map(t=>t.shape);return d.backend_util.assertParamsConsistent(u,s),function t(e,n,r){const a=e[0].dtype;if("complex64"===a){const a=e.map(t=>Uf({inputs:{input:t},backend:r})),s=e.map(t=>Yf({inputs:{input:t},backend:r})),i=t(a,n,r),o=t(s,n,r),u=Cf({inputs:{real:i,imag:o},backend:r});return a.forEach(t=>r.disposeIntermediateTensorInfo(t)),s.forEach(t=>r.disposeIntermediateTensorInfo(t)),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}if(e.length>Object(d.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(e.length/2),s=t(e.slice(0,a),n,r),i=t(e.slice(a),n,r),o=t([s,i],n,r);return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}if(Object(d.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const t=new qf(e.map(t=>t.shape),n);return r.runWebGLProgram(t,e,a)}const s=d.backend_util.computeOutShape(e.map(t=>t.shape),n),i=e.map(t=>Zf({inputs:{x:t},attrs:{shape:[-1,d.util.sizeFromShape(t.shape.slice(n))]},backend:r})),o=new Hf(i.map(t=>t.shape)),u=r.runWebGLProgram(o,i,a);i.forEach(t=>r.disposeIntermediateTensorInfo(t));const c=Zf({inputs:{x:u},attrs:{shape:s},backend:r});return r.disposeIntermediateTensorInfo(u),c}(o,s,n)}},em=Af("if (isnan(x)) return x;\n  return cos(x);\n"),nm={kernelName:d.Cos,backendName:"webgl",kernelFunc:em},rm=Ef({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),am={kernelName:d.Div,backendName:"webgl",kernelFunc:rm};class sm{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,s=n?r+".0":"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function im(t,e,n){const r=n.texData.get(t.dataId),a=d.util.sizeFromShape(t.shape),s=t.shape[t.shape.length-1],i=Zf({inputs:{x:t},backend:n,attrs:{shape:[a/s,s]}}).shape,o=new sm("real",i,e),u=new sm("imag",i,e),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],l=n.runWebGLProgram(o,c,"float32"),h=n.runWebGLProgram(u,c,"float32"),p=Cf({inputs:{real:l,imag:h},backend:n});n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h);const f=Zf({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(f),f}const om={kernelName:d.FFT,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return im(r,!1,n)}};class um{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const cm={kernelName:d.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,a=new um(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}};class lm{constructor(t){this.variableNames=["A"];const e=uh(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class dm{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=uh(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const hm={kernelName:d.FromPixels,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:a}=e;const{numChannels:s}=r,i="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,c]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=[c,u],h=[c,u,s];(o||i)&&(null==pm&&(pm=document.createElement("canvas").getContext("2d")),pm.canvas.width=u,pm.canvas.height=c,pm.drawImage(a,0,0,u,c),a=pm.canvas);const p=n.makeTensorInfo(l,"int32");n.texData.get(p.dataId).usage=dd.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const f=Object(d.env)().getBool("WEBGL_PACK")?new dm(h):new lm(h),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let pm;const fm={kernelName:d.IFFT,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return im(r,!0,n)}};class mm{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=t;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u=`sumValue += dot(values * ${d.util.isInt(t)?t.toPrecision(2):t}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}function bm(t,e,n,r){const a=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=d.backend_util.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let s=t;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:c}=a[i];let l,d;l="mean"===n?0===i?new mm({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c},o):new mm({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c}):new $p({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c},n),d=s,s=r.runWebGLProgram(l,[s],e),d.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class gm{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const r=kh(this.rank),a=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let a=0;a<t.length;a++)r[t[a]]=n[a];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class ym{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let c=0;c<n.length;c++)n[c]=t[e[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=kh(this.rank),a=ih("rc",this.rank),s=new Array(this.rank);for(let c=0;c<e.length;c++)s[e[c]]=a[c];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function vm(t,e,n){const r=Object(d.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ym(t.shape,e):new gm(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const xm={kernelName:d.Max,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:a,keepDims:s}=e,i=n,o=r.shape.length,u=d.util.parseAxisParam(a,r.shape);let c=u;const l=d.backend_util.getAxesPermutation(c,o),h=null!=l,p=i.shouldExecuteOnCPU([r]);let f=r;if(h){if(p){const t=i.texData.get(f.dataId).values,e=new Array(o);for(let a=0;a<e.length;a++)e[a]=r.shape[l[a]];const n=eh(t,r.shape,r.dtype,l,e);f=i.makeTensorInfo(e,r.dtype);i.texData.get(f.dataId).values=n}else f=vm(r,l,i);c=d.backend_util.getInnerMostAxes(c.length,o)}d.backend_util.assertAxesAreInnerMostDims("max",c,o);const[m,b]=d.backend_util.computeOutAndReduceShapes(f.shape,c);let g,y=m;if(s&&(y=d.backend_util.expandShapeToKeepDim(m,u)),p){const t=i.texData.get(f.dataId).values,e=Yd(t,d.util.sizeFromShape(b),y,r.dtype);g=i.makeTensorInfo(y,r.dtype);i.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const a=d.util.sizeFromShape(e),s=Zf({inputs:{x:t},attrs:{shape:[d.util.sizeFromShape(t.shape)/a,a]},backend:r}),i=bm(s,t.dtype,"max",r),o=Zf({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,b,y,i);return h&&i.disposeIntermediateTensorInfo(f),g}};const Om={kernelName:d.MaxPool,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;Pd(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=d.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&d.util.arraysEqual(c.inShape,c.outShape))return Sf({inputs:{x:a},backend:n});const l=new Ep(c,"max",!1);return n.runWebGLProgram(l,[a],a.dtype)}};const wm={kernelName:d.MaxPoolBackprop,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s,output:i}=e,o=s;Pd([s,i],"maxPoolBackprop");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=r,p=d.backend_util.computePool2DInfo(o.shape,u,c,1,l,h),f=new Ep(p,"max",!0),m=n.runWebGLProgram(f,[o],o.dtype),b=new kp(p),g=n.runWebGLProgram(b,[a,m],o.dtype);return n.disposeIntermediateTensorInfo(m),g}};const km={kernelName:d.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=e,u=n;d.util.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(s,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);const l=d.backend_util.computePool2DInfo(r.shape,a,s,c,i),[h,p]=function(t,e,n,r){let a=new Ep(n,"max",!1);const s=r.runWebGLProgram(a,[t],"float32");return a=new Ep(n,"max",!0,!0,e),[s,r.runWebGLProgram(a,[t],"float32")]}(r,o,l,u);return[h,p]}};const jm={kernelName:d.Mean,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:a,axis:s}=e,i=n,o=r.shape.length,u=d.util.parseAxisParam(s,r.shape);let c=u;const l=d.backend_util.getAxesPermutation(c,o),h=null!=l,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(p){const t=i.texData.get(m.dataId).values,e=new Array(o);for(let a=0;a<e.length;a++)e[a]=r.shape[l[a]];const n=eh(t,r.shape,r.dtype,l,e);m=i.makeTensorInfo(e,r.dtype);i.texData.get(m.dataId).values=n}else m=vm(r,l,i);f.push(m),c=d.backend_util.getInnerMostAxes(c.length,o)}d.backend_util.assertAxesAreInnerMostDims("sum",c,o);const[b,g]=d.backend_util.computeOutAndReduceShapes(m.shape,c);let y=b;a&&(y=d.backend_util.expandShapeToKeepDim(b,u));const v=function(t,e,n,r){const a=d.util.sizeFromShape(e),s=Zf({inputs:{x:t},attrs:{shape:[d.util.sizeFromShape(t.shape)/a,a]},backend:r}),i=bm(s,"float32","mean",r),o=Zf({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(m,g,y,i);for(const d of f)i.disposeIntermediateTensorInfo(d);return v}};class Nm{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=kh(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Sm{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=kh(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=oh("rc",r),u=oh("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const t=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const t=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${o[r-1]} += 1;\n          if(${c}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const Im={kernelName:d.MirrorPad,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:a,mode:s}=n,i=Object(d.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sm(r.shape,a,s):new Nm(r.shape,a,s);return e.runWebGLProgram(i,[r],r.dtype)}},Cm="return areal * breal - aimag * bimag;",Tm="return areal * bimag + aimag * breal;";class Am{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=d.backend_util.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Em="return a * b;";const Rm={kernelName:d.Multiply,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:r,b:a}=e,s=d.backend_util.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(a.dataId),s=new Am(Cm,r.shape,a.shape),i=new Am(Tm,r.shape,a.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),c=n.runWebGLProgram(i,o,"float32"),l=Cf({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const t=n.texData.get(r.dataId),e=n.texData.get(a.dataId),[i,o]=Jd(r.shape,a.shape,t.values,e.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rh(Em,r.shape,a.shape):new Ah(Em,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}},$m={kernelName:d.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{d.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=n,u=e,c=u.readSync(r.dataId),l=u.readSync(a.dataId),h=s,p=i,f=o;return d.kernel_impls.nonMaxSuppressionV3Impl(c,l,h,p,f)}},_m=d.kernel_impls.nonMaxSuppressionV4Impl,Fm={kernelName:d.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{d.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,c=e,l=c.readSync(r.dataId),h=c.readSync(a.dataId),{selectedIndices:p,validOutputs:f}=_m(l,h,s,i,o,u);return[p,f]}},Dm=d.kernel_impls.nonMaxSuppressionV5Impl,Mm={kernelName:d.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{d.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,c=e,l=c.readSync(r.dataId),h=c.readSync(a.dataId),p=s,f=i,m=o,b=u,{selectedIndices:g,selectedScores:y}=Dm(l,h,p,f,m,b);return[g,y]}};class zm{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const a=t[1],s=t[2],i=Math.sin(e).toFixed(3),o=Math.cos(e).toFixed(3);this.outputShape=t;const[u,c]=d.backend_util.getImageCenter(r,a,s),l=u.toFixed(3),h=c.toFixed(3);let p="";p="number"===typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${l}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${l}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${l}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${p}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${a}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Lm={kernelName:d.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:a,fillValue:s,center:i}=e,o=n,u=new zm(r.shape,a,s,i);return o.runWebGLProgram(u,[r],r.dtype)}},Bm=Af("if (isnan(x)) return x;\n  return sin(x);\n"),Pm={kernelName:d.Sin,backendName:"webgl",kernelFunc:Bm},Vm=Af("return x * x;"),Wm={kernelName:d.Square,backendName:"webgl",kernelFunc:Vm},Um=Ef({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),Km={kernelName:d.SquaredDifference,backendName:"webgl",kernelFunc:Um},Gm="return a - b;",Hm=Ef({opSnippet:Gm,packedOpSnippet:Gm,supportsComplex:!0,cpuKernelImpl:th}),qm={kernelName:d.Sub,backendName:"webgl",kernelFunc:Hm},Xm=Af("return tan(x);");const Ym=[_f,Df,Mf,zf,Pf,Gf,Tf,tm,nm,am,om,cm,hm,If,fm,Jf,xm,Om,wm,km,jm,Im,Rm,$m,Fm,Mm,Wf,Kf,Qf,Lm,Pm,Wm,qm,Km,{kernelName:d.Tan,backendName:"webgl",kernelFunc:Xm},{kernelName:d.Transpose,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:a}=e,s=n,i=r.shape.length,o=new Array(i);for(let c=0;c<o.length;c++)o[c]=r.shape[a[c]];let u;if(s.shouldExecuteOnCPU([r])){const t=s.texData.get(r.dataId).values,e=eh(t,r.shape,r.dtype,a,o);u=s.makeTensorInfo(o,r.dtype);s.texData.get(u.dataId).values=e}else u=vm(r,a,s);return u}},{kernelName:d.Unique,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:s}=e;Pd(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:c}=nh(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}}];for(const Zm of Ym)Object(d.registerKernel)(Zm);const Jm={"tfjs-core":d.version_core,"tfjs-backend-cpu":"2.7.0","tfjs-backend-webgl":"2.7.0","tfjs-data":Co,"tfjs-layers":jn,"tfjs-converter":Ji.e,tfjs:"2.7.0"}},zvA9:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({greater_:function(t,e){let n=Object(i.a)(t,"a","greater"),u=Object(i.a)(e,"b","greater");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc(t=>t.greater(n,u),c,null,a.kb)}})}},[["bSXR",0,1,4,3,7,2,5,6]]]);