_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[12],{"+Luo":function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return N})),n.d(t,"i",(function(){return j})),n.d(t,"c",(function(){return S})),n.d(t,"f",(function(){return C})),n.d(t,"e",(function(){return E})),n.d(t,"d",(function(){return $})),n.d(t,"k",(function(){return _})),n.d(t,"g",(function(){return R})),n.d(t,"h",(function(){return D})),n.d(t,"j",(function(){return M})),n.d(t,"b",(function(){return z}));var r=n("+hG3"),a=n("RsxS"),s=n("0wNd"),i=n("Umw7"),o=n("rqsJ"),u=n("yK2v"),c=n("WHR0"),l=n("lIk/"),d=n("BLhf"),h=n("8BGy"),p=n("1VZP"),f=n("PVBm"),m=n("boNM"),b=n("KdhW"),g=n("qA+V"),y=n("Zz2E"),x=n("O/w9"),v=n("Mbu7"),w=n("2/MO"),O=n("ET5l"),k=n("nnua");class N{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[o,u,c,l,d,h,p,g,b,f,y,x,v,w,O,k,m].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],o=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e),{});let u=[];const c=[];let l={},d={};null!=t&&(l=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const h=Object.keys(o);h.forEach(e=>{const t=o[e];t.inputNames.forEach(e=>{const[n]=Object(i.b)(e);t.inputs.push(o[n]),o[n].children.push(t)})}),0===Object.keys(d).length?h.forEach(e=>{const t=o[e];0===t.children.length&&c.push(t)}):Object.keys(d).forEach(e=>{const[t]=Object(i.b)(e),n=o[t];null!=n&&(n.signatureKey=d[e],c.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(e=>{const[t]=Object(i.b)(e),n=o[t];n&&(n.signatureKey=l[e],u.push(n))}):u=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const f={nodes:o,inputs:u,outputs:c,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=Object(s.b)(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=j(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=j(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=D(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=D(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=C(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=C(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=R(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=R(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=S(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=S(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=z(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=z(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=_(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=M(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=M(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=E(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=E(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=$(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=$(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=A(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=A(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const a=[],s=[];e.signature.inputArg.forEach(e=>{const[t]=Object(i.b)(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:T(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n});Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach(e=>{const[n]=Object(i.b)(e);t.inputs.push(r[n]),r[n].children.push(t)})});const o=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=Object(i.b)(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))});const u=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function I(t,n){const a=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const n=Object(r.env)().global;if("undefined"!==typeof n.atob)return n.atob(t);if("undefined"!==typeof e)return new e(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return n?a:a.toLowerCase()}function j(e,t,n,r=!1){const a=e[t];return null!=a?I(a.s,r):n}function S(e,t,n){const r=e[t];return r?r.b:n}function C(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof a?a:parseInt(a,10)}function T(e){switch("string"===typeof e&&(e=a.a[e]),e){case a.a.DT_FLOAT:return"float32";case a.a.DT_INT32:case a.a.DT_INT64:case a.a.DT_INT8:case a.a.DT_UINT8:return"int32";case a.a.DT_BOOL:return"bool";case a.a.DT_DOUBLE:return"float32";case a.a.DT_STRING:return"string";default:return null}}function A(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function E(e,t,n){const r=e[t];return r&&r.type?T(r.type):n}function $(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>T(e)):n}function F(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"===typeof e.size?e.size:parseInt(e.size,10)):[]}function _(e,t,n){const r=e[t];return r&&r.shape?F(r.shape):n}function R(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"===typeof e?e:parseInt(e,10)):n}function D(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>I(e,r)):n}function M(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>F(e)):n}function z(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n("HDXh").Buffer)},"+hG3":function(e,t,n){"use strict";n.r(t),n.d(t,"AdadeltaOptimizer",(function(){return Xe})),n.d(t,"AdagradOptimizer",(function(){return Ze})),n.d(t,"AdamOptimizer",(function(){return et})),n.d(t,"AdamaxOptimizer",(function(){return rt})),n.d(t,"MomentumOptimizer",(function(){return st})),n.d(t,"Optimizer",(function(){return qe})),n.d(t,"RMSPropOptimizer",(function(){return it})),n.d(t,"SGDOptimizer",(function(){return at})),n.d(t,"Tensor",(function(){return q.a})),n.d(t,"TensorBuffer",(function(){return q.b})),n.d(t,"Variable",(function(){return q.c})),n.d(t,"Rank",(function(){return ot.a})),n.d(t,"sumOutType",(function(){return ot.b})),n.d(t,"upcastType",(function(){return ot.c})),n.d(t,"abs",(function(){return ut.b})),n.d(t,"acos",(function(){return ut.c})),n.d(t,"acosh",(function(){return ut.d})),n.d(t,"add",(function(){return ut.e})),n.d(t,"addN",(function(){return ut.f})),n.d(t,"all",(function(){return ut.g})),n.d(t,"any",(function(){return ut.h})),n.d(t,"argMax",(function(){return ut.i})),n.d(t,"argMin",(function(){return ut.j})),n.d(t,"asin",(function(){return ut.k})),n.d(t,"asinh",(function(){return ut.l})),n.d(t,"atan",(function(){return ut.m})),n.d(t,"atan2",(function(){return ut.n})),n.d(t,"atanh",(function(){return ut.o})),n.d(t,"avgPool",(function(){return ut.p})),n.d(t,"avgPool3d",(function(){return ut.q})),n.d(t,"basicLSTMCell",(function(){return ut.r})),n.d(t,"batchToSpaceND",(function(){return ut.w})),n.d(t,"batchNorm",(function(){return ut.s})),n.d(t,"batchNorm2d",(function(){return ut.t})),n.d(t,"batchNorm3d",(function(){return ut.u})),n.d(t,"batchNorm4d",(function(){return ut.v})),n.d(t,"bincount",(function(){return ut.x})),n.d(t,"broadcastTo",(function(){return ut.z})),n.d(t,"buffer",(function(){return ut.A})),n.d(t,"cast",(function(){return ut.B})),n.d(t,"ceil",(function(){return ut.C})),n.d(t,"clipByValue",(function(){return ut.D})),n.d(t,"clone",(function(){return ut.E})),n.d(t,"complex",(function(){return ut.F})),n.d(t,"concat",(function(){return ut.G})),n.d(t,"concat1d",(function(){return ut.H})),n.d(t,"concat2d",(function(){return ut.I})),n.d(t,"concat3d",(function(){return ut.J})),n.d(t,"concat4d",(function(){return ut.K})),n.d(t,"conv1d",(function(){return ut.L})),n.d(t,"conv2d",(function(){return ut.M})),n.d(t,"conv2dTranspose",(function(){return ut.N})),n.d(t,"conv3d",(function(){return ut.O})),n.d(t,"conv3dTranspose",(function(){return ut.P})),n.d(t,"cos",(function(){return ut.Q})),n.d(t,"cosh",(function(){return ut.R})),n.d(t,"cumsum",(function(){return ut.T})),n.d(t,"denseBincount",(function(){return ut.U})),n.d(t,"depthToSpace",(function(){return ut.V})),n.d(t,"depthwiseConv2d",(function(){return ut.W})),n.d(t,"diag",(function(){return ut.X})),n.d(t,"dilation2d",(function(){return ut.Y})),n.d(t,"div",(function(){return ut.Z})),n.d(t,"divNoNan",(function(){return ut.ab})),n.d(t,"dot",(function(){return ut.bb})),n.d(t,"einsum",(function(){return ut.db})),n.d(t,"elu",(function(){return ut.eb})),n.d(t,"equal",(function(){return ut.gb})),n.d(t,"erf",(function(){return ut.hb})),n.d(t,"exp",(function(){return ut.ib})),n.d(t,"expandDims",(function(){return ut.jb})),n.d(t,"expm1",(function(){return ut.kb})),n.d(t,"eye",(function(){return ut.lb})),n.d(t,"fill",(function(){return ut.nb})),n.d(t,"floor",(function(){return ut.ob})),n.d(t,"floorDiv",(function(){return ut.pb})),n.d(t,"gather",(function(){return ut.rb})),n.d(t,"greater",(function(){return ut.tb})),n.d(t,"greaterEqual",(function(){return ut.ub})),n.d(t,"imag",(function(){return ut.wb})),n.d(t,"isFinite",(function(){return ut.Ab})),n.d(t,"isInf",(function(){return ut.Bb})),n.d(t,"isNaN",(function(){return ut.Cb})),n.d(t,"leakyRelu",(function(){return ut.Db})),n.d(t,"less",(function(){return ut.Eb})),n.d(t,"lessEqual",(function(){return ut.Fb})),n.d(t,"linspace",(function(){return ut.Hb})),n.d(t,"localResponseNormalization",(function(){return ut.Ib})),n.d(t,"log",(function(){return ut.Jb})),n.d(t,"log1p",(function(){return ut.Kb})),n.d(t,"logSigmoid",(function(){return ut.Lb})),n.d(t,"logSoftmax",(function(){return ut.Mb})),n.d(t,"logSumExp",(function(){return ut.Nb})),n.d(t,"logicalAnd",(function(){return ut.Ob})),n.d(t,"logicalNot",(function(){return ut.Pb})),n.d(t,"logicalOr",(function(){return ut.Qb})),n.d(t,"logicalXor",(function(){return ut.Rb})),n.d(t,"matMul",(function(){return ut.Tb})),n.d(t,"max",(function(){return ut.Ub})),n.d(t,"maxPool",(function(){return ut.Vb})),n.d(t,"maxPool3d",(function(){return ut.Wb})),n.d(t,"maxPoolWithArgmax",(function(){return ut.Xb})),n.d(t,"maximum",(function(){return ut.Yb})),n.d(t,"mean",(function(){return ut.Zb})),n.d(t,"meshgrid",(function(){return ut.ac})),n.d(t,"min",(function(){return ut.bc})),n.d(t,"minimum",(function(){return ut.cc})),n.d(t,"mirrorPad",(function(){return ut.dc})),n.d(t,"mod",(function(){return ut.ec})),n.d(t,"moments",(function(){return ut.fc})),n.d(t,"mul",(function(){return ut.hc})),n.d(t,"multiRNNCell",(function(){return ut.ic})),n.d(t,"multinomial",(function(){return ut.jc})),n.d(t,"neg",(function(){return ut.kc})),n.d(t,"notEqual",(function(){return ut.mc})),n.d(t,"oneHot",(function(){return ut.nc})),n.d(t,"ones",(function(){return ut.oc})),n.d(t,"onesLike",(function(){return ut.pc})),n.d(t,"outerProduct",(function(){return ut.rc})),n.d(t,"pad",(function(){return ut.sc})),n.d(t,"pad1d",(function(){return ut.tc})),n.d(t,"pad2d",(function(){return ut.uc})),n.d(t,"pad3d",(function(){return ut.vc})),n.d(t,"pad4d",(function(){return ut.wc})),n.d(t,"pool",(function(){return ut.xc})),n.d(t,"pow",(function(){return ut.yc})),n.d(t,"prelu",(function(){return ut.zc})),n.d(t,"print",(function(){return ut.Ac})),n.d(t,"prod",(function(){return ut.Bc})),n.d(t,"rand",(function(){return ut.Cc})),n.d(t,"randomGamma",(function(){return ut.Dc})),n.d(t,"randomNormal",(function(){return ut.Ec})),n.d(t,"randomUniform",(function(){return ut.Fc})),n.d(t,"range",(function(){return ut.Gc})),n.d(t,"real",(function(){return ut.Hc})),n.d(t,"reciprocal",(function(){return ut.Ic})),n.d(t,"relu",(function(){return ut.Jc})),n.d(t,"relu6",(function(){return ut.Kc})),n.d(t,"reshape",(function(){return ut.Lc})),n.d(t,"reverse",(function(){return ut.Mc})),n.d(t,"reverse1d",(function(){return ut.Nc})),n.d(t,"reverse2d",(function(){return ut.Oc})),n.d(t,"reverse3d",(function(){return ut.Pc})),n.d(t,"reverse4d",(function(){return ut.Qc})),n.d(t,"round",(function(){return ut.Sc})),n.d(t,"rsqrt",(function(){return ut.Tc})),n.d(t,"scalar",(function(){return ut.Uc})),n.d(t,"selu",(function(){return ut.Wc})),n.d(t,"separableConv2d",(function(){return ut.Xc})),n.d(t,"setdiff1dAsync",(function(){return ut.Yc})),n.d(t,"sigmoid",(function(){return ut.Zc})),n.d(t,"sign",(function(){return ut.ad})),n.d(t,"sin",(function(){return ut.cd})),n.d(t,"sinh",(function(){return ut.dd})),n.d(t,"slice",(function(){return ut.ed})),n.d(t,"slice1d",(function(){return ut.fd})),n.d(t,"slice2d",(function(){return ut.gd})),n.d(t,"slice3d",(function(){return ut.hd})),n.d(t,"slice4d",(function(){return ut.id})),n.d(t,"softmax",(function(){return ut.jd})),n.d(t,"softplus",(function(){return ut.kd})),n.d(t,"spaceToBatchND",(function(){return ut.ld})),n.d(t,"fft",(function(){return ut.mb})),n.d(t,"ifft",(function(){return ut.vb})),n.d(t,"irfft",(function(){return ut.zb})),n.d(t,"rfft",(function(){return ut.Rc})),n.d(t,"split",(function(){return ut.pd})),n.d(t,"sqrt",(function(){return ut.qd})),n.d(t,"square",(function(){return ut.rd})),n.d(t,"squaredDifference",(function(){return ut.sd})),n.d(t,"squeeze",(function(){return ut.td})),n.d(t,"stack",(function(){return ut.ud})),n.d(t,"step",(function(){return ut.vd})),n.d(t,"stridedSlice",(function(){return ut.wd})),n.d(t,"sub",(function(){return ut.xd})),n.d(t,"sum",(function(){return ut.yd})),n.d(t,"tan",(function(){return ut.zd})),n.d(t,"tanh",(function(){return ut.Ad})),n.d(t,"tensor",(function(){return ut.Bd})),n.d(t,"tensor1d",(function(){return ut.Cd})),n.d(t,"tensor2d",(function(){return ut.Dd})),n.d(t,"tensor3d",(function(){return ut.Ed})),n.d(t,"tensor4d",(function(){return ut.Fd})),n.d(t,"tensor5d",(function(){return ut.Gd})),n.d(t,"tensor6d",(function(){return ut.Hd})),n.d(t,"tile",(function(){return ut.Id})),n.d(t,"topk",(function(){return ut.Jd})),n.d(t,"truncatedNormal",(function(){return ut.Ld})),n.d(t,"unique",(function(){return ut.Md})),n.d(t,"unsortedSegmentSum",(function(){return ut.Nd})),n.d(t,"unstack",(function(){return ut.Od})),n.d(t,"variable",(function(){return ut.Pd})),n.d(t,"where",(function(){return ut.Qd})),n.d(t,"whereAsync",(function(){return ut.Rd})),n.d(t,"zeros",(function(){return ut.Sd})),n.d(t,"zerosLike",(function(){return ut.Td})),n.d(t,"booleanMaskAsync",(function(){return ut.y})),n.d(t,"transpose",(function(){return ut.Kd})),n.d(t,"norm",(function(){return ut.lc})),n.d(t,"movingAverage",(function(){return ut.gc})),n.d(t,"scatterND",(function(){return ut.Vc})),n.d(t,"sparseToDense",(function(){return ut.nd})),n.d(t,"gatherND",(function(){return ut.sb})),n.d(t,"dropout",(function(){return ut.cb})),n.d(t,"enclosingPowerOfTwo",(function(){return ut.fb})),n.d(t,"cosineWindow",(function(){return ut.S})),n.d(t,"inTopKAsync",(function(){return ut.yb})),n.d(t,"op",(function(){return ut.qc})),n.d(t,"OP_SCOPE_SUFFIX",(function(){return ut.a})),n.d(t,"image",(function(){return ut.xb})),n.d(t,"linalg",(function(){return ut.Gb})),n.d(t,"losses",(function(){return ut.Sb})),n.d(t,"spectral",(function(){return ut.od})),n.d(t,"fused",(function(){return ut.qb})),n.d(t,"signal",(function(){return ut.bd})),n.d(t,"sparse",(function(){return ut.md})),n.d(t,"Reduction",(function(){return ct.a})),n.d(t,"train",(function(){return dt})),n.d(t,"enableProdMode",(function(){return Le.g})),n.d(t,"enableDebugMode",(function(){return Le.f})),n.d(t,"disableDeprecationWarnings",(function(){return Le.c})),n.d(t,"deprecationWarn",(function(){return Le.b})),n.d(t,"disposeVariables",(function(){return Le.e})),n.d(t,"engine",(function(){return Le.h})),n.d(t,"memory",(function(){return Le.m})),n.d(t,"profile",(function(){return Le.n})),n.d(t,"tidy",(function(){return Le.t})),n.d(t,"dispose",(function(){return Le.d})),n.d(t,"keep",(function(){return Le.l})),n.d(t,"time",(function(){return Le.u})),n.d(t,"setBackend",(function(){return Le.r})),n.d(t,"ready",(function(){return Le.o})),n.d(t,"getBackend",(function(){return Le.k})),n.d(t,"removeBackend",(function(){return Le.q})),n.d(t,"findBackend",(function(){return Le.i})),n.d(t,"findBackendFactory",(function(){return Le.j})),n.d(t,"registerBackend",(function(){return Le.p})),n.d(t,"backend",(function(){return Le.a})),n.d(t,"setPlatform",(function(){return Le.s})),n.d(t,"getKernel",(function(){return we.c})),n.d(t,"getGradient",(function(){return we.b})),n.d(t,"getKernelsForBackend",(function(){return we.d})),n.d(t,"registerKernel",(function(){return we.f})),n.d(t,"registerGradient",(function(){return we.e})),n.d(t,"unregisterKernel",(function(){return we.h})),n.d(t,"unregisterGradient",(function(){return we.g})),n.d(t,"copyRegisteredKernels",(function(){return we.a})),n.d(t,"customGrad",(function(){return Ke.a})),n.d(t,"grad",(function(){return Ke.b})),n.d(t,"grads",(function(){return Ke.c})),n.d(t,"valueAndGrad",(function(){return Ke.d})),n.d(t,"valueAndGrads",(function(){return Ke.e})),n.d(t,"variableGrads",(function(){return Ke.f})),n.d(t,"Environment",(function(){return h.b})),n.d(t,"env",(function(){return h.c})),n.d(t,"ENV",(function(){return h.a})),n.d(t,"version_core",(function(){return ze})),n.d(t,"nextFrame",(function(){return pt})),n.d(t,"browser",(function(){return s})),n.d(t,"io",(function(){return r})),n.d(t,"math",(function(){return a})),n.d(t,"serialization",(function(){return o})),n.d(t,"test_util",(function(){return De})),n.d(t,"util",(function(){return Me})),n.d(t,"backend_util",(function(){return c})),n.d(t,"tensor_util",(function(){return Re})),n.d(t,"slice_util",(function(){return Ee})),n.d(t,"gather_util",(function(){return i})),n.d(t,"scatter_util",(function(){return Ae})),n.d(t,"device_util",(function(){return an})),n.d(t,"kernel_impls",(function(){return l})),n.d(t,"KernelBackend",(function(){return un.b})),n.d(t,"DataStorage",(function(){return un.a})),n.d(t,"Abs",(function(){return ve.a})),n.d(t,"Acos",(function(){return ve.b})),n.d(t,"Acosh",(function(){return ve.c})),n.d(t,"Add",(function(){return ve.d})),n.d(t,"AddN",(function(){return ve.e})),n.d(t,"All",(function(){return ve.f})),n.d(t,"Any",(function(){return ve.g})),n.d(t,"ArgMax",(function(){return ve.h})),n.d(t,"ArgMin",(function(){return ve.i})),n.d(t,"Asin",(function(){return ve.j})),n.d(t,"Asinh",(function(){return ve.k})),n.d(t,"Atan",(function(){return ve.l})),n.d(t,"Atanh",(function(){return ve.n})),n.d(t,"Atan2",(function(){return ve.m})),n.d(t,"AvgPool",(function(){return ve.o})),n.d(t,"AvgPoolGrad",(function(){return ve.r})),n.d(t,"AvgPool3D",(function(){return ve.p})),n.d(t,"AvgPool3DGrad",(function(){return ve.q})),n.d(t,"BatchMatMul",(function(){return ve.s})),n.d(t,"BatchToSpaceND",(function(){return ve.t})),n.d(t,"Bincount",(function(){return ve.u})),n.d(t,"BroadcastTo",(function(){return ve.v})),n.d(t,"Cast",(function(){return ve.w})),n.d(t,"Ceil",(function(){return ve.x})),n.d(t,"ClipByValue",(function(){return ve.y})),n.d(t,"Complex",(function(){return ve.z})),n.d(t,"ComplexAbs",(function(){return ve.A})),n.d(t,"Concat",(function(){return ve.B})),n.d(t,"Conv2D",(function(){return ve.C})),n.d(t,"Conv2DBackpropFilter",(function(){return ve.D})),n.d(t,"Conv2DBackpropInput",(function(){return ve.E})),n.d(t,"Conv3D",(function(){return ve.F})),n.d(t,"Conv3DBackpropFilterV2",(function(){return ve.G})),n.d(t,"Conv3DBackpropInputV2",(function(){return ve.H})),n.d(t,"Cos",(function(){return ve.I})),n.d(t,"Cosh",(function(){return ve.J})),n.d(t,"Cumsum",(function(){return ve.L})),n.d(t,"CropAndResize",(function(){return ve.K})),n.d(t,"DenseBincount",(function(){return ve.M})),n.d(t,"DepthToSpace",(function(){return ve.N})),n.d(t,"DepthwiseConv2dNative",(function(){return ve.O})),n.d(t,"DepthwiseConv2dNativeBackpropFilter",(function(){return ve.P})),n.d(t,"DepthwiseConv2dNativeBackpropInput",(function(){return ve.Q})),n.d(t,"Diag",(function(){return ve.R})),n.d(t,"Dilation2D",(function(){return ve.S})),n.d(t,"Dilation2DBackpropInput",(function(){return ve.U})),n.d(t,"Dilation2DBackpropFilter",(function(){return ve.T})),n.d(t,"RealDiv",(function(){return ve.lc})),n.d(t,"Einsum",(function(){return ve.V})),n.d(t,"Elu",(function(){return ve.W})),n.d(t,"EluGrad",(function(){return ve.X})),n.d(t,"Erf",(function(){return ve.Z})),n.d(t,"Equal",(function(){return ve.Y})),n.d(t,"Exp",(function(){return ve.ab})),n.d(t,"ExpandDims",(function(){return ve.bb})),n.d(t,"Expm1",(function(){return ve.cb})),n.d(t,"FFT",(function(){return ve.db})),n.d(t,"Fill",(function(){return ve.eb})),n.d(t,"FlipLeftRight",(function(){return ve.fb})),n.d(t,"Floor",(function(){return ve.gb})),n.d(t,"FloorDiv",(function(){return ve.hb})),n.d(t,"FusedBatchNorm",(function(){return ve.jb})),n.d(t,"GatherV2",(function(){return ve.nb})),n.d(t,"GatherNd",(function(){return ve.mb})),n.d(t,"Greater",(function(){return ve.ob})),n.d(t,"GreaterEqual",(function(){return ve.pb})),n.d(t,"Identity",(function(){return ve.rb})),n.d(t,"IFFT",(function(){return ve.qb})),n.d(t,"Imag",(function(){return ve.sb})),n.d(t,"IsFinite",(function(){return ve.tb})),n.d(t,"IsInf",(function(){return ve.ub})),n.d(t,"IsNan",(function(){return ve.vb})),n.d(t,"LeakyRelu",(function(){return ve.yb})),n.d(t,"Less",(function(){return ve.zb})),n.d(t,"LessEqual",(function(){return ve.Ab})),n.d(t,"LinSpace",(function(){return ve.Bb})),n.d(t,"Log",(function(){return ve.Cb})),n.d(t,"Log1p",(function(){return ve.Db})),n.d(t,"LogicalAnd",(function(){return ve.Fb})),n.d(t,"LogicalNot",(function(){return ve.Gb})),n.d(t,"LogicalOr",(function(){return ve.Hb})),n.d(t,"LogSoftmax",(function(){return ve.Eb})),n.d(t,"LRN",(function(){return ve.wb})),n.d(t,"LRNGrad",(function(){return ve.xb})),n.d(t,"Max",(function(){return ve.Ib})),n.d(t,"Maximum",(function(){return ve.Ob})),n.d(t,"MaxPool",(function(){return ve.Jb})),n.d(t,"MaxPoolGrad",(function(){return ve.Mb})),n.d(t,"MaxPool3D",(function(){return ve.Kb})),n.d(t,"MaxPool3DGrad",(function(){return ve.Lb})),n.d(t,"MaxPoolWithArgmax",(function(){return ve.Nb})),n.d(t,"Mean",(function(){return ve.Pb})),n.d(t,"Min",(function(){return ve.Qb})),n.d(t,"Minimum",(function(){return ve.Rb})),n.d(t,"MirrorPad",(function(){return ve.Sb})),n.d(t,"Mod",(function(){return ve.Tb})),n.d(t,"Multinomial",(function(){return ve.Ub})),n.d(t,"Multiply",(function(){return ve.Vb})),n.d(t,"Neg",(function(){return ve.Wb})),n.d(t,"NotEqual",(function(){return ve.ac})),n.d(t,"NonMaxSuppressionV3",(function(){return ve.Xb})),n.d(t,"NonMaxSuppressionV4",(function(){return ve.Yb})),n.d(t,"NonMaxSuppressionV5",(function(){return ve.Zb})),n.d(t,"OnesLike",(function(){return ve.cc})),n.d(t,"OneHot",(function(){return ve.bc})),n.d(t,"Pack",(function(){return ve.dc})),n.d(t,"PadV2",(function(){return ve.ec})),n.d(t,"Pool",(function(){return ve.fc})),n.d(t,"Pow",(function(){return ve.gc})),n.d(t,"Prelu",(function(){return ve.hc})),n.d(t,"Prod",(function(){return ve.ic})),n.d(t,"Range",(function(){return ve.jc})),n.d(t,"Real",(function(){return ve.kc})),n.d(t,"Reciprocal",(function(){return ve.mc})),n.d(t,"Relu",(function(){return ve.nc})),n.d(t,"Reshape",(function(){return ve.pc})),n.d(t,"ResizeNearestNeighbor",(function(){return ve.sc})),n.d(t,"ResizeNearestNeighborGrad",(function(){return ve.tc})),n.d(t,"ResizeBilinear",(function(){return ve.qc})),n.d(t,"ResizeBilinearGrad",(function(){return ve.rc})),n.d(t,"Relu6",(function(){return ve.oc})),n.d(t,"Reverse",(function(){return ve.uc})),n.d(t,"Round",(function(){return ve.wc})),n.d(t,"Rsqrt",(function(){return ve.xc})),n.d(t,"ScatterNd",(function(){return ve.yc})),n.d(t,"Select",(function(){return ve.zc})),n.d(t,"Selu",(function(){return ve.Ac})),n.d(t,"Slice",(function(){return ve.Fc})),n.d(t,"Sin",(function(){return ve.Dc})),n.d(t,"Sinh",(function(){return ve.Ec})),n.d(t,"Sign",(function(){return ve.Cc})),n.d(t,"Sigmoid",(function(){return ve.Bc})),n.d(t,"Softplus",(function(){return ve.Hc})),n.d(t,"Sqrt",(function(){return ve.Mc})),n.d(t,"Sum",(function(){return ve.Sc})),n.d(t,"SpaceToBatchND",(function(){return ve.Ic})),n.d(t,"SplitV",(function(){return ve.Lc})),n.d(t,"Softmax",(function(){return ve.Gc})),n.d(t,"SparseReshape",(function(){return ve.Jc})),n.d(t,"SparseToDense",(function(){return ve.Kc})),n.d(t,"SquaredDifference",(function(){return ve.Oc})),n.d(t,"Square",(function(){return ve.Nc})),n.d(t,"StridedSlice",(function(){return ve.Qc})),n.d(t,"Sub",(function(){return ve.Rc})),n.d(t,"Tan",(function(){return ve.Tc})),n.d(t,"Tanh",(function(){return ve.Uc})),n.d(t,"Tile",(function(){return ve.Vc})),n.d(t,"TopK",(function(){return ve.Wc})),n.d(t,"Transform",(function(){return ve.Xc})),n.d(t,"Transpose",(function(){return ve.Yc})),n.d(t,"Unique",(function(){return ve.Zc})),n.d(t,"Unpack",(function(){return ve.ad})),n.d(t,"UnsortedSegmentSum",(function(){return ve.bd})),n.d(t,"ZerosLike",(function(){return ve.cd})),n.d(t,"Step",(function(){return ve.Pc})),n.d(t,"FromPixels",(function(){return ve.ib})),n.d(t,"RotateWithOffset",(function(){return ve.vc})),n.d(t,"_FusedMatMul",(function(){return ve.dd})),n.d(t,"FusedConv2D",(function(){return ve.kb})),n.d(t,"FusedDepthwiseConv2D",(function(){return ve.lb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return B})),n.d(r,"listModels",(function(){return L})),n.d(r,"moveModel",(function(){return V})),n.d(r,"removeModel",(function(){return P})),n.d(r,"browserFiles",(function(){return Q})),n.d(r,"browserHTTPRequest",(function(){return ce})),n.d(r,"concatenateArrayBuffers",(function(){return p.d})),n.d(r,"decodeWeights",(function(){return p.e})),n.d(r,"encodeWeights",(function(){return p.f})),n.d(r,"fromMemory",(function(){return he})),n.d(r,"getLoadHandlers",(function(){return y})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return p.g})),n.d(r,"getSaveHandlers",(function(){return g})),n.d(r,"http",(function(){return ue})),n.d(r,"isHTTPScheme",(function(){return ie})),n.d(r,"loadWeights",(function(){return re})),n.d(r,"registerLoadRouter",(function(){return b})),n.d(r,"registerSaveRouter",(function(){return m})),n.d(r,"weightsLoaderFactory",(function(){return ae})),n.d(r,"withSaveHandler",(function(){return pe}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return xe}));var s={};n.r(s),n.d(s,"fromPixelsAsync",(function(){return je})),n.d(s,"toPixels",(function(){return Se})),n.d(s,"fromPixels",(function(){return Ce}));var i={};n.r(i),n.d(i,"prepareAndValidate",(function(){return Te}));var o={};n.r(o),n.d(o,"Serializable",(function(){return $e})),n.d(o,"SerializationMap",(function(){return Fe})),n.d(o,"registerClass",(function(){return _e}));var u={};n.r(u),n.d(u,"segOpComputeOptimalWindowSize",(function(){return Qt})),n.d(u,"computeOutShape",(function(){return en})),n.d(u,"collectGatherOpShapeInfo",(function(){return tn}));var c={};n.r(c),n.d(c,"axesAreInnerMostDims",(function(){return ft.b})),n.d(c,"combineLocations",(function(){return ft.c})),n.d(c,"computeOutAndReduceShapes",(function(){return ft.d})),n.d(c,"expandShapeToKeepDim",(function(){return ft.e})),n.d(c,"assertAxesAreInnerMostDims",(function(){return ft.a})),n.d(c,"getAxesPermutation",(function(){return ft.f})),n.d(c,"getUndoAxesPermutation",(function(){return ft.h})),n.d(c,"getInnerMostAxes",(function(){return ft.g})),n.d(c,"getBroadcastDims",(function(){return mt.b})),n.d(c,"getReductionAxes",(function(){return mt.c})),n.d(c,"assertAndGetBroadcastShape",(function(){return mt.a})),n.d(c,"assertParamsConsistent",(function(){return bt})),n.d(c,"computeOutShape",(function(){return gt})),n.d(c,"computeDilation2DInfo",(function(){return yt.d})),n.d(c,"computePool2DInfo",(function(){return yt.e})),n.d(c,"computePool3DInfo",(function(){return yt.f})),n.d(c,"computeConv2DInfo",(function(){return yt.a})),n.d(c,"computeConv3DInfo",(function(){return yt.b})),n.d(c,"computeDefaultPad",(function(){return yt.c})),n.d(c,"tupleValuesAreOne",(function(){return yt.i})),n.d(c,"eitherStridesOrDilationsAreOne",(function(){return yt.h})),n.d(c,"convertConv2DDataFormat",(function(){return yt.g})),n.d(c,"getFusedDyActivation",(function(){return xt.c})),n.d(c,"getFusedBiasGradient",(function(){return xt.b})),n.d(c,"applyActivation",(function(){return xt.a})),n.d(c,"shouldFuse",(function(){return xt.d})),n.d(c,"PARALLELIZE_THRESHOLD",(function(){return vt})),n.d(c,"computeOptimalWindowSize",(function(){return wt})),n.d(c,"slice_util",(function(){return Ee})),n.d(c,"upcastType",(function(){return ot.c})),n.d(c,"getImageCenter",(function(){return Ot})),n.d(c,"getReshaped",(function(){return kt})),n.d(c,"getPermuted",(function(){return Nt})),n.d(c,"getReshapedPermuted",(function(){return It})),n.d(c,"getSliceBeginCoords",(function(){return jt})),n.d(c,"getSliceSize",(function(){return St})),n.d(c,"prepareAndValidate",(function(){return Te})),n.d(c,"validateUpdateShape",(function(){return Ae.validateUpdateShape})),n.d(c,"validateInput",(function(){return Ae.validateInput})),n.d(c,"calculateShapes",(function(){return Ae.calculateShapes})),n.d(c,"SELU_SCALEALPHA",(function(){return Ct.b})),n.d(c,"SELU_SCALE",(function(){return Ct.a})),n.d(c,"ERF_P",(function(){return Tt})),n.d(c,"ERF_A1",(function(){return At})),n.d(c,"ERF_A2",(function(){return Et})),n.d(c,"ERF_A3",(function(){return $t})),n.d(c,"ERF_A4",(function(){return Ft})),n.d(c,"ERF_A5",(function(){return _t})),n.d(c,"warn",(function(){return Rt})),n.d(c,"log",(function(){return Dt})),n.d(c,"mergeRealAndImagArrays",(function(){return Mt})),n.d(c,"splitRealAndImagArrays",(function(){return zt})),n.d(c,"complexWithEvenIndex",(function(){return Lt})),n.d(c,"complexWithOddIndex",(function(){return Pt})),n.d(c,"getComplexWithIndex",(function(){return Bt})),n.d(c,"assignToTypedArray",(function(){return Vt})),n.d(c,"exponents",(function(){return Wt})),n.d(c,"exponent",(function(){return Ut})),n.d(c,"decodeEinsumEquation",(function(){return Kt})),n.d(c,"getEinsumPermutation",(function(){return Ht})),n.d(c,"checkEinsumDimSizes",(function(){return qt})),n.d(c,"getEinsumComputePath",(function(){return Xt})),n.d(c,"isIdentityPermutation",(function(){return Yt})),n.d(c,"prepareSplitSize",(function(){return Jt})),n.d(c,"segment_util",(function(){return u})),n.d(c,"fromUint8ToStringArray",(function(){return nn})),n.d(c,"fromStringArrayToUint8",(function(){return rn}));var l={};n.r(l),n.d(l,"nonMaxSuppressionV3Impl",(function(){return sn.a})),n.d(l,"nonMaxSuppressionV4Impl",(function(){return sn.b})),n.d(l,"nonMaxSuppressionV5Impl",(function(){return sn.c})),n.d(l,"whereImpl",(function(){return on.a}));var d=n("auKK"),h=(n("Kajj"),n("szMd")),p=n("NQ+5");class f{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==f.instance&&(f.instance=new f),f.instance}static registerSaveRouter(e){f.getInstance().saveRouters.push(e)}static registerLoadRouter(e){f.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return f.getHandlers(e,"save")}static getLoadHandlers(e,t){return f.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?f.getInstance().loadRouters:f.getInstance().saveRouters).forEach(t=>{const a=t(e,n);null!==a&&r.push(a)}),r}}const m=e=>f.registerSaveRouter(e),b=e=>f.registerLoadRouter(e),g=e=>f.getSaveHandlers(e),y=(e,t)=>f.getLoadHandlers(e,t);function x(){if(!Object(h.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function v(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class w{constructor(e){if(this.indexedDB=x(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>v(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Object(p.g)(t),s=a.transaction("model_info_store","readwrite");let i=s.objectStore("model_info_store");const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction("models_store","readwrite");const o=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore("model_info_store");const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}}w.URL_SCHEME="indexeddb://";const O=e=>{return Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(w.URL_SCHEME)?(t=e.slice(w.URL_SCHEME.length),new w(t)):null;var t};f.registerSaveRouter(O),f.registerLoadRouter(O);class k{constructor(){this.indexedDB=x()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>v(n),n.onsuccess=()=>{const r=n.result,a=r.transaction("model_info_store","readonly"),s=a.objectStore("model_info_store").getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(w.URL_SCHEME)?t.slice(w.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>v(r),r.onsuccess=()=>{const a=r.result,s=a.transaction("model_info_store","readwrite"),i=s.objectStore("model_info_store"),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}}var N=n("atXS");const I="tensorflowjs_models",j="info",S="model_topology",C="weight_specs",T="weight_data",A="model_metadata";function E(e){return{info:[I,e,j].join("/"),topology:[I,e,S].join("/"),weightSpecs:[I,e,C].join("/"),weightData:[I,e,T].join("/"),modelMetadata:[I,e,A].join("/")}}function $(e){const t=e.split("/");if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join("/")}class F{constructor(e){if(!Object(h.c)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=E(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=Object(p.g)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(p.a)(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(p.b)(s),t}}F.URL_SCHEME="localstorage://";const _=e=>{return Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(F.URL_SCHEME)?(t=e.slice(F.URL_SCHEME.length),new F(t)):null;var t};f.registerSaveRouter(_),f.registerLoadRouter(_);class R{constructor(){Object(N.b)(Object(h.c)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(N.b)("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=I+"/",n="/"+j;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[$(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=E(e=(t=e).startsWith(F.URL_SCHEME)?t.slice(F.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class D{constructor(){this.managers={}}static getInstance(){return null==D.instance&&(D.instance=new D),D.instance}static registerManager(e,t){Object(N.b)(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),Object(N.b)(e.length>0,()=>"scheme must not be an empty string.");const n=D.getInstance();Object(N.b)(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function M(e){if(-1===e.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+D.getSchemes().join(","));return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function z(e,t,n=!1){Object(N.b)(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=f.getLoadHandlers(e);Object(N.b)(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),Object(N.b)(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const a=r[0],s=f.getSaveHandlers(t);Object(N.b)(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),Object(N.b)(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=s[0],o=M(e).scheme,u=M(e).path,c=o===M(e).scheme,l=await a.load();n&&c&&await D.getManager(o).removeModel(u);const d=await i.save(l);return n&&!c&&await D.getManager(o).removeModel(u),d.modelArtifactsInfo}async function L(){const e=D.getSchemes(),t={};for(const n of e){const e=await D.getManager(n).listModels();for(const r in e){t[n+"://"+r]=e[r]}}return t}async function P(e){const t=M(e);return D.getManager(t.scheme).removeModel(t.path)}async function B(e,t){return z(e,t,!1)}async function V(e,t){return z(e,t,!0)}class W{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(h.c)().get("IS_BROWSER")){Object(h.c)().setPlatform("browser",new W);try{D.registerManager(F.URL_SCHEME,new R)}catch(cn){}try{D.registerManager(w.URL_SCHEME,new k)}catch(cn){}}n("SwXZ");var U=n("BD40"),G=n("3rNm"),K=n("8Km0"),H=n("dWjR"),q=n("NNfn");Object(d.b)();const X={buffer:U.a,cast:G.a,clone:K.a,print:H.a};Object(q.f)(X);function Y(e){return new Promise(e=>setTimeout(e)).then(e)}class Z{constructor(e){if(!Object(h.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Z.URL_SCHEME)&&(e=e.slice(Z.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await Y(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Y(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(p.g)(e)}}}}Z.URL_SCHEME="downloads://";class J{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error("modelTopology field is missing from file "+e.name));0===t.length&&n({modelTopology:i});const o=s.weightsManifest;if(null==o)return void r(new Error("weightManifest field is missing from file "+e.name));let u;try{u=this.checkManifestAndWeightFiles(o,t)}catch(cn){return void r(cn)}const c=[],l=[],d=[];o.forEach(e=>{e.paths.forEach(e=>{l.push(e),d.push(null)}),c.push(...e.weights)}),o.forEach(e=>{e.paths.forEach(e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,a=l.indexOf(e);if(d[a]=r,-1===d.indexOf(null)){const e={modelTopology:i,weightSpecs:c,weightData:Object(p.d)(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(e.signature=s.signature),null!=s.userDefinedMetadata&&(e.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(e.modelInitializer=s.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])})})},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)})}checkManifestAndWeightFiles(e,t){const n=[],r=t.map(e=>Object(p.c)(e.name)),a={};for(const s of e)s.paths.forEach(e=>{const s=Object(p.c)(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[e]=t[r.indexOf(s)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}}function Q(e){return new J(e)}function ee(e,t,n,r){!function(e){Object(N.b)(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){Object(N.b)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),Object(N.b)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),Object(N.b)(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map(s=>(s.then(s=>{const i=n+ ++a/e.length*(r-n);return t(i),s}),s)))}f.registerSaveRouter(e=>Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Z.URL_SCHEME)?function(e="model"){return new Z(e)}(e.slice(Z.URL_SCHEME.length)):null);var te=n("mEeB");async function ne(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(h.c)().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await ee(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await ee(a,t.onProgress,.5,1)}async function re(e,t="",n,r){return ae(e=>ne(e,{requestInit:r}))(e,t,n)}function ae(e){return async(t,n="",r)=>{const a=t.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=te.a[u]*N.O(e.shape),l=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach((t,n)=>{t===e.name&&(l(),i[n]=!0)}):l(),o.push(e.name),n+=c})}),!i.every(e=>e)){const e=r.filter((e,t)=>!i[t]);throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".")}const u=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),c=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)})});const l=await e(c),d={};let h=0;return u.forEach(e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=l[h+t].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(l[h+t]);i.set(e,o),o+=e.byteLength}s[e].forEach(e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(p.e)(t,[e.manifestEntry]);for(const r in n)d[r]=n[r]}),h+=n}),d}}class se{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(N.b)("function"===typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Object(h.c)().platform.fetch,Object(N.b)(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&Object(N.b)(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(p.g)(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(p){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,i=t.format,o=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,l;if(null!=r){const e=await this.loadWeights(r);[c,l]=e}const d={modelTopology:n,weightSpecs:c,weightData:l,generatedBy:a,convertedBy:s,format:i};null!=o&&(d.signature=o),null!=u&&(d.userDefinedMetadata=u);const h=t.modelInitializer;return h&&(d.modelInitializer=h),d}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(const c of e)s.push(...c.weights);const i=[],o=[];for(const c of e)for(const e of c.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));const u=await ne(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(p.d)(u)]}}function ie(e){return null!=e.match(se.URL_SCHEME_REGEX)}se.URL_SCHEME_REGEX=/^https?:\/\//;const oe=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>ie(e)):ie(e),n)return ue(e,t)}return null};function ue(e,t){return new se(e,t)}function ce(e,t){return ue(e,t)}f.registerSaveRouter(oe),f.registerLoadRouter(oe);class le{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class de{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function he(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new le(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new le({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new le({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function pe(e){return new de(e)}var fe=n("o/e8"),me=n("SHv8"),be=n("4iwy"),ge=n("VO80"),ye=n("yRKQ");const xe=Object(ge.b)({confusionMatrix_:function(e,t,n){const r=Object(fe.a)(e,"labels","confusionMatrix"),a=Object(fe.a)(t,"predictions","confusionMatrix");N.b(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),N.b(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),N.b(1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),N.b(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),N.b(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const s=Object(be.a)(Object(G.a)(r,"int32"),n),i=Object(be.a)(Object(G.a)(a,"int32"),n),o=Object(ye.a)(s),u=Object(me.a)(o,i);return Object(G.a)(u,"int32")}});var ve=n("wFtI"),we=n("c7gn"),Oe=n("BbuY");let ke;function Ne(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(we.c)(ve.ib,d.a.backendName)){const n={pixels:e},r={numChannels:t};return d.a.runKernel(ve.ib,n,r)}const[u,c]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,h;if(i?l=e.getContext("2d").getImageData(0,0,u,c).data:r||n?l=e.data:(s||a||o)&&(null==ke&&(ke=document.createElement("canvas").getContext("2d")),ke.canvas.width=u,ke.canvas.height=c,ke.drawImage(e,0,0,u,c),l=ke.getImageData(0,0,u,c).data),4===t)h=new Int32Array(l);else{const e=u*c;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=l[4*n+e]}const p=[c,u,t];return Object(Oe.a)(h,p,"int32")}function Ie(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function je(e,t=3){let n=null;if(Object(h.c)().getBool("WRAP_TO_IMAGEBITMAP")&&Ie(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ne(n,t)}async function Se(e,t){let n=Object(fe.a)(e,"img","toPixels");if(!(e instanceof q.a)){const e=n;n=Object(G.a)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let c=0;c<r*a;++c){const e=[0,0,0,255];for(let r=0;r<s;r++){const t=i[c*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*c;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Ce=Object(ge.b)({fromPixels_:Ne});function Te(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(N.O)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let d=0;d<a.length-1;++d)i*=a[d];const o=e.shape,u=a.slice();u.pop();let c=1;for(let d=s;d<n;++d)c*=o[d],u.push(o[d]);const l=[...Object(N.j)(e.shape).map(e=>e/c),1].slice(0,s);return[u,i,c,l]}var Ae=n("o0+U"),Ee=n("Xr0w");class $e{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Fe{constructor(){this.classNameMap={}}static getMap(){return null==Fe.instance&&(Fe.instance=new Fe),Fe.instance}static register(e){Fe.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function _e(e){Object(N.b)(null!=e.className,()=>"Class being registered does not have the static className property defined."),Object(N.b)("string"===typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),Object(N.b)(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Fe.register(e)}var Re=n("dsKV"),De=n("1WXW"),Me=n("6366");const ze="3.5.0";var Le=n("wE5H"),Pe=n("kRdc"),Be=n("x3y4"),Ve=n("parS"),We=n("Fjpt"),Ue=n("k7Jv"),Ge=n("oJu+"),Ke=n("U45G"),He=n("AV8V");class qe extends $e{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return Object(Le.d)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Object(Ke.f)(e,t)}dispose(){null!=this.iterations_&&Object(Le.d)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(He.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(qe,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Xe extends qe{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=d.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=d.a.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:Object(Le.t)(()=>Object(Ge.a)(r).variable(false))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:Object(Le.t)(()=>Object(Ge.a)(r).variable(false))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Object(Le.t)(()=>{const e=Object(Pe.a)(Object(Ve.a)(s,this.rho),Object(Ve.a)(Object(Ue.a)(a),1-this.rho)),t=Object(Ve.a)(Object(Be.a)(Object(We.a)(Object(Pe.a)(i,this.epsilon)),Object(We.a)(Object(Pe.a)(s,this.epsilon))),a),n=Object(Pe.a)(Object(Ve.a)(i,this.rho),Object(Ve.a)(Object(Ue.a)(t),1-this.rho));s.assign(e),i.assign(n);const o=Object(Pe.a)(Object(Ve.a)(t,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(Le.d)(this.accumulatedGrads.map(e=>e.variable)),Object(Le.d)(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(false)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Xe.className="Adadelta",_e(Xe);var Ye=n("RrjA");class Ze extends qe{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=d.a.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:Object(Le.t)(()=>Object(Ye.a)(r.shape,this.initialAccumulatorValue).variable(e))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Object(Le.t)(()=>{const e=Object(Pe.a)(s,Object(Ue.a)(a));s.assign(e);const t=Object(Pe.a)(Object(Ve.a)(Object(Be.a)(a,Object(We.a)(Object(Pe.a)(e,d.a.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(Le.d)(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Ze.className="Adagrad",_e(Ze);var Je=n("yfHJ"),Qe=n("oAkI");class et extends qe{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(Le.t)(()=>{this.accBeta1=Object(He.a)(t).variable(),this.accBeta2=Object(He.a)(n).variable()}),null==r&&(this.epsilon=d.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Object(Le.t)(()=>{const n=Object(Qe.a)(1,this.accBeta1),r=Object(Qe.a)(1,this.accBeta2);t.forEach((t,a)=>{const s=d.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Object(Le.t)(()=>Object(Ge.a)(s).variable(false))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:t+"/v",variable:Object(Le.t)(()=>Object(Ge.a)(s).variable(false))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=Object(Pe.a)(Object(Ve.a)(o,this.beta1),Object(Ve.a)(i,1-this.beta1)),l=Object(Pe.a)(Object(Ve.a)(u,this.beta2),Object(Ve.a)(Object(Ue.a)(i),1-this.beta2)),h=Object(Be.a)(c,n),p=Object(Be.a)(l,r);o.assign(c),u.assign(l);const f=Object(Pe.a)(Object(Ve.a)(Object(Be.a)(h,Object(Pe.a)(Object(We.a)(p),this.epsilon)),-this.learningRate),s);s.assign(f)}),this.accBeta1.assign(Object(Ve.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(Ve.a)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(Le.d)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Object(Le.d)(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),Object(Le.t)(()=>{this.accBeta1.assign(Object(Je.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(Je.a)(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(false)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}et.className="Adam",_e(et);var tt=n("iuCH"),nt=n("CfTU");class rt extends qe{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(Le.t)(()=>{this.iteration=Object(He.a)(0).variable(),this.accBeta1=Object(He.a)(t).variable()}),null==r&&(this.epsilon=d.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Object(Le.t)(()=>{const n=Object(Qe.a)(1,this.accBeta1),r=Object(Be.a)(-this.learningRate,Object(Pe.a)(Object(Ve.a)(this.iteration,this.decay),1));t.forEach((t,a)=>{const s=d.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Object(Ge.a)(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:t+"/v",variable:Object(Ge.a)(s).variable(false)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=Object(Pe.a)(Object(Ve.a)(o,this.beta1),Object(Ve.a)(i,1-this.beta1)),l=Object(Ve.a)(u,this.beta2),h=Object(tt.a)(i),p=Object(nt.a)(l,h);o.assign(c),u.assign(p);const f=Object(Pe.a)(Object(Ve.a)(Object(Be.a)(r,n),Object(Be.a)(c,Object(Pe.a)(p,this.epsilon))),s);s.assign(f)}),this.iteration.assign(Object(Pe.a)(this.iteration,1)),this.accBeta1.assign(Object(Ve.a)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(Le.d)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Object(Le.d)(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}rt.className="Adamax",_e(rt);class at extends qe{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=d.a.registeredVariables[t];Object(Le.t)(()=>{const e=Object(Pe.a)(Object(Ve.a)(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Object(Le.l)(Object(He.a)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}at.className="SGD",_e(at);class st extends at{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Object(He.a)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=d.a.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:Object(Le.t)(()=>Object(Ge.a)(r).variable(e))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Object(Le.t)(()=>{let e;const t=Object(Pe.a)(Object(Ve.a)(this.m,a),s);e=this.useNesterov?Object(Pe.a)(Object(Ve.a)(this.c,Object(Pe.a)(s,Object(Ve.a)(t,this.m))),r):Object(Pe.a)(Object(Ve.a)(this.c,t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(Le.d)(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}st.className="Momentum",_e(st);class it extends qe{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=d.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=d.a.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:Object(Le.t)(()=>Object(Ge.a)(r).variable(false))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:Object(Le.t)(()=>Object(Ge.a)(r).variable(false))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:Object(Le.t)(()=>Object(Ge.a)(r).variable(false))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Object(Le.t)(()=>{const e=Object(Pe.a)(Object(Ve.a)(s,this.decay),Object(Ve.a)(Object(Ue.a)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,o=Object(Pe.a)(Object(Ve.a)(t,this.decay),Object(Ve.a)(a,1-this.decay)),u=Object(Be.a)(Object(Ve.a)(a,this.learningRate),Object(We.a)(Object(Qe.a)(e,Object(Pe.a)(Object(Ue.a)(o),this.epsilon)))),c=Object(Pe.a)(Object(Ve.a)(i,this.momentum),u);s.assign(e),t.assign(o),i.assign(c);const l=Object(Qe.a)(r,c);r.assign(l)}else{const e=Object(Pe.a)(Object(Ve.a)(s,this.decay),Object(Ve.a)(Object(Ue.a)(a),1-this.decay)),t=Object(Pe.a)(Object(Ve.a)(i,this.momentum),Object(Be.a)(Object(Ve.a)(a,this.learningRate),Object(We.a)(Object(Pe.a)(e,this.epsilon))));s.assign(e),i.assign(t);const n=Object(Qe.a)(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(Le.d)(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(Le.d)(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Object(Le.d)(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(false)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(false)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}it.className="RMSProp",_e(it);var ot=n("I79q"),ut=n("EysY"),ct=n("V+B2");class lt{static sgd(e){return new at(e)}static momentum(e,t,n=!1){return new st(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new it(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new et(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Xe(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new rt(e,t,n,r,a)}static adagrad(e,t=.1){return new Ze(e,t)}}const dt={sgd:lt.sgd,momentum:lt.momentum,adadelta:lt.adadelta,adagrad:lt.adagrad,rmsprop:lt.rmsprop,adamax:lt.adamax,adam:lt.adam},ht="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function pt(){return new Promise(e=>ht(()=>e()))}var ft=n("NuWS"),mt=n("Um8L");function bt(e,t){const n=e[0].length;e.forEach((e,t)=>{N.b(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),N.b(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)N.b(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function gt(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var yt=n("uBja"),xt=n("R0ls");const vt=30;function wt(e){return e<=vt?e:Object(N.G)(e,Math.floor(Math.sqrt(e)))}function Ot(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function kt(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Nt(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function It(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function jt(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function St(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var Ct=n("fN6/");const Tt=.3275911,At=.254829592,Et=-.284496736,$t=1.421413741,Ft=-1.453152027,_t=1.061405429;function Rt(...e){Object(h.c)().getBool("IS_TEST")||console.warn(...e)}function Dt(...e){Object(h.c)().getBool("IS_TEST")||console.log(...e)}function Mt(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function zt(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Lt(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Pt(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Bt(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Vt(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Wt(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Ut(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Gt=/->/g;function Kt(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Gt,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");Object(N.b)(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<a.length;++d){const e=a[d];if(!s.some(t=>-1!==t.indexOf(e)))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<r.length;++d){const e=r[d];-1===o.indexOf(e)&&","!==e&&o.push(e)}const u=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let e=0;e<s[d].length;++e)u[d].push(o.indexOf(s[d][e]))}const c=o.length,l=[];for(let d=a.length;d<c;++d)l.push(d);return{allDims:o,summedDims:l,idDims:u}}function Ht(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;const r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function qt(e,t,n){const r=new Array(e);for(let a=0;a<n.length;++a){const e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:Object(N.b)(r[t[a][n]]===e[n],()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension `+e[n])}}function Xt(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);const s=[];for(let i=0;i<n.length;++i){const e=Zt(t,n[i]);for(const t of e)-1===s.indexOf(t)&&(r[i].push(t),s.push(t))}return{path:n,steps:r}}function Yt(e){return e.every((e,t)=>e===t)}function Zt(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Jt(e,t,n=0){let r=[];if("number"===typeof t)Object(N.b)(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);Object(N.b)(a<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}Object(N.b)(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function Qt(e,t){let n,r=!1;for(e<=vt?(n=e,r=!0):n=Object(N.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(N.G)(e,n+1);return n}function en(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function tn(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const i=e.shape[n],o=[];let u=1,c=1,l=1;for(let d=0;d<r;++d)o.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<n;d++)o.push(e.shape[d]),c*=e.shape[d];for(let d=r;d<a;d++)o.push(t.shape[d]);for(let d=n+1;d<s;d++)o.push(e.shape[d]),l*=e.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:i,outputShape:o}}function nn(e){try{return e.map(e=>Object(Me.decodeString)(e))}catch(cn){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+cn)}}function rn(e){return e.map(e=>Object(Me.encodeString)(e))}var an=n("ftYm"),sn=n("g4m1"),on=n("AoCb"),un=n("i4e/")},"/7N0":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sigmoid_:function(e){const t={x:Object(s.a)(e,"x","sigmoid")};return r.a.runKernel(a.Bc,t)}})},"/AvP":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({isFinite_:function(e){const t={x:Object(s.a)(e,"x","isFinite")};return r.a.runKernel(a.tb,t)}})},"02mo":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({floor_:function(e){const t={x:Object(s.a)(e,"x","floor")};return r.a.runKernel(a.gb,t)}})},"0I63":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({reverse_:function(e,t){const n={x:Object(s.a)(e,"x","reverse")},i={dims:t};return r.a.runKernel(a.uc,n,i)}})},"0ahe":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({atanh_:function(e){const t={x:Object(s.a)(e,"x","atanh")};return r.a.runKernel(a.n,t)}})},"0fRV":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("o/e8"),a=n("atXS"),s=n("VO80"),i=n("NclT");const o=Object(s.b)({squeeze_:function(e,t){const n=Object(r.a)(e,"x","squeeze");return Object(i.a)(n,Object(a.Q)(n.shape,t).newShape)}})},"0l+w":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("o/e8"),a=n("Um8L"),s=n("4zPZ"),i=n("7wDt"),o=n("8YN0"),u=n("VO80");const c=Object(u.b)({logicalXor_:function(e,t){const n=Object(r.a)(e,"a","logicalXor","bool"),u=Object(r.a)(t,"b","logicalXor","bool");return Object(a.a)(n.shape,u.shape),Object(s.a)(Object(o.a)(e,t),Object(i.a)(Object(s.a)(e,t)))}})},"0wNd":function(e,t,n){"use strict";n.d(t,"c",(function(){return a})),n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i}));const r={};function a(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};r[e]=n}function s(e){return r[e]}function i(e){delete r[e]}},"0wrZ":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({tan_:function(e){const t={x:Object(s.a)(e,"x","tan")};return r.a.runKernel(a.Tc,t)}})},1:function(e,t){},"1/IK":function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},"17CO":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({real_:function(e){const t={input:Object(s.a)(e,"input","real")};return r.a.runKernel(a.kc,t)}})},"1N4k":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({notEqual_:function(e,t){let n=Object(i.a)(e,"a","notEqual"),u=Object(i.a)(t,"b","notEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.ac,c)}})},"1OSX":function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return i}));var r=n("YSVl");n("1WXW");class a{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class s{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class i{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},"1U0N":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({stack_:function(e,t=0){const n=Object(s.b)(e,"tensors","stack","string_or_numeric");i.b(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&i.b(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const o=n,u={axis:t};return r.a.runKernel(a.dc,o,u)}})},"1VZP":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},"1WXW":function(e,t,n){"use strict";n.r(t),n.d(t,"TEST_EPSILON_FLOAT16",(function(){return o})),n.d(t,"expectArraysClose",(function(){return u})),n.d(t,"testEpsilon",(function(){return c})),n.d(t,"expectPromiseToFail",(function(){return d})),n.d(t,"expectArraysEqual",(function(){return h})),n.d(t,"expectNumbersClose",(function(){return p})),n.d(t,"expectValuesInRange",(function(){return m})),n.d(t,"expectArrayBuffersEqual",(function(){return b})),n.d(t,"encodeStrings",(function(){return g}));var r=n("auKK"),a=n("o/e8"),s=n("atXS"),i=n("6366");const o=.1;function u(e,t,n){return null==n&&(n=c()),l(e,t,(e,t)=>f(e,t,n))}function c(){return 32===r.a.backend.floatPrecision()?.001:o}function l(e,t,n){let r=!0;if((Object(s.A)(e)||Object(s.A)(t))&&(r=!1),Object(s.A)(e)&&Object(s.A)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(e)&&Array.isArray(t)){const n=Object(a.c)(e),r=Object(a.c)(t);if(!Object(s.a)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const i=Object(s.A)(e)?e:Object(s.m)(e),o=Object(s.A)(t)?t:Object(s.m)(t);if(i.length!==o.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs expected: ${o.length}.\nActual:   ${i}.\nExpected: ${o}.`);for(let a=0;a<o.length;++a){const e=i[a],t=o[a];if(!n(e,t))throw new Error(`Arrays differ: actual[${a}] = ${e}, expected[${a}] = ${t}.\nActual:   ${i}.\nExpected: ${o}.`)}}function d(e,t){e().then(()=>t.fail(),()=>t())}function h(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return Object(s.z)(e)||Object(s.z)(e[0])||Object(s.z)(t)||Object(s.z)(t[0])?l(e,n,(e,t)=>e==t):l(e,t,(e,t)=>f(e,t,0))}function p(e,t,n){if(null==n&&(n=c()),!f(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function f(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function m(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function b(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function g(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?g(n):e[t]=Object(i.encodeString)(n)}return e}},2:function(e,t){},"2/MO":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},"20lx":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({argMin_:function(e,t=0){const n={x:Object(s.a)(e,"x","argMin")},i={axis:t};return r.a.runKernel(a.i,n,i)}})},"2ugP":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({expandDims_:function(e,t=0){const n=Object(s.a)(e,"x","expandDims","string_or_numeric");i.b(t<=n.rank,()=>"Axis must be <= rank of the tensor");const o={input:n},u={dim:t};return r.a.runKernel(a.bb,o,u)}})},3:function(e,t){},"34HJ":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({all_:function(e,t=null,n=!1){const i={x:Object(s.a)(e,"x","all","bool")},o={axis:t,keepDims:n};return r.a.runKernel(a.f,i,o)}})},"3BSK":function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return i}));var r=n("+hG3"),a=n("w4jT"),s=n("TPxA");class i extends a.a{decodeUTF8(){return new o(this)}}class o extends s.a{constructor(e){super(),this.upstream=e,this.impl=new u(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class u extends a.b{constructor(e){if(super(),this.upstream=e,Object(r.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(4);this.decoder=new e("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const t=await this.upstream.next();let n,a;return!t.done&&(n=t.value,a=Object(r.env)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(e.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n("HDXh").Buffer)},"3FnS":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({asinh_:function(e){const t={x:Object(s.a)(e,"x","asinh")};return r.a.runKernel(a.k,t)}})},"3X4V":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({conv2d_:function(e,t,n,u,l="NHWC",d=[1,1],h){const p=Object(s.a)(e,"x","conv2d"),f=Object(s.a)(t,"filter","conv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.b(4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),i.b(4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+f.rank+"."),null!=h&&i.b(i.v(u),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${u}.`);const g="NHWC"===l?m.shape[3]:m.shape[1];i.b(g===f.shape[2],()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`),i.b(o.h(n,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`);const y={x:m,filter:f},x={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h},v=r.a.runKernel(a.C,y,x);return b?Object(c.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},"3hph":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({stridedSlice_:function(e,t,n,i,o=0,u=0,c=0,l=0,d=0){const h={x:Object(s.a)(e,"x","stridedSlice")},p={begin:t,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:d};return r.a.runKernel(a.Qc,h,p)}})},"3niX":function(e,t,n){"use strict";t.__esModule=!0,t.flush=function(){var e=s.cssRules();return s.flush(),e},t.default=void 0;var r,a=n("q1tI");var s=new(((r=n("SevZ"))&&r.__esModule?r:{default:r}).default),i=function(e){var t,n;function r(t){var n;return(n=e.call(this,t)||this).prevProps={},n}n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,r.dynamic=function(e){return e.map((function(e){var t=e[0],n=e[1];return s.computeId(t,n)})).join(" ")};var a=r.prototype;return a.shouldComponentUpdate=function(e){return this.props.id!==e.id||String(this.props.dynamic)!==String(e.dynamic)},a.componentWillUnmount=function(){s.remove(this.props)},a.render=function(){return this.shouldComponentUpdate(this.prevProps)&&(this.prevProps.id&&s.remove(this.prevProps),s.add(this.props),this.prevProps=this.props),null},r}(a.Component);t.default=i},"3rNm":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({cast_:function(e,t){const n=Object(s.a)(e,"x","cast");if(!i.B(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:t};return r.a.runKernel(a.w,o,u)}})},4:function(e,t){},"4FMF":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("3rNm"),o=n("VO80");const u=Object(o.b)({sum_:function(e,t=null,n=!1){let o=Object(s.a)(e,"x","sum");"bool"===o.dtype&&(o=Object(i.a)(o,"int32"));const u={x:o},c={axis:t,keepDims:n};return r.a.runKernel(a.Sc,u,c)}})},"4QEz":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({localResponseNormalization_:function(e,t=5,n=1,o=1,c=.5){const l=Object(s.a)(e,"x","localResponseNormalization");i.b(4===l.rank||3===l.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`),i.b(i.v(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let d=l,h=!1;3===l.rank&&(h=!0,d=Object(u.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const p={x:d},f={depthRadius:t,bias:n,alpha:o,beta:c},m=r.a.runKernel(a.wb,p,f);return h?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},"4f3O":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({less_:function(e,t){let n=Object(i.a)(e,"a","less"),u=Object(i.a)(t,"b","less");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.zb,c)}})},"4iwy":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({oneHot_:function(e,t,n=1,i=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const o={indices:Object(s.a)(e,"indices","oneHot","int32")},u={depth:t,onValue:n,offValue:i};return r.a.runKernel(a.bc,o,u)}})},"4zPZ":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("Um8L"),o=n("VO80");const u=Object(o.b)({logicalAnd_:function(e,t){const n=Object(s.a)(e,"a","logicalAnd","bool"),o=Object(s.a)(t,"b","logicalAnd","bool");Object(i.a)(n.shape,o.shape);const u={a:n,b:o};return r.a.runKernel(a.Fb,u)}})},5:function(e,t){},6366:function(e,t,n){"use strict";n.r(t),n.d(t,"createScalarValue",(function(){return s})),n.d(t,"toTypedArray",(function(){return i})),n.d(t,"now",(function(){return o})),n.d(t,"fetch",(function(){return u})),n.d(t,"encodeString",(function(){return c})),n.d(t,"decodeString",(function(){return l}));var r=n("szMd"),a=n("atXS");function s(e,t){return"string"===t?c(e):i([e],t)}function i(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.m(e)),Object(r.c)().getBool("DEBUG")&&a.h(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function o(){return Object(r.c)().platform.now()}function u(e,t){return Object(r.c)().platform.fetch(e,t)}function c(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.encode(e,t)}function l(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.decode(e,t)}n.d(t,"shuffle",(function(){return a.M})),n.d(t,"shuffleCombo",(function(){return a.N})),n.d(t,"clamp",(function(){return a.i})),n.d(t,"nearestLargerEven",(function(){return a.H})),n.d(t,"sum",(function(){return a.R})),n.d(t,"randUniform",(function(){return a.J})),n.d(t,"distSquared",(function(){return a.l})),n.d(t,"assert",(function(){return a.b})),n.d(t,"assertShapesMatch",(function(){return a.e})),n.d(t,"assertNonNull",(function(){return a.d})),n.d(t,"flatten",(function(){return a.m})),n.d(t,"sizeFromShape",(function(){return a.O})),n.d(t,"isScalarShape",(function(){return a.y})),n.d(t,"arraysEqual",(function(){return a.a})),n.d(t,"isInt",(function(){return a.v})),n.d(t,"tanh",(function(){return a.S})),n.d(t,"sizeToSquarishShape",(function(){return a.P})),n.d(t,"createShuffledIndices",(function(){return a.k})),n.d(t,"rightPad",(function(){return a.L})),n.d(t,"repeatedTry",(function(){return a.K})),n.d(t,"inferFromImplicitShape",(function(){return a.s})),n.d(t,"parseAxisParam",(function(){return a.I})),n.d(t,"squeezeShape",(function(){return a.Q})),n.d(t,"getTypedArrayFromDType",(function(){return a.o})),n.d(t,"getArrayFromDType",(function(){return a.n})),n.d(t,"checkConversionForErrors",(function(){return a.h})),n.d(t,"isValidDtype",(function(){return a.B})),n.d(t,"hasEncodingLoss",(function(){return a.p})),n.d(t,"isTypedArray",(function(){return a.A})),n.d(t,"bytesPerElement",(function(){return a.g})),n.d(t,"bytesFromStringArray",(function(){return a.f})),n.d(t,"isString",(function(){return a.z})),n.d(t,"isBoolean",(function(){return a.t})),n.d(t,"isNumber",(function(){return a.w})),n.d(t,"inferDtype",(function(){return a.r})),n.d(t,"isFunction",(function(){return a.u})),n.d(t,"nearestDivisor",(function(){return a.G})),n.d(t,"computeStrides",(function(){return a.j})),n.d(t,"toNestedArray",(function(){return a.T})),n.d(t,"makeOnesTypedArray",(function(){return a.D})),n.d(t,"makeZerosTypedArray",(function(){return a.F})),n.d(t,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(t,"locToIndex",(function(){return a.C})),n.d(t,"indexToLoc",(function(){return a.q})),n.d(t,"isPromise",(function(){return a.x}))},"6J+n":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({argMax_:function(e,t=0){const n={x:Object(s.a)(e,"x","argMax")},i={axis:t};return r.a.runKernel(a.h,n,i)}})},"6vQL":function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n("o/e8"),a=n("atXS"),s=n("l0gX"),i=n("OygE"),o=n("uBja"),u=n("n+ZZ"),c=n("VO80"),l=n("NclT"),d=n("dYAU");const h=Object(c.b)({pool_:function(e,t,n,c,h,p){null==h&&(h=[1,1]),null==p&&(p=1),0===c&&(c="valid");const f=Object(r.a)(e,"x","maxPool");let m=f,b=!1;3===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.b(o.h(p,h),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`);const g=o.e(m.shape,t,p,h,c),y=[g.dilationHeight,g.dilationWidth];let x;x="same"===c?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),a=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],a[t]])}([g.filterHeight,g.filterWidth],y):[[0,0],[0,0]];const v=1===y[0]&&1===y[1],[w,O]=function(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]),u=t.map((e,t)=>[r[t],o[t]]),c=t.map((e,t)=>[0,i[t]]);return[u,c]}([g.inHeight,g.inWidth],y,x),k=v?c:"valid",N=v?m:Object(d.a)(m,y,w),I=("avg"===n?()=>Object(s.a)(N,t,p,k):()=>Object(u.a)(N,t,p,k))(),j=v?I:Object(i.a)(I,y,O);return b?Object(l.a)(j,[j.shape[1],j.shape[2],j.shape[3]]):j}})},"7/dO":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({cos_:function(e){const t={x:Object(s.a)(e,"x","cos")};return r.a.runKernel(a.I,t)}})},"7wDt":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({logicalNot_:function(e){const t={x:Object(s.a)(e,"x","logicalNot","bool")};return r.a.runKernel(a.Gb,t)}})},"867m":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("3rNm"),o=n("VO80");const u=Object(o.b)({prod_:function(e,t=null,n=!1){let o=Object(s.a)(e,"x","prod");"bool"===o.dtype&&(o=Object(i.a)(o,"int32"));const u={x:o},c={axis:t,keepDims:n};return r.a.runKernel(a.ic,u,c)}})},"8BGy":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},"8Km0":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({clone_:function(e){const t={x:Object(s.a)(e,"x","clone","string_or_numeric")};return r.a.runKernel(a.rb,t)}})},"8OX7":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("3rNm"),c=n("VO80");const l=Object(c.b)({minimum_:function(e,t){let n=Object(i.a)(e,"a","minimum"),c=Object(i.a)(t,"b","minimum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernel(a.Rb,l)}})},"8YN0":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("Um8L"),o=n("VO80");const u=Object(o.b)({logicalOr_:function(e,t){const n=Object(s.a)(e,"a","logicalOr","bool"),o=Object(s.a)(t,"b","logicalOr","bool");Object(i.a)(n.shape,o.shape);const u={a:n,b:o};return r.a.runKernel(a.Hb,u)}})},"90yW":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("NNfn"),a=n("o/e8"),s=n("atXS");const i=async function(e,t){const n=Object(a.a)(e,"x","setdiff1d"),i=Object(a.a)(t,"y","setdiff1d");s.b(n.dtype===i.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`),s.b(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),s.b(1===i.rank,()=>`y should be 1D tensor, but got y (${i.shape}).`);const o=await n.data(),u=await i.data(),c=new Set(u);let l=0;for(let r=0;r<o.length;r++)c.has(o[r])||l++;const d=new r.b([l],n.dtype),h=new r.b([l],"int32");for(let r=0,a=0;r<o.length;r++)c.has(o[r])||(d.values[a]=o[r],h.values[a]=r,a++);return[d.toTensor(),h.toTensor()]}},"91d6":function(e,t,n){"use strict";n.d(t,"a",(function(){return b}));var r=n("o/e8"),a=n("atXS"),s=n("iuCH"),i=n("NuWS"),o=n("wCH+"),u=n("rm0a"),c=n("VO80"),l=n("yfHJ"),d=n("NclT"),h=n("AV8V"),p=n("Fjpt"),f=n("k7Jv"),m=n("4FMF");const b=Object(c.b)({norm_:function(e,t="euclidean",n=null,c=!1){const b=function e(t,n,r=null){if(0===t.rank)return Object(s.a)(t);if(1!==t.rank&&null===r)return e(Object(d.a)(t,[-1]),n,r);if(1===t.rank||"number"===typeof r||Array.isArray(r)&&1===r.length){if(1===n)return Object(m.a)(Object(s.a)(t),r);if(n===1/0)return Object(o.a)(Object(s.a)(t),r);if(n===-1/0)return Object(u.a)(Object(s.a)(t),r);if("euclidean"===n||2===n)return Object(p.a)(Object(m.a)(Object(l.a)(Object(s.a)(t),Object(h.a)(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return Object(o.a)(Object(m.a)(Object(s.a)(t),r[0]),r[1]-1);if(n===1/0)return Object(o.a)(Object(m.a)(Object(s.a)(t),r[1]),r[0]);if(n===-1/0)return Object(u.a)(Object(m.a)(Object(s.a)(t),r[1]),r[0]);if("fro"===n||"euclidean"===n)return Object(p.a)(Object(m.a)(Object(f.a)(t),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=Object(r.a)(e,"x","norm"),t,n);let g=b.shape;if(c){const t=Object(a.I)(n,e.shape);g=i.e(b.shape,t)}return Object(d.a)(b,g)}})},"9JAK":function(e,t,n){"use strict";(function(e,r){let a;function s(){if(null==a){let t;if("undefined"!==typeof window)t=window;else if("undefined"!==typeof e)t=e;else if("undefined"!==typeof r)t=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function i(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i}))}).call(this,n("3r9c"),n("8oxB"))},"9kyW":function(e,t,n){"use strict";e.exports=function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}},"ARu+":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("dsKV"),a=n("o/e8"),s=n("x3y4"),i=n("ubnP"),o=n("VO80"),u=n("Z5Ez"),c=n("oJu+");const l=Object(o.b)({divNoNan_:function(e,t){let n=Object(a.a)(e,"a","div"),o=Object(a.a)(t,"b","div");[n,o]=Object(r.makeTypesMatch)(n,o);const l=Object(s.a)(n,o),d=Object(c.a)(l),h=Object(i.a)(o,d);return Object(u.a)(h,d,l)}})},AV8V:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("atXS"),a=n("WVnj");function s(e,t){if((Object(r.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(r.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(e,[],[],t)}},AoCb:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("BD40");function a(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const a=Object(r.a)(e,"int32"),s=Object(r.a)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=a.indexToLoc(n[r]),i=r*e.length;s.values.set(t,i)}return s.toTensor()}},B3db:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({complex_:function(e,t){const n=Object(s.a)(e,"real","complex"),o=Object(s.a)(t,"imag","complex");i.e(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.a.runKernel(a.z,u)}})},BD40:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("NNfn"),a=n("atXS");function s(e,t="float32",n){return t=t||"float32",a.c(e),new r.b(e,t,n)}},BLhf:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},BMSg:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({bincount_:function(e,t,n){const o=Object(s.a)(e,"x","bincount"),u=Object(s.a)(t,"weights","bincount");i.b("int32"===o.dtype,()=>"Error in bincount: input dtype must be int32, but got "+o.dtype),i.b(n>=0,()=>`size must be non-negative, but got ${n}.`),i.b(u.size===o.size||0===u.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: `+u.shape+".");const c={x:o,weights:u},l={size:n};return r.a.runKernel(a.u,c,l)}})},BbuY:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("o/e8"),a=n("atXS"),s=n("WVnj");function i(e,t,n){if(Object(a.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=Object(r.c)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(s.a)(e,t,i,n)}},CKnt:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({round_:function(e){const t={x:Object(s.a)(e,"x","round")};return r.a.runKernel(a.wc,t)}})},CfTU:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("3rNm"),c=n("VO80");const l=Object(c.b)({maximum_:function(e,t){let n=Object(i.a)(e,"a","maximum"),c=Object(i.a)(t,"b","maximum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernel(a.Ob,l)}})},CtZu:function(e,t,n){"use strict";n.d(t,"a",(function(){return an})),n.d(t,"c",(function(){return sn})),n.d(t,"b",(function(){return o.a})),n.d(t,"d",(function(){return o.c})),n.d(t,"e",(function(){return on}));var r=n("+hG3"),a=n("+Luo"),s=n("Umw7");class i{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return Object(s.e)(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Object(s.e)(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(a.f)(this.node.rawAttrs,e,t);if(null!=n.s)return Object(a.i)(this.node.rawAttrs,e,t);if(null!=n.b)return Object(a.c)(this.node.rawAttrs,e,t);if(null!=n.shape)return Object(a.k)(this.node.rawAttrs,e,t);if(null!=n.type)return Object(a.e)(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(a.g)(this.node.rawAttrs,e,t);if(null!=n.list.s)return Object(a.h)(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Object(a.j)(this.node.rawAttrs,e,t);if(null!=n.list.b)return Object(a.b)(this.node.rawAttrs,e,t);if(null!=n.list.type)return Object(a.d)(this.node.rawAttrs,e,t)}return t}}var o=n("0wNd"),u=n("kRdc"),c=n("SFB9"),l=n("RhH0"),d=n("parS"),h=n("x3y4"),p=n("ARu+"),f=n("UI8N"),m=n("oAkI"),b=n("8OX7"),g=n("CfTU"),y=n("yfHJ"),x=n("QYQ3");var v=n("iuCH"),w=n("o3Rt"),O=n("RhVc"),k=n("Ig+c"),N=n("3FnS"),I=n("fjZN"),j=n("YAKK"),S=n("0ahe"),C=n("WWBm"),T=n("B3db"),A=n("7/dO"),E=n("waK1"),$=n("njhW"),F=n("jgXy"),_=n("TyAZ"),R=n("G6IW"),D=n("02mo"),M=n("E1lT"),z=n("RrGL"),L=n("JLAb"),P=n("O7f5"),B=n("tQDl"),V=n("17CO"),W=n("kXpR"),U=n("CKnt"),G=n("s57M"),K=n("/7N0"),H=n("aTLu"),q=n("Hfat"),X=n("XcSs"),Y=n("n/2y"),Z=n("Fjpt"),J=n("k7Jv"),Q=n("iIjY"),ee=n("0wrZ"),te=n("wI/y"),ne=n("Rqg+"),re=n("Xyqe"),ae=n("867m"),se=n("bzdD"),ie=n("Ug8H"),oe=n("b++O");function ue(e,t,n=""){if("number"!==typeof e&&"number"!==typeof t){r.util.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let a=0;a<e.length;a++){const s=e[a],i=t[a];r.util.assert(s<0||i<0||s===i,()=>n+` Shapes ${e} and ${t} must match`)}}}function ce(e){return"number"!==typeof e&&!e.some(e=>e<0)}function le(e,t,n){let r=de(e,n);const a=!ce(r);if(a&&0===t.length)throw new Error("Tried to calculate elements of an empty list with non-fully-defined elementShape: "+r);if(a&&t.forEach(e=>{r=de(e.shape,r)}),!ce(r))throw new Error("Non-fully-defined elementShape: "+r);return r}function de(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class he{constructor(e,t,n,a,s,i,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Object(r.scalar)(0),Object(r.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),ue(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Object(r.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Object(r.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return ue(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(r.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Object(r.tensor)([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return ue(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(r.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Object(r.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const a=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,i=[];Object(r.tidy)(()=>{t=Object(r.reshape)(t,[1,n,s]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:a[n-1],0],u=[1,e[n],s];i[n]=Object(r.reshape)(Object(r.slice)(t,o,u),this.elementShape)}return i});const o=[];for(let r=0;r<e.length;r++)o[r]=r;this.writeMany(o,i)}}class pe{constructor(e,t,n,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);ue(t,e.shape,"TensorList shape mismatch: "),Object(r.keep)(e)}),this.idTensor=Object(r.scalar)(0),this.maxNumElements=a,Object(r.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new pe([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ue(e,this.elementShape,"TensorList shape mismatch: ");const a=le(this.elementShape,this.tensors,e);return Object(r.tidy)(()=>{const e=this.tensors.map(e=>Object(r.reshape)(e,a));return Object(r.stack)(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=le(this.elementShape,this.tensors,e),a=this.tensors.pop();return ue(a.shape,e,"TensorList shape mismatch: "),Object(r.reshape)(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ue(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(r.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);ue(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=le(this.elementShape,this.tensors,t);return Object(r.reshape)(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ue(this.elementShape,t.shape,"TensorList shape mismatch: "),Object(r.keep)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ue(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=le(this.elementShape,this.tensors,n);return 0===e.length?Object(r.tensor)([],[0].concat(a)):Object(r.tidy)(()=>{const t=e.map(e=>Object(r.reshape)(this.tensors[e],a));return Object(r.stack)(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ue(this.elementShape,t,"TensorList shape mismatch: ");const n=le(this.elementShape,this.tensors,t);return 0===this.size()?Object(r.tensor)([],[0].concat(n)):Object(r.tidy)(()=>{const e=this.tensors.map(e=>Object(r.reshape)(e,n));return Object(r.concat)(e,0)})}}const fe=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Object(s.d)("thenBranch",e,t,n),a=Object(s.d)("elseBranch",e,t,n),i=Object(s.d)("cond",e,t,n),o=Object(s.d)("args",e,t,n);return(await i.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(s.d)("body",e,t,n),a=Object(s.d)("cond",e,t,n),i=Object(s.d)("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),u=i.map(e=>e.id);let c=await o[0].data();o.forEach(e=>{e.kept||-1!==u.indexOf(e.id)||e.dispose()});let l=i;for(;c[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==u.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach(e=>{e.kept||-1!==u.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":{const r=Object(s.d)("pred",e,t,n);return[Object(s.a)(r)]}case"Switch":{const r=Object(s.d)("pred",e,t,n);let a=Object(s.d)("data",e,t,n);return a.kept||(a=Object(s.a)(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==Object(s.e)(e,t,n));if(r){const e=Object(s.e)(r,t,n);return[Object(s.a)(e)]}return}case"Enter":{const r=Object(s.d)("frameName",e,t,n),a=Object(s.d)("tensor",e,t,n);return n.enterFrame(r),[Object(s.a)(a)]}case"Exit":{const r=Object(s.d)("tensor",e,t,n);return n.exitFrame(),[Object(s.a)(r)]}case"NextIteration":{const r=Object(s.d)("tensor",e,t,n);return n.nextIteration(),[Object(s.a)(r)]}case"TensorArrayV3":{const a=Object(s.d)("size",e,t,n),i=Object(s.d)("dtype",e,t,n),o=Object(s.d)("elementShape",e,t,n),u=Object(s.d)("dynamicSize",e,t,n),c=Object(s.d)("clearAfterRead",e,t,n),l=Object(s.d)("identicalElementShapes",e,t,n),d=Object(s.d)("name",e,t,n),h=new he(d,i,a,o,l,u,c);return n.addTensorArray(h),[h.idTensor,Object(r.scalar)(1)]}case"TensorArrayWriteV3":{const r=Object(s.d)("tensorArrayId",e,t,n),a=Object(s.d)("index",e,t,n),i=Object(s.d)("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,i),[o.idTensor]}case"TensorArrayReadV3":{const r=Object(s.d)("tensorArrayId",e,t,n),a=Object(s.d)("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Object(s.d)("tensorArrayId",e,t,n),a=Object(s.d)("indices",e,t,n),i=Object(s.d)("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,i)]}case"TensorArrayScatterV3":{const r=Object(s.d)("tensorArrayId",e,t,n),a=Object(s.d)("indices",e,t,n),i=Object(s.d)("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,i),[o.idTensor]}case"TensorArrayConcatV3":{const r=Object(s.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),i=Object(s.d)("dtype",e,t,n);return[a.concat(i)]}case"TensorArraySplitV3":{const r=Object(s.d)("tensorArrayId",e,t,n),a=Object(s.d)("tensor",e,t,n),i=Object(s.d)("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(i,a),[o.idTensor]}case"TensorArraySizeV3":{const a=Object(s.d)("tensorArrayId",e,t,n),i=n.getTensorArray(a.id);return[Object(r.scalar)(i.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(s.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(s.d)("tensorListId",e,t,n),a=Object(s.d)("index",e,t,n),i=Object(s.d)("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,i),[o.idTensor]}case"TensorListGetItem":{const r=Object(s.d)("tensorListId",e,t,n),a=Object(s.d)("index",e,t,n),i=Object(s.d)("elementShape",e,t,n),o=Object(s.d)("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,i,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=Object(s.d)("indices",e,t,n),i=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=a&&-1!==a&&s>=a)throw new Error(`Max index must be < array size (${s}  vs. ${a})`);const i=new pe([],n,e.dtype,a),o=Object(r.unstack)(e,0);return t.forEach((e,t)=>{i.setItem(e,o[t])}),i}(Object(s.d)("tensor",e,t,n),a,Object(s.d)("elementShape",e,t,n),Object(s.d)("numElements",e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(s.d)("elementShape",e,t,n),a=Object(s.d)("elementDType",e,t,n);let i;i="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=function(e,t,n){return new pe([],e,t,n)}(r,a,Object(s.d)(i,e,t,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=Object(s.d)("tensorListId",e,t,n),a=Object(s.d)("indices",e,t,n),i=Object(s.d)("elementShape",e,t,n),o=Object(s.d)("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,i)]}case"TensorListStack":{const r=Object(s.d)("tensorListId",e,t,n),a=Object(s.d)("elementShape",e,t,n),i=Object(s.d)("elementDType",e,t,n),o=Object(s.d)("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,i,o)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);ue(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=Object(r.unstack)(e);return new pe(s,t,a)}(Object(s.d)("tensor",e,t,n),Object(s.d)("elementShape",e,t,n),Object(s.d)("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":{const r=Object(s.d)("tensorListId",e,t,n),a=n.getTensorList(r.id),i=Object(s.d)("dtype",e,t,n),o=Object(s.d)("elementShape",e,t,n);return[a.concat(i,o)]}case"TensorListPushBack":{const r=Object(s.d)("tensorListId",e,t,n),a=Object(s.d)("tensor",e,t,n),i=n.getTensorList(r.id);return i.pushBack(a),[i.idTensor]}case"TensorListPopBack":{const r=Object(s.d)("tensorListId",e,t,n),a=Object(s.d)("elementShape",e,t,n),i=Object(s.d)("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,i)]}case"TensorListSplit":{const a=Object(s.d)("tensor",e,t,n),i=Object(s.d)("elementShape",e,t,n),o=function(e,t,n){let a=0;const s=t.map(e=>(a+=e,a));if(a!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${a}, and tensor's shape is: ${e.shape}`);const i=de(e.shape.slice(1),n),o=0===a?0:e.size/a,u=Object(r.tidy)(()=>{const n=[];e=Object(r.reshape)(e,[1,a,o]);for(let a=0;a<t.length;++a){const u=[0,0===a?0:s[a-1],0],c=[1,t[a],o];n[a]=Object(r.reshape)(Object(r.slice)(e,u,c),i)}return e.dispose(),n}),c=new pe([],n,e.dtype,t.length);for(let r=0;r<u.length;r++)c.setItem(r,u[r]);return c}(a,Object(s.d)("lengths",e,t,n),i);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var me=n("dnXz"),be=n("3X4V"),ge=n("EysY"),ye=n("zR+/"),xe=n("g4+C"),ve=n("FZCF"),we=n("l0gX"),Oe=n("n+ZZ"),ke=n("i8k8"),Ne=n("ulO0"),Ie=n("U/2n"),je=n("wXC5");function Se(e,t,n){const[r,a]=Object(s.d)("fusedOps",e,t,n),i="biasadd"===r,o="prelu"===a,u="fusedbatchnorm"===r,c=Object(s.d)("numArgs",e,t,n);if(i){if(o&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=Object(s.d)("strides",e,t,n),d=Object(s.c)(e,t,n),h=Object(s.d)("dataFormat",e,t,n).toUpperCase(),p=Object(s.d)("dilations",e,t,n),[f,m]=Object(s.d)("args",e,t,n);return{stride:l,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:Object(s.d)("leakyreluAlpha",e,t,n)}}var Ce=n("RrjA"),Te=n("WJRb"),Ae=n("Pvz5"),Ee=n("4iwy"),$e=n("wion"),Fe=n("DbV5"),_e=n("hinG"),Re=n("hNYx"),De=n("fmoR"),Me=n("Wiw4"),ze=n("oJu+");var Le=n("3rNm"),Pe=n("p4Cv"),Be=n("90yW");function Ve(e,t,n){return{boxes:Object(s.d)("boxes",e,t,n),scores:Object(s.d)("scores",e,t,n),maxOutputSize:Object(s.d)("maxOutputSize",e,t,n),iouThreshold:Object(s.d)("iouThreshold",e,t,n),scoreThreshold:Object(s.d)("scoreThreshold",e,t,n),softNmsSigma:Object(s.d)("softNmsSigma",e,t,n)}}var We=n("VhY8"),Ue=n("hT5K");var Ge=n("lg8H"),Ke=n("AV8V");class He{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Object(r.scalar)(0),this.tensorMap=new Map,Object(r.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ke.a(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),Object(r.tidy)(()=>{const e=Object(r.unstack)(t),a=n.length,s=e.length;r.util.assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let t=0;t<a;t++){const a=n[t],s=e[t];Object(r.keep)(s),this.tensorMap.set(a,s)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Object(r.tidy)(()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Object(r.stack)(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+e.dtype);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+t.dtype)}}var qe=n("ubnP"),Xe=n("1N4k"),Ye=n("zvA9"),Ze=n("uy0A"),Je=n("4f3O"),Qe=n("shz4"),et=n("4zPZ"),tt=n("7wDt"),nt=n("8YN0"),rt=n("Z5Ez");var at=n("SHv8"),st=n("dauL"),it=n("yRKQ");var ot=n("cdtJ"),ut=n("4QEz"),ct=n("X4fa"),lt=n("gErV"),dt=n("vGLV");var ht=n("wCH+"),pt=n("Ei6o"),ft=n("rm0a"),mt=n("4FMF"),bt=n("34HJ"),gt=n("RRa9"),yt=n("6J+n"),xt=n("20lx"),vt=n("HmhO"),wt=n("BMSg"),Ot=n("LyxI");var kt=n("ZJ6U"),Nt=n("kaMP"),It=n("0I63"),jt=n("bTzI"),St=n("3hph"),Ct=n("0fRV"),Tt=n("NclT"),At=n("1U0N"),Et=n("OkRW"),$t=n("jXH2"),Ft=n("RbuM"),_t=n("i/oj"),Rt=n("ukBL");var Dt=n("Grcp"),Mt=n("THqV"),zt=n("th0q"),Lt=n("adw1");var Pt=n("2ugP"),Bt=n("k9tH"),Vt=n("DrVt"),Wt=n("dYAU"),Ut=n("OygE"),Gt=n("Nk7E"),Kt=n("SNsm");function Ht(e,t,n,a){const ue=((e,t,n)=>{switch(e.category){case"arithmetic":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[u.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"AddN":return[c.a(Object(s.d)("tensors",e,t,n))];case"FloorMod":case"Mod":return[l.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"Mul":return[d.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"RealDiv":case"Div":return[h.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"DivNoNan":return[p.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"FloorDiv":return[f.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"Sub":return[m.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"Minimum":return[b.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"Maximum":return[g.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"Pow":return[y.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"SquaredDifference":return[x.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[v.a(Object(s.d)("x",e,t,n))];case"Acos":return[w.a(Object(s.d)("x",e,t,n))];case"Acosh":return[O.a(Object(s.d)("x",e,t,n))];case"Asin":return[k.a(Object(s.d)("x",e,t,n))];case"Asinh":return[N.a(Object(s.d)("x",e,t,n))];case"Atan":return[I.a(Object(s.d)("x",e,t,n))];case"Atan2":return[j.a(Object(s.d)("x",e,t,n),Object(s.d)("y",e,t,n))];case"Atanh":return[S.a(Object(s.d)("x",e,t,n))];case"Ceil":return[C.a(Object(s.d)("x",e,t,n))];case"Complex":return[T.a(Object(s.d)("real",e,t,n),Object(s.d)("imag",e,t,n))];case"Cos":return[A.a(Object(s.d)("x",e,t,n))];case"Cosh":return[E.a(Object(s.d)("x",e,t,n))];case"Elu":return[$.a(Object(s.d)("x",e,t,n))];case"Erf":return[F.a(Object(s.d)("x",e,t,n))];case"Exp":return[_.a(Object(s.d)("x",e,t,n))];case"Expm1":return[R.a(Object(s.d)("x",e,t,n))];case"Floor":return[D.a(Object(s.d)("x",e,t,n))];case"Log":return[M.a(Object(s.d)("x",e,t,n))];case"Log1p":return[z.a(Object(s.d)("x",e,t,n))];case"Imag":return[L.a(Object(s.d)("x",e,t,n))];case"Neg":return[P.a(Object(s.d)("x",e,t,n))];case"Reciprocal":return[B.a(Object(s.d)("x",e,t,n))];case"Real":return[V.a(Object(s.d)("x",e,t,n))];case"Relu":return[W.a(Object(s.d)("x",e,t,n))];case"Round":return[U.a(Object(s.d)("x",e,t,n))];case"Selu":return[G.a(Object(s.d)("x",e,t,n))];case"Sigmoid":return[K.a(Object(s.d)("x",e,t,n))];case"Sin":return[H.a(Object(s.d)("x",e,t,n))];case"Sign":return[q.a(Object(s.d)("x",e,t,n))];case"Sinh":return[X.a(Object(s.d)("x",e,t,n))];case"Softplus":return[Y.a(Object(s.d)("x",e,t,n))];case"Sqrt":return[Z.a(Object(s.d)("x",e,t,n))];case"Square":return[J.a(Object(s.d)("x",e,t,n))];case"Tanh":return[Q.a(Object(s.d)("x",e,t,n))];case"Tan":return[ee.a(Object(s.d)("x",e,t,n))];case"ClipByValue":return[te.a(Object(s.d)("x",e,t,n),Object(s.d)("clipValueMin",e,t,n),Object(s.d)("clipValueMax",e,t,n))];case"Relu6":return[ne.a(Object(s.d)("x",e,t,n))];case"Rsqrt":return[re.a(Object(s.e)(e.inputNames[0],t,n))];case"Prod":return[ae.a(Object(s.d)("x",e,t,n),Object(s.d)("axes",e,t,n))];case"LeakyRelu":return[se.a(Object(s.d)("x",e,t,n),Object(s.d)("alpha",e,t,n))];case"Prelu":return[ie.a(Object(s.d)("x",e,t,n),Object(s.d)("alpha",e,t,n))];case"IsNan":return[oe.a(Object(s.e)(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return fe(e,t,n);case"convolution":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=Object(s.d)("stride",e,t,n),a=Object(s.d)("pad",e,t,n),i=Object(s.d)("dataFormat",e,t,n).toUpperCase(),o=Object(s.d)("dilation",e,t,n);return[me.a(Object(s.d)("x",e,t,n),Object(s.d)("filter",e,t,n),r,a,i,o)]}case"Conv2D":{const r=Object(s.d)("strides",e,t,n),a=Object(s.c)(e,t,n),i=Object(s.d)("dataFormat",e,t,n).toUpperCase(),o=Object(s.d)("dilations",e,t,n);return[be.a(Object(s.d)("x",e,t,n),Object(s.d)("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=Se(e,t,n);return[ge.qb.conv2d({x:Object(s.d)("x",e,t,n),filter:Object(s.d)("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=Se(e,t,n);return[ge.qb.depthwiseConv2d({x:Object(s.d)("x",e,t,n),filter:Object(s.d)("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(s.d)("outputShape",e,t,n),a=Object(s.d)("strides",e,t,n),i=Object(s.c)(e,t,n);return[ye.a(Object(s.d)("x",e,t,n),Object(s.d)("filter",e,t,n),r,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(s.d)("strides",e,t,n),a=Object(s.c)(e,t,n),i=Object(s.d)("dilations",e,t,n),o=Object(s.d)("dataFormat",e,t,n).toUpperCase();return[xe.a(Object(s.d)("input",e,t,n),Object(s.d)("filter",e,t,n),[r[1],r[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const r=Object(s.d)("strides",e,t,n),a=Object(s.d)("pad",e,t,n),i=Object(s.d)("dataFormat",e,t,n).toUpperCase(),o=Object(s.d)("dilations",e,t,n);return[ve.a(Object(s.d)("x",e,t,n),Object(s.d)("filter",e,t,n),[r[1],r[2],r[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const r=Object(s.d)("strides",e,t,n),a=Object(s.d)("pad",e,t,n),i=Object(s.d)("kernelSize",e,t,n);return[we.a(Object(s.d)("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Object(s.d)("strides",e,t,n),a=Object(s.d)("pad",e,t,n),i=Object(s.d)("kernelSize",e,t,n);return[Oe.a(Object(s.d)("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Object(s.d)("strides",e,t,n),a=Object(s.d)("pad",e,t,n),i=Object(s.d)("kernelSize",e,t,n),o=Object(s.d)("includeBatchInIndex",e,t,n),{result:u,indexes:c}=ke.a(Object(s.d)("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a,o);return[u,c]}case"AvgPool3D":{const r=Object(s.d)("strides",e,t,n),a=Object(s.d)("pad",e,t,n),i=Object(s.d)("kernelSize",e,t,n);return[Ne.a(Object(s.d)("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Object(s.d)("strides",e,t,n),a=Object(s.d)("pad",e,t,n),i=Object(s.d)("kernelSize",e,t,n);return[Ie.a(Object(s.d)("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Object(s.d)("strides",e,t,n),a=Object(s.d)("pad",e,t,n),i=Object(s.d)("dilations",e,t,n),o=r[1],u=r[2],c=i[1],l=i[2];return[je.a(Object(s.d)("x",e,t,n),Object(s.d)("filter",e,t,n),[o,u],a,[c,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=Object(s.d)("shape",e,t,n),a=Object(s.d)("dtype",e,t,n),i=Object(s.d)("value",e,t,n);return[Ce.a(r,i,a)]}case"LinSpace":{const r=Object(s.d)("start",e,t,n),a=Object(s.d)("stop",e,t,n),i=Object(s.d)("num",e,t,n);return[Te.a(r,a,i)]}case"Multinomial":{const r=Object(s.d)("logits",e,t,n),a=Object(s.d)("numSamples",e,t,n),i=Object(s.d)("seed",e,t,n);return[Ae.a(r,a,i)]}case"OneHot":{const r=Object(s.d)("indices",e,t,n),a=Object(s.d)("depth",e,t,n),i=Object(s.d)("onValue",e,t,n),o=Object(s.d)("offValue",e,t,n);return[Ee.a(r,a,i,o)]}case"Ones":return[$e.a(Object(s.d)("shape",e,t,n),Object(s.d)("dtype",e,t,n))];case"OnesLike":return[Fe.a(Object(s.d)("x",e,t,n))];case"RandomUniform":return[_e.a(Object(s.d)("shape",e,t,n),Object(s.d)("minval",e,t,n),Object(s.d)("maxval",e,t,n),Object(s.d)("dtype",e,t,n))];case"Range":{const r=Object(s.d)("start",e,t,n),a=Object(s.d)("stop",e,t,n),i=Object(s.d)("step",e,t,n);return[Re.a(r,a,i,Object(s.d)("dtype",e,t,n))]}case"TruncatedNormal":{const r=Object(s.d)("shape",e,t,n),a=Object(s.d)("mean",e,t,n),i=Object(s.d)("stdDev",e,t,n),o=Object(s.d)("seed",e,t,n);return[De.a(r,a,i,Object(s.d)("dtype",e,t,n),o)]}case"Zeros":return[Me.a(Object(s.d)("shape",e,t,n),Object(s.d)("dtype",e,t,n))];case"ZerosLike":return[ze.a(Object(s.d)("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Ve(e,t,n),c=await ge.xb.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=Ve(e,t,n),c=Object(s.d)("padToMaxOutputSize",e,t,n),l=await ge.xb.nonMaxSuppressionPaddedAsync(r,a,i,o,u,c);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Ve(e,t,n);return[await ge.xb.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Le.a(Object(s.d)("condition",e,t,n),"bool"),a=[await Pe.a(r)];return r.dispose(),a}case"ListDiff":return Be.a(Object(s.d)("x",e,t,n),Object(s.d)("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=Object(s.d)("x",e,t,n),a=Object(s.d)("k",e,t,n),i=Object(s.d)("sorted",e,t,n),o=We.a(r,a,i);return[o.values,o.indices]}case"Unique":{const r=Object(s.d)("x",e,t,n),a=Ue.a(r);return[a.values,a.indices]}case"UniqueV2":{const r=Object(s.d)("x",e,t,n),a=Object(s.d)("axis",e,t,n),i=Ue.a(r,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Object(s.d)("images",e,t,n),a=Object(s.d)("size",e,t,n),i=Object(s.d)("alignCorners",e,t,n),o=Object(s.d)("halfPixelCenters",e,t,n);return[ge.xb.resizeBilinear(r,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const r=Object(s.d)("images",e,t,n),a=Object(s.d)("size",e,t,n),i=Object(s.d)("alignCorners",e,t,n),o=Object(s.d)("halfPixelCenters",e,t,n);return[ge.xb.resizeNearestNeighbor(r,[a[0],a[1]],i,o)]}case"CropAndResize":{const r=Object(s.d)("image",e,t,n),a=Object(s.d)("boxes",e,t,n),i=Object(s.d)("boxInd",e,t,n),o=Object(s.d)("cropSize",e,t,n),u=Object(s.d)("method",e,t,n),c=Object(s.d)("extrapolationValue",e,t,n);return[ge.xb.cropAndResize(r,a,i,o,u,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Object(s.d)("default",e,t,n);return[Object(s.e)(e.name,t,n)||r];case"Placeholder":return[Object(s.e)(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(s.d)("x",e,t,n);return[Object(s.a)(r)]}case"IdentityN":return Object(s.d)("x",e,t,n).map(e=>Object(s.a)(e));case"Snapshot":const a=Object(s.d)("x",e,t,n);return[Object(s.a)(a)];case"Shape":return[Ge.a(Object(s.d)("x",e,t,n).shape,"int32")];case"ShapeN":return Object(s.d)("x",e,t,n).map(e=>Ge.a(e.shape));case"Size":return[Ke.a(Object(s.d)("x",e,t,n).size,"int32")];case"Rank":return[Ke.a(Object(s.d)("x",e,t,n).rank,"int32")];case"NoOp":return[Ke.a(1)];case"Print":const i=Object(s.d)("x",e,t,n),o=Object(s.d)("data",e,t,n),u=Object(s.d)("message",e,t,n),c=Object(s.d)("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,c));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"Equal":return[qe.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"NotEqual":return[Xe.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"Greater":return[Ye.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"GreaterEqual":return[Ze.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"Less":return[Je.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"LessEqual":return[Qe.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"LogicalAnd":return[et.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"LogicalNot":return[tt.a(Object(s.d)("a",e,t,n))];case"LogicalOr":return[nt.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];case"Select":case"SelectV2":return[rt.a(Object(s.d)("condition",e,t,n),Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[at.a(Object(s.d)("a",e,t,n),Object(s.d)("b",e,t,n),Object(s.d)("transposeA",e,t,n),Object(s.d)("transposeB",e,t,n))];case"Einsum":return[st.a(Object(s.d)("equation",e,t,n),...Object(s.d)("tensors",e,t,n))];case"Transpose":return[it.a(Object(s.d)("x",e,t,n),Object(s.d)("perm",e,t,n))];case"_FusedMatMul":const[r,a]=Object(s.d)("fusedOps",e,t,n),i="biasadd"===r,o="prelu"===a,u=Object(s.d)("numArgs",e,t,n),c=Object(s.d)("leakyreluAlpha",e,t,n);if(i){if(o&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,d]=Object(s.d)("args",e,t,n);return[ge.qb.matMul({a:Object(s.d)("a",e,t,n),b:Object(s.d)("b",e,t,n),transposeA:Object(s.d)("transposeA",e,t,n),transposeB:Object(s.d)("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:d,leakyreluAlpha:c})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ot.a(Object(s.d)("x",e,t,n),Object(s.d)("mean",e,t,n),Object(s.d)("variance",e,t,n),Object(s.d)("offset",e,t,n),Object(s.d)("scale",e,t,n),Object(s.d)("epsilon",e,t,n))];case"LRN":return[ut.a(Object(s.d)("x",e,t,n),Object(s.d)("radius",e,t,n),Object(s.d)("bias",e,t,n),Object(s.d)("alpha",e,t,n),Object(s.d)("beta",e,t,n))];case"Softmax":return[ct.a(Object(s.d)("x",e,t,n))];case"LogSoftmax":return[lt.a(Object(s.d)("x",e,t,n))];case"SparseToDense":return[dt.a(Object(s.d)("sparseIndices",e,t,n),Object(s.d)("outputShape",e,t,n),Object(s.d)("sparseValues",e,t,n),Object(s.d)("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"Max":{const r=Object(s.d)("axis",e,t,n),a=Object(s.d)("keepDims",e,t,n);return[ht.a(Object(s.d)("x",e,t,n),r,a)]}case"Mean":{const r=Object(s.d)("axis",e,t,n),a=Object(s.d)("keepDims",e,t,n);return[pt.a(Object(s.d)("x",e,t,n),r,a)]}case"Min":{const r=Object(s.d)("axis",e,t,n),a=Object(s.d)("keepDims",e,t,n);return[ft.a(Object(s.d)("x",e,t,n),r,a)]}case"Sum":{const r=Object(s.d)("axis",e,t,n),a=Object(s.d)("keepDims",e,t,n);return[mt.a(Object(s.d)("x",e,t,n),r,a)]}case"All":{const r=Object(s.d)("axis",e,t,n),a=Object(s.d)("keepDims",e,t,n);return[bt.a(Object(s.d)("x",e,t,n),r,a)]}case"Any":{const r=Object(s.d)("axis",e,t,n),a=Object(s.d)("keepDims",e,t,n);return[gt.a(Object(s.d)("x",e,t,n),r,a)]}case"ArgMax":{const r=Object(s.d)("axis",e,t,n);return[yt.a(Object(s.d)("x",e,t,n),r)]}case"ArgMin":{const r=Object(s.d)("axis",e,t,n);return[xt.a(Object(s.d)("x",e,t,n),r)]}case"Prod":{const r=Object(s.d)("axis",e,t,n),a=Object(s.d)("keepDims",e,t,n);return[ae.a(Object(s.d)("x",e,t,n),r,a)]}case"Cumsum":{const r=Object(s.d)("axis",e,t,n),a=Object(s.d)("exclusive",e,t,n),i=Object(s.d)("reverse",e,t,n);return[vt.a(Object(s.d)("x",e,t,n),r,a,i)]}case"Bincount":const r=Object(s.d)("x",e,t,n),a=Object(s.d)("weights",e,t,n),i=Object(s.d)("size",e,t,n);return[wt.a(r,a,i)];case"DenseBincount":{const r=Object(s.d)("x",e,t,n),a=Object(s.d)("weights",e,t,n),i=Object(s.d)("size",e,t,n),o=Object(s.d)("binaryOutput",e,t,n);return[Ot.a(r,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Object(s.d)("n",e,t,n),a=Object(s.d)("axis",e,t,n);let i=Object(s.d)("tensors",e,t,n);return i=i.slice(0,r),[kt.a(i,a)]}case"Gather":{const r=Object(s.d)("x",e,t,n),a=Object(s.d)("indices",e,t,n);return[Nt.a(r,Le.a(a,"int32"),0)]}case"GatherV2":{const r=Object(s.d)("axis",e,t,n),a=Object(s.d)("batchDims",e,t,n),i=Object(s.d)("x",e,t,n),o=Object(s.d)("indices",e,t,n);return[Nt.a(i,Le.a(o,"int32"),r,a)]}case"Reverse":{const r=Object(s.d)("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const i=Object(s.d)("x",e,t,n);return[It.a(i,a)]}case"ReverseV2":{const r=Object(s.d)("axis",e,t,n),a=Object(s.d)("x",e,t,n);return[It.a(a,r)]}case"Slice":{const r=Object(s.d)("begin",e,t,n),a=Object(s.d)("size",e,t,n);return[jt.a(Object(s.d)("x",e,t,n),r,a)]}case"StridedSlice":{const r=Object(s.d)("begin",e,t,n),a=Object(s.d)("end",e,t,n),i=Object(s.d)("strides",e,t,n),o=Object(s.d)("beginMask",e,t,n),u=Object(s.d)("endMask",e,t,n),c=Object(s.d)("ellipsisMask",e,t,n),l=Object(s.d)("newAxisMask",e,t,n),d=Object(s.d)("shrinkAxisMask",e,t,n),h=Object(s.d)("x",e,t,n);return[St.a(h,r,a,i,o,u,c,l,d)]}case"Pack":return Object(r.tidy)(()=>{const a=Object(s.d)("axis",e,t,n),i=Object(s.d)("tensors",e,t,n),o=i[0].shape,u=Ct.a(i[0]).shape,c=i.map(e=>{const t=r.util.arraysEqual(e.shape,o);if(!t&&!r.util.arraysEqual(Ct.a(e).shape,u))throw new Error("the input tensors shape does not match");return t?e:Tt.a(e,o)});return[At.a(c,a)]});case"Unpack":{const r=Object(s.d)("axis",e,t,n),a=Object(s.d)("tensor",e,t,n);return Et.a(a,r)}case"Tile":{const r=Object(s.d)("reps",e,t,n);return[$t.a(Object(s.d)("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Object(s.d)("axis",e,t,n),a=Object(s.d)("numOrSizeSplits",e,t,n),i=Object(s.d)("x",e,t,n);return Ft.a(i,a,r)}case"ScatterNd":{const r=Object(s.d)("indices",e,t,n),a=Object(s.d)("values",e,t,n),i=Object(s.d)("shape",e,t,n);return[_t.a(r,a,i)]}case"GatherNd":{const r=Object(s.d)("x",e,t,n),a=Object(s.d)("indices",e,t,n);return[Rt.a(r,a)]}case"SparseToDense":{const r=Object(s.d)("sparseIndices",e,t,n),a=Object(s.d)("outputShape",e,t,n),i=Object(s.d)("sparseValues",e,t,n),o=Object(s.d)("defaultValue",e,t,n);return[dt.a(r,i,a,i.dtype===o.dtype?o:Le.a(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"sparse":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"SparseReshape":{const{outputIndices:r,outputShape:a}=ge.md.sparseReshape(Object(s.d)("inputIndices",e,t,n),Object(s.d)("inputShape",e,t,n),Object(s.d)("newShape",e,t,n));return[r,a]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"FFT":return[Dt.a(Object(s.d)("x",e,t,n))];case"IFFT":return[Mt.a(Object(s.d)("x",e,t,n))];case"RFFT":return[zt.a(Object(s.d)("x",e,t,n))];case"IRFFT":return[Lt.a(Object(s.d)("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return r.tidy(()=>((e,t,n)=>{switch(e.op){case"Cast":return[Le.a(Object(s.d)("x",e,t,n),Object(s.d)("dtype",e,t,n))];case"ExpandDims":{const r=Object(s.d)("axis",e,t,n);return[Pt.a(Object(s.d)("x",e,t,n),r)]}case"Squeeze":{const r=Object(s.d)("axis",e,t,n);return[Ct.a(Object(s.d)("x",e,t,n),r)]}case"Reshape":return[Tt.a(Object(s.d)("x",e,t,n),Object(s.d)("shape",e,t,n))];case"MirrorPad":return[Bt.a(Object(s.d)("x",e,t,n),Object(s.d)("padding",e,t,n),Object(s.d)("mode",e,t,n))];case"PadV2":case"Pad":return[Vt.a(Object(s.d)("x",e,t,n),Object(s.d)("padding",e,t,n),Object(s.d)("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Object(s.d)("blockShape",e,t,n),a=Object(s.d)("paddings",e,t,n);return[Wt.a(Object(s.d)("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=Object(s.d)("blockShape",e,t,n),a=Object(s.d)("crops",e,t,n);return[Ut.a(Object(s.d)("x",e,t,n),r,a)]}case"DepthToSpace":{const r=Object(s.d)("blockSize",e,t,n),a=Object(s.d)("dataFormat",e,t,n).toUpperCase();return[Gt.a(Object(s.d)("x",e,t,n),r,a)]}case"BroadcastTo":return[Kt.a(Object(s.d)("x",e,t,n),Object(s.d)("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=Object(s.d)("keyDType",e,t,n),i=Object(s.d)("valueDType",e,t,n),o=new He(a,i);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Object(s.d)("tableHandle",e,t,n,r),i=Object(s.d)("keys",e,t,n),o=Object(s.d)("values",e,t,n),u=r.getHashTableById(a.id);return[await u.import(i,o)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(s.d)("tableHandle",e,t,n,r),i=Object(s.d)("keys",e,t,n),o=Object(s.d)("defaultValue",e,t,n),u=r.getHashTableById(a.id);return[await u.find(i,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=Object(s.d)("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,a);case"custom":const ue=Object(o.b)(e.op);if(ue&&ue.customExecutor)return ue.customExecutor(new i(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return r.util.isPromise(ue)?ue.then(e=>[].concat(e)):[].concat(ue)}class qt{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Xt(e,t,n,r){const a=new Set,i=[];let o=null,u=null;const c=new Set,l=Object.keys(e).map(e=>Object(s.g)(e)[0]);let d=[];null!=r&&(d=r.map(e=>Object(s.g)(e.name)[0]));const h=[...t];for(;h.length>0;){const e=h.pop();(Qt(e)||en(e)||tn(e))&&null==o&&(o=e,u=o.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&(-1===l.indexOf(e.name)&&-1===d.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{c.has(e.name)||(c.add(e.name),h.push(e))}):i.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:i,dynamicNode:o,syncInputs:u}}const Yt=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Zt=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Jt=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Qt(e){return Yt.indexOf(e.op)>=0}function en(e){return Zt.indexOf(e.op)>=0}function tn(e){return Jt.indexOf(e.op)>=0}class nn{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new nn(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=Xt(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:i}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,i=[],o=Object.keys(a).map(e=>Object(s.g)(e)[0]).map(t=>e.nodes[t]),u=e.initNodes;o.forEach(e=>{r.has(e.name)&&i.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&i.push(e)}),null!=u&&u.forEach(e=>{r.has(e.name)&&i.push(e)});const c=new Set,l=[];for(;i.length>0;){const e=i.pop();c.add(e.name),t[e.name]||l.push(e),e.children.forEach(e=>{!c.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>c.has(e.name))&&i.push(e)})}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map(e=>this.graph.nodes[Object(s.g)(e)[0]]),i=t.map(e=>Object(s.g)(e)[0]);let o=i.map(e=>this.graph.nodes[e]);0===o.length&&(o=this._outputs);const u=this.getCompilationKey(a,o);let c=this.compiledMap.get(u);null==c&&(c=this.compile(e,o),this.compiledMap.set(u,c));const l={},d={};return Object(r.tidy)(()=>{const n=new qt(this.weightMap,l,d,this.functionExecutorMap),a=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=Object(s.g)(t),i=[];i[r]=e[t],a[n]=i});const o=this.getFrozenTensorIds(a),u={};for(let e=0;e<c.length;e++){const t=c[e];if(!a[t.name]){const e=Ht(t,a,n,this._resourceManager);if(r.util.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);a[t.name]=e,this.checkTensorForDisposal(t.name,t,a,n,o,i,u)}}return null==this.parent&&n.dispose(o),t.map(e=>Object(s.e)(e,a,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,i,o){"control"!==t.category&&-1===i.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const t=Object(s.f)(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!e.kept&&!a.has(e.id)){const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const i=new qt(this.weightMap,r,a,this.functionExecutorMap),o=await this.executeWithControlFlow(e,i,t,n),u=t.map(e=>Object(s.e)(e,o,i)),c=u.map(e=>e.id),l=Object.keys(e).map(t=>e[t].id),d=new Set([...c,...l,...this.weightIds]);return Object.keys(o).forEach(e=>{o[e].forEach(e=>{!e||e.kept||e.isDisposed||d.has(e.id)||e.dispose()})}),null==this.parent&&i.dispose(d),u}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),i=a.map(e=>this.graph.nodes[Object(s.g)(e)[0]]),o=n.map(e=>Object(s.g)(e)[0]);let u=o.map(e=>this.graph.nodes[e]);0===u.length&&(u=this._outputs);const{usedNodes:c,missingInputs:l,dynamicNode:d,syncInputs:h}=Xt(e,u,this.weightMap,this._initNodes),p=[...i,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=Object(s.g)(t),a=[];a[r]=e[t],f[n]=a});const m={},b=this.getFrozenTensorIds(f),g={};for(;p.length>0;){const e=this.processStack(i,p,t,f,g,b,o,m,c);await Promise.all(e)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=u.filter(e=>!Qt(e)&&!Object(s.e)(e.name,f,t)).map(e=>e.name);if(y.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return f}processStack(e,t,n,a,i,o,u,c,l){const d=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let h="";if("Enter"===e.node.op&&Object(s.d)("isConstant",e.node,a,n)&&([h]=Object(s.b)(e.node.name,n)),null==a[e.node.name]){const p=Ht(e.node,a,n,this._resourceManager);h||([h]=Object(s.b)(e.node.name,n));const f=n.currentContext;r.util.isPromise(p)?d.push(p.then(r=>(a[h]=r,n.currentContext=f,this.checkTensorForDisposal(h,e.node,a,n,o,u,c),this.processChildNodes(e.node,t,n,a,i,l),r))):(a[h]=p,this.checkTensorForDisposal(h,e.node,a,n,o,u,c),this.processChildNodes(e.node,t,n,a,i,l))}else this.processChildNodes(e.node,t,n,a,i,l)}return d}processChildNodes(e,t,n,r,a,i){e.children.forEach(e=>{const[o]=Object(s.b)(e.name,n);!a[o]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!Object(s.e)(e,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!Object(s.e)(e,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[a]=Object(s.g)(t),i=this.graph.nodes[a];if(i.attrParams.shape&&i.attrParams.shape.value){const e=i.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);r.util.assert(t,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&r.util.assert(n.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=Object(s.g)(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e},{})}checkOutputs(e){e.forEach(e=>{const[t]=Object(s.g)(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class rn{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class an{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new rn}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=r.io.browserHTTPRequest(e,this.loadOptions);else{const t=r.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(r.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const s=r.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new nn(a.a.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=a.a.Instance.transformGraph(e.modelInitializer);this.initializer=new nn(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"===typeof e){const t=r.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof r.Tensor)&&!Array.isArray(e))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function sn(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file");const n=new an(e,t);return await n.load(),n}const on="3.5.0"},"D2/b":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({conv2DBackpropFilter_:function(e,t,n,i,u,c="NHWC",l){let d=e;3===e.rank&&(d=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.b(4===d.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+d.shape+"."),s.b(4===h.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+h.shape+"."),s.b(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const p="NHWC"===c?d.shape[3]:d.shape[1],f="NHWC"===c?h.shape[3]:h.shape[1];s.b(p===n[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${n[2]}.`),s.b(f===n[3],()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`),null!=l&&s.b(s.v(u),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const m={x:d,dy:h},b={strides:i,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:n};return r.a.runKernel(a.D,m,b)}})},D4ac:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const c=Object(s.a)(e,"images","resizeNearestNeighbor");i.b(3===c.rank||4===c.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${c.rank}.`),i.b(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),i.b("float32"===c.dtype||"int32"===c.dtype,()=>"`images` must have `int32` or `float32` as dtype"),i.b(!1===o||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=t,h={images:l},p={alignCorners:n,halfPixelCenters:o,size:t},f=r.a.runKernel(a.sc,h,p);return d?Object(u.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},DbV5:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({onesLike_:function(e){const t={x:Object(s.a)(e,"x","onesLike")};return r.a.runKernel(a.cc,t)}})},DrVt:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({pad_:function(e,t,n=0){const i=Object(s.a)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},u={x:i};return r.a.runKernel(a.ec,u,o)}})},E1lT:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({log_:function(e){const t={x:Object(s.a)(e,"x","log")};return r.a.runKernel(a.Cb,t)}})},ET5l:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},EWu9:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("o/e8"),a=n("atXS"),s=n("3X4V"),i=n("g4+C"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({separableConv2d_:function(e,t,n,o,c,l=[1,1],d="NHWC"){const h=Object(r.a)(e,"x","separableConv2d"),p=Object(r.a)(t,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=h,b=!1;if(3===h.rank&&(b=!0,m=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===m.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`),a.b(4===p.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`),a.b(4===f.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`),a.b(1===f.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`),a.b(1===f.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`);const g=p.shape[2],y=p.shape[3];a.b(f.shape[2]===g*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${g*y}, but got ${f.shape[2]}.`);const x=Object(i.a)(m,p,o,c,d,l),v=Object(s.a)(x,f,1,"valid",d);return b?Object(u.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},EhIR:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n=function(){var e=4022871197;return function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("uQAw")&&n("VRIy")?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e,n("uQAw"))}).call(this,n("1/IK")(e))},Ei6o:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({mean_:function(e,t=null,n=!1){const i={x:Object(s.a)(e,"x","mean")},o={axis:t,keepDims:n};return r.a.runKernel(a.Pb,i,o)}})},EysY:function(e,t,n){"use strict";n.d(t,"b",(function(){return a.a})),n.d(t,"c",(function(){return s.a})),n.d(t,"d",(function(){return i.a})),n.d(t,"e",(function(){return o.a})),n.d(t,"f",(function(){return u.a})),n.d(t,"g",(function(){return c.a})),n.d(t,"h",(function(){return l.a})),n.d(t,"i",(function(){return d.a})),n.d(t,"j",(function(){return h.a})),n.d(t,"k",(function(){return p.a})),n.d(t,"l",(function(){return f.a})),n.d(t,"m",(function(){return m.a})),n.d(t,"n",(function(){return b.a})),n.d(t,"o",(function(){return g.a})),n.d(t,"p",(function(){return y.a})),n.d(t,"q",(function(){return x.a})),n.d(t,"r",(function(){return C})),n.d(t,"w",(function(){return T.a})),n.d(t,"s",(function(){return A.a})),n.d(t,"t",(function(){return $})),n.d(t,"u",(function(){return F})),n.d(t,"v",(function(){return _})),n.d(t,"x",(function(){return R.a})),n.d(t,"z",(function(){return D.a})),n.d(t,"A",(function(){return M.a})),n.d(t,"B",(function(){return z.a})),n.d(t,"C",(function(){return L.a})),n.d(t,"D",(function(){return P.a})),n.d(t,"E",(function(){return B.a})),n.d(t,"F",(function(){return V.a})),n.d(t,"G",(function(){return w.a})),n.d(t,"H",(function(){return W})),n.d(t,"I",(function(){return U})),n.d(t,"J",(function(){return G})),n.d(t,"K",(function(){return K})),n.d(t,"L",(function(){return H.a})),n.d(t,"M",(function(){return q.a})),n.d(t,"N",(function(){return X.a})),n.d(t,"O",(function(){return Y.a})),n.d(t,"P",(function(){return J})),n.d(t,"Q",(function(){return Q.a})),n.d(t,"R",(function(){return ee.a})),n.d(t,"T",(function(){return te.a})),n.d(t,"U",(function(){return ne.a})),n.d(t,"V",(function(){return re.a})),n.d(t,"W",(function(){return ae.a})),n.d(t,"X",(function(){return oe})),n.d(t,"Y",(function(){return ue.a})),n.d(t,"Z",(function(){return ce.a})),n.d(t,"ab",(function(){return le.a})),n.d(t,"bb",(function(){return de.a})),n.d(t,"db",(function(){return he.a})),n.d(t,"eb",(function(){return pe.a})),n.d(t,"gb",(function(){return fe.a})),n.d(t,"hb",(function(){return me.a})),n.d(t,"ib",(function(){return be.a})),n.d(t,"jb",(function(){return ge.a})),n.d(t,"kb",(function(){return ye.a})),n.d(t,"lb",(function(){return we})),n.d(t,"nb",(function(){return Oe.a})),n.d(t,"ob",(function(){return ke.a})),n.d(t,"pb",(function(){return Ne.a})),n.d(t,"rb",(function(){return Ie.a})),n.d(t,"tb",(function(){return je.a})),n.d(t,"ub",(function(){return Se.a})),n.d(t,"wb",(function(){return Ce.a})),n.d(t,"Ab",(function(){return Te.a})),n.d(t,"Bb",(function(){return Ae.a})),n.d(t,"Cb",(function(){return Ee.a})),n.d(t,"Db",(function(){return $e.a})),n.d(t,"Eb",(function(){return Fe.a})),n.d(t,"Fb",(function(){return _e.a})),n.d(t,"Hb",(function(){return Re.a})),n.d(t,"Ib",(function(){return De.a})),n.d(t,"Jb",(function(){return Me.a})),n.d(t,"Kb",(function(){return ze.a})),n.d(t,"Lb",(function(){return Le.a})),n.d(t,"Mb",(function(){return Pe.a})),n.d(t,"Nb",(function(){return Be.a})),n.d(t,"Ob",(function(){return Ve.a})),n.d(t,"Pb",(function(){return We.a})),n.d(t,"Qb",(function(){return Ue.a})),n.d(t,"Rb",(function(){return Ge.a})),n.d(t,"Tb",(function(){return O.a})),n.d(t,"Ub",(function(){return Ke.a})),n.d(t,"Vb",(function(){return He.a})),n.d(t,"Wb",(function(){return qe.a})),n.d(t,"Xb",(function(){return Xe.a})),n.d(t,"Yb",(function(){return Ye.a})),n.d(t,"Zb",(function(){return Ze.a})),n.d(t,"ac",(function(){return et})),n.d(t,"bc",(function(){return tt.a})),n.d(t,"cc",(function(){return nt.a})),n.d(t,"dc",(function(){return rt.a})),n.d(t,"ec",(function(){return at.a})),n.d(t,"fc",(function(){return ut})),n.d(t,"hc",(function(){return k.a})),n.d(t,"ic",(function(){return ct})),n.d(t,"jc",(function(){return lt.a})),n.d(t,"kc",(function(){return dt.a})),n.d(t,"mc",(function(){return ht.a})),n.d(t,"nc",(function(){return pt.a})),n.d(t,"oc",(function(){return Je.a})),n.d(t,"pc",(function(){return ft.a})),n.d(t,"rc",(function(){return mt})),n.d(t,"sc",(function(){return bt.a})),n.d(t,"tc",(function(){return gt})),n.d(t,"uc",(function(){return yt})),n.d(t,"vc",(function(){return xt})),n.d(t,"wc",(function(){return vt})),n.d(t,"xc",(function(){return wt.a})),n.d(t,"yc",(function(){return Ot.a})),n.d(t,"zc",(function(){return kt.a})),n.d(t,"Ac",(function(){return Nt.a})),n.d(t,"Bc",(function(){return It.a})),n.d(t,"Cc",(function(){return jt})),n.d(t,"Dc",(function(){return Ct})),n.d(t,"Ec",(function(){return Tt})),n.d(t,"Fc",(function(){return At.a})),n.d(t,"Gc",(function(){return Et.a})),n.d(t,"Hc",(function(){return $t.a})),n.d(t,"Ic",(function(){return Ft.a})),n.d(t,"Jc",(function(){return _t.a})),n.d(t,"Kc",(function(){return Rt.a})),n.d(t,"Lc",(function(){return xe.a})),n.d(t,"Mc",(function(){return Dt.a})),n.d(t,"Nc",(function(){return Mt})),n.d(t,"Oc",(function(){return zt})),n.d(t,"Pc",(function(){return Lt})),n.d(t,"Qc",(function(){return Pt})),n.d(t,"Sc",(function(){return Bt.a})),n.d(t,"Tc",(function(){return Vt.a})),n.d(t,"Uc",(function(){return Wt.a})),n.d(t,"Wc",(function(){return Ut.a})),n.d(t,"Xc",(function(){return Gt.a})),n.d(t,"Yc",(function(){return Kt.a})),n.d(t,"Zc",(function(){return I.a})),n.d(t,"ad",(function(){return Ht.a})),n.d(t,"cd",(function(){return qt.a})),n.d(t,"dd",(function(){return Xt.a})),n.d(t,"ed",(function(){return j.a})),n.d(t,"fd",(function(){return Yt})),n.d(t,"gd",(function(){return Zt})),n.d(t,"hd",(function(){return Jt})),n.d(t,"id",(function(){return Qt})),n.d(t,"jd",(function(){return en.a})),n.d(t,"kd",(function(){return tn.a})),n.d(t,"ld",(function(){return nn.a})),n.d(t,"mb",(function(){return rn.a})),n.d(t,"vb",(function(){return an.a})),n.d(t,"zb",(function(){return sn.a})),n.d(t,"Rc",(function(){return on.a})),n.d(t,"pd",(function(){return un.a})),n.d(t,"qd",(function(){return cn.a})),n.d(t,"rd",(function(){return it.a})),n.d(t,"sd",(function(){return ln.a})),n.d(t,"td",(function(){return dn.a})),n.d(t,"ud",(function(){return hn.a})),n.d(t,"vd",(function(){return pn.a})),n.d(t,"wd",(function(){return fn.a})),n.d(t,"xd",(function(){return ot.a})),n.d(t,"yd",(function(){return mn.a})),n.d(t,"zd",(function(){return bn.a})),n.d(t,"Ad",(function(){return S.a})),n.d(t,"Bd",(function(){return gn.a})),n.d(t,"Cd",(function(){return yn.a})),n.d(t,"Dd",(function(){return vn})),n.d(t,"Ed",(function(){return wn.a})),n.d(t,"Fd",(function(){return On})),n.d(t,"Gd",(function(){return kn})),n.d(t,"Hd",(function(){return Nn})),n.d(t,"Id",(function(){return ve.a})),n.d(t,"Jd",(function(){return In.a})),n.d(t,"Ld",(function(){return jn.a})),n.d(t,"Md",(function(){return Sn.a})),n.d(t,"Nd",(function(){return Cn.a})),n.d(t,"Od",(function(){return Tn.a})),n.d(t,"Pd",(function(){return An})),n.d(t,"Qd",(function(){return En.a})),n.d(t,"Rd",(function(){return $n.a})),n.d(t,"Sd",(function(){return Fn.a})),n.d(t,"Td",(function(){return _n.a})),n.d(t,"y",(function(){return Rn})),n.d(t,"Kd",(function(){return Dn.a})),n.d(t,"lc",(function(){return Mn.a})),n.d(t,"gc",(function(){return Ln})),n.d(t,"Vc",(function(){return Pn.a})),n.d(t,"nd",(function(){return Bn.a})),n.d(t,"sb",(function(){return Vn.a})),n.d(t,"cb",(function(){return Wn})),n.d(t,"fb",(function(){return Un})),n.d(t,"S",(function(){return Gn})),n.d(t,"yb",(function(){return Kn})),n.d(t,"qc",(function(){return N.b})),n.d(t,"a",(function(){return N.a})),n.d(t,"xb",(function(){return Pr})),n.d(t,"Gb",(function(){return Br})),n.d(t,"Sb",(function(){return Vr})),n.d(t,"od",(function(){return zr})),n.d(t,"qb",(function(){return r})),n.d(t,"bd",(function(){return Lr})),n.d(t,"md",(function(){return Wr}));var r={};n.r(r),n.d(r,"conv2d",(function(){return Qn})),n.d(r,"depthwiseConv2d",(function(){return nr})),n.d(r,"matMul",(function(){return rr}));var a=n("iuCH"),s=n("o3Rt"),i=n("RhVc"),o=n("kRdc"),u=n("SFB9"),c=n("34HJ"),l=n("RRa9"),d=n("6J+n"),h=n("20lx"),p=n("Ig+c"),f=n("3FnS"),m=n("fjZN"),b=n("YAKK"),g=n("0ahe"),y=n("l0gX"),x=n("ulO0"),v=n("o/e8"),w=n("ZJ6U"),O=n("SHv8"),k=n("parS"),N=n("VO80"),I=n("/7N0"),j=n("bTzI"),S=n("iIjY");const C=Object(N.b)({basicLSTMCell_:function(e,t,n,r,a,s){const i=Object(v.a)(e,"forgetBias","basicLSTMCell"),u=Object(v.a)(t,"lstmKernel","basicLSTMCell"),c=Object(v.a)(n,"lstmBias","basicLSTMCell"),l=Object(v.a)(r,"data","basicLSTMCell"),d=Object(v.a)(a,"c","basicLSTMCell"),h=Object(v.a)(s,"h","basicLSTMCell"),p=Object(w.a)([l,h],1),f=Object(O.a)(p,u),m=Object(o.a)(f,c),b=m.shape[0],g=m.shape[1]/4,y=[b,g],x=Object(j.a)(m,[0,0],y),N=Object(j.a)(m,[0,g],y),C=Object(j.a)(m,[0,2*g],y),T=Object(j.a)(m,[0,3*g],y),A=Object(o.a)(Object(k.a)(Object(I.a)(x),Object(S.a)(N)),Object(k.a)(d,Object(I.a)(Object(o.a)(i,C))));return[A,Object(k.a)(Object(S.a)(A),Object(I.a)(T))]}});var T=n("OygE"),A=n("cdtJ"),E=n("atXS");const $=Object(N.b)({batchNorm2d_:function(e,t,n,r,a,s){const i=Object(v.a)(e,"x","batchNorm"),o=Object(v.a)(t,"mean","batchNorm"),u=Object(v.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v.a)(a,"scale","batchNorm")),null!=r&&(l=Object(v.a)(r,"offset","batchNorm")),E.b(2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+"."),E.b(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),E.b(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&E.b(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=l&&E.b(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Object(A.a)(i,o,u,l,c,s)}});const F=Object(N.b)({batchNorm3d_:function(e,t,n,r,a,s){const i=Object(v.a)(e,"x","batchNorm"),o=Object(v.a)(t,"mean","batchNorm"),u=Object(v.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v.a)(a,"scale","batchNorm")),null!=r&&(l=Object(v.a)(r,"offset","batchNorm")),E.b(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),E.b(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),E.b(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&E.b(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=l&&E.b(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Object(A.a)(i,o,u,l,c,s)}});const _=Object(N.b)({batchNorm4d_:function(e,t,n,r,a,s){const i=Object(v.a)(e,"x","batchNorm"),o=Object(v.a)(t,"mean","batchNorm"),u=Object(v.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v.a)(a,"scale","batchNorm")),null!=r&&(l=Object(v.a)(r,"offset","batchNorm")),E.b(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),E.b(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),E.b(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&E.b(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=l&&E.b(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Object(A.a)(i,o,u,l,c,s)}});var R=n("BMSg"),D=n("SNsm"),M=n("BD40"),z=n("3rNm"),L=n("WWBm"),P=n("wI/y"),B=n("8Km0"),V=n("B3db");const W=Object(N.b)({concat1d_:function(e){return Object(w.a)(e,0)}});const U=Object(N.b)({concat2d_:function(e,t){return Object(w.a)(e,t)}});const G=Object(N.b)({concat3d_:function(e,t){return Object(w.a)(e,t)}});const K=Object(N.b)({concat4d_:function(e,t){return Object(w.a)(e,t)}});var H=n("dnXz"),q=n("3X4V"),X=n("zR+/"),Y=n("FZCF"),Z=n("mdDO");const J=Object(N.b)({conv3dTranspose_:function(e,t,n,r,a){const s=Object(v.a)(e,"x","conv3dTranspose"),i=Object(v.a)(t,"filter","conv3dTranspose");return Object(Z.a)(n,s,i,r,a)}});var Q=n("7/dO"),ee=n("waK1"),te=n("HmhO"),ne=n("LyxI"),re=n("Nk7E"),ae=n("g4+C"),se=n("auKK"),ie=n("wFtI");const oe=Object(N.b)({diag_:function(e){const t={x:Object(v.a)(e,"x","diag")};return se.a.runKernel(ie.R,t)}});var ue=n("wXC5"),ce=n("x3y4"),le=n("ARu+"),de=n("Kfzt"),he=n("dauL"),pe=n("njhW"),fe=n("ubnP"),me=n("jgXy"),be=n("TyAZ"),ge=n("2ugP"),ye=n("G6IW"),xe=n("NclT"),ve=n("jXH2");const we=Object(N.b)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Object(M.a)([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);const i=Object(xe.a)(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Object(ve.a)(Object(ge.a)(i,0),[n[0],1,1]);if(2===n.length)return Object(ve.a)(Object(ge.a)(Object(ge.a)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(ve.a)(Object(ge.a)(Object(ge.a)(Object(ge.a)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Oe=n("RrjA"),ke=n("02mo"),Ne=n("UI8N"),Ie=n("kaMP"),je=n("zvA9"),Se=n("uy0A"),Ce=n("JLAb"),Te=n("/AvP"),Ae=n("WYAb"),Ee=n("b++O"),$e=n("bzdD"),Fe=n("4f3O"),_e=n("shz4"),Re=n("WJRb"),De=n("4QEz"),Me=n("E1lT"),ze=n("RrGL"),Le=n("wxQM"),Pe=n("gErV"),Be=n("r9q9"),Ve=n("4zPZ"),We=n("7wDt"),Ue=n("8YN0"),Ge=n("0l+w"),Ke=n("wCH+"),He=n("n+ZZ"),qe=n("U/2n"),Xe=n("i8k8"),Ye=n("CfTU"),Ze=n("Ei6o"),Je=n("wion"),Qe=n("NNfn");function et(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(n+" is not a valid third argument to meshgrid");if(void 0===e)return[];let r=Object(v.a)(e,"x","meshgrid",e instanceof Qe.a?e.dtype:"float32");if(void 0===t)return[r];let a=Object(v.a)(t,"y","meshgrid",t instanceof Qe.a?t.dtype:"float32");const s=Object(E.O)(r.shape),i=Object(E.O)(a.shape);return"xy"===n?(r=Object(xe.a)(r,[1,-1]),a=Object(xe.a)(a,[-1,1]),[Object(O.a)(Object(Je.a)([i,1],r.dtype),r),Object(O.a)(a,Object(Je.a)([1,s],a.dtype))]):(r=Object(xe.a)(r,[-1,1]),a=Object(xe.a)(a,[1,-1]),[Object(O.a)(r,Object(Je.a)([1,i],r.dtype)),Object(O.a)(Object(Je.a)([s,1],a.dtype),a)])}var tt=n("rm0a"),nt=n("8OX7"),rt=n("k9tH"),at=n("RhH0"),st=n("NuWS"),it=n("k7Jv"),ot=n("oAkI");const ut=Object(N.b)({moments_:function(e,t=null,n=!1){e=Object(v.a)(e,"x","moments");const r=Object(E.I)(t,e.shape),a=Object(Ze.a)(e,r,n);let s=a.shape;n||(s=Object(st.e)(a.shape,r));const i=Object(it.a)(Object(ot.a)(Object(z.a)(e,"float32"),Object(xe.a)(a,s)));return{mean:a,variance:Object(Ze.a)(i,r,n)}}});const ct=Object(N.b)({multiRNNCell_:function(e,t,n,r){const a=Object(v.a)(t,"data","multiRNNCell"),s=Object(v.b)(n,"c","multiRNNCell"),i=Object(v.b)(r,"h","multiRNNCell");let o=a;const u=[];for(let d=0;d<e.length;d++){const t=e[d](o,s[d],i[d]);u.push(t[0]),u.push(t[1]),o=t[1]}const c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}});var lt=n("Pvz5"),dt=n("O7f5"),ht=n("1N4k"),pt=n("4iwy"),ft=n("DbV5");const mt=Object(N.b)({outerProduct_:function(e,t){const n=Object(v.a)(e,"v1","outerProduct"),r=Object(v.a)(t,"v2","outerProduct");E.b(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=Object(xe.a)(n,[-1,1]),s=Object(xe.a)(r,[1,-1]);return Object(O.a)(a,s)}});var bt=n("DrVt");const gt=Object(N.b)({pad1d_:function(e,t,n=0){return Object(E.b)(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Object(bt.a)(e,[t],n)}});const yt=Object(N.b)({pad2d_:function(e,t,n=0){return Object(E.b)(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(bt.a)(e,t,n)}});const xt=Object(N.b)({pad3d_:function(e,t,n=0){return Object(E.b)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(bt.a)(e,t,n)}});const vt=Object(N.b)({pad4d_:function(e,t,n=0){return Object(E.b)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(bt.a)(e,t,n)}});var wt=n("6vQL"),Ot=n("yfHJ"),kt=n("Ug8H"),Nt=n("dWjR"),It=n("867m");const jt=Object(N.b)({rand_:function(e,t,n){const r=Object(E.O)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return se.a.makeTensor(a,e,n)}});var St=n("1OSX");const Ct=Object(N.b)({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new St.b(t,n,r,a),i=Object(M.a)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});const Tt=Object(N.b)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new St.a(t,n,r,!1,a),i=Object(M.a)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var At=n("hinG"),Et=n("hNYx"),$t=n("17CO"),Ft=n("tQDl"),_t=n("kXpR"),Rt=n("Rqg+"),Dt=n("0I63");const Mt=Object(N.b)({reverse1d_:function(e){const t=Object(v.a)(e,"x","reverse");return E.b(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Object(Dt.a)(t,0)}});const zt=Object(N.b)({reverse2d_:function(e,t){const n=Object(v.a)(e,"x","reverse");return E.b(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Object(Dt.a)(n,t)}});const Lt=Object(N.b)({reverse3d_:function(e,t){const n=Object(v.a)(e,"x","reverse");return E.b(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Object(Dt.a)(n,t)}});const Pt=Object(N.b)({reverse4d_:function(e,t){const n=Object(v.a)(e,"x","reverse");return E.b(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Object(Dt.a)(n,t)}});var Bt=n("CKnt"),Vt=n("Xyqe"),Wt=n("AV8V"),Ut=n("s57M"),Gt=n("EWu9"),Kt=n("90yW"),Ht=n("Hfat"),qt=n("aTLu"),Xt=n("XcSs");const Yt=Object(N.b)({slice1d_:function(e,t,n){const r=Object(v.a)(e,"x","slice1d");return E.b(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Object(j.a)(r,[t],[n])}});const Zt=Object(N.b)({slice2d_:function(e,t,n){const r=Object(v.a)(e,"x","slice2d");return E.b(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Object(j.a)(r,t,n)}});const Jt=Object(N.b)({slice3d_:function(e,t,n){const r=Object(v.a)(e,"x","slice3d");return E.b(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Object(j.a)(r,t,n)}});const Qt=Object(N.b)({slice4d_:function(e,t,n){const r=Object(v.a)(e,"x","slice4d");return E.b(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Object(j.a)(r,t,n)}});var en=n("X4fa"),tn=n("n/2y"),nn=n("dYAU"),rn=n("Grcp"),an=n("THqV"),sn=n("adw1"),on=n("th0q"),un=n("RbuM"),cn=n("Fjpt"),ln=n("QYQ3"),dn=n("0fRV"),hn=n("1U0N"),pn=n("L7Hl"),fn=n("3hph"),mn=n("4FMF"),bn=n("0wrZ"),gn=n("NX3e"),yn=n("lg8H"),xn=n("WVnj");function vn(e,t,n){if(Object(E.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(v.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(xn.a)(e,t,r,n)}var wn=n("BbuY");function On(e,t,n){if(Object(E.d)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(v.c)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(xn.a)(e,t,r,n)}function kn(e,t,n){if(Object(E.d)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(v.c)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(xn.a)(e,t,r,n)}function Nn(e,t,n){if(Object(E.d)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(v.c)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Object(xn.a)(e,t,r,n)}var In=n("VhY8"),jn=n("fmoR"),Sn=n("hT5K"),Cn=n("U/Lz"),Tn=n("OkRW");function An(e,t=!0,n,r){return se.a.makeVariable(e,t,n,r)}var En=n("Z5Ez"),$n=n("p4Cv"),Fn=n("Wiw4"),_n=n("oJu+");const Rn=async function(e,t,n){const r=Object(v.a)(e,"tensor","boolMask"),a=Object(v.a)(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;E.b(i>0,()=>"mask cannot be scalar"),E.e(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=s;m<s+i;m++)u*=o[m];const c=o.slice(0,s).concat([u],o.slice(s+i)),l=Object(xe.a)(r,c),d=Object(xe.a)(a,[-1]),h=await Object($n.a)(d),p=Object(dn.a)(h,[1]),f=Object(Ie.a)(l,p,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f};var Dn=n("yRKQ"),Mn=n("91d6"),zn=n("dsKV");const Ln=Object(N.b)({movingAverage_:function(e,t,n,r,a=!0){const s=Object(v.a)(e,"v","movingAverage"),i=Object(v.a)(t,"x","movingAverage"),u=Object(v.a)(n,"decay","movingAverage");Object(zn.assertTypesMatch)(s,i),E.b(E.a(s.shape,i.shape),()=>"Shape mismatch in v and x");const c=Object(Wt.a)(1),l=Object(ot.a)(c,u);let d=Object(k.a)(Object(ot.a)(i,s),l);if(a){E.b(null!=r,()=>"When using zeroDebias: true, step is required.");const e=Object(v.a)(r,"step","movingAverage");d=Object(ce.a)(d,Object(ot.a)(c,Object(Ot.a)(u,e)))}return Object(o.a)(s,d)}});var Pn=n("i/oj"),Bn=n("vGLV"),Vn=n("ukBL");const Wn=Object(N.b)({dropout_:function(e,t,n,r){const a=Object(v.a)(e,"x","dropout");if(E.b("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),E.b(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof Qe.a?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(E.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,u=Object(ce.a)(Object(ke.a)(Object(o.a)(Object(At.a)(s,0,1,"float32",r),i)),i);return Object(k.a)(a,u)}});function Un(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Gn(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Object(yn.a)(a,"float32")}const Kn=async function(e,t,n=1){const r=Object(v.a)(e,"predictions","inTopK"),a=Object(v.a)(t,"targets","inTopK");Object(E.b)(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Object(E.b)(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),Object(E.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object(E.b)(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);const i=await r.data(),o=await a.data(),[u,c]=[i.length/s,s],l=Object(E.o)("bool",u);for(let d=0;d<u;d++){const e=d*c,t=i.subarray(e,e+c),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort((e,t)=>t.value-e.value),l[d]=0;for(let a=0;a<n;a++)if(r[a].index===o[d]){l[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Object(gn.a)(l,a.shape,"bool")};var Hn=n("U45G"),qn=n("Um8L"),Xn=n("D2/b"),Yn=n("c9N1"),Zn=n("uBja"),Jn=n("R0ls");const Qn=Object(N.b)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(c=c||"linear",!1===Object(Jn.d)(se.a.state.gradientDepth,c)){let h=Object(q.a)(e,t,n,r,a,s,i);return null!=u&&(h=Object(o.a)(h,u)),Object(Jn.a)(h,c,l,d)}const h=Object(v.a)(e,"x","conv2d"),p=Object(v.a)(t,"filter","conv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(xe.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E.b(4===f.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+f.rank+"."),E.b(4===p.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+p.rank+"."),null!=i&&E.b(E.v(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),E.b(f.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${p.shape[2]}.`),E.b(Zn.h(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),E.b("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const b=Zn.a(f.shape,p.shape,n,s,r,i);let g,y;null!=u&&(g=Object(v.a)(u,"bias","fused conv2d"),[g]=Object(zn.makeTypesMatch)(g,h),qn.a(b.outShape,g.shape)),null!=l&&(y=Object(v.a)(l,"prelu weights","fused conv2d"));const x=(e,t)=>{const[a,i,o,u]=t,l=Object(Jn.c)(e,o,c);E.b(Zn.i(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const d=[Object(Yn.a)(i.shape,l,a,n,r),Object(Xn.a)(i,l,a.shape,n,r)];if(null!=u){const e=Object(Jn.b)(u,l);d.push(e)}return d},w={x:f,filter:p,bias:g,preluActivationWeights:y},O={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:d};if(null==u){return Object(Hn.a)((e,t,n)=>{let r=se.a.runKernel(ie.kb,w,O);return n([t,e,r]),m&&(r=Object(xe.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(f,p)}return Object(Hn.a)((e,t,n,r)=>{let a=se.a.runKernel(ie.kb,w,O);return r([t,e,a,n]),m&&(a=Object(xe.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(f,p,g)}});var er=n("aSZd"),tr=n("jLCh");const nr=Object(N.b)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(!1===Object(Jn.d)(se.a.state.gradientDepth,c)){let h=Object(ae.a)(e,t,n,r,a,s,i);return null!=u&&(h=Object(o.a)(h,u)),Object(Jn.a)(h,c,l,d)}const h=Object(v.a)(e,"x","depthwiseConv2d"),p=Object(v.a)(t,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(xe.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E.b(4===f.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),E.b(4===p.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),E.b(f.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),null==s&&(s=[1,1]),E.b(Zn.h(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=i&&E.b(E.v(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const b=Zn.a(f.shape,p.shape,n,s,r,i,!0);let g,y;null!=u&&(g=Object(v.a)(u,"bias","fused conv2d"),[g]=Object(zn.makeTypesMatch)(g,h),qn.a(b.outShape,g.shape)),null!=l&&(y=Object(v.a)(l,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{E.b(Zn.i(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[a,o,u,l]=t,d=Object(Jn.c)(e,u,c),h=Object(tr.a)(o.shape,d,a,n,r,s,i),p=Object(er.a)(o,d,a.shape,n,r,s,i);if(null!=l){return[h,p,Object(Jn.b)(g,d)]}return[h,p]},w={x:f,filter:p,bias:g,preluActivationWeights:y},O={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:d};if(null==u){return Object(Hn.a)((e,t,n)=>{let r=se.a.runKernel(ie.lb,w,O);return n([t,e,r]),m&&(r=Object(xe.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(f,p)}return Object(Hn.a)((e,t,n,r)=>{let a=se.a.runKernel(ie.lb,w,O);return r([t,e,a,n]),m&&(a=Object(xe.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(f,p,g)}});const rr=Object(N.b)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:u}){if(!1===Object(Jn.d)(se.a.state.gradientDepth,s)){let c=Object(O.a)(e,t,n,r);return null!=a&&(c=Object(o.a)(c,a)),Object(Jn.a)(c,s,i,u)}let c=Object(v.a)(e,"a","fused matMul"),l=Object(v.a)(t,"b","fused matMul");[c,l]=Object(zn.makeTypesMatch)(c,l);const d=n?c.shape[c.rank-2]:c.shape[c.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=c.shape.slice(0,-2),b=l.shape.slice(0,-2),g=E.O(m),y=E.O(b);E.b(c.rank>=2&&l.rank>=2&&c.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${c.rank} and ${l.rank}.`),E.b(E.a(m,b),()=>`Error in fused matMul: outer dimensions (${m}) and (${b}) of Tensors with shapes ${c.shape} and `+l.shape+" must match."),E.b(d===h,()=>`Error in fused matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=c.shape.slice(0,-2).concat([p,f]),w=n?Object(xe.a)(c,[g,d,p]):Object(xe.a)(c,[g,p,d]),k=r?Object(xe.a)(l,[y,f,h]):Object(xe.a)(l,[y,h,f]);let N,I;null!=a&&(N=Object(v.a)(a,"bias","fused matMul"),[N]=Object(zn.makeTypesMatch)(N,c),qn.a(x,N.shape)),null!=i&&(I=Object(v.a)(i,"prelu weights","fused matMul"));const j=(e,t)=>{const[i,o,u,c]=t,l=Object(Jn.c)(Object(xe.a)(e,u.shape),u,s);let d,h;if(n||r?!n&&r?(d=Object(O.a)(l,o,!1,!1),h=Object(O.a)(l,i,!0,!1)):n&&!r?(d=Object(O.a)(o,l,!1,!0),h=Object(O.a)(i,l,!1,!1)):(d=Object(O.a)(o,l,!0,!0),h=Object(O.a)(l,i,!0,!0)):(d=Object(O.a)(l,o,!1,!0),h=Object(O.a)(i,l,!0,!1)),null!=a){return[d,h,Object(Jn.b)(c,l)]}return[d,h]},S={a:w,b:k,bias:N,preluActivationWeights:I},C={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:u};if(null==a){return Object(Hn.a)((e,t,n)=>{const r=se.a.runKernel(ie.dd,S,C);return n([e,t,r]),{value:Object(xe.a)(r,x),gradFunc:j}})(w,k)}return Object(Hn.a)((e,t,n,r)=>{const a=se.a.runKernel(ie.dd,S,C);return r([e,t,a,n]),{value:Object(xe.a)(a,x),gradFunc:j}})(w,k,N)}});const ar=Object(N.b)({hammingWindow_:function(e){return Gn(e,.54,.46)}});const sr=Object(N.b)({hannWindow_:function(e){return Gn(e,.5,.5)}});const ir=Object(N.b)({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(Object(j.a)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Object(w.a)([Object(j.a)(e,s,t-r),Object(Oe.a)([r],a)]);i.push(o),s+=n}return 0===i.length?vn([],[0,t]):Object(xe.a)(Object(w.a)(i),[i.length,t])}});const or=Object(N.b)({stft_:function(e,t,n,r,a=sr){null==r&&(r=Un(t));const s=ir(e,t,n),i=Object(k.a)(s,a(t));return Object(on.a)(i,r)}});const ur=Object(N.b)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=Object(v.a)(e,"image","cropAndResize"),o=Object(v.a)(t,"boxes","cropAndResize","float32"),u=Object(v.a)(n,"boxInd","cropAndResize","int32"),c=o.shape[0];E.b(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),E.b(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),E.b(1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),E.b(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),E.b(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),E.b("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);const l={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return se.a.runKernel(ie.K,l,d)}});const cr=Object(N.b)({flipLeftRight_:function(e){const t=Object(v.a)(e,"image","flipLeftRight","float32");E.b(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return se.a.runKernel(ie.fb,n,{})}});const lr=Object(N.b)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Object(v.a)(e,"image","rotateWithOffset","float32");E.b(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const s={image:a},i={radians:t,fillValue:n,center:r};return se.a.runKernel(ie.vc,s,i)}});function dr(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),E.b(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),E.b(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),E.b(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),E.b(1===t.rank,()=>"scores must be a 1D tensor"),E.b(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+t.shape[0]),E.b(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const hr=Object(N.b)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(v.a)(e,"boxes","nonMaxSuppression"),i=Object(v.a)(t,"scores","nonMaxSuppression"),o=dr(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return se.a.runKernel(ie.Xb,{boxes:s,scores:i},u)}});var pr=n("g4m1");const fr=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(v.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(v.a)(t,"scores","nonMaxSuppressionAsync"),o=dr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),c=u[0],l=u[1],{selectedIndices:d}=Object(pr.a)(c,l,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Object(yn.a)(d,"int32")};const mr=Object(N.b)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(v.a)(e,"boxes","nonMaxSuppression"),o=Object(v.a)(t,"scores","nonMaxSuppression"),u=dr(i,o,n,r,a,s),c={boxes:i,scores:o},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=se.a.runKernel(ie.Zb,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}});const br=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(v.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(v.a)(t,"scores","nonMaxSuppressionAsync"),u=dr(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=Object(pr.c)(l,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Object(yn.a)(h,"int32"),selectedScores:Object(yn.a)(p)}};const gr=Object(N.b)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(v.a)(e,"boxes","nonMaxSuppression"),o=Object(v.a)(t,"scores","nonMaxSuppression"),u=dr(i,o,n,r,a,null),c={boxes:i,scores:o},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=se.a.runKernel(ie.Yb,c,l);return{selectedIndices:d[0],validOutputs:d[1]}}});const yr=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(v.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(v.a)(t,"scores","nonMaxSuppressionAsync"),u=dr(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Object(pr.b)(h,p,c,l,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Object(yn.a)(f,"int32"),validOutputs:Object(Wt.a)(m,"int32")}};var xr=n("c/ib"),vr=n("D4ac");const wr=Object(N.b)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=Object(v.a)(e,"image","transform","float32"),o=Object(v.a)(t,"transforms","transform","float32");E.b(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),E.b(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),E.b(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);const u={image:i,transforms:o},c={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return se.a.runKernel(ie.Xc,u,c)}});const Or=Object(N.b)({bandPart_:function(e,t,n){Object(E.b)(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),Object(E.b)(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(v.a)(e,"a","bandPart");Object(E.b)(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Object(xe.a)(Object(Et.a)(0,s,1,"int32"),[-1,1]),u=Object(Et.a)(0,i,1,"int32"),c=Object(ot.a)(o,u),l=Object(Ve.a)(Object(_e.a)(c,Object(Wt.a)(+t,"int32")),Object(Se.a)(c,Object(Wt.a)(-n,"int32"))),d=Object(Fn.a)([s,i],r.dtype);return Object(xe.a)(Object(hn.a)(Object(Tn.a)(Object(xe.a)(r,[-1,s,i])).map(e=>Object(En.a)(l,e,d))),a)}});const kr=Object(N.b)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Object(E.b)(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(E.b)(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Object(un.a)(e,e.shape[0],0).map(e=>Object(dn.a)(e,[0]));Object(E.b)(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let a=0;a<e.length;++a)n.push(se.a.tidy(()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){const r=Object(k.a)(Object(mn.a)(Object(k.a)(n[t],e)),n[t]);e=Object(ot.a)(e,r)}return Object(ce.a)(e,Object(Mn.a)(e,"euclidean"))}));return t?Object(hn.a)(n,0):n}});var Nr=n("wE5H");function Ir(e,t=!1){return se.a.tidy(()=>{Object(E.b)(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let a=we(n),s=Object(B.a)(e);const i=vn([[1]],[1,1]);let o=Object(B.a)(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,c=a;[o,s,a]=se.a.tidy(()=>{const t=Object(j.a)(s,[e,e],[n-e,1]),u=Object(Mn.a)(t),c=Object(j.a)(s,[e,e],[1,1]),l=Object(En.a)(Object(je.a)(c,0),vn([[-1]]),vn([[1]])),d=Object(ot.a)(c,Object(k.a)(l,u)),h=Object(ce.a)(t,d);o=1===h.shape[0]?Object(B.a)(i):Object(w.a)([i,Object(j.a)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Object(dt.a)(Object(ce.a)(Object(O.a)(l,d),u)),f=Object(j.a)(s,[e,0],[n-e,r]),m=Object(k.a)(p,o),b=Object(Dn.a)(o);if(0===e)s=Object(ot.a)(f,Object(O.a)(m,Object(O.a)(b,f)));else{const t=Object(ot.a)(f,Object(O.a)(m,Object(O.a)(b,f)));s=Object(w.a)([Object(j.a)(s,[0,0],[e,r]),t],0)}const g=Object(Dn.a)(m),y=Object(j.a)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Object(ot.a)(y,Object(O.a)(Object(O.a)(y,o),g));else{const t=Object(ot.a)(y,Object(O.a)(Object(O.a)(y,o),g));a=Object(w.a)([Object(j.a)(a,[0,0],[n,e]),t],1)}return[o,s,a]}),Object(Nr.d)([t,u,c])}return!t&&n>r&&(a=Object(j.a)(a,[0,0],[n,r]),s=Object(j.a)(s,[0,0],[r,r])),[a,s]})}const jr=Object(N.b)({qr_:function(e,t=!1){if(Object(E.b)(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return Ir(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Object(Tn.a)(Object(xe.a)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(e=>{const[n,r]=Ir(e,t);a.push(n),s.push(r)});return[Object(xe.a)(Object(hn.a)(a,0),e.shape),Object(xe.a)(Object(hn.a)(s,0),e.shape)]}}});var Sr=n("V+B2");const Cr=Object(N.b)({computeWeightedLoss_:function(e,t,n=Sr.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(v.a)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(v.a)(t,"weights","computeWeightedLoss"));const s=null==a?r:Object(k.a)(r,a);if(n===Sr.a.NONE)return s;if(n===Sr.a.SUM)return Object(mn.a)(s);if(n===Sr.a.MEAN){if(null==a)return Object(Ze.a)(s);{const e=r.size/a.size,t=Object(ce.a)(Object(mn.a)(s),Object(mn.a)(a));return e>1?Object(ce.a)(t,Object(Wt.a)(e)):t}}if(n===Sr.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(ce.a)(Object(mn.a)(s),Object(Wt.a)(r.size));{const e=Object(k.a)(a,Object(Je.a)(r.shape)),t=Object(z.a)(Object(mn.a)(Object(ht.a)(e,Object(Wt.a)(0))),"float32");return Object(ce.a)(Object(mn.a)(s),t)}}throw Error("Unknown reduction: "+n)}});const Tr=Object(N.b)({absoluteDifference_:function(e,t,n,r=Sr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(v.a)(e,"labels","absoluteDifference"),i=Object(v.a)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Object(v.a)(n,"weights","absoluteDifference")),Object(E.e)(s.shape,i.shape,"Error in absoluteDifference: ");const u=Object(a.a)(Object(ot.a)(s,i));return Cr(u,o,r)}});const Ar=Object(N.b)({cosineDistance_:function(e,t,n,r,a=Sr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(v.a)(e,"labels","cosineDistance"),i=Object(v.a)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(v.a)(r,"weights","cosineDistance")),Object(E.e)(s.shape,i.shape,"Error in cosineDistance: ");const u=Object(Wt.a)(1),c=Object(ot.a)(u,Object(mn.a)(Object(k.a)(s,i),n,!0));return Cr(c,o,a)}});const Er=Object(N.b)({hingeLoss_:function(e,t,n,r=Sr.a.SUM_BY_NONZERO_WEIGHTS){let a=Object(v.a)(e,"labels","hingeLoss");const s=Object(v.a)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(v.a)(n,"weights","hingeLoss")),Object(E.e)(a.shape,s.shape,"Error in hingeLoss: ");const o=Object(Wt.a)(1);a=Object(ot.a)(Object(k.a)(Object(Wt.a)(2),a),o);const u=Object(_t.a)(Object(ot.a)(o,Object(k.a)(a,s)));return Cr(u,i,r)}});const $r=Object(N.b)({huberLoss_:function(e,t,n,r=1,s=Sr.a.SUM_BY_NONZERO_WEIGHTS){const i=Object(v.a)(e,"labels","huberLoss"),u=Object(v.a)(t,"predictions","huberLoss");let c=null;null!=n&&(c=Object(v.a)(n,"weights","huberLoss")),Object(E.e)(i.shape,u.shape,"Error in huberLoss: ");const l=Object(Wt.a)(r),d=Object(a.a)(Object(ot.a)(u,i)),h=Object(nt.a)(d,l),p=Object(ot.a)(d,h),f=Object(o.a)(Object(k.a)(Object(Wt.a)(.5),Object(it.a)(h)),Object(k.a)(l,p));return Cr(f,c,s)}});const Fr=Object(N.b)({logLoss_:function(e,t,n,r=1e-7,a=Sr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(v.a)(e,"labels","logLoss"),i=Object(v.a)(t,"predictions","logLoss");let u=null;null!=n&&(u=Object(v.a)(n,"weights","logLoss")),Object(E.e)(s.shape,i.shape,"Error in logLoss: ");const c=Object(Wt.a)(1),l=Object(Wt.a)(r),d=Object(dt.a)(Object(k.a)(s,Object(Me.a)(Object(o.a)(i,l)))),h=Object(k.a)(Object(ot.a)(c,s),Object(Me.a)(Object(o.a)(Object(ot.a)(c,i),l))),p=Object(ot.a)(d,h);return Cr(p,u,a)}});const _r=Object(N.b)({meanSquaredError_:function(e,t,n,r=Sr.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(v.a)(e,"labels","meanSquaredError"),s=Object(v.a)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(v.a)(n,"weights","meanSquaredError")),Object(E.e)(a.shape,s.shape,"Error in meanSquaredError: ");const o=Object(ln.a)(a,s);return Cr(o,i,r)}});const Rr=Object(N.b)({sigmoidCrossEntropy_:function(e,t,n,r=0,s=Sr.a.SUM_BY_NONZERO_WEIGHTS){let i=Object(v.a)(e,"multiClassLabels","sigmoidCrossEntropy");const u=Object(v.a)(t,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(v.a)(n,"weights","sigmoidCrossEntropy")),Object(E.e)(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Object(Wt.a)(r),t=Object(Wt.a)(1),n=Object(Wt.a)(.5);i=Object(o.a)(Object(k.a)(i,Object(ot.a)(t,e)),Object(k.a)(n,e))}const l=function(e,t){const n=Object(v.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(v.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(E.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Object(_t.a)(r),i=Object(k.a)(r,n),u=Object(ze.a)(Object(be.a)(Object(dt.a)(Object(a.a)(r))));return Object(o.a)(Object(ot.a)(s,i),u)}(i,u);return Cr(l,c,s)}});const Dr=Object(N.b)({softmaxCrossEntropy_:function(e,t,n,r=0,a=Sr.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(v.a)(e,"onehotLabels","softmaxCrossEntropy");const i=Object(v.a)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=Object(v.a)(n,"weights","softmaxCrossEntropy")),Object(E.e)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Object(Wt.a)(r),t=Object(Wt.a)(1),n=Object(Wt.a)(s.shape[1]);s=Object(o.a)(Object(k.a)(s,Object(ot.a)(t,e)),Object(ce.a)(e,n))}const c=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return Object(Hn.a)((e,t,r)=>{const a=Object(Be.a)(t,[n],!0),s=Object(ot.a)(Object(z.a)(t,"float32"),a);r([e,s]);const i=Object(dt.a)(Object(k.a)(s,e));return{value:Object(mn.a)(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Object(st.e)(e.shape,[n]);return[Object(k.a)(Object(xe.a)(e,s),Object(ot.a)(Object(z.a)(r,"float32"),Object(be.a)(a))),Object(k.a)(Object(xe.a)(e,s),Object(ot.a)(Object(be.a)(a),Object(z.a)(r,"float32")))]}}})(e,t)}(s,i);return Cr(c,u,a)}});const Mr=Object(N.b)({sparseReshape_:function(e,t,n){const r=Object(v.a)(e,"inputIndices","sparseReshape"),a=Object(v.a)(t,"inputShape","sparseReshape"),s=Object(v.a)(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        "+r.shape);if(1!==a.rank)throw new Error("Input shape should be Tensor1D but received shape "+a.shape);if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape "+s.shape);const i={inputIndices:r,inputShape:a,newShape:s},o=se.a.runKernel(ie.Jc,i);return{outputIndices:o[0],outputShape:o[1]}}}),zr={fft:rn.a,ifft:an.a,rfft:on.a,irfft:sn.a},Lr={hammingWindow:ar,hannWindow:sr,frame:ir,stft:or},Pr={flipLeftRight:cr,resizeNearestNeighbor:vr.a,resizeBilinear:xr.a,rotateWithOffset:lr,cropAndResize:ur,nonMaxSuppression:hr,nonMaxSuppressionAsync:fr,nonMaxSuppressionWithScore:mr,nonMaxSuppressionWithScoreAsync:br,nonMaxSuppressionPadded:gr,nonMaxSuppressionPaddedAsync:yr,transform:wr},Br={bandPart:Or,gramSchmidt:kr,qr:jr},Vr={absoluteDifference:Tr,computeWeightedLoss:Cr,cosineDistance:Ar,hingeLoss:Er,huberLoss:$r,logLoss:Fr,meanSquaredError:_r,sigmoidCrossEntropy:Rr,softmaxCrossEntropy:Dr},Wr={sparseReshape:Mr}},FZCF:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({conv3d_:function(e,t,n,u,l="NDHWC",d=[1,1,1]){const h=Object(s.a)(e,"x","conv3d"),p=Object(s.a)(t,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===f.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`),i.b(5===p.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+p.rank+"."),i.b(f.shape[4]===p.shape[3],()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${p.shape[3]}.`),i.b(Object(o.h)(n,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`),i.b("NDHWC"===l,()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`);const b={x:f,filter:p},g={strides:n,pad:u,dataFormat:l,dilations:d},y=r.a.runKernel(a.F,b,g);return m?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},Fjpt:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sqrt_:function(e){const t={x:Object(s.a)(e,"x","sqrt")};return r.a.runKernel(a.Mc,t)}})},G6IW:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({expm1_:function(e){const t={x:Object(s.a)(e,"x","expm1")};return r.a.runKernel(a.cb,t)}})},Grcp:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80");const o=Object(i.b)({fft_:function(e){Object(s.b)("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return r.a.runKernel(a.db,t)}})},Hfat:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sign_:function(e){const t={x:Object(s.a)(e,"x","sign")};return r.a.runKernel(a.Cc,t)}})},HmhO:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({cumsum_:function(e,t=0,n=!1,i=!1){const o={x:Object(s.a)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:i};return r.a.runKernel(a.L,o,u)}})},I79q:function(e,t,n){"use strict";var r,a,s,i,o;n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return c})),n.d(t,"b",(function(){return l})),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function c(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function l(e){return c(e,"int32")}},"Ig+c":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({asin_:function(e){const t={x:Object(s.a)(e,"x","asin")};return r.a.runKernel(a.j,t)}})},JLAb:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({imag_:function(e){const t={input:Object(s.a)(e,"input","imag")};return r.a.runKernel(a.sb,t)}})},Kajj:function(e,t,n){"use strict";(function(e){n("auKK");var t=n("ftYm"),r=n("szMd");const a=Object(r.c)();a.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>t.isBrowser()),a.registerFlag("IS_NODE",()=>"undefined"!==typeof e&&"undefined"!==typeof e.versions&&"undefined"!==typeof e.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),a.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1)}).call(this,n("8oxB"))},KdhW:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},Kfzt:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("o/e8"),a=n("atXS"),s=n("SHv8"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({dot_:function(e,t){const n=Object(r.a)(e,"t1","dot"),i=Object(r.a)(t,"t2","dot");a.b((1===n.rank||2===n.rank)&&(1===i.rank||2===i.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`);const u=1===n.rank?n.size:n.shape[1],c=1===i.rank?i.size:i.shape[0];if(a.b(u===c,()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${c}.`),1===n.rank&&1===i.rank){const e=Object(o.a)(n,[1,-1]),t=Object(o.a)(i,[-1,1]),r=Object(s.a)(e,t);return Object(o.a)(r,[])}if(1===n.rank&&2===i.rank){const e=Object(o.a)(n,[1,-1]),t=Object(o.a)(i,[i.shape[0],i.shape[1]]),r=Object(s.a)(e,t);return Object(o.a)(r,[r.size])}if(2===n.rank&&1===i.rank){const e=Object(o.a)(i,[-1,1]),t=Object(s.a)(n,e);return Object(o.a)(t,[t.size])}{const e=Object(o.a)(i,[i.shape[0],i.shape[1]]);return Object(s.a)(n,e)}}})},L7Hl:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({step_:function(e,t=0){const n={x:Object(s.a)(e,"x","step")},i={alpha:t};return r.a.runKernel(a.Pc,n,i)}})},"Lbv+":function(e,t,n){"use strict";n.r(t);var r=n("o0o1"),a=n.n(r),s=n("HaE+"),i=n("8Kt/"),o=n.n(i),u=n("q1tI"),c=n.n(u),l=n("srVO"),d=n("OlX0"),h=n("q5K1"),p=n("MX0m"),f=n.n(p),m=n("AL3R"),b=n("l1VB"),g=n("rzrB");function y(e,t){return x.apply(this,arguments)}function x(){return(x=Object(s.a)(a.a.mark((function e(t,n){return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log(t),e.next=3,b.a.put(t,n,{contentType:"image/jpeg"}).catch((function(e){return console.log(e)}));case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}m.default.configure(g.a);var v=n("oDCQ"),w=n("awqx"),O=n("xsdW");function k(e){return N.apply(this,arguments)}function N(){return(N=Object(s.a)(a.a.mark((function e(t){return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,v.a.graphql(Object(w.b)(O.b,{input:t}));case 3:e.next=8;break;case 5:e.prev=5,e.t0=e.catch(0),console.error("sendToLine",e.t0);case 8:case"end":return e.stop()}}),e,null,[[0,5]])})))).apply(this,arguments)}m.default.configure(g.a);var I=n("TGEI");function j(e){return S.apply(this,arguments)}function S(){return(S=Object(s.a)(a.a.mark((function e(t){var n;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,v.a.graphql(Object(w.b)(I.a,{input:t}));case 3:n=e.sent,console.log("\u9001\u4fe1",n),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),console.error("createWildlifeRecord",e.t0);case 10:case"end":return e.stop()}}),e,null,[[0,7]])})))).apply(this,arguments)}m.default.configure(g.a);var C=n("k5gE");function T(e,t,n){return A.apply(this,arguments)}function A(){return(A=Object(s.a)(a.a.mark((function e(t,n,r){var i,o,u,c;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i="".concat(t.time,".jpg"),o="https://s3-ap-northeast-1.amazonaws.com/".concat(g.a.aws_user_files_s3_bucket,"/public/").concat(i),u={type:"post",time:t.time,className:t.className,location:n.location,imageUrl:o},c={to:"C2333e15671eae813401f0d4eb511e648",messages:[{type:"image",originalContentUrl:o,previewImageUrl:o},{type:"text",text:"".concat(n.location,"\u4ed8\u8fd1\u306b\u52d5\u7269\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\uff01")}]},{to:"R2ef8e3578e6557a045bedc73e02fa694",messages:[{type:"image",originalContentUrl:o,previewImageUrl:o},{type:"text",text:"".concat(n.location,"\u4ed8\u8fd1\u306b\u52d5\u7269\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\uff01")}]},e.next=7,j(u);case 7:if(r.toBlob(function(){var e=Object(s.a)(a.a.mark((function e(t){return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,y(i,t);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),"image/jpeg"),!Object(C.d)()){e.next=12;break}return console.log("LINE!"),e.next=12,k(JSON.stringify(c));case 12:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function E(e,t){if(t&&e.current&&t.current){var n=e.current;return n.height=t.current.videoHeight,n.width=t.current.videoWidth,n.getContext("2d").drawImage(t.current,0,0,t.current.videoWidth,t.current.videoHeight),n}}function $(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return t&&F(e.prototype,t),n&&F(e,n),e}var R=["black stork","ibex","buffalo","dingo","sheep","llama","gazelle","impala","fox","bear","monkey","Kangaroo"],D=function(){function e(){$(this,e)}return _(e,null,[{key:"isVerifiedAnimal",value:function(e){return R.find((function(t){return e.includes(t)}))}}]),e}();var M=function(){function e(t,n){$(this,e),this.recentFrames=t,this.baseTime=n}return _(e,[{key:"checkWildlifeExistenceInEveryFrame",value:function(e){var t=this;return this.recentFrames.filter((function(n){return n.time>t.baseTime-e})).every((function(e){return null!==e.className}))}},{key:"checkWildlifeExistenceInSomeFrame",value:function(e){var t=this;return this.recentFrames.filter((function(n){return n.time>t.baseTime-e})).some((function(e){return null!==e.className}))}}]),e}(),z=Number(1e3);function L(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var P=n("CtZu"),B=n("+hG3");const V={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};async function W(e={}){if(null==B)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",n=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error("ObjectDetection constructed with invalid base model "+t+". Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.");const r=new U(t,n);return await r.load(),r}class U{constructor(e,t){this.modelPath=t||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(e)}/model.json`}getPrefix(e){return"lite_mobilenet_v2"===e?"ssd"+e:"ssd_"+e}async load(){this.model=await P.c(this.modelPath);const e=B.zeros([1,300,300,3],"int32"),t=await this.model.executeAsync(e);await Promise.all(t.map(e=>e.data())),t.map(e=>e.dispose()),e.dispose()}async infer(e,t,n){const r=B.tidy(()=>(e instanceof B.Tensor||(e=B.browser.fromPixels(e)),e.expandDims(0))),a=r.shape[1],s=r.shape[2],i=await this.model.executeAsync(r),o=i[0].dataSync(),u=i[1].dataSync();r.dispose(),B.dispose(i);const[c,l]=this.calculateMaxScores(o,i[0].shape[1],i[0].shape[2]),d=B.getBackend();B.setBackend("cpu");const h=B.tidy(()=>{const e=B.tensor2d(u,[i[1].shape[1],i[1].shape[3]]);return B.image.nonMaxSuppression(e,c,t,n,n)}),p=h.dataSync();return h.dispose(),B.setBackend(d),this.buildDetectedObjects(s,a,u,c,p,l)}buildDetectedObjects(e,t,n,r,a,s){const i=a.length,o=[];for(let u=0;u<i;u++){const i=[];for(let e=0;e<4;e++)i[e]=n[4*a[u]+e];const c=i[0]*t,l=i[1]*e,d=i[2]*t,h=i[3]*e;i[0]=l,i[1]=c,i[2]=h-l,i[3]=d-c,o.push({bbox:i,class:V[s[a[u]]+1].displayName,score:r[a[u]]})}return o}calculateMaxScores(e,t,n){const r=[],a=[];for(let s=0;s<t;s++){let t=Number.MIN_VALUE,i=-1;for(let r=0;r<n;r++)e[s*n+r]>t&&(t=e[s*n+r],i=r);r[s]=t,a[s]=i}return[r,a]}async detect(e,t=20,n=.5){return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}function G(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(i,o)}u((r=r.apply(e,t||[])).next())}))}function K(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(a=(a=i.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}var H={0:"tench, Tinca tinca",1:"goldfish, Carassius auratus",2:"great white shark, white shark, man-eater, man-eating shark, Carcharodon carcharias",3:"tiger shark, Galeocerdo cuvieri",4:"hammerhead, hammerhead shark",5:"electric ray, crampfish, numbfish, torpedo",6:"stingray",7:"cock",8:"hen",9:"ostrich, Struthio camelus",10:"brambling, Fringilla montifringilla",11:"goldfinch, Carduelis carduelis",12:"house finch, linnet, Carpodacus mexicanus",13:"junco, snowbird",14:"indigo bunting, indigo finch, indigo bird, Passerina cyanea",15:"robin, American robin, Turdus migratorius",16:"bulbul",17:"jay",18:"magpie",19:"chickadee",20:"water ouzel, dipper",21:"kite",22:"bald eagle, American eagle, Haliaeetus leucocephalus",23:"vulture",24:"great grey owl, great gray owl, Strix nebulosa",25:"European fire salamander, Salamandra salamandra",26:"common newt, Triturus vulgaris",27:"eft",28:"spotted salamander, Ambystoma maculatum",29:"axolotl, mud puppy, Ambystoma mexicanum",30:"bullfrog, Rana catesbeiana",31:"tree frog, tree-frog",32:"tailed frog, bell toad, ribbed toad, tailed toad, Ascaphus trui",33:"loggerhead, loggerhead turtle, Caretta caretta",34:"leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea",35:"mud turtle",36:"terrapin",37:"box turtle, box tortoise",38:"banded gecko",39:"common iguana, iguana, Iguana iguana",40:"American chameleon, anole, Anolis carolinensis",41:"whiptail, whiptail lizard",42:"agama",43:"frilled lizard, Chlamydosaurus kingi",44:"alligator lizard",45:"Gila monster, Heloderma suspectum",46:"green lizard, Lacerta viridis",47:"African chameleon, Chamaeleo chamaeleon",48:"Komodo dragon, Komodo lizard, dragon lizard, giant lizard, Varanus komodoensis",49:"African crocodile, Nile crocodile, Crocodylus niloticus",50:"American alligator, Alligator mississipiensis",51:"triceratops",52:"thunder snake, worm snake, Carphophis amoenus",53:"ringneck snake, ring-necked snake, ring snake",54:"hognose snake, puff adder, sand viper",55:"green snake, grass snake",56:"king snake, kingsnake",57:"garter snake, grass snake",58:"water snake",59:"vine snake",60:"night snake, Hypsiglena torquata",61:"boa constrictor, Constrictor constrictor",62:"rock python, rock snake, Python sebae",63:"Indian cobra, Naja naja",64:"green mamba",65:"sea snake",66:"horned viper, cerastes, sand viper, horned asp, Cerastes cornutus",67:"diamondback, diamondback rattlesnake, Crotalus adamanteus",68:"sidewinder, horned rattlesnake, Crotalus cerastes",69:"trilobite",70:"harvestman, daddy longlegs, Phalangium opilio",71:"scorpion",72:"black and gold garden spider, Argiope aurantia",73:"barn spider, Araneus cavaticus",74:"garden spider, Aranea diademata",75:"black widow, Latrodectus mactans",76:"tarantula",77:"wolf spider, hunting spider",78:"tick",79:"centipede",80:"black grouse",81:"ptarmigan",82:"ruffed grouse, partridge, Bonasa umbellus",83:"prairie chicken, prairie grouse, prairie fowl",84:"peacock",85:"quail",86:"partridge",87:"African grey, African gray, Psittacus erithacus",88:"macaw",89:"sulphur-crested cockatoo, Kakatoe galerita, Cacatua galerita",90:"lorikeet",91:"coucal",92:"bee eater",93:"hornbill",94:"hummingbird",95:"jacamar",96:"toucan",97:"drake",98:"red-breasted merganser, Mergus serrator",99:"goose",100:"black swan, Cygnus atratus",101:"tusker",102:"echidna, spiny anteater, anteater",103:"platypus, duckbill, duckbilled platypus, duck-billed platypus, Ornithorhynchus anatinus",104:"wallaby, brush kangaroo",105:"koala, koala bear, kangaroo bear, native bear, Phascolarctos cinereus",106:"wombat",107:"jelly fish",108:"sea anemone, anemone",109:"brain coral",110:"flatworm, platyhelminth",111:"nematode, nematode worm, roundworm",112:"conch",113:"snail",114:"slug",115:"sea slug, nudibranch",116:"chiton, coat-of-mail shell, sea cradle, polyplacophore",117:"chambered nautilus, pearly nautilus, nautilus",118:"Dungeness crab, Cancer magister",119:"rock crab, Cancer irroratus",120:"fiddler crab",121:"king crab, Alaska crab, Alaskan king crab, Alaska king crab, Paralithodes camtschatica",122:"American lobster, Northern lobster, Maine lobster, Homarus americanus",123:"spiny lobster, langouste, rock lobster, crawfish, crayfish, sea crawfish",124:"crayfish, crawfish, crawdad, crawdaddy",125:"hermit crab",126:"isopod",127:"white stork, Ciconia ciconia",128:"black stork, Ciconia nigra",129:"spoonbill",130:"flamingo",131:"little blue heron, Egretta caerulea",132:"American egret, great white heron, Egretta albus",133:"bittern",134:"crane",135:"limpkin, Aramus pictus",136:"European gallinule, Porphyrio porphyrio",137:"American coot, marsh hen, mud hen, water hen, Fulica americana",138:"bustard",139:"ruddy turnstone, Arenaria interpres",140:"red-backed sandpiper, dunlin, Erolia alpina",141:"redshank, Tringa totanus",142:"dowitcher",143:"oystercatcher, oyster catcher",144:"pelican",145:"king penguin, Aptenodytes patagonica",146:"albatross, mollymawk",147:"grey whale, gray whale, devilfish, Eschrichtius gibbosus, Eschrichtius robustus",148:"killer whale, killer, orca, grampus, sea wolf, Orcinus orca",149:"dugong, Dugong dugon",150:"sea lion",151:"Chihuahua",152:"Japanese spaniel",153:"Maltese dog, Maltese terrier, Maltese",154:"Pekinese, Pekingese, Peke",155:"Shih-Tzu",156:"Blenheim spaniel",157:"papillon",158:"toy terrier",159:"Rhodesian ridgeback",160:"Afghan hound, Afghan",161:"basset, basset hound",162:"beagle",163:"bloodhound, sleuthhound",164:"bluetick",165:"black-and-tan coonhound",166:"Walker hound, Walker foxhound",167:"English foxhound",168:"redbone",169:"borzoi, Russian wolfhound",170:"Irish wolfhound",171:"Italian greyhound",172:"whippet",173:"Ibizan hound, Ibizan Podenco",174:"Norwegian elkhound, elkhound",175:"otterhound, otter hound",176:"Saluki, gazelle hound",177:"Scottish deerhound, deerhound",178:"Weimaraner",179:"Staffordshire bullterrier, Staffordshire bull terrier",180:"American Staffordshire terrier, Staffordshire terrier, American pit bull terrier, pit bull terrier",181:"Bedlington terrier",182:"Border terrier",183:"Kerry blue terrier",184:"Irish terrier",185:"Norfolk terrier",186:"Norwich terrier",187:"Yorkshire terrier",188:"wire-haired fox terrier",189:"Lakeland terrier",190:"Sealyham terrier, Sealyham",191:"Airedale, Airedale terrier",192:"cairn, cairn terrier",193:"Australian terrier",194:"Dandie Dinmont, Dandie Dinmont terrier",195:"Boston bull, Boston terrier",196:"miniature schnauzer",197:"giant schnauzer",198:"standard schnauzer",199:"Scotch terrier, Scottish terrier, Scottie",200:"Tibetan terrier, chrysanthemum dog",201:"silky terrier, Sydney silky",202:"soft-coated wheaten terrier",203:"West Highland white terrier",204:"Lhasa, Lhasa apso",205:"flat-coated retriever",206:"curly-coated retriever",207:"golden retriever",208:"Labrador retriever",209:"Chesapeake Bay retriever",210:"German short-haired pointer",211:"vizsla, Hungarian pointer",212:"English setter",213:"Irish setter, red setter",214:"Gordon setter",215:"Brittany spaniel",216:"clumber, clumber spaniel",217:"English springer, English springer spaniel",218:"Welsh springer spaniel",219:"cocker spaniel, English cocker spaniel, cocker",220:"Sussex spaniel",221:"Irish water spaniel",222:"kuvasz",223:"schipperke",224:"groenendael",225:"malinois",226:"briard",227:"kelpie",228:"komondor",229:"Old English sheepdog, bobtail",230:"Shetland sheepdog, Shetland sheep dog, Shetland",231:"collie",232:"Border collie",233:"Bouvier des Flandres, Bouviers des Flandres",234:"Rottweiler",235:"German shepherd, German shepherd dog, German police dog, alsatian",236:"Doberman, Doberman pinscher",237:"miniature pinscher",238:"Greater Swiss Mountain dog",239:"Bernese mountain dog",240:"Appenzeller",241:"EntleBucher",242:"boxer",243:"bull mastiff",244:"Tibetan mastiff",245:"French bulldog",246:"Great Dane",247:"Saint Bernard, St Bernard",248:"Eskimo dog, husky",249:"malamute, malemute, Alaskan malamute",250:"Siberian husky",251:"dalmatian, coach dog, carriage dog",252:"affenpinscher, monkey pinscher, monkey dog",253:"basenji",254:"pug, pug-dog",255:"Leonberg",256:"Newfoundland, Newfoundland dog",257:"Great Pyrenees",258:"Samoyed, Samoyede",259:"Pomeranian",260:"chow, chow chow",261:"keeshond",262:"Brabancon griffon",263:"Pembroke, Pembroke Welsh corgi",264:"Cardigan, Cardigan Welsh corgi",265:"toy poodle",266:"miniature poodle",267:"standard poodle",268:"Mexican hairless",269:"timber wolf, grey wolf, gray wolf, Canis lupus",270:"white wolf, Arctic wolf, Canis lupus tundrarum",271:"red wolf, maned wolf, Canis rufus, Canis niger",272:"coyote, prairie wolf, brush wolf, Canis latrans",273:"dingo, warrigal, warragal, Canis dingo",274:"dhole, Cuon alpinus",275:"African hunting dog, hyena dog, Cape hunting dog, Lycaon pictus",276:"hyena, hyaena",277:"red fox, Vulpes vulpes",278:"kit fox, Vulpes macrotis",279:"Arctic fox, white fox, Alopex lagopus",280:"grey fox, gray fox, Urocyon cinereoargenteus",281:"tabby, tabby cat",282:"tiger cat",283:"Persian cat",284:"Siamese cat, Siamese",285:"Egyptian cat",286:"cougar, puma, catamount, mountain lion, painter, panther, Felis concolor",287:"lynx, catamount",288:"leopard, Panthera pardus",289:"snow leopard, ounce, Panthera uncia",290:"jaguar, panther, Panthera onca, Felis onca",291:"lion, king of beasts, Panthera leo",292:"tiger, Panthera tigris",293:"cheetah, chetah, Acinonyx jubatus",294:"brown bear, bruin, Ursus arctos",295:"American black bear, black bear, Ursus americanus, Euarctos americanus",296:"ice bear, polar bear, Ursus Maritimus, Thalarctos maritimus",297:"sloth bear, Melursus ursinus, Ursus ursinus",298:"mongoose",299:"meerkat, mierkat",300:"tiger beetle",301:"ladybug, ladybeetle, lady beetle, ladybird, ladybird beetle",302:"ground beetle, carabid beetle",303:"long-horned beetle, longicorn, longicorn beetle",304:"leaf beetle, chrysomelid",305:"dung beetle",306:"rhinoceros beetle",307:"weevil",308:"fly",309:"bee",310:"ant, emmet, pismire",311:"grasshopper, hopper",312:"cricket",313:"walking stick, walkingstick, stick insect",314:"cockroach, roach",315:"mantis, mantid",316:"cicada, cicala",317:"leafhopper",318:"lacewing, lacewing fly",319:"dragonfly, darning needle, devil's darning needle, sewing needle, snake feeder, snake doctor, mosquito hawk, skeeter hawk",320:"damselfly",321:"admiral",322:"ringlet, ringlet butterfly",323:"monarch, monarch butterfly, milkweed butterfly, Danaus plexippus",324:"cabbage butterfly",325:"sulphur butterfly, sulfur butterfly",326:"lycaenid, lycaenid butterfly",327:"starfish, sea star",328:"sea urchin",329:"sea cucumber, holothurian",330:"wood rabbit, cottontail, cottontail rabbit",331:"hare",332:"Angora, Angora rabbit",333:"hamster",334:"porcupine, hedgehog",335:"fox squirrel, eastern fox squirrel, Sciurus niger",336:"marmot",337:"beaver",338:"guinea pig, Cavia cobaya",339:"sorrel",340:"zebra",341:"hog, pig, grunter, squealer, Sus scrofa",342:"wild boar, boar, Sus scrofa",343:"warthog",344:"hippopotamus, hippo, river horse, Hippopotamus amphibius",345:"ox",346:"water buffalo, water ox, Asiatic buffalo, Bubalus bubalis",347:"bison",348:"ram, tup",349:"bighorn, bighorn sheep, cimarron, Rocky Mountain bighorn, Rocky Mountain sheep, Ovis canadensis",350:"ibex, Capra ibex",351:"hartebeest",352:"impala, Aepyceros melampus",353:"gazelle",354:"Arabian camel, dromedary, Camelus dromedarius",355:"llama",356:"weasel",357:"mink",358:"polecat, fitch, foulmart, foumart, Mustela putorius",359:"black-footed ferret, ferret, Mustela nigripes",360:"otter",361:"skunk, polecat, wood pussy",362:"badger",363:"armadillo",364:"three-toed sloth, ai, Bradypus tridactylus",365:"orangutan, orang, orangutang, Pongo pygmaeus",366:"gorilla, Gorilla gorilla",367:"chimpanzee, chimp, Pan troglodytes",368:"gibbon, Hylobates lar",369:"siamang, Hylobates syndactylus, Symphalangus syndactylus",370:"guenon, guenon monkey",371:"patas, hussar monkey, Erythrocebus patas",372:"baboon",373:"macaque",374:"langur",375:"colobus, colobus monkey",376:"proboscis monkey, Nasalis larvatus",377:"marmoset",378:"capuchin, ringtail, Cebus capucinus",379:"howler monkey, howler",380:"titi, titi monkey",381:"spider monkey, Ateles geoffroyi",382:"squirrel monkey, Saimiri sciureus",383:"Madagascar cat, ring-tailed lemur, Lemur catta",384:"indri, indris, Indri indri, Indri brevicaudatus",385:"Indian elephant, Elephas maximus",386:"African elephant, Loxodonta africana",387:"lesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens",388:"giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca",389:"barracouta, snoek",390:"eel",391:"coho, cohoe, coho salmon, blue jack, silver salmon, Oncorhynchus kisutch",392:"rock beauty, Holocanthus tricolor",393:"anemone fish",394:"sturgeon",395:"gar, garfish, garpike, billfish, Lepisosteus osseus",396:"lionfish",397:"puffer, pufferfish, blowfish, globefish",398:"abacus",399:"abaya",400:"academic gown, academic robe, judge's robe",401:"accordion, piano accordion, squeeze box",402:"acoustic guitar",403:"aircraft carrier, carrier, flattop, attack aircraft carrier",404:"airliner",405:"airship, dirigible",406:"altar",407:"ambulance",408:"amphibian, amphibious vehicle",409:"analog clock",410:"apiary, bee house",411:"apron",412:"ashcan, trash can, garbage can, wastebin, ash bin, ash-bin, ashbin, dustbin, trash barrel, trash bin",413:"assault rifle, assault gun",414:"backpack, back pack, knapsack, packsack, rucksack, haversack",415:"bakery, bakeshop, bakehouse",416:"balance beam, beam",417:"balloon",418:"ballpoint, ballpoint pen, ballpen, Biro",419:"Band Aid",420:"banjo",421:"bannister, banister, balustrade, balusters, handrail",422:"barbell",423:"barber chair",424:"barbershop",425:"barn",426:"barometer",427:"barrel, cask",428:"barrow, garden cart, lawn cart, wheelbarrow",429:"baseball",430:"basketball",431:"bassinet",432:"bassoon",433:"bathing cap, swimming cap",434:"bath towel",435:"bathtub, bathing tub, bath, tub",436:"beach wagon, station wagon, wagon, estate car, beach waggon, station waggon, waggon",437:"beacon, lighthouse, beacon light, pharos",438:"beaker",439:"bearskin, busby, shako",440:"beer bottle",441:"beer glass",442:"bell cote, bell cot",443:"bib",444:"bicycle-built-for-two, tandem bicycle, tandem",445:"bikini, two-piece",446:"binder, ring-binder",447:"binoculars, field glasses, opera glasses",448:"birdhouse",449:"boathouse",450:"bobsled, bobsleigh, bob",451:"bolo tie, bolo, bola tie, bola",452:"bonnet, poke bonnet",453:"bookcase",454:"bookshop, bookstore, bookstall",455:"bottlecap",456:"bow",457:"bow tie, bow-tie, bowtie",458:"brass, memorial tablet, plaque",459:"brassiere, bra, bandeau",460:"breakwater, groin, groyne, mole, bulwark, seawall, jetty",461:"breastplate, aegis, egis",462:"broom",463:"bucket, pail",464:"buckle",465:"bulletproof vest",466:"bullet train, bullet",467:"butcher shop, meat market",468:"cab, hack, taxi, taxicab",469:"caldron, cauldron",470:"candle, taper, wax light",471:"cannon",472:"canoe",473:"can opener, tin opener",474:"cardigan",475:"car mirror",476:"carousel, carrousel, merry-go-round, roundabout, whirligig",477:"carpenter's kit, tool kit",478:"carton",479:"car wheel",480:"cash machine, cash dispenser, automated teller machine, automatic teller machine, automated teller, automatic teller, ATM",481:"cassette",482:"cassette player",483:"castle",484:"catamaran",485:"CD player",486:"cello, violoncello",487:"cellular telephone, cellular phone, cellphone, cell, mobile phone",488:"chain",489:"chainlink fence",490:"chain mail, ring mail, mail, chain armor, chain armour, ring armor, ring armour",491:"chain saw, chainsaw",492:"chest",493:"chiffonier, commode",494:"chime, bell, gong",495:"china cabinet, china closet",496:"Christmas stocking",497:"church, church building",498:"cinema, movie theater, movie theatre, movie house, picture palace",499:"cleaver, meat cleaver, chopper",500:"cliff dwelling",501:"cloak",502:"clog, geta, patten, sabot",503:"cocktail shaker",504:"coffee mug",505:"coffeepot",506:"coil, spiral, volute, whorl, helix",507:"combination lock",508:"computer keyboard, keypad",509:"confectionery, confectionary, candy store",510:"container ship, containership, container vessel",511:"convertible",512:"corkscrew, bottle screw",513:"cornet, horn, trumpet, trump",514:"cowboy boot",515:"cowboy hat, ten-gallon hat",516:"cradle",517:"crane",518:"crash helmet",519:"crate",520:"crib, cot",521:"Crock Pot",522:"croquet ball",523:"crutch",524:"cuirass",525:"dam, dike, dyke",526:"desk",527:"desktop computer",528:"dial telephone, dial phone",529:"diaper, nappy, napkin",530:"digital clock",531:"digital watch",532:"dining table, board",533:"dishrag, dishcloth",534:"dishwasher, dish washer, dishwashing machine",535:"disk brake, disc brake",536:"dock, dockage, docking facility",537:"dogsled, dog sled, dog sleigh",538:"dome",539:"doormat, welcome mat",540:"drilling platform, offshore rig",541:"drum, membranophone, tympan",542:"drumstick",543:"dumbbell",544:"Dutch oven",545:"electric fan, blower",546:"electric guitar",547:"electric locomotive",548:"entertainment center",549:"envelope",550:"espresso maker",551:"face powder",552:"feather boa, boa",553:"file, file cabinet, filing cabinet",554:"fireboat",555:"fire engine, fire truck",556:"fire screen, fireguard",557:"flagpole, flagstaff",558:"flute, transverse flute",559:"folding chair",560:"football helmet",561:"forklift",562:"fountain",563:"fountain pen",564:"four-poster",565:"freight car",566:"French horn, horn",567:"frying pan, frypan, skillet",568:"fur coat",569:"garbage truck, dustcart",570:"gasmask, respirator, gas helmet",571:"gas pump, gasoline pump, petrol pump, island dispenser",572:"goblet",573:"go-kart",574:"golf ball",575:"golfcart, golf cart",576:"gondola",577:"gong, tam-tam",578:"gown",579:"grand piano, grand",580:"greenhouse, nursery, glasshouse",581:"grille, radiator grille",582:"grocery store, grocery, food market, market",583:"guillotine",584:"hair slide",585:"hair spray",586:"half track",587:"hammer",588:"hamper",589:"hand blower, blow dryer, blow drier, hair dryer, hair drier",590:"hand-held computer, hand-held microcomputer",591:"handkerchief, hankie, hanky, hankey",592:"hard disc, hard disk, fixed disk",593:"harmonica, mouth organ, harp, mouth harp",594:"harp",595:"harvester, reaper",596:"hatchet",597:"holster",598:"home theater, home theatre",599:"honeycomb",600:"hook, claw",601:"hoopskirt, crinoline",602:"horizontal bar, high bar",603:"horse cart, horse-cart",604:"hourglass",605:"iPod",606:"iron, smoothing iron",607:"jack-o'-lantern",608:"jean, blue jean, denim",609:"jeep, landrover",610:"jersey, T-shirt, tee shirt",611:"jigsaw puzzle",612:"jinrikisha, ricksha, rickshaw",613:"joystick",614:"kimono",615:"knee pad",616:"knot",617:"lab coat, laboratory coat",618:"ladle",619:"lampshade, lamp shade",620:"laptop, laptop computer",621:"lawn mower, mower",622:"lens cap, lens cover",623:"letter opener, paper knife, paperknife",624:"library",625:"lifeboat",626:"lighter, light, igniter, ignitor",627:"limousine, limo",628:"liner, ocean liner",629:"lipstick, lip rouge",630:"Loafer",631:"lotion",632:"loudspeaker, speaker, speaker unit, loudspeaker system, speaker system",633:"loupe, jeweler's loupe",634:"lumbermill, sawmill",635:"magnetic compass",636:"mailbag, postbag",637:"mailbox, letter box",638:"maillot",639:"maillot, tank suit",640:"manhole cover",641:"maraca",642:"marimba, xylophone",643:"mask",644:"matchstick",645:"maypole",646:"maze, labyrinth",647:"measuring cup",648:"medicine chest, medicine cabinet",649:"megalith, megalithic structure",650:"microphone, mike",651:"microwave, microwave oven",652:"military uniform",653:"milk can",654:"minibus",655:"miniskirt, mini",656:"minivan",657:"missile",658:"mitten",659:"mixing bowl",660:"mobile home, manufactured home",661:"Model T",662:"modem",663:"monastery",664:"monitor",665:"moped",666:"mortar",667:"mortarboard",668:"mosque",669:"mosquito net",670:"motor scooter, scooter",671:"mountain bike, all-terrain bike, off-roader",672:"mountain tent",673:"mouse, computer mouse",674:"mousetrap",675:"moving van",676:"muzzle",677:"nail",678:"neck brace",679:"necklace",680:"nipple",681:"notebook, notebook computer",682:"obelisk",683:"oboe, hautboy, hautbois",684:"ocarina, sweet potato",685:"odometer, hodometer, mileometer, milometer",686:"oil filter",687:"organ, pipe organ",688:"oscilloscope, scope, cathode-ray oscilloscope, CRO",689:"overskirt",690:"oxcart",691:"oxygen mask",692:"packet",693:"paddle, boat paddle",694:"paddlewheel, paddle wheel",695:"padlock",696:"paintbrush",697:"pajama, pyjama, pj's, jammies",698:"palace",699:"panpipe, pandean pipe, syrinx",700:"paper towel",701:"parachute, chute",702:"parallel bars, bars",703:"park bench",704:"parking meter",705:"passenger car, coach, carriage",706:"patio, terrace",707:"pay-phone, pay-station",708:"pedestal, plinth, footstall",709:"pencil box, pencil case",710:"pencil sharpener",711:"perfume, essence",712:"Petri dish",713:"photocopier",714:"pick, plectrum, plectron",715:"pickelhaube",716:"picket fence, paling",717:"pickup, pickup truck",718:"pier",719:"piggy bank, penny bank",720:"pill bottle",721:"pillow",722:"ping-pong ball",723:"pinwheel",724:"pirate, pirate ship",725:"pitcher, ewer",726:"plane, carpenter's plane, woodworking plane",727:"planetarium",728:"plastic bag",729:"plate rack",730:"plow, plough",731:"plunger, plumber's helper",732:"Polaroid camera, Polaroid Land camera",733:"pole",734:"police van, police wagon, paddy wagon, patrol wagon, wagon, black Maria",735:"poncho",736:"pool table, billiard table, snooker table",737:"pop bottle, soda bottle",738:"pot, flowerpot",739:"potter's wheel",740:"power drill",741:"prayer rug, prayer mat",742:"printer",743:"prison, prison house",744:"projectile, missile",745:"projector",746:"puck, hockey puck",747:"punching bag, punch bag, punching ball, punchball",748:"purse",749:"quill, quill pen",750:"quilt, comforter, comfort, puff",751:"racer, race car, racing car",752:"racket, racquet",753:"radiator",754:"radio, wireless",755:"radio telescope, radio reflector",756:"rain barrel",757:"recreational vehicle, RV, R.V.",758:"reel",759:"reflex camera",760:"refrigerator, icebox",761:"remote control, remote",762:"restaurant, eating house, eating place, eatery",763:"revolver, six-gun, six-shooter",764:"rifle",765:"rocking chair, rocker",766:"rotisserie",767:"rubber eraser, rubber, pencil eraser",768:"rugby ball",769:"rule, ruler",770:"running shoe",771:"safe",772:"safety pin",773:"saltshaker, salt shaker",774:"sandal",775:"sarong",776:"sax, saxophone",777:"scabbard",778:"scale, weighing machine",779:"school bus",780:"schooner",781:"scoreboard",782:"screen, CRT screen",783:"screw",784:"screwdriver",785:"seat belt, seatbelt",786:"sewing machine",787:"shield, buckler",788:"shoe shop, shoe-shop, shoe store",789:"shoji",790:"shopping basket",791:"shopping cart",792:"shovel",793:"shower cap",794:"shower curtain",795:"ski",796:"ski mask",797:"sleeping bag",798:"slide rule, slipstick",799:"sliding door",800:"slot, one-armed bandit",801:"snorkel",802:"snowmobile",803:"snowplow, snowplough",804:"soap dispenser",805:"soccer ball",806:"sock",807:"solar dish, solar collector, solar furnace",808:"sombrero",809:"soup bowl",810:"space bar",811:"space heater",812:"space shuttle",813:"spatula",814:"speedboat",815:"spider web, spider's web",816:"spindle",817:"sports car, sport car",818:"spotlight, spot",819:"stage",820:"steam locomotive",821:"steel arch bridge",822:"steel drum",823:"stethoscope",824:"stole",825:"stone wall",826:"stopwatch, stop watch",827:"stove",828:"strainer",829:"streetcar, tram, tramcar, trolley, trolley car",830:"stretcher",831:"studio couch, day bed",832:"stupa, tope",833:"submarine, pigboat, sub, U-boat",834:"suit, suit of clothes",835:"sundial",836:"sunglass",837:"sunglasses, dark glasses, shades",838:"sunscreen, sunblock, sun blocker",839:"suspension bridge",840:"swab, swob, mop",841:"sweatshirt",842:"swimming trunks, bathing trunks",843:"swing",844:"switch, electric switch, electrical switch",845:"syringe",846:"table lamp",847:"tank, army tank, armored combat vehicle, armoured combat vehicle",848:"tape player",849:"teapot",850:"teddy, teddy bear",851:"television, television system",852:"tennis ball",853:"thatch, thatched roof",854:"theater curtain, theatre curtain",855:"thimble",856:"thresher, thrasher, threshing machine",857:"throne",858:"tile roof",859:"toaster",860:"tobacco shop, tobacconist shop, tobacconist",861:"toilet seat",862:"torch",863:"totem pole",864:"tow truck, tow car, wrecker",865:"toyshop",866:"tractor",867:"trailer truck, tractor trailer, trucking rig, rig, articulated lorry, semi",868:"tray",869:"trench coat",870:"tricycle, trike, velocipede",871:"trimaran",872:"tripod",873:"triumphal arch",874:"trolleybus, trolley coach, trackless trolley",875:"trombone",876:"tub, vat",877:"turnstile",878:"typewriter keyboard",879:"umbrella",880:"unicycle, monocycle",881:"upright, upright piano",882:"vacuum, vacuum cleaner",883:"vase",884:"vault",885:"velvet",886:"vending machine",887:"vestment",888:"viaduct",889:"violin, fiddle",890:"volleyball",891:"waffle iron",892:"wall clock",893:"wallet, billfold, notecase, pocketbook",894:"wardrobe, closet, press",895:"warplane, military plane",896:"washbasin, handbasin, washbowl, lavabo, wash-hand basin",897:"washer, automatic washer, washing machine",898:"water bottle",899:"water jug",900:"water tower",901:"whiskey jug",902:"whistle",903:"wig",904:"window screen",905:"window shade",906:"Windsor tie",907:"wine bottle",908:"wing",909:"wok",910:"wooden spoon",911:"wool, woolen, woollen",912:"worm fence, snake fence, snake-rail fence, Virginia fence",913:"wreck",914:"yawl",915:"yurt",916:"web site, website, internet site, site",917:"comic book",918:"crossword puzzle, crossword",919:"street sign",920:"traffic light, traffic signal, stoplight",921:"book jacket, dust cover, dust jacket, dust wrapper",922:"menu",923:"plate",924:"guacamole",925:"consomme",926:"hot pot, hotpot",927:"trifle",928:"ice cream, icecream",929:"ice lolly, lolly, lollipop, popsicle",930:"French loaf",931:"bagel, beigel",932:"pretzel",933:"cheeseburger",934:"hotdog, hot dog, red hot",935:"mashed potato",936:"head cabbage",937:"broccoli",938:"cauliflower",939:"zucchini, courgette",940:"spaghetti squash",941:"acorn squash",942:"butternut squash",943:"cucumber, cuke",944:"artichoke, globe artichoke",945:"bell pepper",946:"cardoon",947:"mushroom",948:"Granny Smith",949:"strawberry",950:"orange",951:"lemon",952:"fig",953:"pineapple, ananas",954:"banana",955:"jackfruit, jak, jack",956:"custard apple",957:"pomegranate",958:"hay",959:"carbonara",960:"chocolate sauce, chocolate syrup",961:"dough",962:"meat loaf, meatloaf",963:"pizza, pizza pie",964:"potpie",965:"burrito",966:"red wine",967:"espresso",968:"cup",969:"eggnog",970:"alp",971:"bubble",972:"cliff, drop, drop-off",973:"coral reef",974:"geyser",975:"lakeside, lakeshore",976:"promontory, headland, head, foreland",977:"sandbar, sand bar",978:"seashore, coast, seacoast, sea-coast",979:"valley, vale",980:"volcano",981:"ballplayer, baseball player",982:"groom, bridegroom",983:"scuba diver",984:"rapeseed",985:"daisy",986:"yellow lady's slipper, yellow lady-slipper, Cypripedium calceolus, Cypripedium parviflorum",987:"corn",988:"acorn",989:"hip, rose hip, rosehip",990:"buckeye, horse chestnut, conker",991:"coral fungus",992:"agaric",993:"gyromitra",994:"stinkhorn, carrion fungus",995:"earthstar",996:"hen-of-the-woods, hen of the woods, Polyporus frondosus, Grifola frondosa",997:"bolete",998:"ear, spike, capitulum",999:"toilet tissue, toilet paper, bathroom tissue"},q={"1.00":"module_apply_default/MobilenetV1/Logits/global_pool","2.00":"module_apply_default/MobilenetV2/Logits/AvgPool"},X={"1.00":{.25:{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_025_224/classification/1",inputRange:[0,1]},"0.50":{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_050_224/classification/1",inputRange:[0,1]},.75:{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_075_224/classification/1",inputRange:[0,1]},"1.00":{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_100_224/classification/1",inputRange:[0,1]}},"2.00":{"0.50":{url:"https://tfhub.dev/google/imagenet/mobilenet_v2_050_224/classification/2",inputRange:[0,1]},.75:{url:"https://tfhub.dev/google/imagenet/mobilenet_v2_075_224/classification/2",inputRange:[0,1]},"1.00":{url:"https://tfhub.dev/google/imagenet/mobilenet_v2_100_224/classification/2",inputRange:[0,1]}}};function Y(e){return void 0===e&&(e={version:1,alpha:1}),G(this,void 0,void 0,(function(){var t,n,r,a,s,i,o;return K(this,(function(u){switch(u.label){case 0:if(null==B)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");if(r=e.version.toFixed(2),a=e.alpha?e.alpha.toFixed(2):"",s=-1,i=1,null==e.modelUrl){if(!(r in X))throw new Error("Invalid version of MobileNet. Valid versions are: "+Object.keys(X));if(!(a in X[r]))throw new Error("MobileNet constructed with invalid alpha "+e.alpha+". Valid multipliers for this version are: "+Object.keys(X[r])+".");t=X[r][a].inputRange,s=t[0],i=t[1]}return null!=e.inputRange&&(n=e.inputRange,s=n[0],i=n[1]),[4,(o=new Z(r,a,e.modelUrl,s,i)).load()];case 1:return u.sent(),[2,o]}}))}))}var Z=function(){function e(e,t,n,r,a){void 0===r&&(r=-1),void 0===a&&(a=1),this.version=e,this.alpha=t,this.modelUrl=n,this.inputMin=r,this.inputMax=a,this.normalizationConstant=(a-r)/255}return e.prototype.load=function(){return G(this,void 0,void 0,(function(){var e,t,n,r,a=this;return K(this,(function(s){switch(s.label){case 0:return this.modelUrl?(e=this,[4,Object(P.c)(this.modelUrl)]):[3,2];case 1:return e.model=s.sent(),[3,4];case 2:return t=X[this.version][this.alpha].url,n=this,[4,Object(P.c)(t,{fromTFHub:!0})];case 3:n.model=s.sent(),s.label=4;case 4:return[4,(r=Object(B.tidy)((function(){return a.model.predict(Object(B.zeros)([1,224,224,3]))}))).data()];case 5:return s.sent(),r.dispose(),[2]}}))}))},e.prototype.infer=function(e,t){var n=this;return void 0===t&&(t=!1),Object(B.tidy)((function(){e instanceof B.Tensor||(e=B.browser.fromPixels(e));var r=e.toFloat().mul(n.normalizationConstant).add(n.inputMin),a=r;224===e.shape[0]&&224===e.shape[1]||(a=B.image.resizeBilinear(r,[224,224],!0));var s,i=a.reshape([-1,224,224,3]);if(t){var o=q[n.version];s=n.model.execute(i,o).squeeze([1,2])}else s=n.model.predict(i).slice([0,1],[-1,1e3]);return s}))},e.prototype.classify=function(e,t){return void 0===t&&(t=3),G(this,void 0,void 0,(function(){var n,r;return K(this,(function(a){switch(a.label){case 0:return[4,J(n=this.infer(e),t)];case 1:return r=a.sent(),n.dispose(),[2,r]}}))}))},e}();function J(e,t){return G(this,void 0,void 0,(function(){var n,r,a,s,i,o,u;return K(this,(function(c){switch(c.label){case 0:return[4,(n=e.softmax()).data()];case 1:for(r=c.sent(),n.dispose(),a=[],u=0;u<r.length;u++)a.push({value:r[u],index:u});for(a.sort((function(e,t){return t.value-e.value})),s=new Float32Array(t),i=new Int32Array(t),u=0;u<t;u++)s[u]=a[u].value,i[u]=a[u].index;for(o=[],u=0;u<i.length;u++)o.push({className:H[i[u]],probability:s[u]});return[2,o]}}))}))}function Q(){return ee.apply(this,arguments)}function ee(){return(ee=Object(s.a)(a.a.mark((function e(){var t;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(P.c)("/my_detector2/model.json");case 2:return t=e.sent,e.abrupt("return",t);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var te={1:{name:"monkey",id:1},2:{name:"deer",id:2},3:{name:"antelope",id:3},4:{name:"Other",id:4}},ne=function(){var e=Object(s.a)(a.a.mark((function e(t,n){var r,s;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return B.setBackend("webgl"),B.engine().startScope(),e.prev=2,console.table(B.memory()),e.next=6,t.executeAsync(re(n));case 6:s=e.sent,r=ae(s);case 8:return e.prev=8,B.engine().endScope(),e.finish(8);case 11:return e.abrupt("return",r);case 12:case"end":return e.stop()}}),e,null,[[2,,8,11]])})));return function(t,n){return e.apply(this,arguments)}}(),re=function(e){return B.browser.fromPixels(e).toInt().transpose([0,1,2]).expandDims()},ae=function(e){var t=e[4].arraySync(),n=e[6].arraySync(),r=e[5].dataSync();return console.log(t),console.log(n),console.log(r),se(n,.7,t,r,te)},se=function(e,t,n,r,a){var s=[];return e[0].forEach((function(e,n){if(e>t){s.push({classNo:r[n],className:a[r[n]].name,score:e.toFixed(4),bbox:[]})}})),console.log(s),s},ie=n("iMkW"),oe=function(){function e(t){$(this,e),this.modelName=t,L(this,"model",void 0),L(this,"predictions",void 0)}return _(e,[{key:"fetchModel",value:function(){var e=Object(s.a)(a.a.mark((function e(){return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:e.t0=this.modelName,e.next="mobile"===e.t0?3:"yolo"===e.t0?7:"coco"===e.t0?11:"mobileNew"===e.t0?15:19;break;case 3:return e.next=5,Y({version:2,alpha:1}).catch((function(e){console.log(e)}));case 5:return this.model=e.sent,e.abrupt("break",20);case 7:return e.next=9,ie.default.v3tiny();case 9:return this.model=e.sent,e.abrupt("break",20);case 11:return e.next=13,W();case 13:return this.model=e.sent,e.abrupt("break",20);case 15:return e.next=17,Q();case 17:return this.model=e.sent,e.abrupt("break",20);case 19:return e.abrupt("break",20);case 20:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"predict",value:function(){var e=Object(s.a)(a.a.mark((function e(t){return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:e.t0=this.modelName,e.next="mobile"===e.t0?3:"yolo"===e.t0?7:"coco"===e.t0?11:"mobileNew"===e.t0?15:19;break;case 3:return e.next=5,this.model.classify(t);case 5:return this.predictions=e.sent,e.abrupt("break",20);case 7:return e.next=9,this.model.predict(t);case 9:return this.predictions=e.sent,e.abrupt("break",20);case 11:return e.next=13,this.model.detect(t);case 13:return this.predictions=e.sent,e.abrupt("break",20);case 15:return e.next=17,ne(this.model,t);case 17:return this.predictions=e.sent,e.abrupt("break",20);case 19:return e.abrupt("break",20);case 20:return e.abrupt("return",this.predictions);case 21:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()}]),e}(),ue=c.a.createElement;function ce(e){var t=e.intervalElem,n=e.onUploadButtonPushed,r=e.isUploading,a=e.onStopButtonPushed;return ue("div",{className:"flex items-center"},ue("select",{className:" rounded py-3 px-4 block w-full bg-gray-200  text-gray-700",ref:t},ue("option",{value:"10"},"10\u79d2\u9593"),ue("option",{value:"30"},"30\u79d2\u9593"),ue("option",{value:"60"},"1\u5206\u9593"),ue("option",{value:"120"},"2\u5206\u9593"),ue("option",{value:"160"},"3\u5206\u9593"),ue("option",{value:"240"},"4\u5206\u9593"),ue("option",{value:"300"},"5\u5206\u9593"),ue("option",{value:"480"},"8\u5206\u9593"),ue("option",{value:"600"},"10\u5206\u9593")),!r&&ue("button",{className:"whitespace-no-wrap flex-grow rounded bg-teal-500 text-white font-bold py-3 px-6 ml-2 flex items-center",onClick:n},"\u30d3\u30c7\u30aa\u753b\u50cf\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9"),r&&ue("button",{className:"whitespace-no-wrap flex-grow rounded bg-yellow-500 text-white font-bold py-3 px-6 ml-2 flex items-center",onClick:a},"\u505c\u6b62"))}var le=n("/MvE"),de=n.n(le),he=c.a.createElement;function pe(e){var t=e.checkFrameRate,n=new oe("mobile"),r=Object(u.useRef)(null),i=Object(u.useRef)(null),o=Object(u.useState)(!0),c=o[0],l=o[1],d=Object(u.useRef)(),h=Object(u.useState)(0),p=h[0],m=h[1],b=Object(u.useState)(!1),g=b[0],x=b[1],v=Object(u.useRef)(null),w=function(e){var t=Object(u.useState)(e),n=t[0],r=t[1];return Object(u.useEffect)((function(){navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}}).then((function(t){e.current&&(e.current.srcObject=t,e.current.play(),r(e))}))}),[]),n}(r),O=function(){var e=[],t=Object(u.useState)(!1),n=t[0],r=t[1],a=!1;return{isStillActive:n,checkRecentFrames:function(t){e.push(t);var n=1e4/z;if(!(e.length<n)){e.length>1e3&&e.shift();var s=t.time,i=new M(e,s);return!1===a&&i.checkWildlifeExistenceInEveryFrame(5)?(r(a=!0),e.length=0,{error:null,success:{time:t.time,className:t.className}}):(a&&!i.checkWildlifeExistenceInSomeFrame(300)&&r(a=!1),{error:null,success:null})}},recentFrames:e}}().checkRecentFrames,k=function(e){var t=Object(u.useState)(null),n=t[0],r=t[1];return{createValidFrame:function(){var t=Object(s.a)(a.a.mark((function t(n){var s,i,o,u;return a.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(0!==n.width){t.next=2;break}return t.abrupt("return",{time:Math.floor((new Date).getTime()/1e3),className:null});case 2:return t.next=4,e.predict(n);case 4:return s=t.sent,console.log(s),i=s.find((function(e){return!!D.isVerifiedAnimal(e.className)})),o=i?i.className:null,u={time:Math.floor((new Date).getTime()/1e3),className:o},r(o),t.abrupt("return",u);case 11:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}(),label:n}}(n),N=k.label,I=k.createValidFrame;Object(u.useEffect)((function(){function e(){return(e=Object(s.a)(a.a.mark((function e(){return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n.fetchModel();case 2:setInterval(Object(s.a)(a.a.mark((function e(){var t,n,r,s;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(w&&i.current&&void 0!==i.current.height){e.next=2;break}return e.abrupt("return");case 2:return t=E(i,w),e.next=5,I(t);case 5:n=e.sent,(r=O(n))&&r.success&&(s={location:""},console.log("\u30c7\u30fc\u30bf\u9001\u4fe1\uff01"),T(r.success,s,t));case 8:case"end":return e.stop()}}),e)}))),t);case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}!function(){e.apply(this,arguments)}()}),[]);return he("div",{className:"jsx-1880160421 p-2"},he("p",{className:"jsx-1880160421 flex items-center mt-4"},he("label",{className:"jsx-1880160421 block uppercase tracking-wide text-grey-700 font-bold"},"\u691c\u51fa\u3055\u308c\u305f\u3082\u306e: ")," ",N?JSON.stringify(N):"\u306a\u3057"),he("video",{id:"video",ref:r,width:"100%",height:"500",role:"video",className:"jsx-1880160421 "+(c?"":"opacity-0")}),he("p",{className:"jsx-1880160421 mt-4"},he("label",{className:"jsx-1880160421 flex items-center"},he("input",{type:"checkbox",defaultChecked:!0,onChange:function(e){l(e.target.checked)},className:"jsx-1880160421 "+"".concat(de.a["form-checkbox"])}),he("span",{className:"jsx-1880160421 text-grey-darker text-sm font-bold pl-2"}," \u30d3\u30c7\u30aa\u306e\u8868\u793a "))),he("div",{className:"jsx-1880160421 mt-8"},he(ce,{onUploadButtonPushed:function(){var e=Number(d.current.value),t=e;m(t),x(!0);var n=(new Date).getTime()/1e3+e;v.current=setInterval((function(){((new Date).getTime()/1e3>n||!v.current)&&(x(!1),clearInterval(v.current));var e=E(i,w);t--,m(t),t%5===0&&e.toBlob(function(){var e=Object(s.a)(a.a.mark((function e(t){return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,y("current_image.jpg",t);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),"image/jpeg")}),1e3)},intervalElem:d,isUploading:g,onStopButtonPushed:function(){x(!1),clearInterval(v.current),v.current=null}}),he("span",{className:"jsx-1880160421 text-grey-darker text-sm font-bold pl-2"},g&&"\u6b8b\u308a: ".concat(p," \u79d2"))),he("canvas",{id:"canvas",ref:i,width:"200px",height:"100%",role:"canvas",className:"jsx-1880160421 hide"}),he(f.a,{id:"1880160421"},[".hide.jsx-1880160421{display:none;}"]))}var fe=c.a.createElement,me=Number(1e3);t.default=function(){return Object(u.useEffect)((function(){function e(){return(e=Object(s.a)(a.a.mark((function e(){var t;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(l.a)();case 2:if(!e.sent.error){e.next=9;break}return e.next=6,Object(d.a)();case 6:t=e.sent,console.log(t),t.error&&alert("".concat(t.error));case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}!function(){e.apply(this,arguments)}()}),[]),fe("div",{role:"detector",className:" flex justify-center"},fe(o.a,null,fe("title",null,"MORI ANIMAL | \u30ab\u30e1\u30e9")),fe("div",{className:"max-w-6xl"},fe(h.a,null),fe(pe,{checkFrameRate:me})))}},LyxI:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({denseBincount_:function(e,t,n,o=!1){const u=Object(s.a)(e,"x","denseBincount"),c=Object(s.a)(t,"weights","denseBincount");i.b("int32"===u.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+u.dtype),i.b(u.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`),i.b(n>=0,()=>`size must be non-negative, but got ${n}.`),i.b(c.size===u.size||0===c.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: `+c.shape+".");const l={x:u,weights:c},d={size:n,binaryOutput:o};return r.a.runKernel(a.M,l,d)}})},MX0m:function(e,t,n){e.exports=n("3niX")},Mbu7:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},NNfn:function(e,t,n){"use strict";n.d(t,"b",(function(){return l})),n.d(t,"g",(function(){return f})),n.d(t,"f",(function(){return m})),n.d(t,"e",(function(){return b})),n.d(t,"a",(function(){return g})),n.d(t,"d",(function(){return y})),n.d(t,"c",(function(){return x}));var r=n("9JAK"),a=n("atXS");function s(e,t,n,r){const s=Object(a.j)(t),c=function(e,t,n,r){const s=Object(a.O)(t),o=r[r.length-1],c=new Array(o).fill(0),l=t.length,d="complex64"===n?u(e):e;if(l>1)for(let a=0;a<s/o;a++){const e=a*o;for(let t=0;t<o;t++)c[t]=Math.max(c[t],i(d[e+t],0,n).length)}return c}(e,t,n,s),l=t.length,d=function e(t,n,r,a,s,c=!0){const l="complex64"===r?2:1,d=n[0],h=n.length;if(0===h){if("complex64"===r){return[i(u(t)[0],0,r)]}return"bool"===r?[o(t[0])]:[t[0].toString()]}if(1===h){if(d>20){const e=3*l;let n=Array.from(t.slice(0,e)),a=Array.from(t.slice((d-3)*l,d*l));return"complex64"===r&&(n=u(n),a=u(a)),["["+n.map((e,t)=>i(e,s[t],r)).join(", ")+", ..., "+a.map((e,t)=>i(e,s[d-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?u(t):Array.from(t)).map((e,t)=>i(e,s[t],r)).join(", ")+"]"]}const p=n.slice(1),f=a.slice(1),m=a[0]*l,b=[];if(d>20){for(let n=0;n<3;n++){const a=n*m,i=a+m;b.push(...e(t.slice(a,i),p,r,f,s,!1))}b.push("...");for(let n=d-3;n<d;n++){const a=n*m,i=a+m;b.push(...e(t.slice(a,i),p,r,f,s,n===d-1))}}else for(let i=0;i<d;i++){const n=i*m,a=n+m;b.push(...e(t.slice(n,a),p,r,f,s,i===d-1))}const g=2===h?",":"";b[0]="["+b[0]+g;for(let i=1;i<b.length-1;i++)b[i]=" "+b[i]+g;let y=",\n";for(let i=2;i<h;i++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(c?"":y),b}(e,t,n,s,c),h=["Tensor"];return r&&(h.push("  dtype: "+n),h.push("  rank: "+l),h.push(`  shape: [${t}]`),h.push("  values:")),h.push(d.map(e=>"    "+e).join("\n")),h.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":Object(a.z)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),Object(a.L)(r,t)}function o(e){return 0===e?"false":"true"}function u(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n("6366");class l{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.O(e),null!=n){const e=n.length;a.b(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.n(t,this.size),this.strides=Object(a.j)(e)}set(e,...t){0===t.length&&(t=[0]),a.b(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return d().makeTensor(this.values,this.shape,this.dtype)}}let d=null,h=null,p=null;function f(e){d=e}function m(e){h=e}function b(e){p=e}class g{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.O(e),this.strides=Object(a.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return h.buffer(this.shape,this.dtype,e)}bufferSync(){return h.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(a.T)(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(a.T)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=d().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map(e=>c.decodeString(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=d().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>c.decodeString(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await d().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(d().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return h.print(this,e)}clone(){return this.throwIfDisposed(),h.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),h.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),d().makeVariable(this,e,t,n)}}function y(){return Object(r.a)("Tensor",()=>g)}Object.defineProperty(g,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),y();class x extends g{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);d().disposeTensor(this),this.dataId=e.dataId,d().incRef(this,null)}dispose(){d().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>e instanceof g&&null!=e.assign&&e.assign instanceof Function})},"NQ+5":function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return o})),n.d(t,"e",(function(){return u})),n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return p})),n.d(t,"d",(function(){return f})),n.d(t,"c",(function(){return m})),n.d(t,"g",(function(){return b}));var r=n("B3db"),a=n("NX3e"),s=n("atXS"),i=n("mEeB");async function o(e,t){const n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let a=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=4,r.set(e,a),a+=e.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:c(await Promise.all(r)),specs:n}}function u(e,t){const n={};let o,u=0;for(const c of t){const t=c.name,l=c.dtype,d=c.shape,h=Object(s.O)(d);let p;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=i.a[n.dtype],a=e.slice(u,u+h*r),s="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){p=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];p[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===o&&(o=g()),p=o(s)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);p=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];p[e]=Math.round(t*n.scale+n.min)}}u+=h*r}else if("string"===l){const t=Object(s.O)(c.shape);p=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(u,u+4))[0];u+=4;const n=new Uint8Array(e.slice(u,u+t));p.push(n),u+=t}}else{const s=i.a[l],o=e.slice(u,u+h*s);if("float32"===l)p=new Float32Array(o);else if("int32"===l)p=new Int32Array(o);else if("bool"===l)p=new Uint8Array(o);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);{p=new Float32Array(o);const e=new Float32Array(p.length/2),s=new Float32Array(p.length/2);for(let t=0;t<e.length;t++)e[t]=p[2*t],s[t]=p[2*t+1];const i=Object(a.a)(e,d,"float32"),u=Object(a.a)(s,d,"float32");n[t]=Object(r.a)(i,u),i.dispose(),u.dispose()}}u+=h*s}"complex64"!==l&&(n[t]=Object(a.a)(p,d,l))}return n}function c(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}const l="undefined"!==typeof e&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function d(t){return l?e.byteLength(t):new Blob([t]).size}function h(t){if(l)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,a=n.length;e<a;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function p(t){if(l){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function f(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function m(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function b(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:d(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:d(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function g(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){const a=r[i],o=e[n[a>>10]+(1023&a)]+t[a>>10];s[i]=o}return new Float32Array(a)}}}).call(this,n("HDXh").Buffer)},NX3e:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("o/e8"),a=n("WVnj");function s(e,t,n){const s=Object(r.c)(e,n);return Object(a.a)(e,t,s,n)}},NclT:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({reshape_:function(e,t){const n={x:Object(s.a)(e,"x","reshape","string_or_numeric")},i={shape:t};return r.a.runKernel(a.pc,n,i)}})},Nk7E:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({depthToSpace_:function(e,t,n="NHWC"){const o=Object(s.a)(e,"x","depthToSpace"),u="NHWC"===n?o.shape[1]:o.shape[2],c="NHWC"===n?o.shape[2]:o.shape[3],l="NHWC"===n?o.shape[3]:o.shape[1];i.b(u*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${o.shape}`),i.b(c*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${t} for depthToSpace with input shape\n        ${o.shape}`),i.b(l%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${o.shape}`);const d={x:o},h={blockSize:t,dataFormat:n};return r.a.runKernel(a.N,d,h)}})},NuWS:function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return i})),n.d(t,"e",(function(){return o})),n.d(t,"a",(function(){return u})),n.d(t,"f",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"g",(function(){return d}));var r=n("atXS");function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function i(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function o(e,t){return s(e,t.map(e=>1),t)}function u(e,t,n){r.b(a(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)}function c(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function l(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},"O/w9":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},O7f5:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({neg_:function(e){const t={x:Object(s.a)(e,"x","neg")};return r.a.runKernel(a.Wb,t)}})},OkRW:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({unstack_:function(e,t=0){const n=Object(s.a)(e,"x","unstack","string_or_numeric");i.b(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const o={value:n},u={axis:t};return r.a.runKernel(a.ad,o,u)}})},OlX0:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("o0o1"),a=n.n(r),s=n("HaE+"),i=n("v4IS");function o(){return u.apply(this,arguments)}function u(){return(u=Object(s.a)(a.a.mark((function e(){return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,i.a.signIn("wild1","wildlife");case 3:return e.abrupt("return",{error:null,result:"Sign in"});case 6:return e.prev=6,e.t0=e.catch(0),console.log("error signing in",e.t0),e.abrupt("return",{error:"Can't sign in",result:""});case 10:case"end":return e.stop()}}),e,null,[[0,6]])})))).apply(this,arguments)}},OygE:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({batchToSpaceND_:function(e,t,n){const o=Object(s.a)(e,"x","batchToSpaceND"),u=t.reduce((e,t)=>e*t);i.b(o.rank>=1+t.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`),i.b(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),i.b(o.shape[0]%u===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`);const c={x:o},l={blockShape:t,crops:n};return r.a.runKernel(a.t,c,l)}})},PVBm:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},Pvz5:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({multinomial_:function(e,t,n,i=!1){const u=Object(s.a)(e,"logits","multinomial"),c=u.size,l=u.rank;if(c<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+c+".");if(l>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+l);n=n||Math.random();const d={logits:1===l?Object(o.a)(u,[1,-1]):u},h={numSamples:t,seed:n,normalized:i},p=r.a.runKernel(a.Ub,d,h);return 1===l?Object(o.a)(p,[p.size]):p}})},QYQ3:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({squaredDifference_:function(e,t){let n=Object(i.a)(e,"a","squaredDifference"),u=Object(i.a)(t,"b","squaredDifference");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.Oc,c,{})}})},R0ls:function(e,t,n){"use strict";n.d(t,"c",(function(){return f})),n.d(t,"b",(function(){return m})),n.d(t,"a",(function(){return b})),n.d(t,"d",(function(){return g}));var r=n("Um8L"),a=n("njhW"),s=n("bzdD"),i=n("parS"),o=n("Ug8H"),u=n("kXpR"),c=n("Rqg+"),l=n("NclT"),d=n("/7N0"),h=n("L7Hl"),p=n("4FMF");function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Object(i.a)(e,Object(h.a)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const a=r.c(e.shape,t.shape);return a.length>0&&(n=Object(p.a)(n,a)),Object(l.a)(n,e.shape)}function b(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Object(u.a)(e);if("elu"===t)return Object(a.a)(e);if("relu6"===t)return Object(c.a)(e);if("prelu"===t)return Object(o.a)(e,n);if("leakyrelu"===t)return Object(s.a)(e,r);if("sigmoid"===t)return Object(d.a)(e);throw new Error(`Unknown fused activation ${t}.`)}const g=(e,t)=>!(e>0)||"linear"===t},RRa9:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({any_:function(e,t=null,n=!1){const i={x:Object(s.a)(e,"x","any","bool")},o={axis:t,keepDims:n};return r.a.runKernel(a.g,i,o)}})},RbuM:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({split_:function(e,t,n=0){const i={x:Object(s.a)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.a.runKernel(a.Lc,i,o)}})},RhH0:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({mod_:function(e,t){let n=Object(i.a)(e,"a","mod"),o=Object(i.a)(t,"b","mod");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.Tb,u)}})},RhVc:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({acosh_:function(e){const t={x:Object(s.a)(e,"x","acosh")};return r.a.runKernel(a.c,t)}})},"Rqg+":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({relu6_:function(e){const t={x:Object(s.a)(e,"x","relu6")};return r.a.runKernel(a.oc,t)}})},RrGL:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({log1p_:function(e){const t={x:Object(s.a)(e,"x","log1p")};return r.a.runKernel(a.Db,t)}})},RrjA:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("auKK"),a=n("wFtI");function s(e,t,n){const s={shape:e,value:t,dtype:n};return r.a.runKernel(a.eb,{},s)}},RsxS:function(e,t,n){"use strict";var r,a;n.d(t,"a",(function(){return r})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(a||(a={}))},SFB9:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({addN_:function(e){i.b(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),i.b(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>Object(s.a)(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!i.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const o=t;return r.a.runKernel(a.e,o)}})},SHv8:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({matMul_:function(e,t,n=!1,o=!1){let u=Object(i.a)(e,"a","matMul"),c=Object(i.a)(t,"b","matMul");[u,c]=Object(s.makeTypesMatch)(u,c);const l={a:u,b:c},d={transposeA:n,transposeB:o};return r.a.runKernel(a.s,l,d)}})},SNsm:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("8Km0"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({broadcastTo_:function(e,t){let n=Object(s.a)(e,"broadcastTo","x");const o=n.shape;if(t.some(e=>!(e>0)||e%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Object(u.a)(n,e)}const c=n.shape,l=Array.from(t);for(let r=t.length-1;r>=0;r--)if(c[r]===t[r])l[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===l.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return Object(i.a)(n);const d={x:n},h={reps:l};return r.a.runKernel(a.Vc,d,h)}})},SevZ:function(e,t,n){"use strict";t.__esModule=!0,t.default=void 0;var r=s(n("9kyW")),a=s(n("bVZc"));function s(e){return e&&e.__esModule?e:{default:e}}var i=function(){function e(e){var t=void 0===e?{}:e,n=t.styleSheet,r=void 0===n?null:n,s=t.optimizeForSpeed,i=void 0!==s&&s,o=t.isBrowser,u=void 0===o?"undefined"!==typeof window:o;this._sheet=r||new a.default({name:"styled-jsx",optimizeForSpeed:i}),this._sheet.inject(),r&&"boolean"===typeof i&&(this._sheet.setOptimizeForSpeed(i),this._optimizeForSpeed=this._sheet.isOptimizeForSpeed()),this._isBrowser=u,this._fromServer=void 0,this._indices={},this._instancesCounts={},this.computeId=this.createComputeId(),this.computeSelector=this.createComputeSelector()}var t=e.prototype;return t.add=function(e){var t=this;void 0===this._optimizeForSpeed&&(this._optimizeForSpeed=Array.isArray(e.children),this._sheet.setOptimizeForSpeed(this._optimizeForSpeed),this._optimizeForSpeed=this._sheet.isOptimizeForSpeed()),this._isBrowser&&!this._fromServer&&(this._fromServer=this.selectFromServer(),this._instancesCounts=Object.keys(this._fromServer).reduce((function(e,t){return e[t]=0,e}),{}));var n=this.getIdAndRules(e),r=n.styleId,a=n.rules;if(r in this._instancesCounts)this._instancesCounts[r]+=1;else{var s=a.map((function(e){return t._sheet.insertRule(e)})).filter((function(e){return-1!==e}));this._indices[r]=s,this._instancesCounts[r]=1}},t.remove=function(e){var t=this,n=this.getIdAndRules(e).styleId;if(function(e,t){if(!e)throw new Error("StyleSheetRegistry: "+t+".")}(n in this._instancesCounts,"styleId: `"+n+"` not found"),this._instancesCounts[n]-=1,this._instancesCounts[n]<1){var r=this._fromServer&&this._fromServer[n];r?(r.parentNode.removeChild(r),delete this._fromServer[n]):(this._indices[n].forEach((function(e){return t._sheet.deleteRule(e)})),delete this._indices[n]),delete this._instancesCounts[n]}},t.update=function(e,t){this.add(t),this.remove(e)},t.flush=function(){this._sheet.flush(),this._sheet.inject(),this._fromServer=void 0,this._indices={},this._instancesCounts={},this.computeId=this.createComputeId(),this.computeSelector=this.createComputeSelector()},t.cssRules=function(){var e=this,t=this._fromServer?Object.keys(this._fromServer).map((function(t){return[t,e._fromServer[t]]})):[],n=this._sheet.cssRules();return t.concat(Object.keys(this._indices).map((function(t){return[t,e._indices[t].map((function(e){return n[e].cssText})).join(e._optimizeForSpeed?"":"\n")]})).filter((function(e){return Boolean(e[1])})))},t.createComputeId=function(){var e={};return function(t,n){if(!n)return"jsx-"+t;var a=String(n),s=t+a;return e[s]||(e[s]="jsx-"+(0,r.default)(t+"-"+a)),e[s]}},t.createComputeSelector=function(e){void 0===e&&(e=/__jsx-style-dynamic-selector/g);var t={};return function(n,r){this._isBrowser||(r=r.replace(/\/style/gi,"\\/style"));var a=n+r;return t[a]||(t[a]=r.replace(e,n)),t[a]}},t.getIdAndRules=function(e){var t=this,n=e.children,r=e.dynamic,a=e.id;if(r){var s=this.computeId(a,r);return{styleId:s,rules:Array.isArray(n)?n.map((function(e){return t.computeSelector(s,e)})):[this.computeSelector(s,n)]}}return{styleId:this.computeId(a),rules:Array.isArray(n)?n:[n]}},t.selectFromServer=function(){return Array.prototype.slice.call(document.querySelectorAll('[id^="__jsx-"]')).reduce((function(e,t){return e[t.id.slice(2)]=t,e}),{})},e}();t.default=i},SwXZ:function(e,t,n){"use strict";(function(e){var t=n("szMd");const r=()=>n(1);let a;class s{constructor(){this.util=n(2),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=Object(t.c)().global.fetch?Object(t.c)().global.fetch(e,n):(null==a&&(a=r()),a(e,n))}now(){const t=e.hrtime();return 1e3*t[0]+t[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t.c)().get("IS_NODE")&&Object(t.c)().setPlatform("node",new s)}).call(this,n("8oxB"))},THqV:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80");const o=Object(i.b)({ifft_:function(e){Object(s.b)("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return r.a.runKernel(a.qb,t)}})},TPxA:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("w4jT");class a extends r.a{split(e){return new s(this,e)}}class s extends a{constructor(e,t){super(),this.upstream=e,this.impl=new i(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class i extends r.b{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}}},TyAZ:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({exp_:function(e){const t={x:Object(s.a)(e,"x","exp")};return r.a.runKernel(a.ab,t)}})},"U/2n":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({maxPool3d_:function(e,t=[1,1,1],n,o,c,l="NDHWC"){const d=Object(s.a)(e,"x","maxPool3d");let h=d,p=!1;4===d.rank&&(p=!0,h=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),i.b(5===h.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${h.rank}.`),i.b("NDHWC"===l,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+l),null!=c&&i.b(i.v(o),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${o}.`);const f={x:h},m={filterSize:t,strides:n,pad:o,dimRoundingMode:c,dataFormat:l},b=r.a.runKernel(a.Kb,f,m);return p?Object(u.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},"U/Lz":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({unsortedSegmentSum_:function(e,t,n){const o=Object(s.a)(e,"x","unsortedSegmentSum"),u=Object(s.a)(t,"segmentIds","unsortedSegmentSum","int32");Object(i.b)(Object(i.v)(n),()=>"numSegments must be of dtype int");const c={x:o,segmentIds:u},l={numSegments:n};return r.a.runKernel(a.bd,c,l)}})},U45G:function(e,t,n){"use strict";n.d(t,"a",(function(){return h})),n.d(t,"f",(function(){return d})),n.d(t,"d",(function(){return c})),n.d(t,"e",(function(){return l})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return u}));var r=n("auKK"),a=n("NNfn"),s=n("o/e8"),i=n("atXS");function o(e){return i.b(i.u(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const a=Object(s.a)(t,"x","tf.grad","string_or_numeric"),o=null!=n?Object(s.a)(n,"dy","tf.grad"):null;return r.a.tidy(()=>{const{value:t,grads:n}=r.a.gradients(()=>e(a),[a],o);return null!=o&&i.e(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]})}}function u(e){return i.b(i.u(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{i.b(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const a=Object(s.b)(t,"args","tf.grads","string_or_numeric"),o=null!=n?Object(s.a)(n,"dy","tf.grads"):null;return r.a.tidy(()=>{const{value:t,grads:n}=r.a.gradients(()=>e(...a),a,o);return null!=o&&i.e(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n})}}function c(e){return i.b(i.u(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{i.b(t instanceof a.a,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),i.b(null==n||n instanceof a.a,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:o}=r.a.gradients(()=>e(t),[t],n);return p(s),{grad:s[0],value:o}}}function l(e){return i.b(i.u(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{i.b(Array.isArray(t)&&t.every(e=>e instanceof a.a),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),i.b(null==n||n instanceof a.a,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=r.a.gradients(()=>e(...t),t,n);return null!=n&&i.e(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(s.grads),s}}function d(e,t){i.b(i.u(e),()=>"The f passed in variableGrads(f) must be a function"),i.b(null==t||Array.isArray(t)&&t.every(e=>e instanceof a.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in r.a.registeredVariables)t.push(r.a.registeredVariables[e])}const s=n?t.filter(e=>!e.trainable):null,o=t.length;t=t.filter(e=>e.trainable),i.b(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const{value:u,grads:c}=r.a.gradients(e,t,null,!0);i.b(c.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),i.b(0===u.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`);const l={};return t.forEach((e,t)=>{null!=c[t]&&(l[e.name]=c[t])}),null!=s&&s.forEach(e=>l[e.name]=null),{value:u,grads:l}}function h(e){return r.a.customGrad(e)}function p(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},UI8N:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({floorDiv_:function(e,t){let n=Object(i.a)(e,"a","floorDiv"),o=Object(i.a)(t,"b","floorDiv");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.hb,u)}})},Ug8H:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({prelu_:function(e,t){const n={x:Object(s.a)(e,"x","prelu"),alpha:Object(s.a)(t,"alpha","prelu")};return r.a.runKernel(a.hc,n)}})},Um8L:function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}n.d(t,"b",(function(){return r})),n.d(t,"c",(function(){return a})),n.d(t,"a",(function(){return s}))},Umw7:function(e,t,n){"use strict";n.d(t,"d",(function(){return a})),n.d(t,"e",(function(){return s})),n.d(t,"f",(function(){return i})),n.d(t,"b",(function(){return o})),n.d(t,"g",(function(){return c})),n.d(t,"c",(function(){return l})),n.d(t,"a",(function(){return d}));var r=n("+hG3");function a(e,t,n,a,i){const o=t.inputParams[e];if(o&&void 0!==o.inputIndexStart){const e=o.inputIndexStart,u=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?e+1:o.inputIndexEnd;if("tensor"===o.type)return s(t.inputNames[o.inputIndexStart],n,a,i);if("tensors"===o.type){return t.inputNames.slice(e,u).map(e=>s(e,n,a,i))}const c=s(t.inputNames.slice(e)[0],n,a,i),l=c.dataSync();return"number"===o.type?l[0]:r.util.toNestedArray(c.shape,l)}const u=t.attrParams[e];return u&&u.value}function s(e,t,n,r){const[a,s]=c(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find(e=>!!t[u(a,e)]);return void 0!==i?t[u(a,i)][s]:void 0}function i(e,t,n){return t[u(e,n.currentContextId)]}function o(e,t){const[n,r]=c(e);return[u(n,t&&t.currentContextId),r]}function u(e,t){return t?`${e}-${t}`:e}function c(e){const t=e.split(":");if(1===t.length)return[e,0];return[t[0],Number(t[t.length-1])]}function l(e,t,n){let r=a("pad",e,t,n);if("explicit"===r){r=a("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function d(e){return e.kept?e:Object(r.clone)(e)}},"V+B2":function(e,t,n){"use strict";var r;n.d(t,"a",(function(){return r})),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},VO80:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i}));var r=n("auKK"),a=n("atXS");const s="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...e)=>{r.a.startScope(n);try{const t=i(...e);return Object(a.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(t){throw r.a.endScope(null),t}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},VRIy:function(e,t){(function(t){e.exports=t}).call(this,{})},VhY8:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({topk_:function(e,t=1,n=!0){const i=Object(s.a)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got `+t);const u={x:i},c={k:t,sorted:n},[l,d]=r.a.runKernel(a.Wc,u,c);return{values:l,indices:d}}})},WHR0:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},WJRb:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("auKK"),a=n("wFtI");function s(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return r.a.runKernel(a.Bb,{},s)}},WVnj:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("auKK"),a=n("atXS"),s=n("6366");function i(e,t,n,i){if(null==i&&(i=Object(a.r)(e)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(a.c)(t);const e=Object(a.O)(t),r=Object(a.O)(n);Object(a.b)(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==Object(a.O)(t.slice(s));Object(a.b)(n[s]===t[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return Object(a.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?Object(s.toTypedArray)(e,i):Object(a.m)(e,[],!0),r.a.makeTensor(e,t,i)}},WWBm:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({ceil_:function(e){const t={x:Object(s.a)(e,"x","ceil")};return r.a.runKernel(a.x,t)}})},WYAb:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({isInf_:function(e){const t={x:Object(s.a)(e,"x","isInf")};return r.a.runKernel(a.ub,t)}})},Wiw4:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("auKK"),a=n("atXS"),s=n("B3db");function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return Object(s.a)(t,n)}const n=Object(a.F)(Object(a.O)(e),t);return r.a.makeTensor(n,e,t)}},X4fa:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({softmax_:function(e,t=-1){const n=Object(s.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return r.a.runKernel(a.Gc,i,o)}})},XcSs:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sinh_:function(e){const t={x:Object(s.a)(e,"x","sinh")};return r.a.runKernel(a.Ec,t)}})},Xr0w:function(e,t,n){"use strict";n.r(t),n.d(t,"assertParamsValid",(function(){return a})),n.d(t,"maskToAxes",(function(){return s})),n.d(t,"computeOutShape",(function(){return i})),n.d(t,"stridesWithElidedDims",(function(){return o})),n.d(t,"getNormalizedAxes",(function(){return l})),n.d(t,"startIndicesWithElidedDims",(function(){return d})),n.d(t,"stopIndicesWithElidedDims",(function(){return h})),n.d(t,"stridesForAxis",(function(){return p})),n.d(t,"startForAxis",(function(){return f})),n.d(t,"stopForAxis",(function(){return m})),n.d(t,"isSliceContinous",(function(){return b})),n.d(t,"computeFlatOffset",(function(){return g})),n.d(t,"parseSliceParams",(function(){return y})),n.d(t,"sliceInfo",(function(){return x}));var r=n("atXS");function a(e,t,n){const a=e.shape.length;r.b(a===t.length,()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`),r.b(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let s=0;s<a;++s)r.b(t[s]+n[s]<=e.shape[s],()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function s(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function i(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function o(e,t,n,r){const a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function u(e,t,n){return n<=e?n:n-(t-1)}function c(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function l(e,t,n,r,a,s,i,u,c){const l=e.length;let b=new Array(l),g=new Array(l),y=new Array(l);if(t.length&&n>0){const c=t[0],l=n+1;b=d(i,c,l,r,e),g=h(u,c,l,a,e),y=o(s,c,l,e)}else for(let o=0;o<l;o++)b[o]=f(i,r,s,e,o,c),g[o]=m(u,a,s,e,o,c),y[o]=p(s,o,c);return{begin:b,end:g,strides:y}}function d(e,t,n,r,a){const s=[...a],i=c(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{const a=u(t,n,o);let i=r[a];e&1<<a&&(i=0),s[o]=i}return s}function h(e,t,n,a,s){const i=[...s],o=c(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const s=u(t,n,r);let o=a[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let u=0;u<i.length;u++){const e=s[u];i[u]<0&&(i[u]+=e),i[u]=r.i(0,i[u],s[u])}return i}function p(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function f(e,t,n,a,s,i){let o=t[s];const u=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=r.i(0,o,c-1),o}function m(e,t,n,a,s,i){let o=t[s];const u=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=u>0?r.i(0,o,c):r.i(-1,o,c-1),o}function b(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function g(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function y(e,t,n){let a;const s=e.shape.length;let i;return a="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach(e=>{r.b(-1!==e,()=>"slice() does not support negative begin indexing.")}),i=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map((t,n)=>t>=0?t:(r.b(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-a[n])),[a,i]}function x(e,t,n,r,a,o,u,c,d){let h=t.slice(),p=n.slice(),f=r;null==r&&(f=new Array(h.length));const m=s(u);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==u&&0!==c)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==u&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const b=e.length-h.length,g=s(c),y=e.slice();g.forEach(e=>{h[e]=0,p[e]=1,y.splice(e,0,1)});const{begin:x,end:v,strides:w}=l(y,m,b,h,p,f,a,o,u);h=x,p=v,f=w;const O=s(d);O.forEach(e=>{p[e]=h[e]+1,f[e]=1});const k=i(h,p,f),N=k.filter((e,t)=>-1===O.indexOf(t));return{nonStrided:f.every(e=>1===e),$begin:h,$end:p,$strides:f,size:k,newShape:y,outShape:N}}},Xyqe:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({rsqrt_:function(e){const t={x:Object(s.a)(e,"x","rsqrt")};return r.a.runKernel(a.xc,t)}})},YAKK:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({atan2_:function(e,t){let n=Object(i.a)(e,"a","atan2"),o=Object(i.a)(t,"b","atan2");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.m,u)}})},YSVl:function(e,t,n){var r=n("EhIR"),a=n("uDiL"),s=n("pJ6O"),i=n("yuCN"),o=n("euyF"),u=n("ie1u"),c=n("pJ3+");c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,e.exports=c},Z5Ez:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("SNsm"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({where_:function(e,t,n){const u=Object(s.a)(t,"a","where"),c=Object(s.a)(n,"b","where"),l=Object(s.a)(e,"condition","where","bool"),d=Object(o.a)(Object(o.a)(l.shape,u.shape),c.shape),h={condition:Object(i.a)(l,d),t:Object(i.a)(u,d),e:Object(i.a)(c,d)};return r.a.runKernel(a.zc,h)}})},ZJ6U:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("8Km0"),u=n("VO80");const c=Object(u.b)({concat_:function(e,t=0){Object(i.b)(e.length>=1,()=>"Pass at least one tensor to concat");const n=Object(s.b)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return Object(o.a)(n[0]);const u=n,c={axis:t};return r.a.runKernel(a.B,u,c)}})},Zz2E:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]},aSZd:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("VO80"),i=n("NclT");const o=Object(s.b)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,o,u=[1,1],c){let l=e;3===e.rank&&(l=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:l,dy:d},p={strides:s,pad:o,dimRoundingMode:c,dilations:u,filterShape:n};return r.a.runKernel(a.P,h,p)}})},aTLu:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sin_:function(e){const t={x:Object(s.a)(e,"x","sin")};return r.a.runKernel(a.Dc,t)}})},adw1:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n("B3db"),a=n("ZJ6U"),s=n("JLAb"),i=n("parS"),o=n("VO80"),u=n("17CO"),c=n("NclT"),l=n("0I63"),d=n("AV8V"),h=n("bTzI"),p=n("THqV");const f=Object(o.b)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=Object(c.a)(e,[n,t]);o=Object(p.a)(r)}else{const f=[n,2*(t-1)],m=Object(c.a)(Object(u.a)(e),[n,t]),b=Object(c.a)(Object(s.a)(e),[n,t]),g=Object(l.a)(Object(h.a)(m,[0,1],[n,t-2]),1),y=Object(i.a)(Object(l.a)(Object(h.a)(b,[0,1],[n,t-2]),1),Object(d.a)(-1)),x=Object(a.a)([m,g],1),v=Object(a.a)([b,y],1),w=Object(c.a)(Object(r.a)(x,v),[f[0],f[1]]);o=Object(p.a)(w)}if(o=Object(u.a)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=Object(c.a)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},atXS:function(e,t,n){"use strict";function r(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function a(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together First array length was "+e.length+"Second array length was "+t.length);let n,r,a=e.length,s=0;for(;a>0;)s=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[s],t[a]=t[s],e[s]=n,t[s]=r}function s(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2===0?e:e+1}function o(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function u(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function l(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function d(e,t,n=""){l(b(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function h(e){l(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function p(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||E(e)&&!n)for(let r=0;r<e.length;++r)p(e[r],t,n);else t.push(e);return t}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function g(e){return e%1===0}function y(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function O(e,t=(e=>0),n){return new Promise((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()})}function k(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function N(e,t){const n=t.length;return l((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),l(e.every(e=>g(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function I(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:N(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function j(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function S(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function C(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function T(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function A(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function E(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function $(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function F(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function _(e){return"string"===typeof e||e instanceof String}function R(e){return"boolean"===typeof e}function D(e){return"number"===typeof e}function M(e){return Array.isArray(e)?M(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":D(e)?"float32":_(e)?"string":R(e)?"bool":"float32"}function z(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function P(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function B(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return function e(t,n,r,a=!1){const s=new Array;if(1===n.length){const e=n[0]*(a?2:1);for(let n=0;n<e;n++)s[n]=r[t+n]}else{const i=n[0],o=n.slice(1),u=o.reduce((e,t)=>e*t)*(a?2:1);for(let n=0;n<i;n++)s[n]=e(t+n*u,o,r,a)}return s}(0,e,t,n)}function V(e,t){const n=W(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function W(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function U(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return B(e,new Float32Array(n));if("int32"===t)return B(e,new Int32Array(n));if("bool"===t)return B(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function G(e){e.forEach(t=>{l(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function H(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function q(e){return e&&e.then&&"function"===typeof e.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return a})),n.d(t,"i",(function(){return s})),n.d(t,"H",(function(){return i})),n.d(t,"R",(function(){return o})),n.d(t,"J",(function(){return u})),n.d(t,"l",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"d",(function(){return h})),n.d(t,"m",(function(){return p})),n.d(t,"O",(function(){return f})),n.d(t,"y",(function(){return m})),n.d(t,"a",(function(){return b})),n.d(t,"v",(function(){return g})),n.d(t,"S",(function(){return y})),n.d(t,"P",(function(){return x})),n.d(t,"k",(function(){return v})),n.d(t,"L",(function(){return w})),n.d(t,"K",(function(){return O})),n.d(t,"s",(function(){return k})),n.d(t,"I",(function(){return N})),n.d(t,"Q",(function(){return I})),n.d(t,"o",(function(){return j})),n.d(t,"n",(function(){return S})),n.d(t,"h",(function(){return C})),n.d(t,"B",(function(){return T})),n.d(t,"p",(function(){return A})),n.d(t,"A",(function(){return E})),n.d(t,"g",(function(){return $})),n.d(t,"f",(function(){return F})),n.d(t,"z",(function(){return _})),n.d(t,"t",(function(){return R})),n.d(t,"w",(function(){return D})),n.d(t,"r",(function(){return M})),n.d(t,"u",(function(){return z})),n.d(t,"G",(function(){return L})),n.d(t,"j",(function(){return P})),n.d(t,"T",(function(){return B})),n.d(t,"D",(function(){return V})),n.d(t,"F",(function(){return W})),n.d(t,"E",(function(){return U})),n.d(t,"c",(function(){return G})),n.d(t,"C",(function(){return K})),n.d(t,"q",(function(){return H})),n.d(t,"x",(function(){return q}))},auKK:function(e,t,n){"use strict";n.d(t,"b",(function(){return y})),n.d(t,"a",(function(){return x}));var r=n("i4e/"),a=n("szMd"),s=n("9JAK"),i=n("wFtI"),o=n("c7gn"),u=n("6366"),c=n("atXS");class l{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new h)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const o=u.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:u.now()-o})}if(Object(a.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const t=r[a];t.data().then(n=>{d(n,t.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then(e=>e.kernelMs),extraInfo:i.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}function d(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(e,t,n,r,a,s){const i="number"===typeof r?c.L(r+"ms",9):r.error,o=c.L(e,25),u=t.rank,l=t.size,d=c.L(t.shape.toString(),14);let h="";for(const c in a){const e=a[c];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${c}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${d}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var p=n("NNfn"),f=n("dsKV");function m(e){return null!=e.kernelName}class b{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class g{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),!0}setupRegisteredKernels(){Object(o.d)(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Object(o.d)(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.b||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return g.nextTensorId++}nextVariableId(){return g.nextVariableId++}clone(e){const t=x.runKernel(i.rb,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e},n={dtype:"float32"};return x.runKernel(i.w,t,n)}}),[],{}),t}runKernel(e,t,n){if(!(null!=Object(o.c)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const l=Object(o.c)(t,this.backendName);c.b(null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),i=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy(()=>t(this.backend,a));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:h}=e,p=m(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()}),r&&this.addTapeNode(l,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=Object(o.b)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(c.b(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const i=n.filter((e,t)=>a[t]);return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&c.z(e[0])&&(a=e.map(e=>u.encodeString(e)));const s=r.write(a,t,n),i=new p.a(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Object(c.f)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new p.a(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new p.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.g(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof p.c||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.g(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=Object(o.b)(e);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=c.F(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(f.getTensorsInContainer)(e),n=new Set(t.map(e=>e.id));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(c.b(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));c.b(a instanceof p.a,()=>"The result y returned by f() must be a tensor.");const s=function(e,t,n){const r={},a={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],s=n.inputs;for(const e in s){const i=s[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach(e=>r[e.id]=!0),o=!0,a[n.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let u=0;u<e.length;u++){const t=e[u];if(a[t.id]&&i[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];r[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?function(e){const t=Object(c.D)(Object(c.O)(e),"float32");return x.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach(t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n(()=>o[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!c.a(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,e=>this.tidy(e),v);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return c.b(c.u(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;c.b(t.every(e=>e instanceof p.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};t.forEach((e,t)=>{r[t]=e});return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),c.b(n.value instanceof p.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),c.b(c.u(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];c.b(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),c.b(s.every(e=>e instanceof p.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return s.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Object(u.now)(),n=await this.backend.time(e);return n.wallMs=Object(u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const e=Object(s.b)();if(null==e._tfengine){const t=new a.b(e);e._tfengine=new g(t)}return Object(a.d)(e._tfengine.ENV),Object(p.g)(()=>e._tfengine),e._tfengine}g.nextTensorId=0,g.nextVariableId=0;const x=y();function v(e,t){const n={a:e,b:t};return x.runKernel(i.d,n)}},"b++O":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({isNaN_:function(e){const t={x:Object(s.a)(e,"x","isNaN")};return r.a.runKernel(a.vb,t)}})},bSXR:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/camera",function(){return n("Lbv+")}])},bTzI:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({slice_:function(e,t,n){const i=Object(s.a)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:t,size:n};return r.a.runKernel(a.Fc,o,u)}})},bVZc:function(e,t,n){"use strict";(function(e){function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}t.__esModule=!0,t.default=void 0;var r="undefined"!==typeof e&&e.env&&!0,a=function(e){return"[object String]"===Object.prototype.toString.call(e)},s=function(){function e(e){var t=void 0===e?{}:e,n=t.name,s=void 0===n?"stylesheet":n,o=t.optimizeForSpeed,u=void 0===o?r:o,c=t.isBrowser,l=void 0===c?"undefined"!==typeof window:c;i(a(s),"`name` must be a string"),this._name=s,this._deletedRulePlaceholder="#"+s+"-deleted-rule____{}",i("boolean"===typeof u,"`optimizeForSpeed` must be a boolean"),this._optimizeForSpeed=u,this._isBrowser=l,this._serverSheet=void 0,this._tags=[],this._injected=!1,this._rulesCount=0;var d=this._isBrowser&&document.querySelector('meta[property="csp-nonce"]');this._nonce=d?d.getAttribute("content"):null}var t,s,o,u=e.prototype;return u.setOptimizeForSpeed=function(e){i("boolean"===typeof e,"`setOptimizeForSpeed` accepts a boolean"),i(0===this._rulesCount,"optimizeForSpeed cannot be when rules have already been inserted"),this.flush(),this._optimizeForSpeed=e,this.inject()},u.isOptimizeForSpeed=function(){return this._optimizeForSpeed},u.inject=function(){var e=this;if(i(!this._injected,"sheet already injected"),this._injected=!0,this._isBrowser&&this._optimizeForSpeed)return this._tags[0]=this.makeStyleTag(this._name),this._optimizeForSpeed="insertRule"in this.getSheet(),void(this._optimizeForSpeed||(r||console.warn("StyleSheet: optimizeForSpeed mode not supported falling back to standard mode."),this.flush(),this._injected=!0));this._serverSheet={cssRules:[],insertRule:function(t,n){return"number"===typeof n?e._serverSheet.cssRules[n]={cssText:t}:e._serverSheet.cssRules.push({cssText:t}),n},deleteRule:function(t){e._serverSheet.cssRules[t]=null}}},u.getSheetForTag=function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]},u.getSheet=function(){return this.getSheetForTag(this._tags[this._tags.length-1])},u.insertRule=function(e,t){if(i(a(e),"`insertRule` accepts only strings"),!this._isBrowser)return"number"!==typeof t&&(t=this._serverSheet.cssRules.length),this._serverSheet.insertRule(e,t),this._rulesCount++;if(this._optimizeForSpeed){var n=this.getSheet();"number"!==typeof t&&(t=n.cssRules.length);try{n.insertRule(e,t)}catch(o){return r||console.warn("StyleSheet: illegal rule: \n\n"+e+"\n\nSee https://stackoverflow.com/q/20007992 for more info"),-1}}else{var s=this._tags[t];this._tags.push(this.makeStyleTag(this._name,e,s))}return this._rulesCount++},u.replaceRule=function(e,t){if(this._optimizeForSpeed||!this._isBrowser){var n=this._isBrowser?this.getSheet():this._serverSheet;if(t.trim()||(t=this._deletedRulePlaceholder),!n.cssRules[e])return e;n.deleteRule(e);try{n.insertRule(t,e)}catch(s){r||console.warn("StyleSheet: illegal rule: \n\n"+t+"\n\nSee https://stackoverflow.com/q/20007992 for more info"),n.insertRule(this._deletedRulePlaceholder,e)}}else{var a=this._tags[e];i(a,"old rule at index `"+e+"` not found"),a.textContent=t}return e},u.deleteRule=function(e){if(this._isBrowser)if(this._optimizeForSpeed)this.replaceRule(e,"");else{var t=this._tags[e];i(t,"rule at index `"+e+"` not found"),t.parentNode.removeChild(t),this._tags[e]=null}else this._serverSheet.deleteRule(e)},u.flush=function(){this._injected=!1,this._rulesCount=0,this._isBrowser?(this._tags.forEach((function(e){return e&&e.parentNode.removeChild(e)})),this._tags=[]):this._serverSheet.cssRules=[]},u.cssRules=function(){var e=this;return this._isBrowser?this._tags.reduce((function(t,n){return n?t=t.concat(Array.prototype.map.call(e.getSheetForTag(n).cssRules,(function(t){return t.cssText===e._deletedRulePlaceholder?null:t}))):t.push(null),t}),[]):this._serverSheet.cssRules},u.makeStyleTag=function(e,t,n){t&&i(a(t),"makeStyleTag acceps only strings as second parameter");var r=document.createElement("style");this._nonce&&r.setAttribute("nonce",this._nonce),r.type="text/css",r.setAttribute("data-"+e,""),t&&r.appendChild(document.createTextNode(t));var s=document.head||document.getElementsByTagName("head")[0];return n?s.insertBefore(r,n):s.appendChild(r),r},t=e,(s=[{key:"length",get:function(){return this._rulesCount}}])&&n(t.prototype,s),o&&n(t,o),e}();function i(e,t){if(!e)throw new Error("StyleSheet: "+t+".")}t.default=s}).call(this,n("8oxB"))},boNM:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},bzdD:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({leakyRelu_:function(e,t=.2){const n={x:Object(s.a)(e,"x","leakyRelu")},i={alpha:t};return r.a.runKernel(a.yb,n,i)}})},"c/ib":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({resizeBilinear_:function(e,t,n=!1,o=!1){const c=Object(s.a)(e,"images","resizeBilinear");i.b(3===c.rank||4===c.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${c.rank}.`),i.b(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."),i.b(!1===o||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=t,h={images:l},p={alignCorners:n,halfPixelCenters:o,size:t},f=r.a.runKernel(a.qc,h,p);return d?Object(u.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},c7gn:function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"b",(function(){return u})),n.d(t,"d",(function(){return c})),n.d(t,"f",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"h",(function(){return h})),n.d(t,"g",(function(){return p})),n.d(t,"a",(function(){return f}));var r=n("szMd"),a=n("9JAK");const s=Object(a.a)("kernelRegistry",()=>new Map),i=Object(a.a)("gradRegistry",()=>new Map);function o(e,t){const n=m(e,t);return s.get(n)}function u(e){return i.get(e)}function c(e){const t=s.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function l(e){const{kernelName:t,backendName:n}=e,r=m(t,n);s.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),s.set(r,e)}function d(e){const{kernelName:t}=e;i.has(t)&&Object(r.c)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),i.set(t,e)}function h(e,t){const n=m(e,t);if(!s.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);s.delete(n)}function p(e){if(!i.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);i.delete(e)}function f(e,t){c(e).forEach(e=>{l(Object.assign({},e,{backendName:t}))})}function m(e,t){return`${t}_${e}`}},c9N1:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({conv2DBackpropInput_:function(e,t,n,i,u,c="NHWC",l){s.b(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let d=e,h=t,p=!1;3===t.rank&&(p=!0,h=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),s.b(4===d.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+d.length+"."),s.b(4===h.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+h.rank),s.b(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const f="NHWC"===c?d[3]:d[1],m="NHWC"===c?h.shape[3]:h.shape[1];s.b(f===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`),s.b(m===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`),null!=l&&s.b(s.v(u),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const b={dy:h,filter:n},g={strides:i,pad:u,dataFormat:c,dimRoundingMode:l,inputShape:d},y=r.a.runKernel(a.E,b,g);return p?Object(o.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},cdtJ:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NclT");var u=n("VO80");const c=Object(u.b)({batchNorm_:function(e,t,n,u,c,l){null==l&&(l=.001);const d=Object(s.a)(e,"x","batchNorm"),h=Object(s.a)(t,"mean","batchNorm"),p=Object(s.a)(n,"variance","batchNorm");let f,m;null!=c&&(f=Object(s.a)(c,"scale","batchNorm")),null!=u&&(m=Object(s.a)(u,"offset","batchNorm")),i.b(h.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),i.b(null==m||h.rank===m.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),i.b(null==f||h.rank===f.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const b={x:function(e){let t;return t=0===e.rank||1===e.rank?Object(o.a)(e,[1,1,1,e.size]):2===e.rank?Object(o.a)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:h,variance:p},g={varianceEpsilon:l},y=r.a.runKernel(a.jb,b,g);return Object(o.a)(y,d.shape)}})},dWjR:function(e,t,n){"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,"a",(function(){return r}))},dYAU:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({spaceToBatchND_:function(e,t,n){const o=Object(s.a)(e,"x","spaceToBatchND");i.b(o.rank>=1+t.length,()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`),i.b(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),i.b(o.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]===0:e,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const u={x:o},c={blockShape:t,paddings:n};return r.a.runKernel(a.Ic,u,c)}})},dauL:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({einsum_:function(e,...t){const n=t.map((e,t)=>Object(s.a)(e,"tensors"+t,"einsum")),i={equation:e};return r.a.runKernel(a.V,n,i)}})},dnXz:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("o/e8"),a=n("atXS"),s=n("3X4V"),i=n("uBja"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({conv1d_:function(e,t,n,o,c="NWC",l=1,d){const h=Object(r.a)(e,"x","conv1d"),p=Object(r.a)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1]])),a.b(3===f.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),a.b(3===p.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+p.rank+"."),null!=d&&a.b(a.v(o),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`),a.b(f.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`),a.b(i.h(n,l),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`),a.b("NWC"===c,()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`);const b=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),g=Object(u.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,l],v=Object(s.a)(g,b,y,o,"NHWC",x,d);return m?Object(u.a)(v,[v.shape[2],v.shape[3]]):Object(u.a)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},dsKV:function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return i})),n.d(t,"assertTypesMatch",(function(){return o})),n.d(t,"isTensorInList",(function(){return u})),n.d(t,"getTensorsInContainer",(function(){return c}));var r=n("NNfn"),a=n("I79q"),s=n("atXS");function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(a.c)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){Object(s.b)(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function u(e,t){return t.some(t=>t.id===e.id)}function c(e){const t=[];return function e(t,n,a){if(null==t)return;if(t instanceof r.a)return void n.push(t);if(s=t,!Array.isArray(s)&&"object"!==typeof s)return;var s;const i=t;for(const r in i){const t=i[r];a.has(t)||(a.add(t),e(t,n,a))}}(e,t,new Set),t}},euyF:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("uQAw")&&n("VRIy")?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e,n("uQAw"))}).call(this,n("1/IK")(e))},"fN6/":function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return a}));const r=1.7580993408473768,a=1.0507009873554805},fjZN:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({atan_:function(e){const t={x:Object(s.a)(e,"x","atan")};return r.a.runKernel(a.l,t)}})},fmoR:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("BD40"),a=n("VO80"),s=n("1OSX");const i=Object(a.b)({truncatedNormal_:function(e,t=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s.a(t,n,a,!0,i),u=Object(r.a)(e,a);for(let r=0;r<u.values.length;r++)u.values[r]=o.nextValue();return u.toTensor()}})},ftYm:function(e,t,n){"use strict";function r(e){if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function a(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(t),n.d(t,"isMobile",(function(){return r})),n.d(t,"isBrowser",(function(){return a}))},"g4+C":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({depthwiseConv2d_:function(e,t,n,o,c="NHWC",l=[1,1],d){const h=Object(s.a)(e,"x","depthwiseConv2d"),p=Object(s.a)(t,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.b(4===f.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),i.b(4===p.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+p.rank+"."),i.b(f.shape[3]===p.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),null!=d&&i.b(i.v(o),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`);const b={x:f,filter:p},g={strides:n,pad:o,dataFormat:c,dilations:l,dimRoundingMode:d},y=r.a.runKernel(a.O,b,g);return m?Object(u.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},g4m1:function(e,t,n){"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||a)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return u(e,t,n,r,a,0)}function i(e,t,n,r,a,s){return u(e,t,n,r,a,0,!1,s,!0)}function o(e,t,n,r,a,s){return u(e,t,n,r,a,s,!0)}function u(e,t,n,a,s,i,o=!1,u=!1,h=!1){const p=[];for(let r=0;r<t.length;r++)t[r]>s&&p.push({score:t[r],boxIndex:r,suppressBeginIndex:0});p.sort(d);const f=i>0?-.5/i:0,m=[],b=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<s)break;let u=!1;for(let r=m.length-1;r>=o;--r){const n=c(e,i,m[r]);if(n>=a){u=!0;break}if(t.score=t.score*l(a,f,n),t.score<=s)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),b.push(t.score)):t.score>s&&r(p,t,d))}const g=m.length,y=n-g;u&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=b),h&&(x.validOutputs=g),x}function c(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(s,c),b=Math.max(i,l),g=Math.min(o,d),y=Math.min(u,h),x=Math.max(g-m,0)*Math.max(y-b,0);return x/(p+f-x)}function l(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return o}))},gErV:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var r=n("U45G"),a=n("o/e8"),s=n("3rNm"),i=n("TyAZ"),o=n("E1lT"),u=n("wCH+"),c=n("parS"),l=n("VO80"),d=n("oAkI"),h=n("4FMF");const p=Object(l.b)({logSoftmax_:function(e,t=-1){const n=Object(a.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Object(r.a)((e,n)=>{const r=Object(u.a)(e,t,!0),a=Object(d.a)(e,r),l=Object(d.a)(Object(s.a)(a,"float32"),Object(o.a)(Object(h.a)(Object(i.a)(a),t,!0)));n([l]);return{value:l,gradFunc:(e,n)=>{const[r]=n,a=Object(i.a)(r);return Object(d.a)(e,Object(c.a)(Object(h.a)(e,t,!0),a))}}})(n)}})},hNYx:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("auKK"),a=n("wFtI");function s(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:e,stop:t,step:n,dtype:s};return r.a.runKernel(a.jc,{},i)}},hT5K:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({unique_:function(e,t=0){const n=Object(s.a)(e,"x","unique","string_or_numeric");Object(i.b)(n.rank>0,()=>"The input tensor must be at least 1D");const o={x:n},u={axis:t},[c,l]=r.a.runKernel(a.Zc,o,u);return{values:c,indices:l}}})},hinG:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("BD40"),a=n("VO80"),s=n("1OSX");const i=Object(a.b)({randomUniform_:function(e,t=0,n=1,a="float32",i){const o=Object(r.a)(e,a),u=new s.c(t,n,null,i);for(let r=0;r<o.values.length;r++)o.values[r]=u.nextValue();return o.toTensor()}})},"i/oj":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("o0+U");const u=Object(i.b)({scatterND_:function(e,t,n){const i=Object(s.a)(e,"indices","scatterND","int32"),u=Object(s.a)(t,"updates","scatterND");o.validateInput(u,i,n);const c={indices:i,updates:u},l={shape:n};return r.a.runKernel(a.yc,c,l)}})},"i4e/":function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},i8k8:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({maxPoolWithArgmax_:function(e,t,n,i,o=!1){const u={x:Object(s.a)(e,"x","maxPoolWithArgmax")},c={filterSize:t,strides:n,pad:i,includeBatchInIndex:o},l=r.a.runKernel(a.Nb,u,c);return{result:l[0],indexes:l[1]}}})},iIjY:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({tanh_:function(e){const t={x:Object(s.a)(e,"x","tanh")};return r.a.runKernel(a.Uc,t)}})},iMkW:function(e,t,n){var r;window,e.exports=(r=n("zhpf"),function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=46)}([function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){var r=n(32)("wks"),a=n(33),s=n(0).Symbol,i="function"==typeof s;(e.exports=function(e){return r[e]||(r[e]=i&&s[e]||(i?s:a)("Symbol."+e))}).store=r},function(e,t){var n=e.exports={version:"2.6.5"};"number"==typeof __e&&(__e=n)},function(e,t,n){var r=n(9);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t,n){var r=n(8),a=n(19);e.exports=n(10)?function(e,t,n){return r.f(e,t,a(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t){e.exports={}},function(e,t,n){var r=n(0),a=n(2),s=n(7),i=n(4),o=n(13),u=function(e,t,n){var c,l,d,h=e&u.F,p=e&u.G,f=e&u.S,m=e&u.P,b=e&u.B,g=e&u.W,y=p?a:a[t]||(a[t]={}),x=y.prototype,v=p?r:f?r[t]:(r[t]||{}).prototype;for(c in p&&(n=t),n)(l=!h&&v&&void 0!==v[c])&&o(y,c)||(d=l?v[c]:n[c],y[c]=p&&"function"!=typeof v[c]?n[c]:b&&l?s(d,r):g&&v[c]==d?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):m&&"function"==typeof d?s(Function.call,d):d,m&&((y.virtual||(y.virtual={}))[c]=d,e&u.R&&x&&!x[c]&&i(x,c,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t,n){var r=n(12);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,a){return e.call(t,n,r,a)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){var r=n(3),a=n(54),s=n(55),i=Object.defineProperty;t.f=n(10)?Object.defineProperty:function(e,t,n){if(r(e),t=s(t,!0),r(n),a)try{return i(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){e.exports=!n(31)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(e,t,n){"use strict";var r=n(53)(!0);n(30)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})}))},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){e.exports=!0},function(e,t,n){var r=n(9),a=n(0).document,s=r(a)&&r(a.createElement);e.exports=function(e){return s?a.createElement(e):{}}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){var r=n(62),a=n(16);e.exports=function(e){return r(a(e))}},function(e,t,n){var r=n(15),a=Math.min;e.exports=function(e){return e>0?a(r(e),9007199254740991):0}},function(e,t,n){var r=n(32)("keys"),a=n(33);e.exports=function(e){return r[e]||(r[e]=a(e))}},function(e,t,n){var r=n(8).f,a=n(13),s=n(1)("toStringTag");e.exports=function(e,t,n){e&&!a(e=n?e:e.prototype,s)&&r(e,s,{configurable:!0,value:t})}},function(e,t,n){n(66);for(var r=n(0),a=n(4),s=n(5),i=n(1)("toStringTag"),o="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<o.length;u++){var c=o[u],l=r[c],d=l&&l.prototype;d&&!d[i]&&a(d,i,c),s[c]=s.Array}},function(e,t,n){var r=n(14),a=n(1)("toStringTag"),s="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),a))?n:s?r(t):"Object"==(i=r(t))&&"function"==typeof t.callee?"Arguments":i}},function(e,t,n){var r=n(25),a=n(1)("iterator"),s=n(5);e.exports=n(2).getIteratorMethod=function(e){if(null!=e)return e[a]||e["@@iterator"]||s[r(e)]}},function(e,t,n){"use strict";var r=n(12);function a(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new a(e)}},function(e,t,n){e.exports=n(48)},function(e,t,n){"use strict";t.__esModule=!0;var r,a=(r=n(50))&&r.__esModule?r:{default:r};t.default=function(e){return function(){var t=e.apply(this,arguments);return new a.default((function(e,n){return function r(s,i){try{var o=t[s](i),u=o.value}catch(e){return void n(e)}if(!o.done)return a.default.resolve(u).then((function(e){r("next",e)}),(function(e){r("throw",e)}));e(u)}("next")}))}}},function(e,t,n){"use strict";var r=n(17),a=n(6),s=n(56),i=n(4),o=n(5),u=n(57),c=n(23),l=n(65),d=n(1)("iterator"),h=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,n,f,m,b,g){u(n,t,f);var y,x,v,w=function(e){if(!h&&e in I)return I[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},O=t+" Iterator",k="values"==m,N=!1,I=e.prototype,j=I[d]||I["@@iterator"]||m&&I[m],S=j||w(m),C=m?k?w("entries"):S:void 0,T="Array"==t&&I.entries||j;if(T&&(v=l(T.call(new e)))!==Object.prototype&&v.next&&(c(v,O,!0),r||"function"==typeof v[d]||i(v,d,p)),k&&j&&"values"!==j.name&&(N=!0,S=function(){return j.call(this)}),r&&!g||!h&&!N&&I[d]||i(I,d,S),o[t]=S,o[O]=p,m)if(y={values:k?S:w("values"),keys:b?S:w("keys"),entries:C},g)for(x in y)x in I||s(I,x,y[x]);else a(a.P+a.F*(h||N),t,y);return y}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(2),a=n(0),s=a["__core-js_shared__"]||(a["__core-js_shared__"]={});(e.exports=function(e,t){return s[e]||(s[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(17)?"pure":"global",copyright:"\xa9 2019 Denis Pushkarev (zloirock.ru)"})},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var r=n(0).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(16);e.exports=function(e){return Object(r(e))}},function(e,t,n){var r=n(3);e.exports=function(e,t,n,a){try{return a?t(r(n)[0],n[1]):t(n)}catch(t){var s=e.return;throw void 0!==s&&r(s.call(e)),t}}},function(e,t,n){var r=n(5),a=n(1)("iterator"),s=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||s[a]===e)}},function(e,t,n){var r=n(3),a=n(12),s=n(1)("species");e.exports=function(e,t){var n,i=r(e).constructor;return void 0===i||null==(n=r(i)[s])?t:a(n)}},function(e,t,n){var r,a,s,i=n(7),o=n(72),u=n(35),c=n(18),l=n(0),d=l.process,h=l.setImmediate,p=l.clearImmediate,f=l.MessageChannel,m=l.Dispatch,b=0,g={},y=function(){var e=+this;if(g.hasOwnProperty(e)){var t=g[e];delete g[e],t()}},x=function(e){y.call(e.data)};h&&p||(h=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return g[++b]=function(){o("function"==typeof e?e:Function(e),t)},r(b),b},p=function(e){delete g[e]},"process"==n(14)(d)?r=function(e){d.nextTick(i(y,e,1))}:m&&m.now?r=function(e){m.now(i(y,e,1))}:f?(s=(a=new f).port2,a.port1.onmessage=x,r=i(s.postMessage,s,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(r=function(e){l.postMessage(e+"","*")},l.addEventListener("message",x,!1)):r="onreadystatechange"in c("script")?function(e){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),y.call(e)}}:function(e){setTimeout(i(y,e,1),0)}),e.exports={set:h,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var r=n(3),a=n(9),s=n(27);e.exports=function(e,t){if(r(e),a(t)&&t.constructor===e)return t;var n=s.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){var r=n(1)("iterator"),a=!1;try{var s=[7][r]();s.return=function(){a=!0},Array.from(s,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!a)return!1;var n=!1;try{var s=[7],i=s[r]();i.next=function(){return{done:n=!0}},s[r]=function(){return i},e(s)}catch(e){}return n}},function(e,t){e.exports=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.v1_tiny_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v1tiny/model.json",t.v2_tiny_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v2tiny/model.json",t.v3_tiny_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v3tiny/model.json",t.v3_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v3/model.json",t.v1_tiny_anchors=[1.08,1.19,3.42,4.41,6.63,11.38,9.42,5.11,16.62,10.52],t.v2_tiny_anchors=[.57273,.677385,1.87446,2.06253,3.33843,5.47434,7.88282,3.52778,9.77052,9.16828],t.v3_anchors=[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326],t.v3_tiny_anchors=[10,14,23,27,37,58,81,82,135,169,344,319],t.v3_masks={3:[[6,7,8],[3,4,5],[0,1,2]],2:[[3,4,5],[1,2,3]]}},function(e,t,n){e.exports=n(47)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,a,s,i,o,u,c=O(n(28)),l=O(n(29)),d=(r=(0,l.default)(c.default.mark((function e(t,n){return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!n){e.next=6;break}return e.next=3,g.loadGraphModel(n,t);case 3:return e.abrupt("return",e.sent);case 6:return e.next=8,g.loadLayersModel(t);case 8:return e.abrupt("return",e.sent);case 9:case"end":return e.stop()}}),e,this)}))),function(e,t){return r.apply(this,arguments)}),h=(a=(0,l.default)(c.default.mark((function e(t,n,r,a,s,i,o,u,l,d){var h,p;return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return h=g.tidy((function(){var e=document.createElement("canvas");e.width=d,e.height=d,e.getContext("2d").drawImage(r,0,0,d,d);var t=g.browser.fromPixels(e,3);return t=t.expandDims(0).toFloat().div(g.scalar(255)),n.predict(t)})),e.next=3,(0,w.default)(t,h,u,o,l,"HTMLVideoElement"===r.constructor.name?[r.videoHeight,r.videoWidth]:[r.height,r.width],a,s,i);case 3:return p=e.sent,g.dispose(h),e.abrupt("return",p);case 6:case"end":return e.stop()}}),e,this)}))),function(e,t,n,r,s,i,o,u,c,l){return a.apply(this,arguments)}),p=(s=(0,l.default)(c.default.mark((function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v.v1_tiny_model,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,d(n,r);case 2:return t=e.sent,e.abrupt("return",{predict:function(){var e=(0,l.default)(c.default.mark((function e(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.maxBoxes,s=void 0===a?k:a,i=r.scoreThreshold,o=void 0===i?I:i,u=r.iouThreshold,l=void 0===u?j:u,d=r.numClasses,p=void 0===d?x.default.length:d,f=r.anchors,m=void 0===f?v.v1_tiny_anchors:f,b=r.classNames,g=void 0===b?x.default:b,y=r.inputSize,w=void 0===y?N:y;return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h("v1tiny",t,n,s,o,l,p,m,g,w);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),dispose:function(){t.dispose(),t=null}});case 4:case"end":return e.stop()}}),e,this)}))),function(){return s.apply(this,arguments)}),f=(i=(0,l.default)(c.default.mark((function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v.v2_tiny_model,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,d(n,r);case 2:return t=e.sent,e.abrupt("return",{predict:function(){var e=(0,l.default)(c.default.mark((function e(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.maxBoxes,s=void 0===a?k:a,i=r.scoreThreshold,o=void 0===i?I:i,u=r.iouThreshold,l=void 0===u?j:u,d=r.numClasses,p=void 0===d?y.default.length:d,f=r.anchors,m=void 0===f?v.v2_tiny_anchors:f,b=r.classNames,g=void 0===b?y.default:b,x=r.inputSize,w=void 0===x?N:x;return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h("v2tiny",t,n,s,o,l,p,m,g,w);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),dispose:function(){t.dispose(),t=null}});case 4:case"end":return e.stop()}}),e,this)}))),function(){return i.apply(this,arguments)}),m=(o=(0,l.default)(c.default.mark((function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v.v3_tiny_model,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,d(n,r);case 2:return t=e.sent,e.abrupt("return",{predict:function(){var e=(0,l.default)(c.default.mark((function e(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.maxBoxes,s=void 0===a?k:a,i=r.scoreThreshold,o=void 0===i?I:i,u=r.iouThreshold,l=void 0===u?j:u,d=r.numClasses,p=void 0===d?y.default.length:d,f=r.anchors,m=void 0===f?v.v3_tiny_anchors:f,b=r.classNames,g=void 0===b?y.default:b,x=r.inputSize,w=void 0===x?N:x;return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h("v3tiny",t,n,s,o,l,p,m,g,w);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),dispose:function(){t.dispose(),t=null}});case 4:case"end":return e.stop()}}),e,this)}))),function(){return o.apply(this,arguments)}),b=(u=(0,l.default)(c.default.mark((function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v.v3_model,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,d(n,r);case 2:return t=e.sent,e.abrupt("return",{predict:function(){var e=(0,l.default)(c.default.mark((function e(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.maxBoxes,s=void 0===a?k:a,i=r.scoreThreshold,o=void 0===i?I:i,u=r.iouThreshold,l=void 0===u?j:u,d=r.numClasses,p=void 0===d?y.default.length:d,f=r.anchors,m=void 0===f?v.v3_anchors:f,b=r.classNames,g=void 0===b?y.default:b,x=r.inputSize,w=void 0===x?N:x;return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h("v3",t,n,s,o,l,p,m,g,w);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),dispose:function(){t.dispose(),t=null}});case 4:case"end":return e.stop()}}),e,this)}))),function(){return u.apply(this,arguments)}),g=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(44)),y=O(n(79)),x=O(n(80)),v=n(45),w=O(n(81));function O(e){return e&&e.__esModule?e:{default:e}}var k=20,N=416,I=.5,j=.3,S={v1tiny:p,v2tiny:f,v3tiny:m,v3:b};t.default=S},function(e,t,n){var r=function(){return this}()||Function("return this")(),a=r.regeneratorRuntime&&Object.getOwnPropertyNames(r).indexOf("regeneratorRuntime")>=0,s=a&&r.regeneratorRuntime;if(r.regeneratorRuntime=void 0,e.exports=n(49),a)r.regeneratorRuntime=s;else try{delete r.regeneratorRuntime}catch(e){r.regeneratorRuntime=void 0}},function(e,t){!function(t){"use strict";var n,r=Object.prototype,a=r.hasOwnProperty,s="function"==typeof Symbol?Symbol:{},i=s.iterator||"@@iterator",o=s.asyncIterator||"@@asyncIterator",u=s.toStringTag||"@@toStringTag",c="object"==typeof e,l=t.regeneratorRuntime;if(l)c&&(e.exports=l);else{(l=t.regeneratorRuntime=c?e.exports:{}).wrap=v;var d="suspendedStart",h="suspendedYield",p="executing",f="completed",m={},b={};b[i]=function(){return this};var g=Object.getPrototypeOf,y=g&&g(g(E([])));y&&y!==r&&a.call(y,i)&&(b=y);var x=N.prototype=O.prototype=Object.create(b);k.prototype=x.constructor=N,N.constructor=k,N[u]=k.displayName="GeneratorFunction",l.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===k||"GeneratorFunction"===(t.displayName||t.name))},l.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,N):(e.__proto__=N,u in e||(e[u]="GeneratorFunction")),e.prototype=Object.create(x),e},l.awrap=function(e){return{__await:e}},I(j.prototype),j.prototype[o]=function(){return this},l.AsyncIterator=j,l.async=function(e,t,n,r){var a=new j(v(e,t,n,r));return l.isGeneratorFunction(t)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},I(x),x[u]="Generator",x[i]=function(){return this},x.toString=function(){return"[object Generator]"},l.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},l.values=E,A.prototype={constructor:A,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(T),!e)for(var t in this)"t"===t.charAt(0)&&a.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=n)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(r,a){return o.type="throw",o.arg=e,t.next=r,a&&(t.method="next",t.arg=n),!!a}for(var s=this.tryEntries.length-1;s>=0;--s){var i=this.tryEntries[s],o=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var u=a.call(i,"catchLoc"),c=a.call(i,"finallyLoc");if(u&&c){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&a.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var s=r;break}}s&&("break"===e||"continue"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var i=s?s.completion:{};return i.type=e,i.arg=t,s?(this.method="next",this.next=s.finallyLoc,m):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;T(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:E(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=n),m}}}function v(e,t,n,r){var a=t&&t.prototype instanceof O?t:O,s=Object.create(a.prototype),i=new A(r||[]);return s._invoke=function(e,t,n){var r=d;return function(a,s){if(r===p)throw new Error("Generator is already running");if(r===f){if("throw"===a)throw s;return $()}for(n.method=a,n.arg=s;;){var i=n.delegate;if(i){var o=S(i,n);if(o){if(o===m)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===d)throw r=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=p;var u=w(e,t,n);if("normal"===u.type){if(r=n.done?f:h,u.arg===m)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r=f,n.method="throw",n.arg=u.arg)}}}(e,n,i),s}function w(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function O(){}function k(){}function N(){}function I(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function j(e){var t;this._invoke=function(n,r){function s(){return new Promise((function(t,s){!function t(n,r,s,i){var o=w(e[n],e,r);if("throw"!==o.type){var u=o.arg,c=u.value;return c&&"object"==typeof c&&a.call(c,"__await")?Promise.resolve(c.__await).then((function(e){t("next",e,s,i)}),(function(e){t("throw",e,s,i)})):Promise.resolve(c).then((function(e){u.value=e,s(u)}),i)}i(o.arg)}(n,r,t,s)}))}return t=t?t.then(s,s):s()}}function S(e,t){var r=e.iterator[t.method];if(r===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=n,S(e,t),"throw"===t.method))return m;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var a=w(r,e.iterator,t.arg);if("throw"===a.type)return t.method="throw",t.arg=a.arg,t.delegate=null,m;var s=a.arg;return s?s.done?(t[e.resultName]=s.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=n),t.delegate=null,m):s:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,m)}function C(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function A(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(C,this),this.reset(!0)}function E(e){if(e){var t=e[i];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,s=function t(){for(;++r<e.length;)if(a.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=n,t.done=!0,t};return s.next=s}}return{next:$}}function $(){return{value:n,done:!0}}}(function(){return this}()||Function("return this")())},function(e,t,n){e.exports={default:n(51),__esModule:!0}},function(e,t,n){n(52),n(11),n(24),n(69),n(77),n(78),e.exports=n(2).Promise},function(e,t){},function(e,t,n){var r=n(15),a=n(16);e.exports=function(e){return function(t,n){var s,i,o=String(a(t)),u=r(n),c=o.length;return u<0||u>=c?e?"":void 0:(s=o.charCodeAt(u))<55296||s>56319||u+1===c||(i=o.charCodeAt(u+1))<56320||i>57343?e?o.charAt(u):s:e?o.slice(u,u+2):i-56320+(s-55296<<10)+65536}}},function(e,t,n){e.exports=!n(10)&&!n(31)((function(){return 7!=Object.defineProperty(n(18)("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){var r=n(9);e.exports=function(e,t){if(!r(e))return e;var n,a;if(t&&"function"==typeof(n=e.toString)&&!r(a=n.call(e)))return a;if("function"==typeof(n=e.valueOf)&&!r(a=n.call(e)))return a;if(!t&&"function"==typeof(n=e.toString)&&!r(a=n.call(e)))return a;throw TypeError("Can't convert object to primitive value")}},function(e,t,n){e.exports=n(4)},function(e,t,n){"use strict";var r=n(58),a=n(19),s=n(23),i={};n(4)(i,n(1)("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=r(i,{next:a(1,n)}),s(e,t+" Iterator")}},function(e,t,n){var r=n(3),a=n(59),s=n(34),i=n(22)("IE_PROTO"),o=function(){},u=function(){var e,t=n(18)("iframe"),r=s.length;for(t.style.display="none",n(35).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;r--;)delete u.prototype[s[r]];return u()};e.exports=Object.create||function(e,t){var n;return null!==e?(o.prototype=r(e),n=new o,o.prototype=null,n[i]=e):n=u(),void 0===t?n:a(n,t)}},function(e,t,n){var r=n(8),a=n(3),s=n(60);e.exports=n(10)?Object.defineProperties:function(e,t){a(e);for(var n,i=s(t),o=i.length,u=0;o>u;)r.f(e,n=i[u++],t[n]);return e}},function(e,t,n){var r=n(61),a=n(34);e.exports=Object.keys||function(e){return r(e,a)}},function(e,t,n){var r=n(13),a=n(20),s=n(63)(!1),i=n(22)("IE_PROTO");e.exports=function(e,t){var n,o=a(e),u=0,c=[];for(n in o)n!=i&&r(o,n)&&c.push(n);for(;t.length>u;)r(o,n=t[u++])&&(~s(c,n)||c.push(n));return c}},function(e,t,n){var r=n(14);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t,n){var r=n(20),a=n(21),s=n(64);e.exports=function(e){return function(t,n,i){var o,u=r(t),c=a(u.length),l=s(i,c);if(e&&n!=n){for(;c>l;)if((o=u[l++])!=o)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===n)return e||l||0;return!e&&-1}}},function(e,t,n){var r=n(15),a=Math.max,s=Math.min;e.exports=function(e,t){return(e=r(e))<0?a(e+t,0):s(e,t)}},function(e,t,n){var r=n(13),a=n(36),s=n(22)("IE_PROTO"),i=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=a(e),r(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?i:null}},function(e,t,n){"use strict";var r=n(67),a=n(68),s=n(5),i=n(20);e.exports=n(30)(Array,"Array",(function(e,t){this._t=i(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,a(1)):a(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),s.Arguments=s.Array,r("keys"),r("values"),r("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){"use strict";var r,a,s,i,o=n(17),u=n(0),c=n(7),l=n(25),d=n(6),h=n(9),p=n(12),f=n(70),m=n(71),b=n(39),g=n(40).set,y=n(73)(),x=n(27),v=n(41),w=n(74),O=n(42),k=u.TypeError,N=u.process,I=N&&N.versions,j=I&&I.v8||"",S=u.Promise,C="process"==l(N),T=function(){},A=a=x.f,E=!!function(){try{var e=S.resolve(1),t=(e.constructor={})[n(1)("species")]=function(e){e(T,T)};return(C||"function"==typeof PromiseRejectionEvent)&&e.then(T)instanceof t&&0!==j.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(e){}}(),$=function(e){var t;return!(!h(e)||"function"!=typeof(t=e.then))&&t},F=function(e,t){if(!e._n){e._n=!0;var n=e._c;y((function(){for(var r=e._v,a=1==e._s,s=0,i=function(t){var n,s,i,o=a?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{o?(a||(2==e._h&&D(e),e._h=1),!0===o?n=r:(l&&l.enter(),n=o(r),l&&(l.exit(),i=!0)),n===t.promise?c(k("Promise-chain cycle")):(s=$(n))?s.call(n,u,c):u(n)):c(r)}catch(e){l&&!i&&l.exit(),c(e)}};n.length>s;)i(n[s++]);e._c=[],e._n=!1,t&&!e._h&&_(e)}))}},_=function(e){g.call(u,(function(){var t,n,r,a=e._v,s=R(e);if(s&&(t=v((function(){C?N.emit("unhandledRejection",a,e):(n=u.onunhandledrejection)?n({promise:e,reason:a}):(r=u.console)&&r.error&&r.error("Unhandled promise rejection",a)})),e._h=C||R(e)?2:1),e._a=void 0,s&&t.e)throw t.v}))},R=function(e){return 1!==e._h&&0===(e._a||e._c).length},D=function(e){g.call(u,(function(){var t;C?N.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})}))},M=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),F(t,!0))},z=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw k("Promise can't be resolved itself");(t=$(e))?y((function(){var r={_w:n,_d:!1};try{t.call(e,c(z,r,1),c(M,r,1))}catch(e){M.call(r,e)}})):(n._v=e,n._s=1,F(n,!1))}catch(e){M.call({_w:n,_d:!1},e)}}};E||(S=function(e){f(this,S,"Promise","_h"),p(e),r.call(this);try{e(c(z,this,1),c(M,this,1))}catch(e){M.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(75)(S.prototype,{then:function(e,t){var n=A(b(this,S));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=C?N.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&F(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),s=function(){var e=new r;this.promise=e,this.resolve=c(z,e,1),this.reject=c(M,e,1)},x.f=A=function(e){return e===S||e===i?new s(e):a(e)}),d(d.G+d.W+d.F*!E,{Promise:S}),n(23)(S,"Promise"),n(76)("Promise"),i=n(2).Promise,d(d.S+d.F*!E,"Promise",{reject:function(e){var t=A(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(o||!E),"Promise",{resolve:function(e){return O(o&&this===i?S:this,e)}}),d(d.S+d.F*!(E&&n(43)((function(e){S.all(e).catch(T)}))),"Promise",{all:function(e){var t=this,n=A(t),r=n.resolve,a=n.reject,s=v((function(){var n=[],s=0,i=1;m(e,!1,(function(e){var o=s++,u=!1;n.push(void 0),i++,t.resolve(e).then((function(e){u||(u=!0,n[o]=e,--i||r(n))}),a)})),--i||r(n)}));return s.e&&a(s.v),n.promise},race:function(e){var t=this,n=A(t),r=n.reject,a=v((function(){m(e,!1,(function(e){t.resolve(e).then(n.resolve,r)}))}));return a.e&&r(a.v),n.promise}})},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var r=n(7),a=n(37),s=n(38),i=n(3),o=n(21),u=n(26),c={},l={};(t=e.exports=function(e,t,n,d,h){var p,f,m,b,g=h?function(){return e}:u(e),y=r(n,d,t?2:1),x=0;if("function"!=typeof g)throw TypeError(e+" is not iterable!");if(s(g)){for(p=o(e.length);p>x;x++)if((b=t?y(i(f=e[x])[0],f[1]):y(e[x]))===c||b===l)return b}else for(m=g.call(e);!(f=m.next()).done;)if((b=a(m,y,f.value,t))===c||b===l)return b}).BREAK=c,t.RETURN=l},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(0),a=n(40).set,s=r.MutationObserver||r.WebKitMutationObserver,i=r.process,o=r.Promise,u="process"==n(14)(i);e.exports=function(){var e,t,n,c=function(){var r,a;for(u&&(r=i.domain)&&r.exit();e;){a=e.fn,e=e.next;try{a()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(u)n=function(){i.nextTick(c)};else if(!s||r.navigator&&r.navigator.standalone)if(o&&o.resolve){var l=o.resolve(void 0);n=function(){l.then(c)}}else n=function(){a.call(r,c)};else{var d=!0,h=document.createTextNode("");new s(c).observe(h,{characterData:!0}),n=function(){h.data=d=!d}}return function(r){var a={fn:r,next:void 0};t&&(t.next=a),e||(e=a,n()),t=a}}},function(e,t,n){var r=n(0).navigator;e.exports=r&&r.userAgent||""},function(e,t,n){var r=n(4);e.exports=function(e,t,n){for(var a in t)n&&e[a]?e[a]=t[a]:r(e,a,t[a]);return e}},function(e,t,n){"use strict";var r=n(0),a=n(2),s=n(8),i=n(10),o=n(1)("species");e.exports=function(e){var t="function"==typeof a[e]?a[e]:r[e];i&&t&&!t[o]&&s.f(t,o,{configurable:!0,get:function(){return this}})}},function(e,t,n){"use strict";var r=n(6),a=n(2),s=n(0),i=n(39),o=n(42);r(r.P+r.R,"Promise",{finally:function(e){var t=i(this,a.Promise||s.Promise),n="function"==typeof e;return this.then(n?function(n){return o(t,e()).then((function(){return n}))}:e,n?function(n){return o(t,e()).then((function(){throw n}))}:e)}})},function(e,t,n){"use strict";var r=n(6),a=n(27),s=n(41);r(r.S,"Promise",{try:function(e){var t=a.f(this),n=s(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=["person","bicycle","car","motorbike","aeroplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","sofa","pottedplant","bed","diningtable","toilet","tvmonitor","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=["aeroplane","bicycle","bird","boat","bottle","bus","car","cat","chair","cow","diningtable","dog","horse","motorbike","person","pottedplant","sheep","sofa","train","tvmonitor"]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,a=d(n(82)),s=d(n(28)),i=d(n(87)),o=d(n(29)),u=(r=(0,o.default)(s.default.mark((function e(t,n,r,a,o,u,l,d,p){var f,m,b,g,y,x,v,w,O,k,N;return s.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return f=t.indexOf("v3")>-1,m=h(f,n,r,a,u),b=(0,i.default)(m,2),g=b[0],y=b[1],x=[],v=[],w=[],O=c.argMax(y,-1),k=c.max(y,-1),e.next=9,c.image.nonMaxSuppressionAsync(g,k,l,p,d);case 9:return(N=e.sent).size&&c.tidy((function(){var e=c.gather(g,N),t=c.gather(k,N);e.split(N.size).map((function(e){x.push(e.dataSync())})),t.dataSync().map((function(e){v.push(e)})),w=O.gather(N).dataSync()})),k.dispose(),O.dispose(),N.dispose(),g.dispose(),y.dispose(),e.abrupt("return",x.map((function(e,t){var n=Math.max(0,e[0]),r=Math.max(0,e[1]),a=Math.min(u[0],e[2]),s=Math.min(u[1],e[3]);return{top:n,left:r,bottom:a,right:s,height:a-n,width:s-r,score:v[t],class:o[w[t]]}})));case 17:case"end":return e.stop()}}),e,this)}))),function(e,t,n,a,s,i,o,u,c){return r.apply(this,arguments)}),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(44)),l=n(45);function d(e){return e&&e.__esModule?e:{default:e}}function h(e,t,n,r,a){return c.tidy((function(){var s=1,o=void 0,u=void 0;e?(s=t.length,u=l.v3_masks[s],o=t[0].shape.slice(1,3).map((function(e){return 32*e}))):o=t.shape.slice(1,3);for(var d=c.tensor1d(n).reshape([-1,2]),h=[],f=[],m=0;m<s;m++){var b=p(e,e?t[m]:t,e?d.gather(c.tensor1d(u[m],"int32")):d,r,o,a),g=(0,i.default)(b,2),y=g[0],x=g[1];h.push(y),f.push(x)}return[h=c.concat(h),f=c.concat(f)]}))}function p(e,t,n,r,s,o){var u=function(e,t,n,r,a){var s=n.shape[0],o=c.reshape(n,[1,1,s,2]),u=t.shape.slice(1,3),l=c.tile(c.reshape(c.range(0,u[0]),[-1,1,1,1]),[1,u[1],1,1]),d=c.tile(c.reshape(c.range(0,u[1]),[1,-1,1,1]),[u[0],1,1,1]),h=c.concat([d,l],3).cast(t.dtype);t=t.reshape([u[0],u[1],s,r+5]);var p=c.split(t,[2,2,1,r],3),f=(0,i.default)(p,4),m=f[0],b=f[1],g=f[2],y=f[3];return[c.div(c.add(c.sigmoid(m),h),u.reverse()),c.div(c.mul(c.exp(b),o),a.reverse()),c.sigmoid(g),e?c.sigmoid(y):c.softmax(y)]}(e,t,n,r,s),l=(0,i.default)(u,4),d=l[0],h=l[1],p=l[2],f=l[3],m=function(e,t,n){var r=c.concat(c.split(e,2,3).reverse(),3),s=c.concat(c.split(t,2,3).reverse(),3),i=c.mul(c.sub(r,c.div(s,2)),n),o=c.mul(c.add(r,c.div(s,2)),n);return c.concat([].concat((0,a.default)(c.split(i,2,3)),(0,a.default)(c.split(o,2,3))),3)}(d,h,o);m=m.reshape([-1,4]);var b=c.mul(p,f);return[m,b=c.reshape(b,[-1,r])]}t.default=u},function(e,t,n){"use strict";t.__esModule=!0;var r,a=(r=n(83))&&r.__esModule?r:{default:r};t.default=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return(0,a.default)(e)}},function(e,t,n){e.exports={default:n(84),__esModule:!0}},function(e,t,n){n(11),n(85),e.exports=n(2).Array.from},function(e,t,n){"use strict";var r=n(7),a=n(6),s=n(36),i=n(37),o=n(38),u=n(21),c=n(86),l=n(26);a(a.S+a.F*!n(43)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,a,d,h=s(e),p="function"==typeof this?this:Array,f=arguments.length,m=f>1?arguments[1]:void 0,b=void 0!==m,g=0,y=l(h);if(b&&(m=r(m,f>2?arguments[2]:void 0,2)),null==y||p==Array&&o(y))for(n=new p(t=u(h.length));t>g;g++)c(n,g,b?m(h[g],g):h[g]);else for(d=y.call(h),n=new p;!(a=d.next()).done;g++)c(n,g,b?i(d,m,[a.value,g],!0):a.value);return n.length=g,n}})},function(e,t,n){"use strict";var r=n(8),a=n(19);e.exports=function(e,t,n){t in e?r.f(e,t,a(0,n)):e[t]=n}},function(e,t,n){"use strict";t.__esModule=!0;var r=s(n(88)),a=s(n(91));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if(Array.isArray(e))return e;if((0,r.default)(Object(e)))return function(e,t){var n=[],r=!0,s=!1,i=void 0;try{for(var o,u=(0,a.default)(e);!(r=(o=u.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){s=!0,i=e}finally{try{!r&&u.return&&u.return()}finally{if(s)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}},function(e,t,n){e.exports={default:n(89),__esModule:!0}},function(e,t,n){n(24),n(11),e.exports=n(90)},function(e,t,n){var r=n(25),a=n(1)("iterator"),s=n(5);e.exports=n(2).isIterable=function(e){var t=Object(e);return void 0!==t[a]||"@@iterator"in t||s.hasOwnProperty(r(t))}},function(e,t,n){e.exports={default:n(92),__esModule:!0}},function(e,t,n){n(24),n(11),e.exports=n(93)},function(e,t,n){var r=n(3),a=n(26);e.exports=n(2).getIterator=function(e){var t=a(e);if("function"!=typeof t)throw TypeError(e+" is not iterable!");return r(t.call(e))}}]))},ie1u:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("uQAw")&&n("VRIy")?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e,n("uQAw"))}).call(this,n("1/IK")(e))},iuCH:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({abs_:function(e){const t=Object(s.a)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.a.runKernel(a.A,e)}{const e={x:t};return r.a.runKernel(a.a,e)}}})},jLCh:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("VO80"),i=n("NclT");const o=Object(s.b)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,o,u=[1,1],c){let l=t,d=!1;3===t.rank&&(d=!0,l=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:l,filter:n},p={strides:s,pad:o,dimRoundingMode:c,dilations:u,inputShape:e},f=r.a.runKernel(a.Q,h,p);return d?Object(i.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},jXH2:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({tile_:function(e,t){const n=Object(s.a)(e,"x","tile","string_or_numeric");i.b(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const o={x:n},u={reps:t};return r.a.runKernel(a.Vc,o,u)}})},jgXy:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("3rNm"),u=n("VO80");const c=Object(u.b)({erf_:function(e){let t=Object(s.a)(e,"x","erf");i.b("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Object(o.a)(t,"float32"));const n={x:t};return r.a.runKernel(a.Z,n)}})},k7Jv:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("auKK"),a=n("o/e8"),s=n("VO80");const i=Object(s.b)({square_:function(e){const t=Object(a.a)(e,"x","square");return r.a.runKernel("Square",{x:t},{})}})},k9tH:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({mirrorPad_:function(e,t,n){i.b("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const o=Object(s.a)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.b(t.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`);const u="reflect"===n?1:0;for(let r=0;r<o.rank;r++)i.b(2===t[r].length,()=>"Invalid number of paddings. Must be length of 2 each."),i.b(t[r][0]>=0&&t[r][0]<=o.shape[r]-u&&t[r][1]>=0&&t[r][1]<=o.shape[r]-u,()=>`Padding in dimension ${r} cannot be greater than or equal to ${o.shape[r]-u} or less than 0 for input of shape `+o.shape);const c={paddings:t,mode:n},l={x:o};return r.a.runKernel(a.Sb,l,c)}})},kRdc:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({add_:function(e,t){let n=Object(i.a)(e,"a","add"),o=Object(i.a)(t,"b","add");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.d,u)}})},kXpR:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({relu_:function(e){const t={x:Object(s.a)(e,"x","relu")};return r.a.runKernel(a.nc,t)}})},kaMP:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({gather_:function(e,t,n=0,i=0){const o={x:Object(s.a)(e,"x","gather"),indices:Object(s.a)(t,"indices","gather","int32")},u={axis:n,batchDims:i};return r.a.runKernel(a.nb,o,u)}})},l0gX:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("3rNm"),u=n("uBja"),c=n("VO80"),l=n("NclT");const d=Object(c.b)({avgPool_:function(e,t,n,c,d){const h=Object(s.a)(e,"x","avgPool","float32");i.b(u.h(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let p=h,f=!1;3===h.rank&&(f=!0,p=Object(l.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.b(4===p.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`),null!=d&&i.b(i.v(c),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const m={x:p},b={filterSize:t,strides:n,pad:c,dimRoundingMode:d};let g=r.a.runKernel(a.o,m,b);return g=Object(o.a)(g,h.dtype),f?Object(l.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},"lIk/":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},lg8H:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("o/e8"),a=n("atXS"),s=n("WVnj");function i(e,t){Object(a.d)(e);const n=Object(r.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(s.a)(e,null,n,t)}},mEeB:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},mdDO:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({conv3DBackpropInput_:function(e,t,n,i,u){s.b(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let c=e,l=t,d=!1;4===t.rank&&(d=!0,l=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),c=[1,e[0],e[1],e[2],e[3]]);const h=c[4],p=l.shape[4];s.b(5===c.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+c.length+"."),s.b(5===l.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+l.rank),s.b(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),s.b(h===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[3]}.`),s.b(p===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`);const f={dy:l,filter:n},m={pad:u,strides:i,inputShape:c},b=r.a.runKernel(a.H,f,m);return d?Object(o.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},"n+ZZ":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({maxPool_:function(e,t,n,u,l){const d=Object(s.a)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.b(4===h.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`),i.b(o.h(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=l&&i.b(i.v(u),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const f={x:h},m={filterSize:t,strides:n,pad:u,dimRoundingMode:l},b=r.a.runKernel(a.Jb,f,m);return p?Object(c.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},"n/2y":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({softplus_:function(e){const t={x:Object(s.a)(e,"x","softplus")};return r.a.runKernel(a.Hc,t)}})},njhW:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({elu_:function(e){const t={x:Object(s.a)(e,"x","elu")};return r.a.runKernel(a.W,t)}})},nnua:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},"o/e8":function(e,t,n){"use strict";n.d(t,"c",(function(){return u})),n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return d}));var r=n("auKK"),a=n("szMd"),s=n("NNfn"),i=n("atXS"),o=n("6366");function u(e,t){let n=e;if(Object(i.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(i.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!Object(i.A)(t))return void Object(i.b)(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);Object(i.b)(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),Object(i.b)(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);const a=n.slice(1);for(let s=0;s<t.length;++s)e(t[s],a,r.concat(s))}(e,r,[]),r}function c(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function l(e,t,n,a="numeric"){if(e instanceof s.a)return c(a,e.dtype,t,n),e;let l=Object(i.r)(e);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),c(a,l,t,n),null==e||!Object(i.A)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(e,l);Object(i.A)(e)||Array.isArray(e)||(e=[e]);const h="string"!==l?Object(o.toTypedArray)(e,l):Object(i.m)(e,[],!0);return r.a.makeTensor(h,d,l)}function d(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>l(e,`${t}[${a}]`,n,r))}},"o0+U":function(e,t,n){"use strict";n.r(t),n.d(t,"validateUpdateShape",(function(){return a})),n.d(t,"validateInput",(function(){return s})),n.d(t,"calculateShapes",(function(){return i}));var r=n("atXS");function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}a(n,t,e)}function i(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,i=n.length;let o=1;for(let r=s;r<i;++r)o*=n[r];const u=s<1?1:s;return{sliceRank:s,numUpdates:Object(r.O)(t.shape)/u,sliceSize:o,strides:[...Object(r.j)(n.slice(0,s)),1],outputSize:Object(r.O)(n)}}},o3Rt:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({acos_:function(e){const t={x:Object(s.a)(e,"x","acos")};return r.a.runKernel(a.b,t)}})},oAkI:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({sub_:function(e,t){let n=Object(i.a)(e,"a","sub"),o=Object(i.a)(t,"b","sub");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.Rc,u)}})},"oJu+":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({zerosLike_:function(e){const t={x:Object(s.a)(e,"x","zerosLike")};return r.a.runKernel(a.cd,t)}})},p4Cv:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("AoCb"),a=n("o/e8");const s=async function(e){const t=Object(a.a)(e,"condition","whereAsync","bool"),n=await t.data(),s=Object(r.a)(t.shape,n);return e!==t&&t.dispose(),s}},"pJ3+":function(e,t,n){var r;!function(a,s){var i,o=this,u=s.pow(256,6),c=s.pow(2,52),l=2*c;function d(e,t,n){var r=[],d=f(function e(t,n){var r,a=[],s=typeof t;if(n&&"object"==s)for(r in t)try{a.push(e(t[r],n-1))}catch(i){}return a.length?a:"string"==s?t:t+"\0"}((t=1==t?{entropy:!0}:t||{}).entropy?[e,m(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(256):(e=new Uint8Array(256),(o.crypto||o.msCrypto).getRandomValues(e)),m(e)}catch(r){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,m(a)]}}():e,3),r),b=new h(r),g=function(){for(var e=b.g(6),t=u,n=0;e<c;)e=256*(e+n),t*=256,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return g.int32=function(){return 0|b.g(4)},g.quick=function(){return b.g(4)/4294967296},g.double=g,f(m(b.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&p(r,b),e.state=function(){return p(b,{})}),n?(s.random=e,t):e})(g,d,"global"in t?t.global:this==s,t.state)}function h(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<256;)i[a]=a++;for(a=0;a<256;a++)i[a]=i[s=255&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=255&a+1],n=256*n+i[255&(i[a]=i[s=255&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(256)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){for(var n,r=e+"",a=0;a<r.length;)t[255&a]=255&(n^=19*t[255&a])+r.charCodeAt(a++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=d,f(s.random(),a),e.exports){e.exports=d;try{i=n(3)}catch(b){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},pJ6O:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("uQAw")&&n("VRIy")?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e,n("uQAw"))}).call(this,n("1/IK")(e))},parS:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({mul_:function(e,t){let n=Object(i.a)(e,"a","mul"),o=Object(i.a)(t,"b","mul");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.Vb,u)}})},"qA+V":function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},r9q9:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n("o/e8"),a=n("atXS"),s=n("kRdc"),i=n("NuWS"),o=n("TyAZ"),u=n("E1lT"),c=n("wCH+"),l=n("VO80"),d=n("NclT"),h=n("oAkI"),p=n("4FMF");const f=Object(l.b)({logSumExp_:function(e,t=null,n=!1){const l=Object(r.a)(e,"x","logSumExp"),f=Object(a.I)(t,l.shape),m=Object(c.a)(l,f,!0),b=Object(h.a)(l,m),g=Object(o.a)(b),y=Object(p.a)(g,f),x=Object(u.a)(y),v=Object(s.a)(Object(d.a)(m,x.shape),x);if(n){const e=Object(i.e)(v.shape,f);return Object(d.a)(v,e)}return v}})},rm0a:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({min_:function(e,t=null,n=!1){const i={x:Object(s.a)(e,"x","min")},o={axis:t,keepDims:n};return r.a.runKernel(a.Qb,i,o)}})},rqsJ:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},s57M:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({selu_:function(e){const t={x:Object(s.a)(e,"x","selu")};return r.a.runKernel(a.Ac,t)}})},shz4:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({lessEqual_:function(e,t){let n=Object(i.a)(e,"a","lessEqual"),u=Object(i.a)(t,"b","lessEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.Ab,c)}})},srVO:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("o0o1"),a=n.n(r),s=n("HaE+"),i=n("v4IS");function o(){return u.apply(this,arguments)}function u(){return(u=Object(s.a)(a.a.mark((function e(){var t;return a.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,i.a.currentAuthenticatedUser();case 3:return t=e.sent,e.abrupt("return",{error:null,result:t});case 7:return e.prev=7,e.t0=e.catch(0),console.log("error signing in",e.t0),e.abrupt("return",{error:"Can't sign in",result:""});case 11:case"end":return e.stop()}}),e,null,[[0,7]])})))).apply(this,arguments)}},szMd:function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return i})),n.d(t,"a",(function(){return o})),n.d(t,"d",(function(){return u}));var r=n("atXS");class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}}function s(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function i(){return o}let o=null;function u(e){o=e}},tQDl:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({reciprocal_:function(e){const t={x:Object(s.a)(e,"x","reciprocal")};return r.a.runKernel(a.mc,t)}})},th0q:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n("atXS"),a=n("B3db"),s=n("ZJ6U"),i=n("JLAb"),o=n("VO80"),u=n("17CO"),c=n("NclT"),l=n("bTzI"),d=n("RbuM"),h=n("Wiw4"),p=n("oJu+"),f=n("Grcp");const m=Object(o.b)({rfft_:function(e,t){Object(r.b)("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,m=Object(l.a)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,m=Object(s.a)([e,Object(h.a)(r)],e.shape.length-1),n=t}else m=e;const b=Object(p.a)(m),g=Object(c.a)(Object(a.a)(m,b),[o,n]),y=Object(f.a)(g),x=Math.floor(n/2)+1,v=Object(u.a)(y),w=Object(i.a)(y),O=Object(d.a)(v,[x,n-x],v.shape.length-1),k=Object(d.a)(w,[x,n-x],w.shape.length-1),N=m.shape.slice();return N[m.shape.length-1]=x,Object(c.a)(Object(a.a)(O[0],k[0]),N)}})},uBja:function(e,t,n){"use strict";function r(e,t,n,r,a="NHWC",s){return i(e,[...t,e[3]],n,s,r,null,null,m(a))}function a(e,t,n,r,a,s,o="channelsLast"){const[u,l]=c(t);let d;if("channelsLast"===o)d=[u,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);d=[u,l,e[1],e[1]]}return i(e,d,n,r,a,s,!1,o)}function s(e,t,n,r,a,s,i="NDHWC"){const[u,c,d]=l(t);let h,p;if("NDHWC"===i)p="channelsLast",h=[u,c,d,e[4],e[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);p="channelsFirst",h=[u,c,d,e[1],e[1]]}return o(e,h,n,r,a,!1,p,s)}function i(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,p,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[l,p,f,m]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[l,m,p,f]=e}const[b,g,,y]=t,[x,v]=c(n),[w,O]=c(r),k=d(b,w),N=d(g,O),{padInfo:I,outHeight:j,outWidth:S}=function(e,t,n,r,a,s,i,o,c){let l,d,p;if("number"===typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=u(e,t,n));const s=e[0],i=e[1],o=h((s-t+2*r)/n+1,a),c=h((i-t+2*r)/n+1,a);return[o,c]}([t,n],s,r,e,o);d=a[0],p=a[1]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(p-1)*a+i-n),u=Math.floor(e/2),c=e-u,h=Math.floor(o/2);l={top:u,bottom:c,left:h,right:o-h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),p=Math.ceil((n-i+1)/a);else{if("object"!==typeof e)throw Error("Unknown padding parameter: "+e);{const u="channelsLast"===c?e[1][0]:e[2][0],f="channelsLast"===c?e[1][1]:e[2][1],m="channelsLast"===c?e[2][0]:e[3][0],b="channelsLast"===c?e[2][1]:e[3][1];l={top:u,bottom:f,left:m,right:b,type:0===u&&0===f&&0===m&&0===b?"VALID":"EXPLICIT"},d=h((t-s+u+f)/r+1,o),p=h((n-i+m+b)/a+1,o)}}return{padInfo:l,outHeight:d,outWidth:p}}(a,p,f,x,v,k,N,s,o),C=i?y*m:y;let T;return"channelsFirst"===o?T=[l,C,j,S]:"channelsLast"===o&&(T=[l,j,S,C]),{batchSize:l,dataFormat:o,inHeight:p,inWidth:f,inChannels:m,outHeight:j,outWidth:S,outChannels:C,padInfo:I,strideHeight:x,strideWidth:v,filterHeight:b,filterWidth:g,effectiveFilterHeight:k,effectiveFilterWidth:N,dilationHeight:w,dilationWidth:O,inShape:e,outShape:T,filterShape:t}}function o(e,t,n,r,a,s=!1,i="channelsLast",o){let[c,p,f,m,b]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[c,p,f,m,b]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[c,b,p,f,m]=e}const[g,y,x,,v]=t,[w,O,k]=l(n),[N,I,j]=l(r),S=d(g,N),C=d(y,I),T=d(x,j),{padInfo:A,outDepth:E,outHeight:$,outWidth:F}=function(e,t,n,r,a,s,i,o,c,l,d){let p,f,m,b;if("number"===typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=u(e,t,r));const i=e[0],o=e[1],c=e[2],l=h((i-t+2*a)/r+1,s),d=h((o-t+2*a)/r+1,s),p=h((c-t+2*a)/r+1,s);return[l,d,p,n]}([t,n,r,1],o,1,a,e,d);f=s[0],m=s[1],b=s[2]}else if("same"===e){f=Math.ceil(t/a),m=Math.ceil(n/s),b=Math.ceil(r/i);const e=(f-1)*a+o-t,u=(m-1)*s+c-n,d=(b-1)*i+l-r,h=Math.floor(e/2),g=e-h,y=Math.floor(u/2),x=u-y,v=Math.floor(d/2);p={top:y,bottom:x,left:v,right:d-v,front:h,back:g,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/a),m=Math.ceil((n-c+1)/s),b=Math.ceil((r-l+1)/i)}return{padInfo:p,outDepth:f,outHeight:m,outWidth:b}}(a,p,f,m,w,O,k,S,C,T,o),_=s?v*b:v;let R;return"channelsFirst"===i?R=[c,_,E,$,F]:"channelsLast"===i&&(R=[c,E,$,F,_]),{batchSize:c,dataFormat:i,inDepth:p,inHeight:f,inWidth:m,inChannels:b,outDepth:E,outHeight:$,outWidth:F,outChannels:_,padInfo:A,strideDepth:w,strideHeight:O,strideWidth:k,filterDepth:g,filterHeight:y,filterWidth:x,effectiveFilterDepth:S,effectiveFilterHeight:C,effectiveFilterWidth:T,dilationDepth:N,dilationHeight:I,dilationWidth:j,inShape:e,outShape:R,filterShape:t}}function u(e,t,n,r=1){const a=d(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function c(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function l(e){return"number"===typeof e?[e,e,e]:e}function d(e,t){return t<=1?e:e+(e-1)*(t-1)}function h(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function p(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function f(e,t){return p(e)||p(t)}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}n.d(t,"d",(function(){return r})),n.d(t,"e",(function(){return a})),n.d(t,"f",(function(){return s})),n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return u})),n.d(t,"i",(function(){return p})),n.d(t,"h",(function(){return f})),n.d(t,"g",(function(){return m}))},uDiL:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("uQAw")&&n("VRIy")?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e,n("uQAw"))}).call(this,n("1/IK")(e))},uQAw:function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},ubnP:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({equal_:function(e,t){let n=Object(i.a)(e,"a","equal"),u=Object(i.a)(t,"b","equal");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.Y,c)}})},ukBL:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({gatherND_:function(e,t){const n=Object(s.a)(t,"indices","gatherND","int32"),i={params:Object(s.a)(e,"x","gatherND"),indices:n};return r.a.runKernel(a.mb,i)}})},ulO0:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("3rNm"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({avgPool3d_:function(e,t,n,u,l,d="NDHWC"){const h=Object(s.a)(e,"x","avgPool3d","float32");let p=h,f=!1;4===h.rank&&(f=!0,p=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===p.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${p.rank}.`),i.b("NDHWC"===d,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+d),null!=l&&i.b(i.v(u),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const m={x:p},b={filterSize:t,strides:n,pad:u,dimRoundingMode:l,dataFormat:d};let g=r.a.runKernel(a.p,m,b);return g=Object(o.a)(g,p.dtype),f?Object(c.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},uy0A:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({greaterEqual_:function(e,t){let n=Object(i.a)(e,"a","greaterEqual"),u=Object(i.a)(t,"b","greaterEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.pb,c)}})},vGLV:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI");var s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sparseToDense_:function(e,t,n,i=0){const o=Object(s.a)(e,"sparseIndices","sparseToDense","int32"),u=Object(s.a)(t,"sparseValues","sparseToDense"),c=Object(s.a)(i,"defaultValue","sparseToDense",u.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,u,n,c);const l={sparseIndices:o,sparseValues:u,defaultValue:c},d={outputShape:n};return r.a.runKernel(a.Kc,l,d)}})},vc8R:function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"d",(function(){return i})),n.d(t,"f",(function(){return o})),n.d(t,"c",(function(){return u})),n.d(t,"e",(function(){return c})),n.d(t,"a",(function(){return l}));var r=n("+hG3");function a(e,t){return s(e,t)}function s(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(c(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const i in e){const o=s(e[i],t,n,r);a[i]=o}return r.delete(e),a}throw new Error("Can't recurse into non-iterable type: "+e)}return n.set(e,a.value),a.value}function i(e,t=o){return function e(t,n,r=new Set){const a=t[0];if(r.has(a))throw new Error("Circular references are not supported.");const s=n(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(c(a)){const s=Array.isArray(a)?[]:{};r.add(a);for(const i in a){const a=e(t.map(e=>e[i]),n,r);s[i]=a}return r.delete(a),s}throw new Error("Can't recurse into non-iterable type: "+a)}return s.value}(e,t)}function o(e){return null===e?null:c(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function u(e,t){const n=new Map;s(e,t,n);for(const a of Array.from(n.keys())){const e=n.get(a);if(r.util.isPromise(e)){const t=await e;n.set(a,t)}}return s(e,t,n)}function c(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof r.Tensor))}function l(e){return null==e||(null===(t=e)||"object"!==typeof t&&"function"!==typeof t)||Array.isArray(e)||"object"===typeof e&&e instanceof r.Tensor||r.util.isTypedArray(e);var t}},w4jT:function(e,t,n){"use strict";n.d(t,"f",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"d",(function(){return h})),n.d(t,"g",(function(){return p})),n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return I})),n.d(t,"c",(function(){return r}));var r,a=n("+hG3"),s=n("YSVl"),i=n("vc8R");function o(e){return e instanceof a.Tensor?{value:e.clone(),recurse:!1}:Object(i.e)(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class u{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class c extends u{constructor(){super(c.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function l(e){return new m(e)}function d(e){return new b(e)}function h(e,t){return new S(e,t)}function p(e,t=r.FAIL){return new C(e,t)}c.INITIAL_CAPACITY=32;class f{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new k(this,e)}filter(e){return new w(this,e)}map(e){return new O(this,e)}mapAsync(e){return new N(this,e)}serialMapAsync(e){return new N(this,e).serial()}flatmap(e){return new j(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new v(this,e,t)}columnMajorBatch(e,t=!0,n=i.f){return this.rowMajorBatch(e,t).map(e=>Object(i.d)(e,n))}concatenate(e,t){return new S(l([this,e]),t)}take(e){return e<0||null==e?this:new x(this,e)}skip(e){return e<0||null==e?this:new y(this,e)}prefetch(e){return new T(this,e)}shuffle(e,t){return new A(this,e,t)}serial(){return new g(this)}}class m extends f{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,Object(i.b)(t,o)),done:!1};var t}}class b extends f{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: "+e.message,e}}}class g extends f{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class y extends f{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;a.dispose(e.value)}return this.upstream.next()}}class x extends f{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class v extends f{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class w extends f{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;a.dispose(e.value)}}}class O extends f{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Map"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.tensor_util.getTensorsInContainer(n);for(const s of t)a.tensor_util.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class k extends f{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class N extends f{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),r=a.tensor_util.getTensorsInContainer(n);for(const s of t)a.tensor_util.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class I extends f{constructor(){super(),this.outputQueue=new c,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class j extends I{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=a.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of t)a.tensor_util.isTensorInList(s,r)||s.dispose();return!0}}class S extends f{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(r||(r={}));class C extends f{constructor(e,t=r.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const a=await Object(i.c)(this.iterators,(function(e){if(e instanceof f){return{value:e.next().then(e=>(t++,e.done&&n++,e.value)),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class T extends f{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new u(t)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class A extends T{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=s.alea(n||a.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}},"wCH+":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({max_:function(e,t=null,n=!1){const i={x:Object(s.a)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.a.runKernel(a.Ib,i,o)}})},wE5H:function(e,t,n){"use strict";n.d(t,"g",(function(){return o})),n.d(t,"f",(function(){return u})),n.d(t,"c",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"h",(function(){return h})),n.d(t,"m",(function(){return p})),n.d(t,"n",(function(){return f})),n.d(t,"t",(function(){return m})),n.d(t,"d",(function(){return b})),n.d(t,"l",(function(){return g})),n.d(t,"u",(function(){return y})),n.d(t,"r",(function(){return x})),n.d(t,"o",(function(){return v})),n.d(t,"k",(function(){return w})),n.d(t,"q",(function(){return O})),n.d(t,"i",(function(){return k})),n.d(t,"j",(function(){return N})),n.d(t,"p",(function(){return I})),n.d(t,"a",(function(){return j})),n.d(t,"s",(function(){return S}));var r=n("auKK"),a=n("szMd"),s=n("NNfn"),i=n("dsKV");function o(){Object(a.c)().set("PROD",!0)}function u(){Object(a.c)().set("DEBUG",!0)}function c(){Object(a.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(e){Object(a.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.a.disposeVariables()}function h(){return r.a}function p(){return r.a.memory()}function f(e){return r.a.profile(e)}function m(e,t){return r.a.tidy(e,t)}function b(e){Object(i.getTensorsInContainer)(e).forEach(e=>e.dispose())}function g(e){return r.a.keep(e)}function y(e){return r.a.time(e)}function x(e){return r.a.setBackend(e)}function v(){return r.a.ready()}function w(){return r.a.backendName}function O(e){r.a.removeBackend(e)}function k(e){return r.a.findBackend(e)}function N(e){return r.a.findBackendFactory(e)}function I(e,t,n=1){return r.a.registerBackend(e,t,n)}function j(){return r.a.backend}function S(e,t){Object(a.c)().setPlatform(e,t)}Object(s.e)(l)},wFtI:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return i})),n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return h})),n.d(t,"k",(function(){return p})),n.d(t,"l",(function(){return f})),n.d(t,"n",(function(){return m})),n.d(t,"m",(function(){return b})),n.d(t,"o",(function(){return g})),n.d(t,"r",(function(){return y})),n.d(t,"p",(function(){return x})),n.d(t,"q",(function(){return v})),n.d(t,"s",(function(){return w})),n.d(t,"t",(function(){return O})),n.d(t,"u",(function(){return k})),n.d(t,"v",(function(){return N})),n.d(t,"w",(function(){return I})),n.d(t,"x",(function(){return j})),n.d(t,"y",(function(){return S})),n.d(t,"z",(function(){return C})),n.d(t,"A",(function(){return T})),n.d(t,"B",(function(){return A})),n.d(t,"C",(function(){return E})),n.d(t,"D",(function(){return $})),n.d(t,"E",(function(){return F})),n.d(t,"F",(function(){return _})),n.d(t,"G",(function(){return R})),n.d(t,"H",(function(){return D})),n.d(t,"I",(function(){return M})),n.d(t,"J",(function(){return z})),n.d(t,"L",(function(){return L})),n.d(t,"K",(function(){return P})),n.d(t,"M",(function(){return B})),n.d(t,"N",(function(){return V})),n.d(t,"O",(function(){return W})),n.d(t,"P",(function(){return U})),n.d(t,"Q",(function(){return G})),n.d(t,"R",(function(){return K})),n.d(t,"S",(function(){return H})),n.d(t,"U",(function(){return q})),n.d(t,"T",(function(){return X})),n.d(t,"lc",(function(){return Y})),n.d(t,"V",(function(){return Z})),n.d(t,"W",(function(){return J})),n.d(t,"X",(function(){return Q})),n.d(t,"Z",(function(){return ee})),n.d(t,"Y",(function(){return te})),n.d(t,"ab",(function(){return ne})),n.d(t,"bb",(function(){return re})),n.d(t,"cb",(function(){return ae})),n.d(t,"db",(function(){return se})),n.d(t,"eb",(function(){return ie})),n.d(t,"fb",(function(){return oe})),n.d(t,"gb",(function(){return ue})),n.d(t,"hb",(function(){return ce})),n.d(t,"jb",(function(){return le})),n.d(t,"nb",(function(){return de})),n.d(t,"mb",(function(){return he})),n.d(t,"ob",(function(){return pe})),n.d(t,"pb",(function(){return fe})),n.d(t,"rb",(function(){return me})),n.d(t,"qb",(function(){return be})),n.d(t,"sb",(function(){return ge})),n.d(t,"tb",(function(){return ye})),n.d(t,"ub",(function(){return xe})),n.d(t,"vb",(function(){return ve})),n.d(t,"yb",(function(){return we})),n.d(t,"zb",(function(){return Oe})),n.d(t,"Ab",(function(){return ke})),n.d(t,"Bb",(function(){return Ne})),n.d(t,"Cb",(function(){return Ie})),n.d(t,"Db",(function(){return je})),n.d(t,"Fb",(function(){return Se})),n.d(t,"Gb",(function(){return Ce})),n.d(t,"Hb",(function(){return Te})),n.d(t,"Eb",(function(){return Ae})),n.d(t,"wb",(function(){return Ee})),n.d(t,"xb",(function(){return $e})),n.d(t,"Ib",(function(){return Fe})),n.d(t,"Ob",(function(){return _e})),n.d(t,"Jb",(function(){return Re})),n.d(t,"Mb",(function(){return De})),n.d(t,"Kb",(function(){return Me})),n.d(t,"Lb",(function(){return ze})),n.d(t,"Nb",(function(){return Le})),n.d(t,"Pb",(function(){return Pe})),n.d(t,"Qb",(function(){return Be})),n.d(t,"Rb",(function(){return Ve})),n.d(t,"Sb",(function(){return We})),n.d(t,"Tb",(function(){return Ue})),n.d(t,"Ub",(function(){return Ge})),n.d(t,"Vb",(function(){return Ke})),n.d(t,"Wb",(function(){return He})),n.d(t,"ac",(function(){return qe})),n.d(t,"Xb",(function(){return Xe})),n.d(t,"Yb",(function(){return Ye})),n.d(t,"Zb",(function(){return Ze})),n.d(t,"cc",(function(){return Je})),n.d(t,"bc",(function(){return Qe})),n.d(t,"dc",(function(){return et})),n.d(t,"ec",(function(){return tt})),n.d(t,"fc",(function(){return nt})),n.d(t,"gc",(function(){return rt})),n.d(t,"hc",(function(){return at})),n.d(t,"ic",(function(){return st})),n.d(t,"jc",(function(){return it})),n.d(t,"kc",(function(){return ot})),n.d(t,"mc",(function(){return ut})),n.d(t,"nc",(function(){return ct})),n.d(t,"pc",(function(){return lt})),n.d(t,"sc",(function(){return dt})),n.d(t,"tc",(function(){return ht})),n.d(t,"qc",(function(){return pt})),n.d(t,"rc",(function(){return ft})),n.d(t,"oc",(function(){return mt})),n.d(t,"uc",(function(){return bt})),n.d(t,"wc",(function(){return gt})),n.d(t,"xc",(function(){return yt})),n.d(t,"yc",(function(){return xt})),n.d(t,"zc",(function(){return vt})),n.d(t,"Ac",(function(){return wt})),n.d(t,"Fc",(function(){return Ot})),n.d(t,"Dc",(function(){return kt})),n.d(t,"Ec",(function(){return Nt})),n.d(t,"Cc",(function(){return It})),n.d(t,"Bc",(function(){return jt})),n.d(t,"Hc",(function(){return St})),n.d(t,"Mc",(function(){return Ct})),n.d(t,"Sc",(function(){return Tt})),n.d(t,"Ic",(function(){return At})),n.d(t,"Lc",(function(){return Et})),n.d(t,"Gc",(function(){return $t})),n.d(t,"Jc",(function(){return Ft})),n.d(t,"Kc",(function(){return _t})),n.d(t,"Oc",(function(){return Rt})),n.d(t,"Nc",(function(){return Dt})),n.d(t,"Qc",(function(){return Mt})),n.d(t,"Rc",(function(){return zt})),n.d(t,"Tc",(function(){return Lt})),n.d(t,"Uc",(function(){return Pt})),n.d(t,"Vc",(function(){return Bt})),n.d(t,"Wc",(function(){return Vt})),n.d(t,"Xc",(function(){return Wt})),n.d(t,"Yc",(function(){return Ut})),n.d(t,"Zc",(function(){return Gt})),n.d(t,"ad",(function(){return Kt})),n.d(t,"bd",(function(){return Ht})),n.d(t,"cd",(function(){return qt})),n.d(t,"Pc",(function(){return Xt})),n.d(t,"ib",(function(){return Yt})),n.d(t,"vc",(function(){return Zt})),n.d(t,"dd",(function(){return Jt})),n.d(t,"kb",(function(){return Qt})),n.d(t,"lb",(function(){return en}));const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",O="BatchToSpaceND",k="Bincount",N="BroadcastTo",I="Cast",j="Ceil",S="ClipByValue",C="Complex",T="ComplexAbs",A="Concat",E="Conv2D",$="Conv2DBackpropFilter",F="Conv2DBackpropInput",_="Conv3D",R="Conv3DBackpropFilterV2",D="Conv3DBackpropInputV2",M="Cos",z="Cosh",L="Cumsum",P="CropAndResize",B="DenseBincount",V="DepthToSpace",W="DepthwiseConv2dNative",U="DepthwiseConv2dNativeBackpropFilter",G="DepthwiseConv2dNativeBackpropInput",K="Diag",H="Dilation2D",q="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",Y="RealDiv",Z="Einsum",J="Elu",Q="EluGrad",ee="Erf",te="Equal",ne="Exp",re="ExpandDims",ae="Expm1",se="FFT",ie="Fill",oe="FlipLeftRight",ue="Floor",ce="FloorDiv",le="FusedBatchNorm",de="GatherV2",he="GatherNd",pe="Greater",fe="GreaterEqual",me="Identity",be="IFFT",ge="Imag",ye="IsFinite",xe="IsInf",ve="IsNan",we="LeakyRelu",Oe="Less",ke="LessEqual",Ne="LinSpace",Ie="Log",je="Log1p",Se="LogicalAnd",Ce="LogicalNot",Te="LogicalOr",Ae="LogSoftmax",Ee="LRN",$e="LRNGrad",Fe="Max",_e="Maximum",Re="MaxPool",De="MaxPoolGrad",Me="MaxPool3D",ze="MaxPool3DGrad",Le="MaxPoolWithArgmax",Pe="Mean",Be="Min",Ve="Minimum",We="MirrorPad",Ue="Mod",Ge="Multinomial",Ke="Multiply",He="Neg",qe="NotEqual",Xe="NonMaxSuppressionV3",Ye="NonMaxSuppressionV4",Ze="NonMaxSuppressionV5",Je="OnesLike",Qe="OneHot",et="Pack",tt="PadV2",nt="Pool",rt="Pow",at="Prelu",st="Prod",it="Range",ot="Real",ut="Reciprocal",ct="Relu",lt="Reshape",dt="ResizeNearestNeighbor",ht="ResizeNearestNeighborGrad",pt="ResizeBilinear",ft="ResizeBilinearGrad",mt="Relu6",bt="Reverse",gt="Round",yt="Rsqrt",xt="ScatterNd",vt="Select",wt="Selu",Ot="Slice",kt="Sin",Nt="Sinh",It="Sign",jt="Sigmoid",St="Softplus",Ct="Sqrt",Tt="Sum",At="SpaceToBatchND",Et="SplitV",$t="Softmax",Ft="SparseReshape",_t="SparseToDense",Rt="SquaredDifference",Dt="Square",Mt="StridedSlice",zt="Sub",Lt="Tan",Pt="Tanh",Bt="Tile",Vt="TopK",Wt="Transform",Ut="Transpose",Gt="Unique",Kt="Unpack",Ht="UnsortedSegmentSum",qt="ZerosLike",Xt="Step",Yt="FromPixels",Zt="RotateWithOffset",Jt="_FusedMatMul",Qt="FusedConv2D",en="FusedDepthwiseConv2D"},"wI/y":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({clipByValue_:function(e,t,n){const o=Object(s.a)(e,"x","clipByValue");i.b(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const u={x:o},c={clipValueMin:t,clipValueMax:n};return r.a.runKernel(a.y,u,c)}})},wXC5:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({dilation2d_:function(e,t,n,o,c=[1,1],l="NHWC"){const d=Object(s.a)(e,"x","dilation2d"),h=Object(s.a)(t,"filter","dilation2d");i.b(3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+d.rank+"."),i.b(3===h.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+h.rank+"."),i.b("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+l);let p=d,f=!1;3===d.rank&&(p=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:p,filter:h},b={strides:n,pad:o,dilations:c},g=r.a.runKernel(a.S,m,b);return f?Object(u.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},waK1:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({cosh_:function(e){const t={x:Object(s.a)(e,"x","cosh")};return r.a.runKernel(a.J,t)}})},wion:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("auKK"),a=n("atXS"),s=n("B3db"),i=n("Wiw4");function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=Object(i.a)(e,"float32");return Object(s.a)(t,n)}const n=Object(a.D)(Object(a.O)(e),t);return r.a.makeTensor(n,e,t)}},wxQM:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n("U45G"),a=n("o/e8"),s=n("parS"),i=n("O7f5"),o=n("VO80"),u=n("/7N0"),c=n("n/2y");const l=Object(o.b)({logSigmoid_:function(e){const t=Object(a.a)(e,"x","logSigmoid");return Object(r.a)(e=>({value:Object(i.a)(Object(c.a)(Object(i.a)(e))),gradFunc:t=>Object(s.a)(t,Object(u.a)(Object(i.a)(e)))}))(t)}})},x3y4:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("UI8N"),u=n("VO80");const c=Object(u.b)({div_:function(e,t){let n=Object(i.a)(e,"a","div"),u=Object(i.a)(t,"b","div");if([n,u]=Object(s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return Object(o.a)(n,u);const c={a:n,b:u};return r.a.runKernel(a.lc,c,{})}})},yK2v:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},yRKQ:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({transpose_:function(e,t){const n=Object(s.a)(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),i.b(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{i.b(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const o={x:n},u={perm:t};return r.a.runKernel(a.Yc,o,u)}})},yfHJ:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({pow_:function(e,t){let n=Object(i.a)(e,"base","pow"),o=Object(i.a)(t,"exp","pow");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.gc,u)}})},yuCN:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("uQAw")&&n("VRIy")?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e,n("uQAw"))}).call(this,n("1/IK")(e))},"zR+/":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n("o/e8"),a=n("c9N1"),s=n("VO80");const i=Object(s.b)({conv2dTranspose_:function(e,t,n,s,i,o){const u=Object(r.a)(e,"x","conv2dTranspose"),c=Object(r.a)(t,"filter","conv2dTranspose");return Object(a.a)(n,u,c,s,i,"NHWC",o)}})},zhpf:function(e,t,n){"use strict";n.r(t),n.d(t,"AdadeltaOptimizer",(function(){return d.AdadeltaOptimizer})),n.d(t,"AdagradOptimizer",(function(){return d.AdagradOptimizer})),n.d(t,"AdamOptimizer",(function(){return d.AdamOptimizer})),n.d(t,"AdamaxOptimizer",(function(){return d.AdamaxOptimizer})),n.d(t,"MomentumOptimizer",(function(){return d.MomentumOptimizer})),n.d(t,"Optimizer",(function(){return d.Optimizer})),n.d(t,"RMSPropOptimizer",(function(){return d.RMSPropOptimizer})),n.d(t,"SGDOptimizer",(function(){return d.SGDOptimizer})),n.d(t,"Tensor",(function(){return d.Tensor})),n.d(t,"TensorBuffer",(function(){return d.TensorBuffer})),n.d(t,"Variable",(function(){return d.Variable})),n.d(t,"Rank",(function(){return d.Rank})),n.d(t,"sumOutType",(function(){return d.sumOutType})),n.d(t,"upcastType",(function(){return d.upcastType})),n.d(t,"abs",(function(){return d.abs})),n.d(t,"acos",(function(){return d.acos})),n.d(t,"acosh",(function(){return d.acosh})),n.d(t,"add",(function(){return d.add})),n.d(t,"addN",(function(){return d.addN})),n.d(t,"all",(function(){return d.all})),n.d(t,"any",(function(){return d.any})),n.d(t,"argMax",(function(){return d.argMax})),n.d(t,"argMin",(function(){return d.argMin})),n.d(t,"asin",(function(){return d.asin})),n.d(t,"asinh",(function(){return d.asinh})),n.d(t,"atan",(function(){return d.atan})),n.d(t,"atan2",(function(){return d.atan2})),n.d(t,"atanh",(function(){return d.atanh})),n.d(t,"avgPool",(function(){return d.avgPool})),n.d(t,"avgPool3d",(function(){return d.avgPool3d})),n.d(t,"basicLSTMCell",(function(){return d.basicLSTMCell})),n.d(t,"batchToSpaceND",(function(){return d.batchToSpaceND})),n.d(t,"batchNorm",(function(){return d.batchNorm})),n.d(t,"batchNorm2d",(function(){return d.batchNorm2d})),n.d(t,"batchNorm3d",(function(){return d.batchNorm3d})),n.d(t,"batchNorm4d",(function(){return d.batchNorm4d})),n.d(t,"bincount",(function(){return d.bincount})),n.d(t,"broadcastTo",(function(){return d.broadcastTo})),n.d(t,"buffer",(function(){return d.buffer})),n.d(t,"cast",(function(){return d.cast})),n.d(t,"ceil",(function(){return d.ceil})),n.d(t,"clipByValue",(function(){return d.clipByValue})),n.d(t,"clone",(function(){return d.clone})),n.d(t,"complex",(function(){return d.complex})),n.d(t,"concat",(function(){return d.concat})),n.d(t,"concat1d",(function(){return d.concat1d})),n.d(t,"concat2d",(function(){return d.concat2d})),n.d(t,"concat3d",(function(){return d.concat3d})),n.d(t,"concat4d",(function(){return d.concat4d})),n.d(t,"conv1d",(function(){return d.conv1d})),n.d(t,"conv2d",(function(){return d.conv2d})),n.d(t,"conv2dTranspose",(function(){return d.conv2dTranspose})),n.d(t,"conv3d",(function(){return d.conv3d})),n.d(t,"conv3dTranspose",(function(){return d.conv3dTranspose})),n.d(t,"cos",(function(){return d.cos})),n.d(t,"cosh",(function(){return d.cosh})),n.d(t,"cumsum",(function(){return d.cumsum})),n.d(t,"denseBincount",(function(){return d.denseBincount})),n.d(t,"depthToSpace",(function(){return d.depthToSpace})),n.d(t,"depthwiseConv2d",(function(){return d.depthwiseConv2d})),n.d(t,"diag",(function(){return d.diag})),n.d(t,"dilation2d",(function(){return d.dilation2d})),n.d(t,"div",(function(){return d.div})),n.d(t,"divNoNan",(function(){return d.divNoNan})),n.d(t,"dot",(function(){return d.dot})),n.d(t,"einsum",(function(){return d.einsum})),n.d(t,"elu",(function(){return d.elu})),n.d(t,"equal",(function(){return d.equal})),n.d(t,"erf",(function(){return d.erf})),n.d(t,"exp",(function(){return d.exp})),n.d(t,"expandDims",(function(){return d.expandDims})),n.d(t,"expm1",(function(){return d.expm1})),n.d(t,"eye",(function(){return d.eye})),n.d(t,"fill",(function(){return d.fill})),n.d(t,"floor",(function(){return d.floor})),n.d(t,"floorDiv",(function(){return d.floorDiv})),n.d(t,"gather",(function(){return d.gather})),n.d(t,"greater",(function(){return d.greater})),n.d(t,"greaterEqual",(function(){return d.greaterEqual})),n.d(t,"imag",(function(){return d.imag})),n.d(t,"isFinite",(function(){return d.isFinite})),n.d(t,"isInf",(function(){return d.isInf})),n.d(t,"isNaN",(function(){return d.isNaN})),n.d(t,"leakyRelu",(function(){return d.leakyRelu})),n.d(t,"less",(function(){return d.less})),n.d(t,"lessEqual",(function(){return d.lessEqual})),n.d(t,"linspace",(function(){return d.linspace})),n.d(t,"localResponseNormalization",(function(){return d.localResponseNormalization})),n.d(t,"log",(function(){return d.log})),n.d(t,"log1p",(function(){return d.log1p})),n.d(t,"logSigmoid",(function(){return d.logSigmoid})),n.d(t,"logSoftmax",(function(){return d.logSoftmax})),n.d(t,"logSumExp",(function(){return d.logSumExp})),n.d(t,"logicalAnd",(function(){return d.logicalAnd})),n.d(t,"logicalNot",(function(){return d.logicalNot})),n.d(t,"logicalOr",(function(){return d.logicalOr})),n.d(t,"logicalXor",(function(){return d.logicalXor})),n.d(t,"matMul",(function(){return d.matMul})),n.d(t,"max",(function(){return d.max})),n.d(t,"maxPool",(function(){return d.maxPool})),n.d(t,"maxPool3d",(function(){return d.maxPool3d})),n.d(t,"maxPoolWithArgmax",(function(){return d.maxPoolWithArgmax})),n.d(t,"maximum",(function(){return d.maximum})),n.d(t,"mean",(function(){return d.mean})),n.d(t,"meshgrid",(function(){return d.meshgrid})),n.d(t,"min",(function(){return d.min})),n.d(t,"minimum",(function(){return d.minimum})),n.d(t,"mirrorPad",(function(){return d.mirrorPad})),n.d(t,"mod",(function(){return d.mod})),n.d(t,"moments",(function(){return d.moments})),n.d(t,"mul",(function(){return d.mul})),n.d(t,"multiRNNCell",(function(){return d.multiRNNCell})),n.d(t,"multinomial",(function(){return d.multinomial})),n.d(t,"neg",(function(){return d.neg})),n.d(t,"notEqual",(function(){return d.notEqual})),n.d(t,"oneHot",(function(){return d.oneHot})),n.d(t,"ones",(function(){return d.ones})),n.d(t,"onesLike",(function(){return d.onesLike})),n.d(t,"outerProduct",(function(){return d.outerProduct})),n.d(t,"pad",(function(){return d.pad})),n.d(t,"pad1d",(function(){return d.pad1d})),n.d(t,"pad2d",(function(){return d.pad2d})),n.d(t,"pad3d",(function(){return d.pad3d})),n.d(t,"pad4d",(function(){return d.pad4d})),n.d(t,"pool",(function(){return d.pool})),n.d(t,"pow",(function(){return d.pow})),n.d(t,"prelu",(function(){return d.prelu})),n.d(t,"print",(function(){return d.print})),n.d(t,"prod",(function(){return d.prod})),n.d(t,"rand",(function(){return d.rand})),n.d(t,"randomGamma",(function(){return d.randomGamma})),n.d(t,"randomNormal",(function(){return d.randomNormal})),n.d(t,"randomUniform",(function(){return d.randomUniform})),n.d(t,"range",(function(){return d.range})),n.d(t,"real",(function(){return d.real})),n.d(t,"reciprocal",(function(){return d.reciprocal})),n.d(t,"relu",(function(){return d.relu})),n.d(t,"relu6",(function(){return d.relu6})),n.d(t,"reshape",(function(){return d.reshape})),n.d(t,"reverse",(function(){return d.reverse})),n.d(t,"reverse1d",(function(){return d.reverse1d})),n.d(t,"reverse2d",(function(){return d.reverse2d})),n.d(t,"reverse3d",(function(){return d.reverse3d})),n.d(t,"reverse4d",(function(){return d.reverse4d})),n.d(t,"round",(function(){return d.round})),n.d(t,"rsqrt",(function(){return d.rsqrt})),n.d(t,"scalar",(function(){return d.scalar})),n.d(t,"selu",(function(){return d.selu})),n.d(t,"separableConv2d",(function(){return d.separableConv2d})),n.d(t,"setdiff1dAsync",(function(){return d.setdiff1dAsync})),n.d(t,"sigmoid",(function(){return d.sigmoid})),n.d(t,"sign",(function(){return d.sign})),n.d(t,"sin",(function(){return d.sin})),n.d(t,"sinh",(function(){return d.sinh})),n.d(t,"slice",(function(){return d.slice})),n.d(t,"slice1d",(function(){return d.slice1d})),n.d(t,"slice2d",(function(){return d.slice2d})),n.d(t,"slice3d",(function(){return d.slice3d})),n.d(t,"slice4d",(function(){return d.slice4d})),n.d(t,"softmax",(function(){return d.softmax})),n.d(t,"softplus",(function(){return d.softplus})),n.d(t,"spaceToBatchND",(function(){return d.spaceToBatchND})),n.d(t,"fft",(function(){return d.fft})),n.d(t,"ifft",(function(){return d.ifft})),n.d(t,"irfft",(function(){return d.irfft})),n.d(t,"rfft",(function(){return d.rfft})),n.d(t,"split",(function(){return d.split})),n.d(t,"sqrt",(function(){return d.sqrt})),n.d(t,"square",(function(){return d.square})),n.d(t,"squaredDifference",(function(){return d.squaredDifference})),n.d(t,"squeeze",(function(){return d.squeeze})),n.d(t,"stack",(function(){return d.stack})),n.d(t,"step",(function(){return d.step})),n.d(t,"stridedSlice",(function(){return d.stridedSlice})),n.d(t,"sub",(function(){return d.sub})),n.d(t,"sum",(function(){return d.sum})),n.d(t,"tan",(function(){return d.tan})),n.d(t,"tanh",(function(){return d.tanh})),n.d(t,"tensor",(function(){return d.tensor})),n.d(t,"tensor1d",(function(){return d.tensor1d})),n.d(t,"tensor2d",(function(){return d.tensor2d})),n.d(t,"tensor3d",(function(){return d.tensor3d})),n.d(t,"tensor4d",(function(){return d.tensor4d})),n.d(t,"tensor5d",(function(){return d.tensor5d})),n.d(t,"tensor6d",(function(){return d.tensor6d})),n.d(t,"tile",(function(){return d.tile})),n.d(t,"topk",(function(){return d.topk})),n.d(t,"truncatedNormal",(function(){return d.truncatedNormal})),n.d(t,"unique",(function(){return d.unique})),n.d(t,"unsortedSegmentSum",(function(){return d.unsortedSegmentSum})),n.d(t,"unstack",(function(){return d.unstack})),n.d(t,"variable",(function(){return d.variable})),n.d(t,"where",(function(){return d.where})),n.d(t,"whereAsync",(function(){return d.whereAsync})),n.d(t,"zeros",(function(){return d.zeros})),n.d(t,"zerosLike",(function(){return d.zerosLike})),n.d(t,"booleanMaskAsync",(function(){return d.booleanMaskAsync})),n.d(t,"transpose",(function(){return d.transpose})),n.d(t,"norm",(function(){return d.norm})),n.d(t,"movingAverage",(function(){return d.movingAverage})),n.d(t,"scatterND",(function(){return d.scatterND})),n.d(t,"sparseToDense",(function(){return d.sparseToDense})),n.d(t,"gatherND",(function(){return d.gatherND})),n.d(t,"dropout",(function(){return d.dropout})),n.d(t,"enclosingPowerOfTwo",(function(){return d.enclosingPowerOfTwo})),n.d(t,"cosineWindow",(function(){return d.cosineWindow})),n.d(t,"inTopKAsync",(function(){return d.inTopKAsync})),n.d(t,"op",(function(){return d.op})),n.d(t,"OP_SCOPE_SUFFIX",(function(){return d.OP_SCOPE_SUFFIX})),n.d(t,"image",(function(){return d.image})),n.d(t,"linalg",(function(){return d.linalg})),n.d(t,"losses",(function(){return d.losses})),n.d(t,"spectral",(function(){return d.spectral})),n.d(t,"fused",(function(){return d.fused})),n.d(t,"signal",(function(){return d.signal})),n.d(t,"sparse",(function(){return d.sparse})),n.d(t,"Reduction",(function(){return d.Reduction})),n.d(t,"train",(function(){return d.train})),n.d(t,"enableProdMode",(function(){return d.enableProdMode})),n.d(t,"enableDebugMode",(function(){return d.enableDebugMode})),n.d(t,"disableDeprecationWarnings",(function(){return d.disableDeprecationWarnings})),n.d(t,"deprecationWarn",(function(){return d.deprecationWarn})),n.d(t,"disposeVariables",(function(){return d.disposeVariables})),n.d(t,"engine",(function(){return d.engine})),n.d(t,"memory",(function(){return d.memory})),n.d(t,"profile",(function(){return d.profile})),n.d(t,"tidy",(function(){return d.tidy})),n.d(t,"dispose",(function(){return d.dispose})),n.d(t,"keep",(function(){return d.keep})),n.d(t,"time",(function(){return d.time})),n.d(t,"setBackend",(function(){return d.setBackend})),n.d(t,"ready",(function(){return d.ready})),n.d(t,"getBackend",(function(){return d.getBackend})),n.d(t,"removeBackend",(function(){return d.removeBackend})),n.d(t,"findBackend",(function(){return d.findBackend})),n.d(t,"findBackendFactory",(function(){return d.findBackendFactory})),n.d(t,"registerBackend",(function(){return d.registerBackend})),n.d(t,"backend",(function(){return d.backend})),n.d(t,"setPlatform",(function(){return d.setPlatform})),n.d(t,"getKernel",(function(){return d.getKernel})),n.d(t,"getGradient",(function(){return d.getGradient})),n.d(t,"getKernelsForBackend",(function(){return d.getKernelsForBackend})),n.d(t,"registerKernel",(function(){return d.registerKernel})),n.d(t,"registerGradient",(function(){return d.registerGradient})),n.d(t,"unregisterKernel",(function(){return d.unregisterKernel})),n.d(t,"unregisterGradient",(function(){return d.unregisterGradient})),n.d(t,"copyRegisteredKernels",(function(){return d.copyRegisteredKernels})),n.d(t,"customGrad",(function(){return d.customGrad})),n.d(t,"grad",(function(){return d.grad})),n.d(t,"grads",(function(){return d.grads})),n.d(t,"valueAndGrad",(function(){return d.valueAndGrad})),n.d(t,"valueAndGrads",(function(){return d.valueAndGrads})),n.d(t,"variableGrads",(function(){return d.variableGrads})),n.d(t,"Environment",(function(){return d.Environment})),n.d(t,"env",(function(){return d.env})),n.d(t,"ENV",(function(){return d.ENV})),n.d(t,"version_core",(function(){return d.version_core})),n.d(t,"nextFrame",(function(){return d.nextFrame})),n.d(t,"browser",(function(){return d.browser})),n.d(t,"io",(function(){return d.io})),n.d(t,"math",(function(){return d.math})),n.d(t,"serialization",(function(){return d.serialization})),n.d(t,"test_util",(function(){return d.test_util})),n.d(t,"util",(function(){return d.util})),n.d(t,"backend_util",(function(){return d.backend_util})),n.d(t,"tensor_util",(function(){return d.tensor_util})),n.d(t,"slice_util",(function(){return d.slice_util})),n.d(t,"gather_util",(function(){return d.gather_util})),n.d(t,"scatter_util",(function(){return d.scatter_util})),n.d(t,"device_util",(function(){return d.device_util})),n.d(t,"kernel_impls",(function(){return d.kernel_impls})),n.d(t,"KernelBackend",(function(){return d.KernelBackend})),n.d(t,"DataStorage",(function(){return d.DataStorage})),n.d(t,"Abs",(function(){return d.Abs})),n.d(t,"Acos",(function(){return d.Acos})),n.d(t,"Acosh",(function(){return d.Acosh})),n.d(t,"Add",(function(){return d.Add})),n.d(t,"AddN",(function(){return d.AddN})),n.d(t,"All",(function(){return d.All})),n.d(t,"Any",(function(){return d.Any})),n.d(t,"ArgMax",(function(){return d.ArgMax})),n.d(t,"ArgMin",(function(){return d.ArgMin})),n.d(t,"Asin",(function(){return d.Asin})),n.d(t,"Asinh",(function(){return d.Asinh})),n.d(t,"Atan",(function(){return d.Atan})),n.d(t,"Atanh",(function(){return d.Atanh})),n.d(t,"Atan2",(function(){return d.Atan2})),n.d(t,"AvgPool",(function(){return d.AvgPool})),n.d(t,"AvgPoolGrad",(function(){return d.AvgPoolGrad})),n.d(t,"AvgPool3D",(function(){return d.AvgPool3D})),n.d(t,"AvgPool3DGrad",(function(){return d.AvgPool3DGrad})),n.d(t,"BatchMatMul",(function(){return d.BatchMatMul})),n.d(t,"BatchToSpaceND",(function(){return d.BatchToSpaceND})),n.d(t,"Bincount",(function(){return d.Bincount})),n.d(t,"BroadcastTo",(function(){return d.BroadcastTo})),n.d(t,"Cast",(function(){return d.Cast})),n.d(t,"Ceil",(function(){return d.Ceil})),n.d(t,"ClipByValue",(function(){return d.ClipByValue})),n.d(t,"Complex",(function(){return d.Complex})),n.d(t,"ComplexAbs",(function(){return d.ComplexAbs})),n.d(t,"Concat",(function(){return d.Concat})),n.d(t,"Conv2D",(function(){return d.Conv2D})),n.d(t,"Conv2DBackpropFilter",(function(){return d.Conv2DBackpropFilter})),n.d(t,"Conv2DBackpropInput",(function(){return d.Conv2DBackpropInput})),n.d(t,"Conv3D",(function(){return d.Conv3D})),n.d(t,"Conv3DBackpropFilterV2",(function(){return d.Conv3DBackpropFilterV2})),n.d(t,"Conv3DBackpropInputV2",(function(){return d.Conv3DBackpropInputV2})),n.d(t,"Cos",(function(){return d.Cos})),n.d(t,"Cosh",(function(){return d.Cosh})),n.d(t,"Cumsum",(function(){return d.Cumsum})),n.d(t,"CropAndResize",(function(){return d.CropAndResize})),n.d(t,"DenseBincount",(function(){return d.DenseBincount})),n.d(t,"DepthToSpace",(function(){return d.DepthToSpace})),n.d(t,"DepthwiseConv2dNative",(function(){return d.DepthwiseConv2dNative})),n.d(t,"DepthwiseConv2dNativeBackpropFilter",(function(){return d.DepthwiseConv2dNativeBackpropFilter})),n.d(t,"DepthwiseConv2dNativeBackpropInput",(function(){return d.DepthwiseConv2dNativeBackpropInput})),n.d(t,"Diag",(function(){return d.Diag})),n.d(t,"Dilation2D",(function(){return d.Dilation2D})),n.d(t,"Dilation2DBackpropInput",(function(){return d.Dilation2DBackpropInput})),n.d(t,"Dilation2DBackpropFilter",(function(){return d.Dilation2DBackpropFilter})),n.d(t,"RealDiv",(function(){return d.RealDiv})),n.d(t,"Einsum",(function(){return d.Einsum})),n.d(t,"Elu",(function(){return d.Elu})),n.d(t,"EluGrad",(function(){return d.EluGrad})),n.d(t,"Erf",(function(){return d.Erf})),n.d(t,"Equal",(function(){return d.Equal})),n.d(t,"Exp",(function(){return d.Exp})),n.d(t,"ExpandDims",(function(){return d.ExpandDims})),n.d(t,"Expm1",(function(){return d.Expm1})),n.d(t,"FFT",(function(){return d.FFT})),n.d(t,"Fill",(function(){return d.Fill})),n.d(t,"FlipLeftRight",(function(){return d.FlipLeftRight})),n.d(t,"Floor",(function(){return d.Floor})),n.d(t,"FloorDiv",(function(){return d.FloorDiv})),n.d(t,"FusedBatchNorm",(function(){return d.FusedBatchNorm})),n.d(t,"GatherV2",(function(){return d.GatherV2})),n.d(t,"GatherNd",(function(){return d.GatherNd})),n.d(t,"Greater",(function(){return d.Greater})),n.d(t,"GreaterEqual",(function(){return d.GreaterEqual})),n.d(t,"Identity",(function(){return d.Identity})),n.d(t,"IFFT",(function(){return d.IFFT})),n.d(t,"Imag",(function(){return d.Imag})),n.d(t,"IsFinite",(function(){return d.IsFinite})),n.d(t,"IsInf",(function(){return d.IsInf})),n.d(t,"IsNan",(function(){return d.IsNan})),n.d(t,"LeakyRelu",(function(){return d.LeakyRelu})),n.d(t,"Less",(function(){return d.Less})),n.d(t,"LessEqual",(function(){return d.LessEqual})),n.d(t,"LinSpace",(function(){return d.LinSpace})),n.d(t,"Log",(function(){return d.Log})),n.d(t,"Log1p",(function(){return d.Log1p})),n.d(t,"LogicalAnd",(function(){return d.LogicalAnd})),n.d(t,"LogicalNot",(function(){return d.LogicalNot})),n.d(t,"LogicalOr",(function(){return d.LogicalOr})),n.d(t,"LogSoftmax",(function(){return d.LogSoftmax})),n.d(t,"LRN",(function(){return d.LRN})),n.d(t,"LRNGrad",(function(){return d.LRNGrad})),n.d(t,"Max",(function(){return d.Max})),n.d(t,"Maximum",(function(){return d.Maximum})),n.d(t,"MaxPool",(function(){return d.MaxPool})),n.d(t,"MaxPoolGrad",(function(){return d.MaxPoolGrad})),n.d(t,"MaxPool3D",(function(){return d.MaxPool3D})),n.d(t,"MaxPool3DGrad",(function(){return d.MaxPool3DGrad})),n.d(t,"MaxPoolWithArgmax",(function(){return d.MaxPoolWithArgmax})),n.d(t,"Mean",(function(){return d.Mean})),n.d(t,"Min",(function(){return d.Min})),n.d(t,"Minimum",(function(){return d.Minimum})),n.d(t,"MirrorPad",(function(){return d.MirrorPad})),n.d(t,"Mod",(function(){return d.Mod})),n.d(t,"Multinomial",(function(){return d.Multinomial})),n.d(t,"Multiply",(function(){return d.Multiply})),n.d(t,"Neg",(function(){return d.Neg})),n.d(t,"NotEqual",(function(){return d.NotEqual})),n.d(t,"NonMaxSuppressionV3",(function(){return d.NonMaxSuppressionV3})),n.d(t,"NonMaxSuppressionV4",(function(){return d.NonMaxSuppressionV4})),n.d(t,"NonMaxSuppressionV5",(function(){return d.NonMaxSuppressionV5})),n.d(t,"OnesLike",(function(){return d.OnesLike})),n.d(t,"OneHot",(function(){return d.OneHot})),n.d(t,"Pack",(function(){return d.Pack})),n.d(t,"PadV2",(function(){return d.PadV2})),n.d(t,"Pool",(function(){return d.Pool})),n.d(t,"Pow",(function(){return d.Pow})),n.d(t,"Prelu",(function(){return d.Prelu})),n.d(t,"Prod",(function(){return d.Prod})),n.d(t,"Range",(function(){return d.Range})),n.d(t,"Real",(function(){return d.Real})),n.d(t,"Reciprocal",(function(){return d.Reciprocal})),n.d(t,"Relu",(function(){return d.Relu})),n.d(t,"Reshape",(function(){return d.Reshape})),n.d(t,"ResizeNearestNeighbor",(function(){return d.ResizeNearestNeighbor})),n.d(t,"ResizeNearestNeighborGrad",(function(){return d.ResizeNearestNeighborGrad})),n.d(t,"ResizeBilinear",(function(){return d.ResizeBilinear})),n.d(t,"ResizeBilinearGrad",(function(){return d.ResizeBilinearGrad})),n.d(t,"Relu6",(function(){return d.Relu6})),n.d(t,"Reverse",(function(){return d.Reverse})),n.d(t,"Round",(function(){return d.Round})),n.d(t,"Rsqrt",(function(){return d.Rsqrt})),n.d(t,"ScatterNd",(function(){return d.ScatterNd})),n.d(t,"Select",(function(){return d.Select})),n.d(t,"Selu",(function(){return d.Selu})),n.d(t,"Slice",(function(){return d.Slice})),n.d(t,"Sin",(function(){return d.Sin})),n.d(t,"Sinh",(function(){return d.Sinh})),n.d(t,"Sign",(function(){return d.Sign})),n.d(t,"Sigmoid",(function(){return d.Sigmoid})),n.d(t,"Softplus",(function(){return d.Softplus})),n.d(t,"Sqrt",(function(){return d.Sqrt})),n.d(t,"Sum",(function(){return d.Sum})),n.d(t,"SpaceToBatchND",(function(){return d.SpaceToBatchND})),n.d(t,"SplitV",(function(){return d.SplitV})),n.d(t,"Softmax",(function(){return d.Softmax})),n.d(t,"SparseReshape",(function(){return d.SparseReshape})),n.d(t,"SparseToDense",(function(){return d.SparseToDense})),n.d(t,"SquaredDifference",(function(){return d.SquaredDifference})),n.d(t,"Square",(function(){return d.Square})),n.d(t,"StridedSlice",(function(){return d.StridedSlice})),n.d(t,"Sub",(function(){return d.Sub})),n.d(t,"Tan",(function(){return d.Tan})),n.d(t,"Tanh",(function(){return d.Tanh})),n.d(t,"Tile",(function(){return d.Tile})),n.d(t,"TopK",(function(){return d.TopK})),n.d(t,"Transform",(function(){return d.Transform})),n.d(t,"Transpose",(function(){return d.Transpose})),n.d(t,"Unique",(function(){return d.Unique})),n.d(t,"Unpack",(function(){return d.Unpack})),n.d(t,"UnsortedSegmentSum",(function(){return d.UnsortedSegmentSum})),n.d(t,"ZerosLike",(function(){return d.ZerosLike})),n.d(t,"Step",(function(){return d.Step})),n.d(t,"FromPixels",(function(){return d.FromPixels})),n.d(t,"RotateWithOffset",(function(){return d.RotateWithOffset})),n.d(t,"_FusedMatMul",(function(){return d._FusedMatMul})),n.d(t,"FusedConv2D",(function(){return d.FusedConv2D})),n.d(t,"FusedDepthwiseConv2D",(function(){return d.FusedDepthwiseConv2D})),n.d(t,"CallbackList",(function(){return ki})),n.d(t,"CustomCallback",(function(){return ji})),n.d(t,"History",(function(){return Ii})),n.d(t,"Callback",(function(){return _d})),n.d(t,"callbacks",(function(){return zd})),n.d(t,"EarlyStopping",(function(){return Md})),n.d(t,"InputSpec",(function(){return di})),n.d(t,"SymbolicTensor",(function(){return hi})),n.d(t,"LayersModel",(function(){return Mo})),n.d(t,"input",(function(){return Go})),n.d(t,"loadLayersModel",(function(){return Uo})),n.d(t,"model",(function(){return Vo})),n.d(t,"registerCallbackConstructor",(function(){return Ko})),n.d(t,"sequential",(function(){return Wo})),n.d(t,"RNN",(function(){return Ku})),n.d(t,"Sequential",(function(){return Bo})),n.d(t,"LayerVariable",(function(){return ui})),n.d(t,"version_layers",(function(){return uo})),n.d(t,"constraints",(function(){return r})),n.d(t,"initializers",(function(){return a})),n.d(t,"layers",(function(){return s})),n.d(t,"metrics",(function(){return i})),n.d(t,"models",(function(){return o})),n.d(t,"regularizers",(function(){return u})),n.d(t,"GraphModel",(function(){return Ld.a})),n.d(t,"loadGraphModel",(function(){return Ld.c})),n.d(t,"deregisterOp",(function(){return Ld.b})),n.d(t,"registerOp",(function(){return Ld.d})),n.d(t,"version_converter",(function(){return Ld.e})),n.d(t,"data",(function(){return c})),n.d(t,"version",(function(){return Nj}));var r={};n.r(r),n.d(r,"maxNorm",(function(){return Aa})),n.d(r,"unitNorm",(function(){return Ea})),n.d(r,"nonNeg",(function(){return $a})),n.d(r,"minMaxNorm",(function(){return Fa}));var a={};n.r(a),n.d(a,"zeros",(function(){return zs})),n.d(a,"ones",(function(){return Ls})),n.d(a,"constant",(function(){return Ps})),n.d(a,"randomUniform",(function(){return Bs})),n.d(a,"randomNormal",(function(){return Vs})),n.d(a,"truncatedNormal",(function(){return Ws})),n.d(a,"identity",(function(){return Us})),n.d(a,"varianceScaling",(function(){return Gs})),n.d(a,"glorotUniform",(function(){return Ks})),n.d(a,"glorotNormal",(function(){return Hs})),n.d(a,"heNormal",(function(){return qs})),n.d(a,"heUniform",(function(){return Xs})),n.d(a,"leCunNormal",(function(){return Ys})),n.d(a,"leCunUniform",(function(){return Zs})),n.d(a,"orthogonal",(function(){return Js}));var s={};n.r(s),n.d(s,"inputLayer",(function(){return Qc})),n.d(s,"elu",(function(){return el})),n.d(s,"reLU",(function(){return tl})),n.d(s,"leakyReLU",(function(){return nl})),n.d(s,"prelu",(function(){return rl})),n.d(s,"softmax",(function(){return al})),n.d(s,"thresholdedReLU",(function(){return sl})),n.d(s,"conv1d",(function(){return il})),n.d(s,"conv2d",(function(){return ol})),n.d(s,"conv2dTranspose",(function(){return ul})),n.d(s,"conv3d",(function(){return cl})),n.d(s,"conv3dTranspose",(function(){return ll})),n.d(s,"separableConv2d",(function(){return dl})),n.d(s,"cropping2D",(function(){return hl})),n.d(s,"upSampling2d",(function(){return pl})),n.d(s,"depthwiseConv2d",(function(){return fl})),n.d(s,"activation",(function(){return ml})),n.d(s,"dense",(function(){return bl})),n.d(s,"dropout",(function(){return gl})),n.d(s,"spatialDropout1d",(function(){return yl})),n.d(s,"flatten",(function(){return xl})),n.d(s,"repeatVector",(function(){return vl})),n.d(s,"reshape",(function(){return wl})),n.d(s,"permute",(function(){return Ol})),n.d(s,"embedding",(function(){return kl})),n.d(s,"add",(function(){return Nl})),n.d(s,"average",(function(){return Il})),n.d(s,"concatenate",(function(){return jl})),n.d(s,"maximum",(function(){return Sl})),n.d(s,"minimum",(function(){return Cl})),n.d(s,"multiply",(function(){return Tl})),n.d(s,"dot",(function(){return Al})),n.d(s,"batchNormalization",(function(){return El})),n.d(s,"layerNormalization",(function(){return $l})),n.d(s,"zeroPadding2d",(function(){return Fl})),n.d(s,"averagePooling1d",(function(){return _l})),n.d(s,"avgPool1d",(function(){return Rl})),n.d(s,"avgPooling1d",(function(){return Dl})),n.d(s,"averagePooling2d",(function(){return Ml})),n.d(s,"avgPool2d",(function(){return zl})),n.d(s,"avgPooling2d",(function(){return Ll})),n.d(s,"averagePooling3d",(function(){return Pl})),n.d(s,"avgPool3d",(function(){return Bl})),n.d(s,"avgPooling3d",(function(){return Vl})),n.d(s,"globalAveragePooling1d",(function(){return Wl})),n.d(s,"globalAveragePooling2d",(function(){return Ul})),n.d(s,"globalMaxPooling1d",(function(){return Gl})),n.d(s,"globalMaxPooling2d",(function(){return Kl})),n.d(s,"maxPooling1d",(function(){return Hl})),n.d(s,"maxPooling2d",(function(){return ql})),n.d(s,"maxPooling3d",(function(){return Xl})),n.d(s,"gru",(function(){return Yl})),n.d(s,"gruCell",(function(){return Zl})),n.d(s,"lstm",(function(){return Jl})),n.d(s,"lstmCell",(function(){return Ql})),n.d(s,"simpleRNN",(function(){return ed})),n.d(s,"simpleRNNCell",(function(){return td})),n.d(s,"convLstm2d",(function(){return nd})),n.d(s,"convLstm2dCell",(function(){return rd})),n.d(s,"rnn",(function(){return ad})),n.d(s,"stackedRNNCells",(function(){return sd})),n.d(s,"bidirectional",(function(){return id})),n.d(s,"timeDistributed",(function(){return od})),n.d(s,"globalMaxPool1d",(function(){return ud})),n.d(s,"globalMaxPool2d",(function(){return cd})),n.d(s,"maxPool1d",(function(){return ld})),n.d(s,"maxPool2d",(function(){return dd})),n.d(s,"Layer",(function(){return bi})),n.d(s,"RNN",(function(){return Ku})),n.d(s,"RNNCell",(function(){return Hu})),n.d(s,"input",(function(){return Go})),n.d(s,"gaussianNoise",(function(){return hd})),n.d(s,"gaussianDropout",(function(){return pd})),n.d(s,"alphaDropout",(function(){return fd})),n.d(s,"masking",(function(){return md}));var i={};n.r(i),n.d(i,"binaryAccuracy",(function(){return bd})),n.d(i,"binaryCrossentropy",(function(){return gd})),n.d(i,"sparseCategoricalAccuracy",(function(){return yd})),n.d(i,"categoricalAccuracy",(function(){return xd})),n.d(i,"categoricalCrossentropy",(function(){return vd})),n.d(i,"precision",(function(){return wd})),n.d(i,"recall",(function(){return Od})),n.d(i,"cosineProximity",(function(){return kd})),n.d(i,"meanAbsoluteError",(function(){return Nd})),n.d(i,"meanAbsolutePercentageError",(function(){return Id})),n.d(i,"MAPE",(function(){return jd})),n.d(i,"mape",(function(){return Sd})),n.d(i,"meanSquaredError",(function(){return Cd})),n.d(i,"MSE",(function(){return Td})),n.d(i,"mse",(function(){return Ad}));var o={};n.r(o),n.d(o,"modelFromJSON",(function(){return Lo}));var u={};n.r(u),n.d(u,"l1l2",(function(){return Ed})),n.d(u,"l1",(function(){return $d})),n.d(u,"l2",(function(){return Fd}));var c={};n.r(c),n.d(c,"array",(function(){return Gd})),n.d(c,"Dataset",(function(){return Wd})),n.d(c,"zip",(function(){return Kd})),n.d(c,"CSVDataset",(function(){return eh})),n.d(c,"TextLineDataset",(function(){return qd})),n.d(c,"csv",(function(){return lh})),n.d(c,"func",(function(){return dh})),n.d(c,"generator",(function(){return hh})),n.d(c,"microphone",(function(){return fh})),n.d(c,"webcam",(function(){return ph})),n.d(c,"FileDataSource",(function(){return uh})),n.d(c,"URLDataSource",(function(){return ch})),n.d(c,"version_data",(function(){return mh}));var l={};n.r(l),n.d(l,"simpleAbsImpl",(function(){return np})),n.d(l,"addImpl",(function(){return Hh})),n.d(l,"bincountImpl",(function(){return Lp})),n.d(l,"bincountReduceImpl",(function(){return Pp})),n.d(l,"ceilImpl",(function(){return Wp})),n.d(l,"concatImpl",(function(){return Xp})),n.d(l,"expImpl",(function(){return Wf})),n.d(l,"expm1Impl",(function(){return qf})),n.d(l,"floorImpl",(function(){return lm})),n.d(l,"gatherV2Impl",(function(){return xm})),n.d(l,"greaterImpl",(function(){return wm})),n.d(l,"lessImpl",(function(){return _m})),n.d(l,"linSpaceImpl",(function(){return Pm})),n.d(l,"logImpl",(function(){return Vm})),n.d(l,"maxImpl",(function(){return rb})),n.d(l,"maximumImpl",(function(){return ib})),n.d(l,"minimumImpl",(function(){return bb})),n.d(l,"multiplyImpl",(function(){return Nf})),n.d(l,"negImpl",(function(){return jb})),n.d(l,"notEqualImpl",(function(){return _b})),n.d(l,"prodImpl",(function(){return Hb})),n.d(l,"rangeImpl",(function(){return Xb})),n.d(l,"rsqrtImpl",(function(){return og})),n.d(l,"sliceImpl",(function(){return Rp})),n.d(l,"sparseReshapeImpl",(function(){return Sg})),n.d(l,"squaredDifferenceImpl",(function(){return _g})),n.d(l,"stridedSliceImpl",(function(){return Lg})),n.d(l,"subImpl",(function(){return em})),n.d(l,"tileImpl",(function(){return Gg})),n.d(l,"topKImpl",(function(){return Hg})),n.d(l,"transposeImpl",(function(){return cp})),n.d(l,"uniqueImpl",(function(){return ey}));var d=n("+hG3"),h=n("wFtI"),p=n("3rNm"),f=n("parS"),m=n("L7Hl");const b={kernelName:h.a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,Object(m.a)(Object(p.a)(n,"float32"),-1))}}};var g=n("x3y4"),y=n("O7f5"),x=n("AV8V"),v=n("Fjpt"),w=n("k7Jv"),O=n("oAkI");const k={kernelName:h.b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(w.a)(Object(p.a)(n,"float32")),r=Object(v.a)(Object(O.a)(Object(x.a)(1),t));return Object(y.a)(Object(g.a)(e,r))}}}},N={kernelName:h.c,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(v.a)(Object(O.a)(Object(w.a)(Object(p.a)(n,"float32")),1));return Object(g.a)(e,t)}}}};var I=n("Um8L"),j=n("NclT"),S=n("4FMF");const C={kernelName:h.d,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=I.a(n.shape,r.shape);return{a:()=>{let t=e;const r=I.c(n.shape,a);return r.length>0&&(t=Object(S.a)(t,r)),Object(j.a)(t,n.shape)},b:()=>{let t=e;const n=I.c(r.shape,a);return n.length>0&&(t=Object(S.a)(t,n)),Object(j.a)(t,r.shape)}}}},T={kernelName:h.e,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}};var A=n("oJu+");const E={kernelName:h.h,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(A.a)(n)}}},$={kernelName:h.i,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(A.a)(n)}}},F={kernelName:h.j,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(g.a)(e,Object(v.a)(Object(O.a)(Object(x.a)(1),Object(w.a)(Object(p.a)(n,"float32")))))}}};var _=n("kRdc");const R={kernelName:h.k,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(v.a)(Object(_.a)(Object(x.a)(1),Object(w.a)(Object(p.a)(n,"float32"))));return Object(g.a)(e,t)}}}},D={kernelName:h.m,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(I.a)(n.shape,r.shape);return{a:()=>{const t=Object(_.a)(Object(w.a)(n),Object(w.a)(r));let s=Object(f.a)(e,Object(g.a)(r,t));const i=Object(I.c)(n.shape,a);return i.length>0&&(s=Object(S.a)(s,i)),Object(j.a)(s,n.shape)},b:()=>{const t=Object(_.a)(Object(w.a)(n),Object(w.a)(r));let s=Object(y.a)(Object(f.a)(e,Object(g.a)(n,t)));const i=Object(I.c)(r.shape,a);return i.length>0&&(s=Object(S.a)(s,i)),Object(j.a)(s,r.shape)}}}},M={kernelName:h.l,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(g.a)(e,Object(_.a)(Object(w.a)(Object(p.a)(n,"float32")),1))}}},z={kernelName:h.n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(g.a)(e,Object(O.a)(Object(x.a)(1),Object(w.a)(Object(p.a)(n,"float32"))))}}};var L=n("auKK"),P=n("o/e8"),B=n("atXS"),V=n("VO80");const W=Object(V.b)({avgPool3dGrad_:function(e,t,n,r,a,s){const i=Object(P.a)(e,"dy","avgPool3dGrad"),o=Object(P.a)(t,"input","avgPool3dGrad");let u=i,c=o,l=!1;4===o.rank&&(l=!0,u=Object(j.a)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=Object(j.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),B.b(5===u.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+u.rank+"."),B.b(5===c.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+c.rank+"."),null!=s&&B.b(B.v(a),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`);const d={dy:u,input:c},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},f=L.a.runKernel(h.q,d,p);return l?Object(j.a)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),U={kernelName:h.p,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>W(e,r,a,s,i,o)}}};const G=Object(V.b)({avgPoolGrad_:function(e,t,n,r,a){const s=Object(P.a)(e,"dy","avgPoolGrad"),i=Object(P.a)(t,"input","avgPoolGrad");B.b(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,u=s,c=!1;3===i.rank&&(c=!0,o=Object(j.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Object(j.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),B.b(4===u.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+u.rank+"."),B.b(4===o.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+o.rank+".");const l={dy:u,input:o},d={filterSize:n,strides:r,pad:a},p=L.a.runKernel(h.r,l,d);return c?Object(j.a)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),K={kernelName:h.o,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>G(e,r,a,s,i)}}};var H=n("SHv8");const q={kernelName:h.s,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Object(H.a)(e,a,!1,!1),b:()=>Object(H.a)(e,r,!0,!1)}:s&&!i?{a:()=>Object(H.a)(a,e,!1,!0),b:()=>Object(H.a)(r,e,!1,!1)}:{a:()=>Object(H.a)(a,e,!0,!0),b:()=>Object(H.a)(e,r,!0,!0)}:{a:()=>Object(H.a)(e,a,!1,!0),b:()=>Object(H.a)(r,e,!0,!1)}}};var X=n("dYAU");const Y={kernelName:h.t,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(X.a)(e,r,a)}}},Z={kernelName:h.v,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let u=a.length-1;u>=0;u--)if(a[u]===s[u])i[u]=1;else if(1!==a[u])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>Object(S.a)(e,o,!0)}}},J={kernelName:h.w,gradFunc:e=>({x:()=>e.clone()})},Q={kernelName:h.x,gradFunc:e=>({x:()=>Object(A.a)(e)})};var ee=n("uy0A"),te=n("shz4"),ne=n("4zPZ"),re=n("Z5Ez");const ae={kernelName:h.y,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Object(re.a)(Object(ne.a)(Object(ee.a)(r,a),Object(te.a)(r,s)),e,Object(A.a)(e))}}},se={kernelName:h.A,inputsToSave:["x"],gradFunc:b.gradFunc};var ie=n("RbuM");const oe={kernelName:h.B,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:a}=n,s=Object(B.I)(a,t[0].shape)[0],i=r.map(e=>e[s]);return Object(ie.a)(e,i,s).map(e=>()=>e)}};var ue=n("D2/b"),ce=n("c9N1"),le=n("uBja");const de={kernelName:h.C,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return B.b(le.i(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Object(ce.a)(r.shape,e,a,i,o,u),filter:()=>Object(ue.a)(r,e,a.shape,i,o,u)}}};var he=n("3X4V");const pe={kernelName:h.E,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Object(he.a)(e,a,s,i,o,1,u),filter:()=>Object(ue.a)(e,r,a.shape,s,i,o,u)}}};const fe=Object(V.b)({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Object(j.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Object(j.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),B.b(5===s.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+s.shape+"."),B.b(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."),B.b(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),B.b(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),B.b(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return L.a.runKernel(h.G,o,u)}});var me=n("mdDO");const be={kernelName:h.F,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;B.b(Object(le.i)(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=t;return{x:()=>Object(me.a)(i.shape,e,o,a,s),filter:()=>fe(i,e,o.shape,a,s)}}};var ge=n("aTLu");const ye={kernelName:h.I,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(Object(y.a)(Object(ge.a)(Object(p.a)(n,"float32"))),e)}}};var xe=n("XcSs");const ve={kernelName:h.J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(Object(xe.a)(Object(p.a)(n,"float32")),e)}}};var we=n("NuWS"),Oe=n("HmhO"),ke=n("yRKQ");const Ne={kernelName:h.L,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=Object(we.f)([a],r.rank);let n=Object(Oe.a)(e,a,s,!i);return null!=t&&(n=Object(ke.a)(n,t)),n}}}};var Ie=n("aSZd"),je=n("jLCh");const Se={kernelName:h.O,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;B.b(le.i(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,c]=t;return B.b(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),B.b(4===c.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),B.b(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),B.b(le.h(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),null!=i&&B.b(B.v(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),{x:()=>Object(je.a)(u.shape,e,c,a,s,r,i),filter:()=>Object(Ie.a)(u,e,c.shape,a,s,r,i)}}},Ce={kernelName:h.S,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>L.a.runKernel(h.U,s,n),filter:()=>L.a.runKernel(h.T,i,n)}}},Te={kernelName:h.W,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>L.a.runKernel(h.X,r)}}};var Ae=n("TyAZ");const Ee={kernelName:h.Z,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(f.a)(Object(Ae.a)(Object(y.a)(Object(w.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(f.a)(e,r)}}},$e={kernelName:h.ab,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,n)}}},Fe={kernelName:h.bb,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Object(j.a)(e,n.shape)}}},_e={kernelName:h.cb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,Object(Ae.a)(n))}}},Re={kernelName:h.gb,gradFunc:e=>({x:()=>Object(A.a)(e)})},De={kernelName:h.hb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(I.a)(n.shape,r.shape);return{a:()=>{const t=Object(g.a)(e,Object(p.a)(r,"float32")),s=Object(I.c)(n.shape,a);return s.length>0?Object(j.a)(Object(S.a)(t,s),n.shape):t},b:()=>{let t=Object(f.a)(e,Object(p.a)(n,"float32"));const s=Object(I.c)(r.shape,a);s.length>0&&(t=Object(j.a)(Object(S.a)(t,s),r.shape));const i=Object(w.a)(r);return Object(y.a)(Object(g.a)(t,Object(p.a)(i,"float32")))}}}};var Me=n("Xyqe"),ze=n("jXH2");const Le={kernelName:h.jb,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?Object(x.a)(1):o,c=Object(I.c)(s.shape,a.shape),l=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)l.push(a.shape[e]);l.push(1)}const d=Object(O.a)(a,s),h=Object(f.a)(e,u),p=Object(Me.a)(Object(_.a)(i,Object(x.a)(r))),m=Object(f.a)(Object(f.a)(Object(f.a)(p,p),p),Object(x.a)(-.5));return{x:()=>1===s.rank?Object(j.a)(Object(f.a)(Object(f.a)(e,Object(ze.a)(Object(j.a)(p,[1,1,1,s.shape[0]]),l)),u),a.shape):Object(j.a)(Object(f.a)(Object(f.a)(e,p),u),a.shape),mean:()=>{let e=Object(f.a)(Object(f.a)(p,Object(x.a)(-1)),h);return 1===s.rank&&(e=Object(S.a)(e,c)),Object(j.a)(e,s.shape)},variance:()=>{let e=Object(f.a)(Object(f.a)(m,d),h);return 1===s.rank&&(e=Object(S.a)(e,c)),Object(j.a)(e,s.shape)},scale:()=>{const t=Object(f.a)(d,p);let n=Object(f.a)(e,t);return 1===s.rank&&(n=Object(S.a)(n,c)),Object(j.a)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Object(S.a)(t,c)),Object(j.a)(t,s.shape)}}}};var Pe=n("U/Lz");const Be={kernelName:h.nb,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=Object(B.I)(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,c=t.slice(s,t.length).slice(1),l=c.length,d=Ve(0,u),h=Ve(u+1,u+1+l),p=We([o,[n],c]),f=Object(j.a)(e,p),m=Object(j.a)(a,[n]),b=We([[u],d,h]),g=Object(ke.a)(f,b);let y=Object(Pe.a)(g,m,r.shape[i]);const x=Object(we.h)(b);return y=Object(ke.a)(y,x),y},indices:()=>a}}};function Ve(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function We(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Ue={kernelName:h.pb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(A.a)(n),b:()=>Object(A.a)(r)}}},Ge={kernelName:h.rb,gradFunc:e=>({x:()=>Object(p.a)(e,"float32")})},Ke={kernelName:h.tb,gradFunc:e=>({x:()=>Object(A.a)(e)})},He={kernelName:h.ub,gradFunc:e=>({x:()=>Object(A.a)(e)})},qe={kernelName:h.vb,gradFunc:e=>({x:()=>Object(A.a)(e)})};var Xe=n("zvA9");const Ye={kernelName:h.yb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Object(Xe.a)(r,0);return{x:()=>Object(re.a)(s,e,Object(f.a)(e,a))}}},Ze={kernelName:h.Db,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(g.a)(e,Object(_.a)(n,1))}}},Je={kernelName:h.Cb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(g.a)(e,Object(p.a)(n,"float32"))}}},Qe={kernelName:h.Eb,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Object(Ae.a)(r);return Object(O.a)(e,Object(f.a)(Object(S.a)(e,a,!0),t))}}}};const et=Object(V.b)({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return L.a.runKernel(h.xb,o,u)}}),tt={kernelName:h.wb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>et(r,a,e,s,i,o,u)}}};var nt=n("ubnP");function rt(e,t,n,r){return t.rank<n.rank&&(t=Object(j.a)(t,we.e(t.shape,r))),e.rank<n.rank&&(e=Object(j.a)(e,we.e(e.shape,r))),{x:()=>Object(f.a)(e,Object(p.a)(Object(nt.a)(n,t),e.dtype))}}const at={kernelName:h.Ib,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=rt(e,t[1],s,B.I(a,s.shape));return{x:()=>i.x()}}};var st=n("4f3O");const it={kernelName:h.Ob,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(f.a)(e,Object(p.a)(Object(ee.a)(n,r),"float32")),b:()=>Object(f.a)(e,Object(p.a)(Object(st.a)(n,r),"float32"))}}};const ot=Object(V.b)({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=Object(P.a)(e,"dy","maxPool3dGrad"),u=Object(P.a)(t,"input","maxPool3dGrad"),c=Object(P.a)(n,"output","maxPool3dGrad");let l=o,d=u,p=c,f=!1;4===u.rank&&(f=!0,l=Object(j.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=Object(j.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Object(j.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),B.b(5===l.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+l.rank+"."),B.b(5===d.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+d.rank+"."),B.b(5===p.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+p.rank+"."),null!=i&&B.b(B.v(s),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const m={dy:l,input:d,output:p},b={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=L.a.runKernel(h.Lb,m,b);return f?Object(j.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),ut={kernelName:h.Kb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>ot(e,r,a,s,i,o,u)}}};const ct=Object(V.b)({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=Object(P.a)(e,"dy","maxPoolGrad"),u=Object(P.a)(t,"input","maxPoolGrad"),c=Object(P.a)(n,"output","maxPoolGrad");B.b(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),B.b(4===o.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+o.rank+"."),B.b(4===u.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+u.rank+"."),null!=i&&B.b(B.v(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const l={dy:o,input:u,output:c},d={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return L.a.runKernel(h.Mb,l,d)}}),lt={kernelName:h.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>ct(e,r,a,s,i,o)}}};var dt=n("wion");const ht={kernelName:h.Pb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=B.I(a,r.shape),i=Object(we.d)(r.shape,s)[1],o=B.O(i);return{x:()=>{const t=r.shape.slice();s.forEach(e=>{t[e]=1});const n=Object(j.a)(e,t);return Object(g.a)(Object(f.a)(n,Object(dt.a)(r.shape,"float32")),o)}}}},pt={kernelName:h.Qb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=rt(e,i,s,B.I(a,s.shape));return{x:()=>o.x()}}},ft={kernelName:h.Rb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(f.a)(e,Object(p.a)(Object(te.a)(n,r),"float32")),b:()=>Object(f.a)(e,Object(p.a)(Object(Xe.a)(n,r),"float32"))}}};var mt=n("bTzI");const bt={kernelName:h.Sb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>Object(mt.a)(e,s,r.shape)}}};var gt=n("02mo");const yt={kernelName:h.Tb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(I.a)(n.shape,r.shape);return{a:()=>{const t=Object(I.c)(n.shape,a);return t.length>0?Object(j.a)(Object(S.a)(e,t),n.shape):e},b:()=>{const t=Object(f.a)(e,Object(y.a)(Object(gt.a)(Object(g.a)(n,r)))),s=Object(I.c)(r.shape,a);return s.length>0?Object(j.a)(Object(S.a)(t,s),r.shape):t}}}},xt={kernelName:h.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(I.a)(n.shape,r.shape);return{a:()=>{const t=Object(f.a)(e,Object(p.a)(r,"float32")),s=Object(I.c)(n.shape,a);return s.length>0?Object(j.a)(Object(S.a)(t,s),n.shape):t},b:()=>{const t=Object(f.a)(e,Object(p.a)(n,"float32")),s=Object(I.c)(r.shape,a);return s.length>0?Object(j.a)(Object(S.a)(t,s),r.shape):t}}}},vt={kernelName:h.Wb,gradFunc:e=>({x:()=>Object(y.a)(e)})};var wt=n("Wiw4");const Ot={kernelName:h.bc,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Object(wt.a)(n.shape,"float32")}}},kt={kernelName:h.cc,gradFunc:e=>({x:()=>Object(A.a)(e)})};var Nt=n("OkRW");const It={kernelName:h.dc,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Object(Nt.a)(e,r).map(e=>()=>e)}},jt={kernelName:h.ec,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>Object(mt.a)(e,s,r.shape)}}};var St=n("E1lT"),Ct=n("yfHJ");const Tt={kernelName:h.gc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=I.a(s.shape,i.shape);return{a:()=>{const t=Object(p.a)(i,"float32");let n=Object(f.a)(e,Object(f.a)(t,Object(Ct.a)(s,Object(O.a)(t,Object(x.a)(1)))));const r=I.c(s.shape,o);return r.length>0&&(n=Object(S.a)(n,r)),Object(j.a)(n,s.shape)},b:()=>{const t=Object(Xe.a)(s,0),n=Object(re.a)(t,Object(St.a)(s),Object(A.a)(s));let r=Object(f.a)(e,Object(f.a)(a,n));const u=I.c(i.shape,o);return u.length>0&&(r=Object(S.a)(r,u)),Object(j.a)(r,i.shape)}}}},At={kernelName:h.hc,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(Xe.a)(n,0);return{x:()=>Object(re.a)(a,e,Object(f.a)(e,r)),alpha:()=>{let t=Object(re.a)(a,Object(A.a)(e),Object(f.a)(e,n));const s=Object(I.c)(r.shape,e.shape);return s.length>0&&(t=Object(S.a)(t,s)),Object(j.a)(t,r.shape)}}}},Et={kernelName:h.lc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=I.a(n.shape,r.shape);return{a:()=>{const t=Object(g.a)(e,Object(p.a)(r,"float32")),s=I.c(n.shape,a);return s.length>0?Object(j.a)(Object(S.a)(t,s),n.shape):t},b:()=>{let t=Object(f.a)(e,Object(p.a)(n,"float32"));const s=I.c(r.shape,a);s.length>0&&(t=Object(j.a)(Object(S.a)(t,s),r.shape));const i=Object(w.a)(r);return Object(y.a)(Object(g.a)(t,Object(p.a)(i,"float32")))}}}},$t={kernelName:h.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(g.a)(e,Object(y.a)(Object(w.a)(n)))}}},Ft={kernelName:h.oc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(f.a)(Object(te.a)(n,6),Object(m.a)(n));return{x:()=>Object(f.a)(e,Object(p.a)(r,"float32"))}}},_t={kernelName:h.nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,Object(p.a)(Object(m.a)(n),"float32"))}}},Rt={kernelName:h.pc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(e,n.shape)}}},Dt={kernelName:h.qc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>L.a.runKernel(h.rc,a,n)}}},Mt={kernelName:h.sc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>L.a.runKernel(h.tc,a,n)}}};var zt=n("0I63");const Lt={kernelName:h.uc,gradFunc:(e,t,n)=>{const{dims:r}=n,a=Object(B.I)(r,e.shape);return{x:()=>Object(zt.a)(e,a)}}},Pt={kernelName:h.wc,gradFunc:e=>({x:()=>Object(A.a)(e)})},Bt={kernelName:h.xc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(y.a)(Object(g.a)(e,Object(f.a)(Object(Ct.a)(n,1.5),2)))}}};var Vt=n("7wDt");const Wt={kernelName:h.zc,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Object(p.a)(Object(A.a)(n),"float32"),t:()=>Object(f.a)(e,Object(p.a)(n,e.dtype)),e:()=>Object(f.a)(e,Object(p.a)(Object(Vt.a)(n),e.dtype))}}};var Ut=n("fN6/");const Gt={kernelName:h.Ac,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(Xe.a)(n,Object(x.a)(0)),r=Object(x.a)(Ut.b),a=Object(x.a)(Ut.a),s=Object(f.a)(e,a),i=Object(f.a)(Object(f.a)(e,r),Object(Ae.a)(Object(p.a)(n,"float32")));return Object(re.a)(t,s,i)}}}},Kt={kernelName:h.Bc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,Object(f.a)(n,Object(O.a)(Object(x.a)(1),n)))}}},Ht={kernelName:h.Cc,gradFunc:e=>({x:()=>Object(A.a)(e)})};var qt=n("7/dO");const Xt={kernelName:h.Dc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(Object(qt.a)(Object(p.a)(n,"float32")),e)}}};var Yt=n("waK1");const Zt={kernelName:h.Ec,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(Object(Yt.a)(Object(p.a)(n,"float32")),e)}}};var Jt=n("DrVt"),Qt=n("Xr0w");const en={kernelName:h.Fc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=Object(Qt.parseSliceParams)(r,a,s),c=[];for(let l=0;l<e.rank;l++)c.push([o[l],i[l]-o[l]-u[l]]);return{x:()=>Object(Jt.a)(e,c)}}},tn={kernelName:h.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=Object(f.a)(e,r);return{logits:()=>Object(O.a)(s,Object(f.a)(Object(S.a)(s,[a],true),r))}}};var nn=n("/7N0");const rn={kernelName:h.Hc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,Object(nn.a)(n))}}};var an=n("OygE");const sn={kernelName:h.Ic,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(an.a)(e,r,a)}}};var on=n("ZJ6U");const un={kernelName:h.Lc,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Object(on.a)(e,r)}}},cn={kernelName:h.Mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(g.a)(e,Object(f.a)(Object(v.a)(Object(p.a)(n,"float32")),2))}}},ln={kernelName:h.Nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(e,Object(f.a)(Object(p.a)(n,"float32"),2))}}},dn={kernelName:h.Oc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(x.a)(2);return{a:()=>Object(f.a)(e,Object(f.a)(a,Object(O.a)(n,r))),b:()=>Object(f.a)(e,Object(f.a)(a,Object(O.a)(r,n)))}}},hn={kernelName:h.Pc,gradFunc:e=>({x:()=>Object(A.a)(e)})},pn={kernelName:h.Rc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=I.a(n.shape,r.shape);return{a:()=>{let t=e;const r=I.c(n.shape,a);return r.length>0&&(t=Object(S.a)(t,r)),Object(j.a)(t,n.shape)},b:()=>{let t=e;const n=I.c(r.shape,a);return n.length>0&&(t=Object(S.a)(t,n)),Object(j.a)(Object(y.a)(t),r.shape)}}}},fn={kernelName:h.Sc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;Object(B.I)(s,r.shape).forEach(e=>{a[e]=1});const i=Object(j.a)(e,a),o=Object(f.a)(i,Object(dt.a)(r.shape,"float32"));return{x:()=>o}}},mn={kernelName:h.Tc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(g.a)(e,Object(w.a)(Object(qt.a)(n)))}}},bn={kernelName:h.Uc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(f.a)(Object(O.a)(Object(x.a)(1),Object(w.a)(n)),e)}}},gn={kernelName:h.Vc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Object(A.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Object(_.a)(t,Object(mt.a)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Object(_.a)(t,Object(mt.a)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Object(_.a)(t,Object(mt.a)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Object(_.a)(t,Object(mt.a)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},yn={kernelName:h.Yc,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=we.h(a);return{x:()=>Object(ke.a)(e,s)}}};var xn=n("1U0N");const vn={kernelName:h.ad,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(xn.a)(e,a)}}};var wn=n("2ugP"),On=n("kaMP"),kn=n("CfTU");const Nn={kernelName:h.bd,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Object(kn.a)(t,Object(A.a)(t)),r=Object(On.a)(e,n);let a=Object(ee.a)(t,Object(x.a)(0,"int32"));const s=r.rank-a.rank;for(let o=0;o<s;++o)a=Object(wn.a)(a,o+1);a=Object(ne.a)(a,Object(dt.a)(r.shape,"bool"));const i=Object(A.a)(r);return Object(re.a)(a,r,i)}(e,n)}}};const In={kernelName:h.cd,gradFunc:e=>({x:()=>Object(A.a)(e)})};var jn=n("c7gn");const Sn=[b,k,N,C,T,E,$,F,R,D,M,z,U,K,q,Y,Z,J,Q,ae,se,oe,pe,de,be,ye,ve,Ne,Se,Ce,Et,Te,Ee,$e,Fe,_e,De,Re,Le,Be,Ue,Ge,Ke,He,qe,Ye,Ze,Je,Qe,tt,at,at,it,ut,lt,ht,pt,ft,bt,yt,xt,vt,Ot,kt,It,jt,jt,Tt,At,$t,Ft,_t,Rt,Dt,Mt,Lt,Pt,Bt,Wt,Gt,Kt,Ht,Xt,Zt,en,tn,rn,sn,sn,un,un,cn,dn,ln,hn,pn,fn,mn,bn,gn,yn,vn,Nn,In];for(const Ij of Sn)Object(jn.e)(Ij);var Cn=n("iuCH"),Tn=n("NNfn");Object(Tn.d)().prototype.abs=function(){return this.throwIfDisposed(),Object(Cn.a)(this)};var An=n("o3Rt");Object(Tn.d)().prototype.acos=function(){return this.throwIfDisposed(),Object(An.a)(this)};var En=n("RhVc");Object(Tn.d)().prototype.acosh=function(){return this.throwIfDisposed(),Object(En.a)(this)},Object(Tn.d)().prototype.add=function(e){return this.throwIfDisposed(),Object(_.a)(this,e)};var $n=n("34HJ");Object(Tn.d)().prototype.all=function(e,t){return this.throwIfDisposed(),Object($n.a)(this,e,t)};var Fn=n("RRa9");Object(Tn.d)().prototype.any=function(e,t){return this.throwIfDisposed(),Object(Fn.a)(this,e,t)};var _n=n("6J+n");Object(Tn.d)().prototype.argMax=function(e){return this.throwIfDisposed(),Object(_n.a)(this,e)};var Rn=n("20lx");Object(Tn.d)().prototype.argMin=function(e){return this.throwIfDisposed(),Object(Rn.a)(this,e)},Object(Tn.d)().prototype.asScalar=function(){return this.throwIfDisposed(),Object(B.b)(1===this.size,()=>"The array must have only 1 element."),Object(j.a)(this,[])},Object(Tn.d)().prototype.asType=function(e){return this.throwIfDisposed(),Object(p.a)(this,e)},Object(Tn.d)().prototype.as1D=function(){return this.throwIfDisposed(),Object(j.a)(this,[this.size])},Object(Tn.d)().prototype.as2D=function(e,t){return this.throwIfDisposed(),Object(j.a)(this,[e,t])},Object(Tn.d)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Object(j.a)(this,[e,t,n])},Object(Tn.d)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Object(j.a)(this,[e,t,n,r])},Object(Tn.d)().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Object(j.a)(this,[e,t,n,r,a])};var Dn=n("Ig+c");Object(Tn.d)().prototype.asin=function(){return this.throwIfDisposed(),Object(Dn.a)(this)};var Mn=n("3FnS");Object(Tn.d)().prototype.asinh=function(){return this.throwIfDisposed(),Object(Mn.a)(this)};var zn=n("fjZN");Object(Tn.d)().prototype.atan=function(){return this.throwIfDisposed(),Object(zn.a)(this)};var Ln=n("YAKK");Object(Tn.d)().prototype.atan2=function(e){return this.throwIfDisposed(),Object(Ln.a)(this,e)};var Pn=n("0ahe");Object(Tn.d)().prototype.atanh=function(){return this.throwIfDisposed(),Object(Pn.a)(this)};var Bn=n("l0gX");Object(Tn.d)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Object(Bn.a)(this,e,t,n,r)},Object(Tn.d)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Object(an.a)(this,e,t)};var Vn=n("cdtJ");Object(Tn.d)().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Vn.a)(this,e,t,n,r,a)};var Wn=n("SNsm");Object(Tn.d)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Object(Wn.a)(this,e)},Object(Tn.d)().prototype.cast=function(e){return this.throwIfDisposed(),Object(p.a)(this,e)};var Un=n("WWBm");Object(Tn.d)().prototype.ceil=function(){return this.throwIfDisposed(),Object(Un.a)(this)};var Gn=n("wI/y");Object(Tn.d)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Object(Gn.a)(this,e,t)},Object(Tn.d)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Tn.a&&(e=[e]),Object(on.a)([this,...e],t)};var Kn=n("dnXz");Object(Tn.d)().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Kn.a)(this,e,t,n,r,a,s)};var Hn=n("zR+/");Object(Tn.d)().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Hn.a)(this,e,t,n,r,a)},Object(Tn.d)().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(he.a)(this,e,t,n,r,a,s)},Object(Tn.d)().prototype.cos=function(){return this.throwIfDisposed(),Object(qt.a)(this)},Object(Tn.d)().prototype.cosh=function(){return this.throwIfDisposed(),Object(Yt.a)(this)},Object(Tn.d)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Object(Oe.a)(this,e,t,n)};var qn=n("Nk7E");Object(Tn.d)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Object(qn.a)(this,e,t)};var Xn=n("g4+C");Object(Tn.d)().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Xn.a)(this,e,t,n,r,a,s)};var Yn=n("wXC5");Object(Tn.d)().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Yn.a)(this,e,t,n,r,a)};var Zn=n("ARu+");Object(Tn.d)().prototype.divNoNan=function(e){return this.throwIfDisposed(),Object(Zn.a)(this,e)},Object(Tn.d)().prototype.div=function(e){return this.throwIfDisposed(),Object(g.a)(this,e)};var Jn=n("Kfzt");Object(Tn.d)().prototype.dot=function(e){return this.throwIfDisposed(),Object(Jn.a)(this,e)};var Qn=n("njhW");Object(Tn.d)().prototype.elu=function(){return this.throwIfDisposed(),Object(Qn.a)(this)},Object(Tn.d)().prototype.equal=function(e){return this.throwIfDisposed(),Object(nt.a)(this,e)};var er=n("jgXy");Object(Tn.d)().prototype.erf=function(){return this.throwIfDisposed(),Object(er.a)(this)},Object(Tn.d)().prototype.exp=function(){return this.throwIfDisposed(),Object(Ae.a)(this)},Object(Tn.d)().prototype.expandDims=function(e){return this.throwIfDisposed(),Object(wn.a)(this,e)};var tr=n("G6IW");Object(Tn.d)().prototype.expm1=function(){return this.throwIfDisposed(),Object(tr.a)(this)};var nr=n("Grcp");Object(Tn.d)().prototype.fft=function(){return this.throwIfDisposed(),Object(nr.a)(this)},Object(Tn.d)().prototype.flatten=function(){return this.throwIfDisposed(),Object(j.a)(this,[this.size])},Object(Tn.d)().prototype.floor=function(){return this.throwIfDisposed(),Object(gt.a)(this)};var rr=n("UI8N");Object(Tn.d)().prototype.floorDiv=function(e){return this.throwIfDisposed(),Object(rr.a)(this,e)},Object(Tn.d)().prototype.gather=function(e,t){return this.throwIfDisposed(),Object(On.a)(this,e,t)},Object(Tn.d)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Object(ee.a)(this,e)},Object(Tn.d)().prototype.greater=function(e){return this.throwIfDisposed(),Object(Xe.a)(this,e)};var ar=n("THqV");Object(Tn.d)().prototype.ifft=function(){return this.throwIfDisposed(),Object(ar.a)(this)};var sr=n("adw1");Object(Tn.d)().prototype.irfft=function(){return this.throwIfDisposed(),Object(sr.a)(this)};var ir=n("/AvP");Object(Tn.d)().prototype.isFinite=function(){return this.throwIfDisposed(),Object(ir.a)(this)};var or=n("WYAb");Object(Tn.d)().prototype.isInf=function(){return this.throwIfDisposed(),Object(or.a)(this)};var ur=n("b++O");Object(Tn.d)().prototype.isNaN=function(){return this.throwIfDisposed(),Object(ur.a)(this)};var cr=n("bzdD");Object(Tn.d)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Object(cr.a)(this,e)},Object(Tn.d)().prototype.lessEqual=function(e){return this.throwIfDisposed(),Object(te.a)(this,e)},Object(Tn.d)().prototype.less=function(e){return this.throwIfDisposed(),Object(st.a)(this,e)};var lr=n("4QEz");Object(Tn.d)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Object(lr.a)(this,e,t,n,r)};var dr=n("wxQM");Object(Tn.d)().prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(dr.a)(this)};var hr=n("gErV");Object(Tn.d)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Object(hr.a)(this,e)};var pr=n("r9q9");Object(Tn.d)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Object(pr.a)(this,e,t)},Object(Tn.d)().prototype.log=function(){return this.throwIfDisposed(),Object(St.a)(this)};var fr=n("RrGL");Object(Tn.d)().prototype.log1p=function(){return this.throwIfDisposed(),Object(fr.a)(this)},Object(Tn.d)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Object(ne.a)(this,e)},Object(Tn.d)().prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Vt.a)(this)};var mr=n("8YN0");Object(Tn.d)().prototype.logicalOr=function(e){return this.throwIfDisposed(),Object(mr.a)(this,e)};var br=n("0l+w");Object(Tn.d)().prototype.logicalXor=function(e){return this.throwIfDisposed(),Object(br.a)(this,e)},Object(Tn.d)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Object(H.a)(this,e,t,n)};var gr=n("n+ZZ");Object(Tn.d)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Object(gr.a)(this,e,t,n,r)};var yr=n("wCH+");Object(Tn.d)().prototype.max=function(e,t){return this.throwIfDisposed(),Object(yr.a)(this,e,t)},Object(Tn.d)().prototype.maximum=function(e){return this.throwIfDisposed(),Object(kn.a)(this,e)};var xr=n("Ei6o");Object(Tn.d)().prototype.mean=function(e,t){return this.throwIfDisposed(),Object(xr.a)(this,e,t)};var vr=n("rm0a");Object(Tn.d)().prototype.min=function(e,t){return this.throwIfDisposed(),Object(vr.a)(this,e,t)};var wr=n("8OX7");Object(Tn.d)().prototype.minimum=function(e){return this.throwIfDisposed(),Object(wr.a)(this,e)};var Or=n("k9tH");Object(Tn.d)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Object(Or.a)(this,e,t)};var kr=n("RhH0");Object(Tn.d)().prototype.mod=function(e){return this.throwIfDisposed(),Object(kr.a)(this,e)},Object(Tn.d)().prototype.mul=function(e){return this.throwIfDisposed(),Object(f.a)(this,e)},Object(Tn.d)().prototype.neg=function(){return this.throwIfDisposed(),Object(y.a)(this)};var Nr=n("91d6");Object(Tn.d)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Object(Nr.a)(this,e,t,n)};var Ir=n("1N4k");Object(Tn.d)().prototype.notEqual=function(e){return this.throwIfDisposed(),Object(Ir.a)(this,e)};var jr=n("4iwy");Object(Tn.d)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Object(jr.a)(this,e,t,n)};var Sr=n("DbV5");Object(Tn.d)().prototype.onesLike=function(){return this.throwIfDisposed(),Object(Sr.a)(this)},Object(Tn.d)().prototype.pad=function(e,t){return this.throwIfDisposed(),Object(Jt.a)(this,e,t)};var Cr=n("6vQL");Object(Tn.d)().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Cr.a)(this,e,t,n,r,a)},Object(Tn.d)().prototype.pow=function(e){return this.throwIfDisposed(),Object(Ct.a)(this,e)};var Tr=n("Ug8H");Object(Tn.d)().prototype.prelu=function(e){return this.throwIfDisposed(),Object(Tr.a)(this,e)};var Ar=n("867m");Object(Tn.d)().prototype.prod=function(e,t){return this.throwIfDisposed(),Object(Ar.a)(this,e,t)};var Er=n("tQDl");Object(Tn.d)().prototype.reciprocal=function(){return this.throwIfDisposed(),Object(Er.a)(this)};var $r=n("kXpR");Object(Tn.d)().prototype.relu=function(){return this.throwIfDisposed(),Object($r.a)(this)};var Fr=n("Rqg+");Object(Tn.d)().prototype.relu6=function(){return this.throwIfDisposed(),Object(Fr.a)(this)},Object(Tn.d)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Object(j.a)(this,e.shape)},Object(Tn.d)().prototype.reshape=function(e){return this.throwIfDisposed(),Object(j.a)(this,e)};var _r=n("c/ib");Object(Tn.d)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Object(_r.a)(this,e,t,n)};var Rr=n("D4ac");Object(Tn.d)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Object(Rr.a)(this,e,t,n)},Object(Tn.d)().prototype.reverse=function(e){return this.throwIfDisposed(),Object(zt.a)(this,e)};var Dr=n("th0q");Object(Tn.d)().prototype.rfft=function(){return this.throwIfDisposed(),Object(Dr.a)(this)};var Mr=n("CKnt");Object(Tn.d)().prototype.round=function(){return this.throwIfDisposed(),Object(Mr.a)(this)},Object(Tn.d)().prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Me.a)(this)};var zr=n("s57M");Object(Tn.d)().prototype.selu=function(){return this.throwIfDisposed(),Object(zr.a)(this)};var Lr=n("EWu9");Object(Tn.d)().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Lr.a)(this,e,t,n,r,a,s)},Object(Tn.d)().prototype.sigmoid=function(){return this.throwIfDisposed(),Object(nn.a)(this)};var Pr=n("Hfat");Object(Tn.d)().prototype.sign=function(){return this.throwIfDisposed(),Object(Pr.a)(this)},Object(Tn.d)().prototype.sin=function(){return this.throwIfDisposed(),Object(ge.a)(this)},Object(Tn.d)().prototype.sinh=function(){return this.throwIfDisposed(),Object(xe.a)(this)},Object(Tn.d)().prototype.slice=function(e,t){return this.throwIfDisposed(),Object(mt.a)(this,e,t)};var Br=n("X4fa");Object(Tn.d)().prototype.softmax=function(e){return this.throwIfDisposed(),Object(Br.a)(this,e)};var Vr=n("n/2y");Object(Tn.d)().prototype.softplus=function(){return this.throwIfDisposed(),Object(Vr.a)(this)},Object(Tn.d)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Object(X.a)(this,e,t)},Object(Tn.d)().prototype.split=function(e,t){return this.throwIfDisposed(),Object(ie.a)(this,e,t)},Object(Tn.d)().prototype.sqrt=function(){return this.throwIfDisposed(),Object(v.a)(this)},Object(Tn.d)().prototype.square=function(){return this.throwIfDisposed(),Object(w.a)(this)};var Wr=n("QYQ3");Object(Tn.d)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Object(Wr.a)(this,e)};var Ur=n("0fRV");Object(Tn.d)().prototype.squeeze=function(e){return this.throwIfDisposed(),Object(Ur.a)(this,e)},Object(Tn.d)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Tn.a?[this,e]:[this,...e];return Object(xn.a)(n,t)},Object(Tn.d)().prototype.step=function(e){return this.throwIfDisposed(),Object(m.a)(this,e)};var Gr=n("3hph");Object(Tn.d)().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Object(Gr.a)(this,e,t,n,r,a,s,i,o)},Object(Tn.d)().prototype.sub=function(e){return this.throwIfDisposed(),Object(O.a)(this,e)},Object(Tn.d)().prototype.sum=function(e,t){return this.throwIfDisposed(),Object(S.a)(this,e,t)};var Kr=n("0wrZ");Object(Tn.d)().prototype.tan=function(){return this.throwIfDisposed(),Object(Kr.a)(this)};var Hr=n("iIjY");Object(Tn.d)().prototype.tanh=function(){return this.throwIfDisposed(),Object(Hr.a)(this)},Object(Tn.d)().prototype.tile=function(e){return this.throwIfDisposed(),Object(ze.a)(this,e)},Object(Tn.d)().prototype.toBool=function(){return this.throwIfDisposed(),Object(p.a)(this,"bool")},Object(Tn.d)().prototype.toFloat=function(){return this.throwIfDisposed(),Object(p.a)(this,"float32")},Object(Tn.d)().prototype.toInt=function(){return this.throwIfDisposed(),Object(p.a)(this,"int32")};var qr=n("VhY8");Object(Tn.d)().prototype.topk=function(e,t){return this.throwIfDisposed(),Object(qr.a)(this,e,t)},Object(Tn.d)().prototype.transpose=function(e){return this.throwIfDisposed(),Object(ke.a)(this,e)};var Xr=n("hT5K");let Yr;function Zr(){return null==Yr&&(Yr=Object(d.backend)().epsilon()),Yr}Object(Tn.d)().prototype.unique=function(e){return this.throwIfDisposed(),Object(Xr.a)(this,e)},Object(Tn.d)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Object(Pe.a)(this,e,t)},Object(Tn.d)().prototype.unstack=function(e){return this.throwIfDisposed(),Object(Nt.a)(this,e)},Object(Tn.d)().prototype.where=function(e,t){return this.throwIfDisposed(),Object(re.a)(e,this,t)},Object(Tn.d)().prototype.zerosLike=function(){return this.throwIfDisposed(),Object(A.a)(this)};class Jr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jr.prototype)}}class Qr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qr.prototype)}}class ea extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ea.prototype)}}class ta extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ta.prototype)}}class na extends Error{constructor(e){super(e),Object.setPrototypeOf(this,na.prototype)}}Error;function ra(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function aa(e,t){if(!e)throw new na(t)}function sa(e,t){let n=0;for(const r of e)r===t&&n++;return n}function ia(e){return 1===e.length?e[0]:e}function oa(e){return Array.isArray(e)?e:[e]}function ua(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ca(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let la={};function da(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ha(e,t={},n={},r="object",a=!1){if("string"===typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in la)s=la[a];else if(s=t[a],null==s)throw new ea(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new ea(r+": Improper config format: "+JSON.stringify(s)+".\n'className' and 'config' must set.");const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in la?[o,u]=la.className:i in t&&([o,u]=t[i]),null==o)throw new ea(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const n of Object.keys(la))e[n]=la[n];for(const a of Object.keys(n))e[a]=n[a];s.config.customObjects=e;const t=Object.assign({},la);for(const a of Object.keys(n))la[a]=n[a];!function e(t){if(null!=t&&"object"===typeof t)if(Array.isArray(t))t.forEach(t=>e(t));else{const n=Object.keys(t);for(const r of n){const n=t[r];null!=n&&"object"===typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!==typeof n.value?e(n):t[r]=n.value)}}}(s.config);const r=u(o,s.config,n,a);return la=Object.assign({},t),r}{const e=Object.assign({},la);for(const r of Object.keys(n))la[r]=n[r];const t=new o(s.config);return la=Object.assign({},e),t}}}function pa(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function fa(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function ma(e){if(null==e)throw new ea("Invalid value in obj: "+JSON.stringify(e));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function ba(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ea(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function ga(e,t,n=0,r=1/0){return aa(n>=0),aa(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function ya(e,t){Array.isArray(e)?(d.util.assert(e.length>0,()=>t+" is unexpectedly an empty array."),e.forEach((e,n)=>ya(e,`element ${n+1} of ${t}`))):d.util.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got `+function e(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>e(t)).join(",")+"]":"string"===typeof t?`"${t}"`:""+t}(e)+".")}function xa(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function va(e,t){return Object(d.tidy)(()=>d.sqrt(d.sum(d.mul(e,e),t,!0)))}class wa extends d.serialization.Serializable{getConfig(){return{}}}class Oa extends wa{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(d.tidy)(()=>{const t=va(e,this.axis),n=d.clipByValue(t,0,this.maxValue);return d.mul(e,d.div(n,d.add(Zr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Oa.className="MaxNorm",d.serialization.registerClass(Oa);class ka extends wa{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(d.tidy)(()=>d.div(e,d.add(Zr(),va(e,this.axis))))}getConfig(){return{axis:this.axis}}}ka.className="UnitNorm",d.serialization.registerClass(ka);class Na extends wa{apply(e){return d.relu(e)}}Na.className="NonNeg",d.serialization.registerClass(Na);class Ia extends wa{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(d.tidy)(()=>{const t=va(e,this.axis),n=d.add(d.mul(this.rate,d.clipByValue(t,this.minValue,this.maxValue)),d.mul(1-this.rate,t));return d.mul(e,d.div(n,d.add(Zr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Ia.className="MinMaxNorm",d.serialization.registerClass(Ia);const ja={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Sa(e){return da(e)}function Ca(e,t={}){return ha(e,d.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function Ta(e){if(null==e)return null;if("string"===typeof e){return Ca({className:e in ja?ja[e]:e,config:{}})}return e instanceof wa?e:Ca(e)}function Aa(e){return new Oa(e)}function Ea(e){return new ka(e)}function $a(){return new Na}function Fa(e){return new Ia(e)}const _a=["channelsFirst","channelsLast"],Ra=["nearest","bilinear"],Da=["valid","same","causal"],Ma=["max","avg"],za=["sum","mul","concat","ave"],La=new Map;function Pa(e){ba(_a,"DataFormat",e)}function Ba(e){ba(Da,"PaddingMode",e)}function Va(e){ba(Ma,"PoolMode",e)}const Wa=[];function Ua(e,t){Wa.push(e);try{const e=t();return Wa.pop(),e}catch(n){throw Wa.pop(),n}}function Ga(e){if(!qa(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Wa.length?"":Wa.join("/")+"/")+e}function Ka(e){if(!qa(e))throw new Error("Not a valid tensor name: '"+e+"'");La.has(e)||La.set(e,0);const t=La.get(e);if(La.set(e,La.get(e)+1),t>0){const n=`${e}_${t}`;return La.set(n,1),n}return e}const Ha=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function qa(e){return!!e.match(Ha)}function Xa(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Ya(e){return e=Array.isArray(e)?new Float32Array(e):e,Object(d.tensor1d)(e)}function Za(e){return d.min(Ya(e)).dataSync()[0]}function Ja(e){return d.max(Ya(e)).dataSync()[0]}function Qa(e,t){if(t<e)throw new ea(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function es(e,t){return e.asType(t)}function ts(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function ns(e,t,n){return Object(d.tidy)(()=>{switch(e.rank){case 1:return d.slice1d(e,t,n);case 2:return d.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return d.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return d.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return d.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return d.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ea("sliceAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}})}function rs(e,t,n){return Object(d.tidy)(()=>{switch(e.rank){case 1:return d.slice1d(e,t,n);case 2:return d.slice2d(e,[0,t],[e.shape[0],n]);case 3:return d.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return d.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ea("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function as(e,t,n,r){return Object(d.tidy)(()=>{switch(e.rank){case 1:return d.slice1d(e,t,n);case 2:switch(r){case 1:return ns(e,t,n);case 2:return rs(e,t,n);default:throw new ea("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return ns(e,t,n);case 2:return d.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return rs(e,t,n);default:throw new ea("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return ns(e,t,n);case 2:return d.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return d.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return rs(e,t,n);default:throw new ea("The axis is not within the rank of the tensor "+r)}default:throw new ea("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function ss(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),d.concat(e,t)}function is(e,t){switch(e.rank){case 1:return d.concat1d([e,t]);case 2:return d.concat2d([e,t],0);case 3:return d.concat3d([e,t],0);case 4:return d.concat4d([e,t],0);default:throw new ea("concatAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}function os(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ea(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return d.tile(e,t)}function us(e,t=0,n=1,r,a){return d.randomNormal(e,t,n,r,a)}function cs(e,t,n,r){if(e.rank<2||t.rank<2)throw new ta(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ta(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = `+t.shape)}if(2===e.rank&&2===t.rank){const a=!1,s=!1;return d.fused.matMul({a:e,b:t,transposeA:a,transposeB:s,bias:r?hs(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),s=a.pop();e=e.reshape([-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),c=[...i,o],l=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=t.transpose(l).reshape([u,-1]);const h=[...a,...c],p=!1,f=!1;return d.fused.matMul({a:e,b:t,transposeA:p,transposeB:f,bias:r?hs(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function ls(e,t,n){return Object(d.tidy)(()=>(t=Array.isArray(t)?Object(d.tensor1d)(t,"int32"):t.toInt(),d.gather(e,t,n)))}function ds(e){return d.mul(e,e)}function hs(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ea("Unexpected bias dimensions: "+t.rank+"; expected it to be 1 or "+e);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new ea("Unsupported input rank by biasAdd: "+t.rank)}function ps(e,t,n){return Object(d.tidy)(()=>(null==n&&(n="channelsLast"),Pa(n),e.add(hs(e.rank,t,n))))}function fs(e,t,n,r){return Object(d.tidy)(()=>d.dropout(e,t,n,r))}function ms(e,t,n=!1){return n?e():t()}const bs=["fanIn","fanOut","fanAvg"],gs=["normal","uniform","truncatedNormal"];class ys extends d.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class xs extends ys{apply(e,t){return Object(d.zeros)(e,t)}}xs.className="Zeros",d.serialization.registerClass(xs);class vs extends ys{apply(e,t){return Object(d.ones)(e,t)}}vs.className="Ones",d.serialization.registerClass(vs);class ws extends ys{constructor(e){if(super(),"object"!==typeof e)throw new ea("Expected argument of type ConstantConfig but got "+e);if(void 0===e.value)throw new ea("config must have value set but got "+e);this.value=e.value}apply(e,t){return Object(d.tidy)(()=>Object(d.mul)(Object(d.scalar)(this.value),Object(d.ones)(e,t)))}getConfig(){return{value:this.value}}}ws.className="Constant",d.serialization.registerClass(ws);class Os extends ys{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Object(d.randomUniform)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Os.className="RandomUniform",d.serialization.registerClass(Os);class ks extends ys{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ta(`randomNormal does not support dType ${t}.`);return us(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ks.className="RandomNormal",d.serialization.registerClass(ks);class Ns extends ys{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ta(`truncatedNormal does not support dType ${t}.`);return Object(d.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ns.className="TruncatedNormal",d.serialization.registerClass(Ns);class Is extends ys{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Object(d.tidy)(()=>{if(2!==e.length||e[0]!==e[1])throw new ea("Identity matrix initializer can only be used for 2D square matrices.");return Object(d.mul)(this.gain,Object(d.eye)(e[0]))})}getConfig(){return{gain:this.gain}}}Is.className="Identity",d.serialization.registerClass(Is);class js extends ys{constructor(e){if(super(),e.scale<0)throw new ea("scale must be a positive float. Got: "+e.scale);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,ba(bs,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){ba(gs,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Pa(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Xa(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Xa(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Xa(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ta(`${this.getClassName()} does not support dType ${t}.`);return Object(d.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return Object(d.randomUniform)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}js.className="VarianceScaling",d.serialization.registerClass(js);class Ss extends js{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return js.className}}Ss.className="GlorotUniform",d.serialization.registerClass(Ss);class Cs extends js{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return js.className}}Cs.className="GlorotNormal",d.serialization.registerClass(Cs);class Ts extends js{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return js.className}}Ts.className="HeNormal",d.serialization.registerClass(Ts);class As extends js{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return js.className}}As.className="HeUniform",d.serialization.registerClass(As);class Es extends js{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return js.className}}Es.className="LeCunNormal",d.serialization.registerClass(Es);class $s extends js{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return js.className}}$s.className="LeCunNormal",d.serialization.registerClass($s);class Fs extends ys{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new ta("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Object(d.tidy)(()=>{if(e.length<2)throw new ta("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=us(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=d.linalg.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),Object(d.mul)(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Fs.className="Orthogonal",d.serialization.registerClass(Fs);const _s={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Rs(e,t={}){return ha(e,d.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function Ds(e){return da(e)}function Ms(e){if("string"===typeof e){const t=e in _s?_s[e]:e;if("GlorotNormal"===t)return new Cs;if("GlorotUniform"===t)return new Ss;if("HeNormal"===t)return new Ts;if("HeUniform"===t)return new As;if("LeCunNormal"===t)return new Es;if("LeCunUniform"===t)return new $s;{const e={};return e.className=t,e.config={},Rs(e)}}return e instanceof ys?e:Rs(e)}function zs(){return new xs}function Ls(){return new vs}function Ps(e){return new ws(e)}function Bs(e){return new Os(e)}function Vs(e){return new ks(e)}function Ws(e){return new Ns(e)}function Us(e){return new Is(e)}function Gs(e){return new js(e)}function Ks(e){return new Ss(e)}function Hs(e){return new Cs(e)}function qs(e){return new Ts(e)}function Xs(e){return new As(e)}function Ys(e){return new Es(e)}function Zs(e){return new $s(e)}function Js(e){return new Fs(e)}let Qs=0;function ei(){return Qs++}const ti={};function ni(e=""){return e in ti||(ti[e]=0),ti[e]+=1,e+ti[e].toString()}function ri(e){return Array.isArray(e)&&Array.isArray(e[0])}function ai(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function si(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ea("Expected Tensor length to be 1; got "+e.length);t=e[0]}else t=e;return t}function ii(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new ea("Expected exactly 1 Shape; got "+e.length)}return e}function oi(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}class ui{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=ei(),n=null==n?"Variable":n,this.originalName=Ga(n),this.name=Ka(this.originalName),this.trainable_=r,this.constraint=a,this.val=d.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function ci(e){return e.map(e=>e.read())}function li(e){e.forEach(e=>{e[0].write(e[1])})}class di{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class hi{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=ei(),null!=s&&(this.originalName=Ga(s),this.name=Ka(this.originalName)),this.rank=t.length}}let pi=0;class fi{constructor(e,t){this.callArgs=t,this.id=pi++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let mi=0;class bi extends d.serialization.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=mi++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ua(e)+"_"+ni(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Qr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ea(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ia(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ia(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Jr("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Jr("Layer "+this.name+" is not connected, no input to return.");return ia(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Jr("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Jr("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return ia(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=oa(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=oa(this.inputSpec);if(e.length!==t.length)throw new ea(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: `+e);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new ea(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new ea(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new ea(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new ea(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new ea(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new ea(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=oa(e);let r=!0;for(const s of n)if(!(s instanceof hi)){r=!1;break}let a=!0;for(const s of n)if(s instanceof hi){a=!1;break}if(r===a)throw new ea("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ua(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of oa(e))t.push(n.shape);this.build(ia(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=oa(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=ia(s),null!=this.activityRegularizer)throw new ta("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=oa(e);const t=[];for(const n of e)t.push(n.shape);return ia(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new hi(s,n,this,oa(e),t,this.name,r)):new hi(s,r,this,oa(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new ta("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(e)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Jr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Jr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Qr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return oi(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ci(e?this.trainableWeights:this.weights)}setWeights(e){Object(d.tidy)(()=>{const t=this.weights;if(t.length!==e.length)throw new ea(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=ci(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!d.util.arraysEqual(s.shape,o.shape))throw new ea(`Layer weight shape ${s.shape} not compatible with provided weight shape `+o.shape);n.push([i,o])}li(n)})}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new ea(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Ms("zeros"));const o=r.apply(t,n),u=new ui(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=oa(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=oa(e);t=oa(t),n=oa(n),r=oa(r),a=ai(a),s=ai(s);const u=[],c=[],l=[];for(const d of o)u.push(d.sourceLayer),c.push(d.nodeIndex),l.push(d.tensorIndex);new fi({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}class gi extends bi{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:ni("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ea("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ea("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ea("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new hi(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new fi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ea("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function yi(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ea("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new gi({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function xi(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Object(d.dispose)(r)}}function vi(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var wi;gi.className="InputLayer",d.serialization.registerClass(gi),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(wi||(wi={}));class Oi{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class ki{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Ni extends Oi{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const a=Object(d.tidy)(()=>Object(d.add)(this.totals[r],Object(d.mul)(e,n)));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Object(d.tidy)(()=>{const e=Object(d.mul)(Object(d.div)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Object(d.keep)(t[n])}))}}class Ii extends Oi{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)if("number"!==typeof r[s]){const i=r[s];e.push(i.data()),t.push(a),n.push(s)}}const r=await Promise.all(e);for(let a=0;a<r.length;++a){this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}}}class ji extends Oi{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");d.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=d.util.now();return(...a)=>{const s=d.util.now();return s-r<t||(r=s,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await xi(n),r.push(this.yield(e,t,n))),r.push(Object(d.nextFrame)()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await xi(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await xi(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Object(d.nextFrame)()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await xi(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await xi(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Object(d.nextFrame)()):d.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await xi(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await xi(e),await this.trainEnd(e))}}function Si(e,t){if(null==e&&(e={}),e instanceof Oi)return[e];if(Array.isArray(e)&&e[0]instanceof Oi)return e;return oa(e).map(e=>new ji(e,t))}class Ci{constructor(){}static registerCallbackConstructor(e,t){d.util.assert(e>=0&&Number.isInteger(e),()=>"Verbosity level is expected to be an integer >= 0, but got "+e),Ci.checkForDuplicate(t),null==Ci.constructors[e]&&(Ci.constructors[e]=[]),Ci.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Ci.constructors){Ci.constructors[+t].forEach(t=>{if(t===e)throw new ea("Duplicate callback constructor.")})}}static clear(){Ci.constructors={}}static createCallbacks(e){const t=[];for(const n in Ci.constructors){const r=+n;e>=r&&t.push(...Ci.constructors[r])}return t.map(e=>new e)}}function Ti(e,t,n,r,a,s,i,o,u){const c=new Ii,l=[new Ni,...Ci.createCallbacks(t)];null!=e&&l.push(...e),l.push(c);const d=new ki(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:c}}function Ai(e,t={},n=!1){return ha(e,d.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function Ei(e,t){return Object(d.tidy)(()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=d.sum(ds(e),t,!0),r=d.fill(n.shape,Zr()),a=d.sqrt(d.maximum(n,r));return d.div(e,a)})}function $i(e,t){return Object(d.tidy)(()=>d.mean(ds(d.sub(t,e)),-1))}function Fi(e,t){return Object(d.tidy)(()=>d.mean(d.abs(d.sub(t,e)),-1))}function _i(e,t){return Object(d.tidy)(()=>{const n=d.sub(e,t),r=d.clipByValue(d.abs(e),Zr(),Number.MAX_VALUE),a=d.abs(d.div(n,r));return d.mul(100,d.mean(a,-1))})}function Ri(e,t){return Object(d.tidy)(()=>{const n=d.clipByValue(t,Zr(),Number.MAX_VALUE),r=d.log(d.add(1,n)),a=d.clipByValue(e,Zr(),Number.MAX_VALUE),s=d.log(d.add(1,a));return d.mean(ds(d.sub(r,s)),-1)})}function Di(e,t,n=!1){return Object(d.tidy)(()=>{if(n)t=d.softmax(t);else{const e=d.sum(t,t.shape.length-1,!0);t=d.div(t,e)}return t=d.clipByValue(t,Zr(),1-Zr()),d.neg(d.sum(d.mul(e.toFloat(),d.log(t)),t.shape.length-1))})}function Mi(e,t,n=!1){return Object(d.tidy)(()=>{const r=d.floor(function(e){const t=[Xa(e.shape)];return e.reshape(t)}(e)).toInt(),a=(t=d.clipByValue(t,Zr(),1-Zr())).shape;return Di(d.oneHot(r,a[a.length-1]).reshape(a),t,n)})}function zi(e,t){return Object(d.tidy)(()=>{let n;return n=d.clipByValue(t,Zr(),1-Zr()),n=d.log(d.div(n,d.sub(1,n))),d.mean(function(e,t){if(!d.util.arraysEqual(e.shape,t.shape))throw new ea(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Object(d.tidy)(()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())})}(e,n),-1)})}function Li(e,t){return Object(d.tidy)(()=>{const n=d.clipByValue(e,Zr(),1),r=d.clipByValue(t,Zr(),1);return d.sum(d.mul(e,d.log(d.div(n,r))),-1)})}function Pi(e,t){return Object(d.tidy)(()=>{const n=Ei(e,-1),r=Ei(t,-1),a=d.mul(n,r);return d.neg(d.sum(a,-1))})}Ci.constructors={};const Bi={meanSquaredError:$i,meanAbsoluteError:Fi,meanAbsolutePercentageError:_i,meanSquaredLogarithmicError:Ri,squaredHinge:function(e,t){return Object(d.tidy)(()=>{const n=d.maximum(0,d.sub(1,d.mul(e,t)));return d.mean(ds(n),-1)})},hinge:function(e,t){return Object(d.tidy)(()=>{const n=d.maximum(0,d.sub(1,d.mul(e,t)));return d.mean(n,-1)})},categoricalHinge:function(e,t){return Object(d.tidy)(()=>{const n=d.sum(d.mul(e,t),-1),r=d.max(d.mul(d.sub(1,e),t),-1);return d.maximum(0,d.add(1,d.sub(r,n)))})},logcosh:function(e,t){return Object(d.tidy)(()=>{const n=Math.log(2),r=d.sub(t,e),a=d.sub(d.add(r,d.softplus(d.mul(-2,r))),n);return d.mean(a,-1)})},categoricalCrossentropy:Di,sparseCategoricalCrossentropy:Mi,binaryCrossentropy:zi,kullbackLeiblerDivergence:Li,poisson:function(e,t){return Object(d.tidy)(()=>{const n=d.log(d.add(Zr(),t));return d.mean(d.sub(t,d.mul(e,n)),-1)})},cosineProximity:Pi};function Vi(e){if("string"===typeof e){if(e in Bi)return Bi[e];let t="Unknown loss "+e;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ea(t)}return e}function Wi(e,t){return Object(d.tidy)(()=>{const n=d.mul(.5,d.onesLike(t)),r=es(d.greater(t,n),e.dtype);return d.mean(d.equal(e,r),-1)})}function Ui(e,t){return Object(d.tidy)(()=>es(d.equal(d.argMax(e,-1),d.argMax(t,-1)),"float32"))}function Gi(e,t){return Object(d.tidy)(()=>d.logicalAnd(e.equal(1),t.equal(1)).sum().cast("float32"))}function Ki(e,t){return Object(d.tidy)(()=>{const n=Gi(e,t),r=function(e,t){return Object(d.tidy)(()=>d.logicalAnd(e.equal(0),t.equal(1)).sum().cast("float32"))}(e,t),a=n.add(r);return d.where(d.greater(a,0),n.div(a),0).cast("float32")})}function Hi(e,t){return Object(d.tidy)(()=>{const n=Gi(e,t),r=function(e,t){return Object(d.tidy)(()=>d.logicalAnd(e.equal(1),t.equal(0)).sum().cast("float32"))}(e,t),a=n.add(r);return d.where(d.greater(a,0),n.div(a),0).cast("float32")})}function qi(e,t){return zi(e,t)}function Xi(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),d.equal(e,t).asType("float32")}const Yi=Di,Zi=Mi,Ji={binaryAccuracy:Wi,categoricalAccuracy:Ui,precision:Ki,categoricalCrossentropy:Yi,sparseCategoricalCrossentropy:Zi,mse:$i,MSE:$i,mae:Fi,MAE:Fi,mape:_i,MAPE:_i,cosine:Pi};function Qi(e){if("string"===typeof e&&e in Ji)return Ji[e];if("string"!==typeof e&&null!=e)return e;throw new ea("Unknown metric "+e)}function eo(e){if(aa(null!==e,"Unknown LossOrMetricFn "+e),"string"===typeof e)return e;{let t;for(const n of Object.keys(Bi))if(Bi[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Ji))if(Ji[n]===e){t=n;break}return void 0!==t?t:e.name}}function to(e,t,n=!1){if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!function e(t){if(null===t)return!0;if("object"===typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const n=Object.keys(t);for(const r of n){if("string"!==typeof r)return!1;if(!e(t[r]))return!1}return!0}if(Array.isArray(t)){for(const n of t)if(!e(n))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function no(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(const a of e.layers){let e=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),ro(s,n,r),r("=".repeat(t));const o=e.layers;for(let l=0;l<o.length;++l)a?ao(o[l],n,r):so(o[l],n,i,r),r((l===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?oi(e.collectedTrainableWeights):oi(e.trainableWeights);return t}(e),c=oi(e.nonTrainableWeights);r("Total params: "+(u+c)),r("Trainable params: "+u),r("Non-trainable params: "+c),r("_".repeat(t))}function ro(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function ao(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(a){r="multiple"}ro([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function so(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(c){a="multiple"}const s=[];for(const l of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let e=0;e<l.inboundLayers.length;++e){const t=l.inboundLayers[e].name,n=l.nodeIndices[e],r=l.tensorIndices[e];s.push(`${t}[${n}][${r}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];ro([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let l=1;l<s.length;++l)ro(["","","",s[l]],t,r)}function io(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function oo(e,t){if(null===e)return null;if("string"===typeof e)return ca(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];io(t,a,r)?n.push(r):n.push(oo(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"===typeof r)t[n]=r;else{const e=ca(n);t[e]=oo(r,e)}}return t}}const uo="3.5.0";class co{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof co)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ea(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Object(d.cast)(t,e.dtype)}catch(n){throw new ea(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof hi){if(null==this.id2Value[e.id])throw new ea("Nonexistent key: "+e.name);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ea("Feed dict has no SymbolicTensor name: "+e);return this.id2Value[t]}}getMask(e){if(e instanceof hi){if(null==this.id2Value[e.id])throw new ea("Nonexistent key: "+e.name);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ea("Feed dict has no SymbolicTensor name: "+e);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Object(d.dispose)(this.id2Mask)}}const lo={},ho={};function po(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(e=>e.name),u=[],c=t.names();for(const d of o)-1!==c.indexOf(d)?u.push(t.getValue(d)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const l=o.join(",")+"|"+t.names().join(",");let h,p;if(null==lo[l]){const e=function(e,t){d.util.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){const a=mo(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=mo(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach(e=>r[t].add(e))}}return{sorted:n,recipientCounts:fo(r)}}(i,t);h=e.sorted,p=e.recipientCounts,lo[l]=h,ho[l]=p}h=lo[l],p={},a||Object.assign(p,ho[l]);const f=new co(t);for(let m=0;m<h.length;++m){if(null!=r){const e=Object(d.memory)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=h[m],s=e.sourceLayer;if(s instanceof gi)continue;const i=[],c=[],l=[];let b=!1;for(const n of e.inputs){const e=f.getValue(n),r=f.getMask(n);i.push(e),c.push(r),null!=r&&(b=!0),a||(p[n.name]--,0!==p[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||l.push(e))}b&&((n=n||{}).mask=c[0]);const g=oa(s.apply(i,n));let y=null;s.supportsMasking&&(y=s.computeMask(i,c));const x=bo(e),v=Array.isArray(x)?x:[x];for(let t=0;t<v.length;++t){f.hasKey(v[t])||f.add(v[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(v[t].name);-1!==e&&(u[e]=g[t])}a||Object(d.dispose)(l)}return f.disposeMasks(),s?u:u[0]}function fo(e){const t={};for(const n in e)t[n]=e[n].size;return t}function mo(e,t){const n=new Set,r=[],a={};for(const o of t.names())n.add(o);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function bo(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class go extends bi{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=ni(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],fa(this.inputs).length!==this.inputs.length)throw new ea("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(e=>e.name));fa(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(e=>e.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const g of this.outputs){const e=g.sourceLayer,t=g.nodeIndex,n=g.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const g of this.inputs){const e=g.sourceLayer,t=g.nodeIndex,n=g.tensorIndex;aa(0===t,"input layer has >1 nodes"),aa(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let g=0;g<this.inputLayers.length;g++){const t=this.inputLayers[g];if(!(t instanceof gi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${g} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const g of this.outputLayers)this.outputNames.push(g.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const c=r.inboundNodes[a];if(-1!==n.indexOf(c))throw new Qr(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(c))return;this.containerNodes.add(go.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let s=0;s<l;s++){const e=c.inputTensors[s],r=c.inboundLayers[s],a=c.nodeIndices[s],i=c.tensorIndices[s];o(e,t,n,r,a,i)}for(t.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);i.push(c)},u=[],c=[];for(const g of this.outputs)o(g,u,c);const l=i.slice().reverse();for(const g of l){n[g.id]=g,g.id in t||(t[g.id]=0);let e=t[g.id];const s=null==r[g.outboundLayer.id]?0:r[g.outboundLayer.id];e=Math.max(e,s),r[g.outboundLayer.id]=e,a[g.outboundLayer.id]=g.outboundLayer,t[g.id]=e;for(let r=0;r<g.inboundLayers.length;r++){const a=g.inboundLayers[r],s=g.nodeIndices[r],i=a.inboundNodes[s],o=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(e+1,o),n[i.id]=i}}const d={};for(const g in t){const e=t[g];e in d||(d[e]=[]),d[e].push(n[g])}const h={};for(const g in r){const e=r[g];e in h||(h[e]=[]),h[e].push(a[g])}let p=Object.keys(h).map(e=>parseInt(e,10)).sort(pa);this.layers=[];for(const g of p){const e=h[g];e.sort((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0});for(const t of e)t instanceof go&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map(e=>parseInt(e,10)).sort(pa);const f=this.inputs.slice(),m=[];for(const g of p)for(const e of d[g]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Qr("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${t.name}". The following previous layers were accessed without issue: `+m);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const b=this.layers.map(e=>e.name);for(const g of b){const e=b.filter(e=>e===g).length;if(1!==e)throw new Qr(`The name "${g}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new fi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ea("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const s of this.layers)for(const e of s.weights){if(null!=n[e.originalName])throw new ea("Duplicate weight name: "+e.originalName);n[e.originalName]=e,r++}const a=[];for(const s in e){let r=s;if(null==n[s]){const e=s.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])a.push([n[r],e[s]]);else if(t)throw new ea("Provided weight data has no target variable: "+s);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ea(`${e.length} of ${r} weights are not set: `+e)}li(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers "+uo,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=function e(t,n){if(null===t||void 0===t)return null;if("string"===typeof t)return ua(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const r=[],a=t.length;for(let s=0;s<a;++s){const a=t[s];io(n,s,a)?r.push(a):r.push(e(a,n))}return r}{const n={};for(const r of Object.keys(t)){const a=t[r];n[ua(r)]="name"!==r&&"className"!==r||"string"!==typeof a?e(a,r):a}return n}}(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Object(d.tidy)(()=>{e=oa(e);const n=new co;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return po(this.outputs,n,t)})}computeMask(e,t){return Object(d.tidy)(()=>{let n;return e=oa(e),n=null==t?ra(null,e.length):oa(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=ai(e);if(t.length!==this.inputLayers.length)throw new ea(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],r=t[i];n[e.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(pa);if(r.length>1)for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++){const e=t.inboundLayers[i],a=t.nodeIndices[i],s=t.tensorIndices[i],o=n[`${e.name}_${a}_${s}`];r.push(o)}const a=ai(e.computeOutputShape(ia(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++){n[`${e.name}_${s}_${t}`]=a[t]}}}const a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${e.name}_${t}_${n}`;s.push(r)}for(let i=0;i<s.length;i++){const e=s[i];aa(e in n),a.push(n[e])}return ia(a)}runInternalGraph(e,t){null==t&&(t=ra(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],a=e[o],s=t[o];n[r.id]=[a,s]}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(pa);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=new Array;for(const t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,i,o,u,c={};if(null!=t.callArgs&&(c=t.callArgs),1===s.length){const[t,n]=s[0];null==c.mask&&(c.mask=n),o=oa(e.call(t,c)),u=oa(e.computeMask(t,n)),r=[t],i=[n]}else r=s.map(e=>e[0]),i=s.map(e=>e[1]),null==c.mask&&(c.mask=i),o=oa(e.call(r,c)),u=oa(e.computeMask(r,i));if(e.activityRegularizer)throw new ta("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const o of this.outputs){aa(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),a.push(e),s.push(t)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof go?1:0;for(let e=0;e<r.inboundNodes.length;e++){const a=go.nodeKey(r,e);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new ea(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new ea("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new ea("No such layer: "+e)}calculateLosses(){return Object(d.tidy)(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=go.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const e=i.getClassName(),r=i.getConfig(),a=[];for(let n=0;n<i.inboundNodes.length;n++){const e=i.inboundNodes[n],r=go.nodeKey(i,n);let o={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(s){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: `+e.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),o={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],s=e.nodeIndices[r],i=e.tensorIndices[r];let u=t[go.nodeKey(a,s)];null==u&&(u=0),n.push([a.name,u,i,o])}a.push(n)}}}const o={};o.name=i.name,o.className=e,o.config=r,o.inboundNodes=a,n.push(o)}e.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],a=go.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let s=t[a];null!==s&&void 0!==s||(s=0);const o=this.inputLayersTensorIndices[i];r.push([e.name,s,o])}e.inputLayers=r;const a=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=go.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let s=t[r];null!==s&&void 0!==s||(s=0);const o=this.outputLayersTensorIndices[i];a.push([e.name,s,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],c=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const l=a[o];if(l.inboundNodes.length<=u)return void i(e,t);const d=l.inboundNodes[u];n.push(d.outputTensors[c])}n.length>0&&e.apply(ia(n),r)}function u(e){const n=e.name,s=Ai(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s;e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new ea("Corrupted configuration, expected array for nodeData: "+e);i(s,e)})}const c=t.name,l=t.layers;for(const m of l)u(m);for(;!ma(s);)for(const e of l){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const d=[],h=[],p=t.inputLayers;for(const m of p){const e=m[0],t=m[1],n=m[2];aa(e in a);const r=a[e].inboundNodes[t].outputTensors;d.push(r[n])}const f=t.outputLayers;for(const m of f){const e=m[0],t=m[1],n=m[2];aa(e in a);const r=a[e].inboundNodes[t].outputTensors;h.push(r[n])}return new e({inputs:d,outputs:h,name:c})}get stateful(){if(this._stateful)throw new ea("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Object(d.tidy)(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function yo(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function xo(e,t){return yo(e,t,"classWeight")}async function vo(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Object(d.tidy)(()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());Object(d.dispose)(t);const a=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])}),Object(d.tensor1d)(a,"float32")}return null}function wo(e,t){return Object(d.mul)(e,t)}function Oo(e,t){let n,r;const a=t;n=a.xs,r=a.ys,d.util.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+t);const s=ko("input",e.inputNames,n),i=ko("output",e.outputNames,r),o=s[0].shape[0];d.util.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: `+JSON.stringify(e.inputNames)+")"),d.util.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: `+JSON.stringify(e.outputNames)+")");for(let u=0;u<s.length;u++)d.util.assert(s[u].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[u]} has ${s[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let u=0;u<i.length;u++)d.util.assert(i[u].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function ko(e,t,n){if(n instanceof d.Tensor)return[n];if(Array.isArray(n))return d.util.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const a of t){if(null==n[a])throw new ea(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function No(e,t,n){const r=null!=n.batchesPerEpoch;if(d.util.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),d.util.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),d.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),d.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),d.util.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(Io(n.validationData))d.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const e=function(e){if(3===e.length)throw new ta("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map(e=>"val_"+e)):u.slice();const l=Si(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=Ti(l,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,a,c);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,b=await t.iterator();for(;m<n.epochs;){const c={};await p.onEpochBegin(m);let l=0,h=0;for(r||(b=await t.iterator());!r||l<n.batchesPerEpoch;){const t=await b.next();if(r&&t.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+l+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=Oo(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=xo(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await vo(a[e],null,t[e]))}const c=r.concat(a).concat(i),f=o(c);d.dispose(c);for(let e=0;e<u.length;++e){const t=u[e],n=f[e];s[t]=n,d.keep(n)}await p.onBatchEnd(h,s),vi(s),h++,l++}if(r?l>=n.batchesPerEpoch:t.done){if(a){let t;t=Io(n.validationData)?oa(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):oa(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c["val_"+e.metricsNames[n]]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,c),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Io(e){return"function"===typeof e.iterator}function jo(e){d.util.assert(e>0&&Number.isInteger(e),()=>"batchSize is required to be a positive integer, but got "+e)}function So(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>ns(e,t,n-t)):ns(e,t,n-t)}function Co(e,t){return d.tidy(()=>null==e?null:Array.isArray(e)?e.map(e=>Co(e,t)):ls(e,"int32"===t.dtype?t:t.toInt()))}function To(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function Ao(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,c,l;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;jo(h);const p=!1,f=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,p,h);a=f[0],s=f[1],l=f[2];let m,b=!1;if(null!=r.validationData&&r.validationData.length>0){if(b=!0,2!==r.validationData.length)throw 3===r.validationData.length?new ta("validationData including sample weights is not supported yet."):new ea("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,h);u=n[0],c=n[1],m=u.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){b=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];u=So(a,e,t),a=So(a,0,e),c=So(s,e,t),s=So(s,0,e),m=u.concat(c)}else null!=r.validationSteps&&(b=!0);const g=a.concat(s).concat(l);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let v,w;b?(e.makeTestFunction(),v=e.testFunction,w=x.slice().concat(x.map(e=>"val_"+e))):(v=null,m=[],w=x.slice());const O=Si(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,u,c,l,h,p,f,m){null==a&&(a=32),null==s&&(s=1),null==l&&(l=!0),null==p&&(p=0);let b=!1;if(null!=u&&null!=c&&(b=!0),null!=m&&(b=!0,null==f))throw new ea("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=e.checkNumSamples(n,a,f,"steps_per_epoch");let y;null!=g&&(y=Qa(0,g)),null==i&&(i=1);const{callbackList:x,history:v}=Ti(o,i,s,p,g,f,a,b,h);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let w=p;w<s;++w){await x.onEpochBegin(w);const s={};if(null!=f)throw new ta("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new ta("batch shuffling is not implemneted yet");l&&d.util.shuffle(y);const i=Object(d.tensor1d)(y),o=To(g,a);for(let l=0;l<o.length;++l){const h={};if(await x.onBatchBegin(l,h),d.tidy(()=>{const p=o[l][0],f=o[l][1],m=ns(i,p,f-p);h.batch=l,h.size=f-p;const g=Co(n,m),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,d.keep(n)}if(l===o.length-1&&b){const t=e.testLoop(u,c,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];d.keep(a),s["val_"+n]=a}}}),await x.onBatchEnd(l,h),vi(h),e.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(w,s),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,x,h,r.epochs,r.verbose,O,v,m,r.shuffle,w,r.initialEpoch,null,null)}finally{e.isTraining=!1,$o(a,t),$o(s,n),$o(u,i),$o(c,o),null!=l&&d.dispose(l)}}function Eo(e){const t=[];e instanceof d.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(ts(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function $o(e,t){if(null==e)return;const n=[];if(t instanceof d.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const a in t){const e=t[a];n.push(e.id)}const r=[];if(e instanceof d.Tensor)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const a in e){const t=e[a];-1===n.indexOf(t.id)&&r.push(t)}r.forEach(e=>{e.isDisposed||e.dispose()})}function Fo(e){return Array.isArray(e)}function _o(e){return!function(e){return e instanceof d.Tensor}(e)&&!Fo(e)}function Ro(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Fo(e)&&e.length>0)t=!0;else if(_o(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ea(`Error when checking model ${a} expected no data, but got `+e)}return[]}if(null==e)return t.map(e=>null);let s;if(_o(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new ea(`No data provided for "${n}". Need data for each key in: `+t);s.push(e[n])}}else if(Fo(e)){if((e=e).length!==t.length)throw new ea(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): `+e);s=e}else{if(e=e,t.length>1)throw new ea(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+e.shape);s=[e]}if(s=Eo(s),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=s[i];if(e.shape.length!==n[i].length)throw new ea(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape `+e.shape);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=e.shape[s],u=n[i][s];if(null!=u&&u>=0&&o!==u)throw new ea(`Error when checking ${a}: expected ${t[i]} to have shape [${n[i]}], but got array with shape [${e.shape}].`)}}return s}function Do(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new ea(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new ea(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(e.shape)+".");s=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=s[i];if(e.shape.length!==n[i].length)throw new ea(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape `+JSON.stringify(e.shape));for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=e.shape[s],u=n[i][s];if(null!=u&&u!==o)throw new ea(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class Mo extends go{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ea("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");no(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>d.train.adagrad(.01),Adadelta:()=>d.train.adadelta(1,.95,Zr()),Adam:()=>d.train.adam(.001,.9,.999,Zr()),Adamax:()=>d.train.adamax(.002,.9,.999,Zr(),0),RMSProp:()=>d.train.rmsprop(.001,.9,0,Zr()),SGD:()=>d.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ea("Unknown Optimizer "+e)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof d.Optimizer))throw new ea("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ea(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map(e=>Vi(e))}else{const n=Vi(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ea(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Vi(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ua("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+e);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ua("metric",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(const i of t){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===zi?-1!==["accuracy","acc"].indexOf(i)?r=Wi:-1!==["crossentropy","ce"].indexOf(i)&&(r=qi):this.lossFunctions[e]===Mi?-1!==["accuracy","acc"].indexOf(i)?r=Xi:-1!==["crossentropy","ce"].indexOf(i)&&(r=Zi):-1!==["accuracy","acc"].indexOf(i)?r=Ui:-1!==["crossentropy","ce"].indexOf(i)&&(r=Yi),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=Qi(i);s=e,n=""+eo(i)}let t;Ua(n,()=>{t=s}),a(e,n,t)}})(r[e])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;jo(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return ia(this.testLoop(i,s,r,n.verbose,n.steps))}finally{$o(a[0],e),$o(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new ta("Verbose mode is not implemented yet.");d.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const i="function"===typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=d.tidy(()=>{if(t.value){const{xs:n,ys:r}=Oo(e,t.value),i=n.concat(r),c=d.tidy(()=>a(i));if(d.dispose(i),0===u)for(let e=0;e<c.length;++e)s.push(Object(d.scalar)(0));const l=i[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=s[e];s[e]=d.tidy(()=>d.add(s[e],d.mul(l,t))),u>0&&d.dispose(n)}d.dispose(c),o+=l,++u}return s}),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<s.length;++c){const e=s[c];s[c]=d.div(s[c],o),d.dispose(e)}return ia(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new ea(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+t)}else{if(null==e)throw new ea("Either the input data should have a defined shape, or "+r+" shoud be specified.");a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ea("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new co;if(e instanceof d.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ea(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new ea("No value is provided for the model's input "+o.name);s.add(o,t)}const i=po(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=ra(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map(e=>e.name);for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new ea("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return t}predictLoop(e,t=32,n=!1){return d.tidy(()=>{const r=this.checkNumSamples(e);if(n)throw new ta("Verbose predictLoop() is not implemented yet.");const a=To(r,t),s=this.outputs.map(e=>[]);for(let t=0;t<a.length;++t){d.tidy(()=>{const n=a[t][0],r=a[t][1],s=So(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new co(i);return po(this.outputs,o)}).forEach((e,t)=>s[t].push(e))}return ia(s.map(e=>d.concat(e,0)))})}predict(e,t={}){const n=Eo(e);Do(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return jo(r),this.predictLoop(n,r)}finally{$o(n,e)}}predictOnBatch(e){Do(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Qr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let s=0;s<this.feedOutputShapes.length;++s){const e=this.feedOutputShapes[s];this.feedLossFns[s]===Mi?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t,n){const r=fa(e.map(e=>e.shape[0]));r.sort();const a=fa(t.map(e=>e.shape[0]));if(a.sort(),r.length>1)throw new ea("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(e=>e.shape)));if(a.length>1)throw new ea("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(e=>e.shape)));if(r.length>0&&a.length>0&&!d.util.arraysEqual(r,a))throw new ea(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Ro(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Ro(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[$i,zi,Di];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===Di&&1===s.shape[s.shape.length-1])throw new ea(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new ea(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new ea(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=xo(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await vo(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return d.tidy(()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new ta("Verbose mode is not implemented yet.");if(null!=a)throw new ta("steps mode in testLoop() is not implemented yet");{const r=To(s,n),a=Object(d.tensor1d)(Qa(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=ns(a,s,o-s),c=Co(t,u),l=e(c);if(0===n)for(let e=0;e<l.length;++e)i.push(Object(d.scalar)(0));for(let e=0;e<l.length;++e){const t=l[e];i[e]=d.add(i[e],d.mul(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=d.div(i[e],s)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;if(sa(e,r)>1){a+="_"+sa(e.slice(0,n),r)}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new co(e),o=po(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],o[n]);null!=a[n]&&(e=wo(e,a[n]));const s=d.mean(e);t.push(s),u=0===n?e:d.add(u,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],a=this.metricsTensors[n][1];e=d.mean(t(r[a],o[a]))}d.keep(e),s.push(e)}return u=d.mean(u),this.calculateLosses().forEach(e=>{u=d.add(u,e)}),u},!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>d.tidy(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new co(s),o=po(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=d.mean(r(a[e],o[e]));n=0===e?s:d.add(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=d.mean(n(a[r],o[r]));t.push(s)}return t})}async fit(e,t,n={}){return Ao(this,e,t,n)}async fitDataset(e,t){return No(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const o of s){const e=await o.data();i.push(e[0])}return d.dispose(s),ia(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=d.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-d.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=ua(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>ua(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ua(n[r])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[ua(eo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ua(eo(e)));{const e={};for(const t in this.metrics)e[t]=ua(eo(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ai(oo(e.optimizer_config));let n,r;if("string"===typeof e.loss)n=ca(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>ca(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=ca(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>ca(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=ca(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"===typeof e){const t=d.io.getSaveHandlers(e);if(0===t.length)throw new ea(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ea(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ea("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await d.io.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v"+uo,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await d.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=d.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;to(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){to(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Mo.className="Model",d.serialization.registerClass(Mo);class zo extends Mo{}async function Lo(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=Ai(oo(n),t);if(null!=e.weightsManifest){const t=await d.io.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(e=>e.originalName)),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),Object(d.dispose)(t)}return r}async function Po(e,t){if(null==t&&(t={}),"string"===typeof e){const n=d.io.getLoadHandlers(e,t);if(0===n.length)n.push(d.io.browserHTTPRequest(e,t));else if(n.length>1)throw new ea(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new ea("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=Ai(oo(a),t,i),u=r.trainingConfig;null!=u&&o.loadTrainingConfig(u);null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata);if(null!=r.weightData){if(null==r.weightSpecs)throw new ea("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=d.io.decodeWeights(e,t),r={},a=[];return t.forEach(e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Object(d.dispose)(e),Object(d.dispose)(t.map(e=>e.tensor))}return o}(e,void 0,t)}zo.className="Functional",d.serialization.registerClass(zo);class Bo extends Mo{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:ni("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new ea("Negative dimension size caused by adding layer "+e.name+" with input shape ["+e.inboundNodes[0].inputTensors[0].shape+"]")}add(e){const t=e instanceof Bo||e instanceof Mo;let n;if(t){if(n=e,1!==n.outputs.length)throw new ea("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ea("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ea("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=yi({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ea(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ea("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=function e(t,n,r){if((null==n||null!=r&&r>0)&&(n=t.sourceLayer,r=t.nodeIndex),0===n.inboundNodes.length)return[t];{const t=n.inboundNodes[r];if(0===t.inboundLayers.length)return t.inputTensors;{const n=[];for(let r=0;r<t.inboundLayers.length;r++){const a=e(t.inputTensors[r],t.inboundLayers[r],t.nodeIndices[r]);for(const e of a)-1===n.indexOf(e)&&n.push(e)}return n}}}(this.outputs[0])}this.inboundNodes=[],new fi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ra(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ii(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Mo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Qr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Qr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Qr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Qr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ea("Legacy serialization format not supported yet.");a=t}else d.util.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Bo))throw new ta("Sequential.fromConfig called on non-Sequential input: "+i);for(const o of a){const e=Ai(o,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new ea("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ea("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Vo(e){return new Mo(e)}function Wo(e){return new Bo(e)}function Uo(e,t){return null==t&&(t={}),Po(e,t)}function Go(e){return yi(e)}function Ko(e,t){Ci.registerCallbackConstructor(e,t)}Bo.className="Sequential",d.serialization.registerClass(Bo);class Ho extends d.serialization.Serializable{getConfig(){return{}}}class qo extends Ho{apply(e,t=1){return function(e,t=1){if(1!==t)throw new ta(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return d.elu(e)}(e,t)}}qo.className="elu",d.serialization.registerClass(qo);class Xo extends Ho{apply(e){return d.selu(e)}}Xo.className="selu",d.serialization.registerClass(Xo);class Yo extends Ho{apply(e){return d.relu(e)}}Yo.className="relu",d.serialization.registerClass(Yo);class Zo extends Ho{apply(e){return Object(d.tidy)(()=>d.minimum(6,d.relu(e)))}}Zo.className="relu6",d.serialization.registerClass(Zo);class Jo extends Ho{apply(e){return e}}Jo.className="linear",d.serialization.registerClass(Jo);class Qo extends Ho{apply(e){return d.sigmoid(e)}}Qo.className="sigmoid",d.serialization.registerClass(Qo);class eu extends Ho{apply(e){return function(e){return Object(d.tidy)(()=>{const t=d.add(.5,d.mul(.2,e));return d.clipByValue(t,0,1)})}(e)}}eu.className="hardSigmoid",d.serialization.registerClass(eu);class tu extends Ho{apply(e){return d.softplus(e)}}tu.className="softplus",d.serialization.registerClass(tu);class nu extends Ho{apply(e){return function(e){return Object(d.tidy)(()=>d.div(e,d.abs(e).add(1)))}(e)}}nu.className="softsign",d.serialization.registerClass(nu);class ru extends Ho{apply(e){return d.tanh(e)}}ru.className="tanh",d.serialization.registerClass(ru);class au extends Ho{apply(e,t=-1){return d.softmax(e,t)}}au.className="softmax",d.serialization.registerClass(au);class su extends Ho{apply(e,t=-1){return d.logSoftmax(e,t)}}su.className="logSoftmax",d.serialization.registerClass(su);class iu extends Ho{apply(e,t=1){return Object(d.tidy)(()=>d.sigmoid(e.mul(t)).mul(e))}}iu.className="swish",d.serialization.registerClass(iu);class ou extends Ho{apply(e){return Object(d.tidy)(()=>d.mul(e,d.tanh(d.softplus(e))))}}function uu(e){return e.getClassName()}function cu(e,t={}){return ha(e,d.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function lu(e){if(null==e){const e={className:"linear",config:{}};return cu(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},cu(t)}return e instanceof Ho?e:cu(e)}function du(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+e)}ou.className="mish",d.serialization.registerClass(ou);class hu extends d.serialization.Serializable{}class pu extends hu{constructor(e){super(),du(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Object(d.tidy)(()=>{let t=Object(d.zeros)([1]);return this.hasL1&&(t=Object(d.add)(t,Object(d.sum)(d.mul(this.l1,Object(d.abs)(e))))),this.hasL2&&(t=Object(d.add)(t,Object(d.sum)(d.mul(this.l2,ds(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}pu.className="L1L2",d.serialization.registerClass(pu);const fu={l1l2:"L1L2"};function mu(e){return da(e)}function bu(e,t={}){return ha(e,d.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function gu(e){if(null==e)return null;if("string"===typeof e){return bu({className:e in fu?fu[e]:e,config:{}})}return e instanceof hu?e:bu(e)}class yu extends bi{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=si(e);let n=Object(d.relu)(e);return null!=this.maxValue&&(n=Object(d.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}yu.className="ReLU",d.serialization.registerClass(yu);class xu extends bi{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=si(e);return Object(d.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}xu.className="LeakyReLU",d.serialization.registerClass(xu);class vu extends bi{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ms(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=gu(e.alphaRegularizer),this.alphaConstraint=Ta(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new ea("Expected sharedAxes to be a number or an array of numbers, but got "+e.sharedAxes);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=ii(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new di({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=si(e),Object(d.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ds(this.alphaInitializer),alphaRegularizer:mu(this.alphaRegularizer),alphaConstraint:Sa(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}vu.className="PReLU",d.serialization.registerClass(vu);class wu extends bi{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ta(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=si(e);return Object(d.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}wu.className="ELU",d.serialization.registerClass(wu);class Ou extends bi{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=si(e);return n.mul(es(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Ou.className="ThresholdedReLU",d.serialization.registerClass(Ou);class ku extends bi{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new au).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=si(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Nu(e,t,n){if("number"===typeof e)return ra(e,t);if(e.length!==t)throw new ea(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new ea(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number `+s)}return e;var r}function Iu(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function ju(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Ja([n-t,0]);else{if("same"!==r)throw new ea(`Unsupport padding mode: ${r}.`);e*=t}return e}function Su(e,t){return Object(d.tidy)(()=>(Pa(t),"channelsFirst"===t?d.transpose(e,[0,2,3,1]):e))}function Cu(e,t){return Object(d.tidy)(()=>(Pa(t),"channelsFirst"===t?d.transpose(e,[0,2,3,4,1]):e))}function Tu(e,t,n,r=1,a="valid",s,i=1){return Object(d.tidy)(()=>{if(null==s&&(s="channelsLast"),Pa(s),3!==e.shape.length)throw new ea("The input of a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead.");if(3!==t.shape.length)throw new ea("The kernel for a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new ea("The bias for a conv1dWithBias operation should be 1, but is "+t.shape.length+" instead");if("channelsFirst"===s&&(e=d.transpose(e,[0,2,1])),"causal"===a)throw new ta("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=d.conv1d(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=ps(o,n)),o})}function Au(e,t,n,r=[1,1],a="valid",s,i,o=null){return Object(d.tidy)(()=>{if(null==s&&(s="channelsLast"),Pa(s),3!==e.rank&&4!==e.rank)throw new ea(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ea(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Su(e,s);if("causal"===a)throw new ta("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=d.fused.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=d.transpose(u,[0,3,1,2])),u})}function Eu(e,t,n,r=[1,1,1],a="valid",s,i){return Object(d.tidy)(()=>{if(null==s&&(s="channelsLast"),Pa(s),4!==e.rank&&5!==e.rank)throw new ea("conv3dWithBias expects input to be of rank 4 or 5, but received "+e.rank+".");if(4!==t.rank&&5!==t.rank)throw new ea("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+e.rank+".");let o=Cu(e,s);if("causal"===a)throw new ta("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=d.conv3d(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=ps(o,n)),"channelsFirst"===s&&(o=d.transpose(o,[0,4,1,2,3])),o})}ku.className="Softmax",d.serialization.registerClass(ku);class $u extends bi{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",$u.verifyArgs(t),this.rank=e,ya(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ta(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Nu(t.kernelSize,e,"kernelSize"),this.strides=Nu(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ba(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Pa(this.dataFormat),this.activation=lu(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Ms(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ta(t.biasConstraint),this.biasRegularizer=gu(t.biasRegularizer),this.activityRegularizer=gu(t.activityRegularizer),this.dilationRate=Nu(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ea("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ea("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ea("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(e){if(aa("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!ga(e.kernelSize,"number",1,3))throw new ea(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:uu(this.activation),useBias:this.useBias,biasInitializer:Ds(this.biasInitializer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),biasConstraint:Sa(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Fu extends $u{constructor(e,t){super(e,t),this.kernel=null,Fu.verifyArgs(t),this.filters=t.filters,ya(this.filters,"filters"),this.kernelInitializer=Ms(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ta(t.kernelConstraint),this.kernelRegularizer=gu(t.kernelRegularizer)}build(e){e=ii(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ea("The channel dimension of the input should be defined. Found "+e[t]);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Object(d.tidy)(()=>{let t;e=si(e);const n=null==this.bias?null:this.bias.read(),r=xa(this.activation.getClassName());if(null!=r&&2===this.rank)t=Au(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=Tu(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Au(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ta("convolutions greater than 3D are not implemented yet.");t=Eu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=ii(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){const e=Iu(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ds(this.kernelInitializer),kernelRegularizer:mu(this.kernelRegularizer),kernelConstraint:Sa(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new ea("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(e.filters))}}class _u extends Fu{constructor(e){super(2,e),_u.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!ga(e.kernelSize,"number",1,2))throw new ea(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}_u.className="Conv2D",d.serialization.registerClass(_u);class Ru extends Fu{constructor(e){super(3,e),Ru.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ea(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Ru.className="Conv3D",d.serialization.registerClass(Ru);class Du extends _u{constructor(e){if(super(e),this.inputSpec=[new di({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ea("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(4!==(e=ii(e)).length)throw new ea("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ea("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new di({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return d.tidy(()=>{let t=si(e);if(4!==t.shape.length)throw new ea("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],c=this.kernelSize[1],l=this.strides[0],h=this.strides[1],p=[r,ju(i,l,u,this.padding),ju(o,h,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=d.transpose(t,[0,2,3,1]));let f=d.conv2dTranspose(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=d.transpose(f,[0,3,1,2])),null!=this.bias&&(f=ps(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f})}computeOutputShape(e){const t=(e=ii(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=ju(t[r],o,s,this.padding),t[a]=ju(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Du.className="Conv2DTranspose",d.serialization.registerClass(Du);class Mu extends Ru{constructor(e){if(super(e),this.inputSpec=[new di({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ea("Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(5!==(e=ii(e)).length)throw new ea("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ea("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new di({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return d.tidy(()=>{let t=si(e);if(5!==t.shape.length)throw new ea("Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],c=n[s],l=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],b=this.strides[2],g=[r,ju(o,f,l,this.padding),ju(u,m,h,this.padding),ju(c,b,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=d.transpose(t,[0,2,3,4,1]));let y=d.conv3dTranspose(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=d.transpose(y,[0,4,1,2,3])),null!==this.bias&&(y=ps(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y})}computeOutputShape(e){const t=(e=ii(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],l=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=ju(t[r],c,i,this.padding),t[a]=ju(t[a],l,o,this.padding),t[s]=ju(t[s],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Mu.className="Conv3DTranspose",d.serialization.registerClass(Mu);class zu extends Fu{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ea("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ea("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ea(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(t.padding));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ms(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=gu(t.depthwiseRegularizer),this.depthwiseConstraint=Ta(t.depthwiseConstraint),this.pointwiseInitializer=Ms(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=gu(t.pointwiseRegularizer),this.pointwiseConstraint=Ta(t.pointwiseConstraint)}build(e){if((e=ii(e)).length<this.rank+2)throw new ea(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ea("The channel dimension of the inputs should be defined, but found "+JSON.stringify(e[t]));const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let s=0;s<this.rank;++s)a.push(1);a.push(n*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,true,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,true,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,true,this.biasConstraint):this.bias=null,this.inputSpec=[new di({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Object(d.tidy)(()=>{let t;if(e=si(e),1===this.rank)throw new ta("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=d.transpose(e,[0,2,3,1])),t=d.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=ps(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=d.transpose(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ds(this.depthwiseInitializer),e.pointwiseInitializer=Ds(this.pointwiseInitializer),e.depthwiseRegularizer=mu(this.depthwiseRegularizer),e.pointwiseRegularizer=mu(this.pointwiseRegularizer),e.depthwiseConstraint=Sa(this.depthwiseConstraint),e.pointwiseConstraint=Sa(this.pointwiseConstraint),e}}zu.className="SeparableConv";class Lu extends zu{constructor(e){super(2,e)}}Lu.className="SeparableConv2D",d.serialization.registerClass(Lu);class Pu extends Fu{constructor(e){super(1,e),Pu.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!ga(e.kernelSize,"number",1,1))throw new ea(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Pu.className="Conv1D",d.serialization.registerClass(Pu);class Bu extends bi{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Object(d.tidy)(()=>{if(e=si(e),"channelsLast"===this.dataFormat){const t=as(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return as(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=as(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return as(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Bu.className="Cropping2D",d.serialization.registerClass(Bu);class Vu extends bi{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pa(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,ba(Ra,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return d.tidy(()=>{let t=si(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=d.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return d.transpose(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Vu.className="UpSampling2D",d.serialization.registerClass(Vu);class Wu extends $u{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ms(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ta(e.depthwiseConstraint),this.depthwiseRegularizer=gu(e.depthwiseRegularizer)}build(e){if((e=ii(e)).length<4)throw new ea(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ea(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(d.tidy)(()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return Object(d.tidy)(()=>{null==a&&(a="channelsLast"),Pa(a);let i=Su(e,a);if(4!==e.rank)throw new ea("Input for depthwiseConv2d is required to be 4-D, but is instead "+e.rank+"-D");if(4!==t.rank)throw new ea("depthwiseKernel is required to be 4-D, but is instead "+t.rank+"-D");return i=d.depthwiseConv2d(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=d.transpose(i,[0,3,1,2])),i})}(e=si(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ps(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=ii(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Iu(t,this.kernelSize[0],this.padding,this.strides[0]),s=Iu(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ds(this.depthwiseInitializer),e.depthwiseRegularizer=mu(this.depthwiseRegularizer),e.depthwiseConstraint=Sa(this.depthwiseRegularizer),e}}function Uu(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new ea("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Gu(e,t,n,r=!1,a,s,i=!1,o=!1){return d.tidy(()=>{const u=t.shape.length;if(u<3)throw new ea(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(Qa(2,u));if(t=d.transpose(t,c),null!=s)throw new ta("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===u-1&&(a=d.expandDims(a,-1)),a=d.transpose(a,c)),r&&(t=d.reverse(t,0),null!=a&&(a=d.reverse(a,0)));const l=[];let h,p=n;const f=t.shape[0],m=d.unstack(t);let b,g;null!=a&&(b=d.unstack(a));for(let t=0;t<f;++t){const n=m[t],r=d.tidy(()=>e(n,p));if(null==a)h=r[0],p=r[1];else{const e=d.tidy(()=>{const e=b[t],n=d.onesLike(e).sub(e);return{output:r[0].mul(e).add(p[0].mul(n)),newStates:p.map((t,a)=>r[1][a].mul(e).add(t.mul(n)))}});h=e.output,p=e.newStates}o&&l.push(h)}if(o){const e=1;g=d.stack(l,e)}return[h,g,p]})}Wu.className="DepthwiseConv2D",d.serialization.registerClass(Wu);class Ku extends bi{constructor(e){let t;if(super(e),null==e.cell)throw new ea("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new ec({cells:e.cell}):e.cell,null==t.stateSize)throw new ea("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new di({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Qa(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null)}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){ri(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return d.tidy(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ta("Constants support is not implemented in RNN yet.");ri(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new di({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!d.util.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),a))throw new ea(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=a.map(e=>new di({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Object(d.tidy)(()=>{if(!this.stateful)throw new Jr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ea("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>d.zeros([n,e])):this.states_=[d.zeros([n,this.cell.stateSize])];else if(null==e)d.dispose(this.states_),null!=this.keptStates&&(d.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>d.zeros([n,e])):this.states_[0]=d.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ea(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);!0===t?this.keptStates.push(this.states_.slice()):d.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!d.util.arraysEqual(r.shape,s))throw new ea(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>d.keep(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Uu(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new di({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length);if(s[0]instanceof hi){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Object(d.tidy)(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=si(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new ea(`RNN Layer has ${s} state(s) but was passed `+a.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Gu((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],c=o[1],l=o[2];this.stateful&&this.resetStates(l,r);const d=this.returnSequences?c:u;return this.returnState?[d].concat(l):d})}getInitialState(e){return Object(d.tidy)(()=>{let t=d.zeros(e.shape);return t=d.sum(t,[1,2]),t=ts(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?os(t,[1,e]):t):this.cell.stateSize>1?[os(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ku.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Ai(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Ku.className="RNN",d.serialization.registerClass(Ku);class Hu extends bi{}class qu extends Hu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ya(this.units,"units"),this.activation=lu(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ms(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ms(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ms(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gu(e.kernelRegularizer),this.recurrentRegularizer=gu(e.recurrentRegularizer),this.biasRegularizer=gu(e.biasRegularizer),this.kernelConstraint=Ta(e.kernelConstraint),this.recurrentConstraint=Ta(e.recurrentConstraint),this.biasConstraint=Ta(e.biasConstraint),this.dropout=Za([1,Ja([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Za([1,Ja([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ii(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(d.tidy)(()=>{if(2!==(e=e).length)throw new ea(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=tc({ones:()=>d.onesLike(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=tc({ones:()=>d.onesLike(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=cs(null!=s?d.mul(e,s):e,this.kernel.read()),null!=this.bias&&(a=ps(a,this.bias.read())),null!=i&&(n=d.mul(n,i));let o=d.add(a,cs(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uu(this.activation),useBias:this.useBias,kernelInitializer:Ds(this.kernelInitializer),recurrentInitializer:Ds(this.recurrentInitializer),biasInitializer:Ds(this.biasInitializer),kernelRegularizer:mu(this.kernelRegularizer),recurrentRegularizer:mu(this.recurrentRegularizer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),kernelConstraint:Sa(this.kernelConstraint),recurrentConstraint:Sa(this.recurrentConstraint),biasConstraint:Sa(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}qu.className="SimpleRNNCell",d.serialization.registerClass(qu);class Xu extends Ku{constructor(e){e.cell=new qu(e),super(e)}call(e,t){return Object(d.tidy)(()=>{null!=this.cell.dropoutMask&&(d.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(d.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return new e(t)}}Xu.className="SimpleRNN",d.serialization.registerClass(Xu);class Yu extends Hu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ea("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ya(this.units,"units"),this.activation=lu(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=lu(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ms(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ms(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ms(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gu(e.kernelRegularizer),this.recurrentRegularizer=gu(e.recurrentRegularizer),this.biasRegularizer=gu(e.biasRegularizer),this.kernelConstraint=Ta(e.kernelConstraint),this.recurrentConstraint=Ta(e.recurrentConstraint),this.biasConstraint=Ta(e.biasConstraint),this.dropout=Za([1,Ja([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Za([1,Ja([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=ii(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(d.tidy)(()=>{if(2!==(e=e).length)throw new ea("GRUCell expects 2 input Tensors (inputs, h, c), got "+e.length+".");const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=tc({ones:()=>d.onesLike(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=tc({ones:()=>d.onesLike(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=d.mul(e,a[0]));let c=cs(e,this.kernel.read());this.useBias&&(c=ps(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=d.mul(r,s[0]));const l=this.recurrentKernel.read(),[h,p]=d.split(l,[2*this.units,this.units],l.rank-1),f=cs(r,h),[m,b,g]=d.split(c,3,c.rank-1),[y,x]=d.split(f,2,f.rank-1);i=this.recurrentActivation.apply(d.add(m,y)),o=this.recurrentActivation.apply(d.add(b,x));const v=cs(d.mul(o,r),p);u=this.activation.apply(d.add(g,v));const w=d.add(d.mul(i,r),d.mul(d.add(1,d.neg(i)),u));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uu(this.activation),recurrentActivation:uu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ds(this.kernelInitializer),recurrentInitializer:Ds(this.recurrentInitializer),biasInitializer:Ds(this.biasInitializer),kernelRegularizer:mu(this.kernelRegularizer),recurrentRegularizer:mu(this.recurrentRegularizer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),kernelConstraint:Sa(this.kernelConstraint),recurrentConstraint:Sa(this.recurrentConstraint),biasConstraint:Sa(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Yu.className="GRUCell",d.serialization.registerClass(Yu);class Zu extends Ku{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Yu(e),super(e)}call(e,t){return Object(d.tidy)(()=>{null!=this.cell.dropoutMask&&(d.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(d.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Zu.className="GRU",d.serialization.registerClass(Zu);class Ju extends Hu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ya(this.units,"units"),this.activation=lu(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=lu(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ms(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ms(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ms(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=gu(e.kernelRegularizer),this.recurrentRegularizer=gu(e.recurrentRegularizer),this.biasRegularizer=gu(e.biasRegularizer),this.kernelConstraint=Ta(e.kernelConstraint),this.recurrentConstraint=Ta(e.recurrentConstraint),this.biasConstraint=Ta(e.biasConstraint),this.dropout=Za([1,Ja([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Za([1,Ja([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=ii(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends ys{apply(t,r){const a=e.apply([n]),s=(new vs).apply([n]),i=e.apply([2*n]);return is(is(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Object(d.tidy)(()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new ea("LSTMCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=tc({ones:()=>d.onesLike(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=tc({ones:()=>d.onesLike(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,c,l;0<this.dropout&&this.dropout<1&&(e=d.mul(e,s[0]));let h=cs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=d.mul(r,i[0])),h=d.add(h,cs(r,this.recurrentKernel.read())),this.useBias&&(h=ps(h,this.bias.read()));const[p,f,m,b]=d.split(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=d.add(d.mul(u,a),d.mul(o,this.activation.apply(m))),l=this.recurrentActivation.apply(b);const g=d.mul(l,this.activation.apply(c));return[g,g,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uu(this.activation),recurrentActivation:uu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ds(this.kernelInitializer),recurrentInitializer:Ds(this.recurrentInitializer),biasInitializer:Ds(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:mu(this.kernelRegularizer),recurrentRegularizer:mu(this.recurrentRegularizer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),kernelConstraint:Sa(this.kernelConstraint),recurrentConstraint:Sa(this.recurrentConstraint),biasConstraint:Sa(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Ju.className="LSTMCell",d.serialization.registerClass(Ju);class Qu extends Ku{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ju(e),super(e)}call(e,t){return Object(d.tidy)(()=>{null!=this.cell.dropoutMask&&(d.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(d.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Qu.className="LSTM",d.serialization.registerClass(Qu);class ec extends Hu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Object(d.tidy)(()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)})}build(e){let t;ri(e)&&(e=e[0]),e=e,this.cells.forEach((n,r)=>{Ua("RNNCell_"+r,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const a of t.cells)r.push(Ai(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return ci(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}li(t)}}function tc(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>fs(t(),n),i=()=>ms(s,t,r);if(!a||a<=1)return d.keep(i().clone());return Array(a).fill(void 0).map(i).map(e=>d.keep(e.clone()))}ec.className="StackedRNNCells",d.serialization.registerClass(ec);var nc=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};class rc extends Ku{constructor(e){if(e.unroll)throw new ta("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ta("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new di({ndim:5})]}call(e,t){return d.tidy(()=>{if(null!=this.cell.dropoutMask&&(d.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(d.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ea("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return d.tidy(()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=d.zeros(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){d.tidy(()=>{if(!this.stateful)throw new Jr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new ea("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>d.zeros(a)):this.states_=[d.zeros(a)];else if(null==e)d.dispose(this.states_),null!=this.keptStates&&(d.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>d.zeros(a)):this.states_[0]=d.zeros(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ea(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);t?this.keptStates.push(this.states_.slice()):d.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!d.util.arraysEqual(n.shape,r))throw new ea(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>d.keep(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],c=e[o?4:3],l=Iu(u,r[0],a,s[0],i[0]),d=Iu(c,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,l,d]:[l,d,n]]}}rc.className="ConvRNN2D";class ac extends Ju{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,ya(this.filters,"filters"),this.kernelSize=Nu(n,2,"kernelSize"),this.kernelSize.forEach(e=>ya(e,"kernelSize")),this.strides=Nu(r||1,2,"strides"),this.strides.forEach(e=>ya(e,"strides")),this.padding=a||"valid",Ba(this.padding),this.dataFormat=s||"channelsLast",Pa(this.dataFormat),this.dilationRate=Nu(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>ya(e,"dilationRate"))}build(e){var t;e=ii(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ea("The channel dimension of the input should be defined. Found "+e[n]);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends ys{apply(e,t){return ss([n.apply([r]),d.ones([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return d.tidy(()=>{if(3!==e.length)throw new ea("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=tc({ones:()=>d.onesLike(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?d.mul(t[n],e):e;let u=o(r,i,0),c=o(r,i,1),l=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=tc({ones:()=>d.onesLike(a),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let f=o(a,p,0),m=o(a,p,1),b=o(a,p,2),g=o(a,p,3);const[y,x,v,w]=d.split(this.kernel.read(),4,3),[O,k,N,I]=this.useBias?d.split(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,O,this.padding),c=this.inputConv(c,x,k,this.padding),l=this.inputConv(l,v,N,this.padding),h=this.inputConv(h,w,I,this.padding);const[j,S,C,T]=d.split(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,j),m=this.recurrentConv(m,S),b=this.recurrentConv(b,C),g=this.recurrentConv(g,T);const A=this.recurrentActivation.apply(d.add(u,f)),E=this.recurrentActivation.apply(d.add(c,m)),$=d.add(d.mul(E,s),d.mul(A,this.activation.apply(d.add(l,b)))),F=d.mul(this.recurrentActivation.apply(d.add(h,g)),this.activation.apply($));return[F,F,$]})}getConfig(){const e=super.getConfig(),{units:t}=e,n=nc(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=d.conv2d(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ps(a,n,this.dataFormat):a}recurrentConv(e,t){return d.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ac.className="ConvLSTM2DCell",d.serialization.registerClass(ac);class sc extends rc{constructor(e){const t=new ac(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}sc.className="ConvLSTM2D",d.serialization.registerClass(sc);class ic extends bi{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return Object(d.tidy)(()=>{this.invokeCallHook(e,t);const n=si(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ms(()=>fs(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}ic.className="Dropout",d.serialization.registerClass(ic);class oc extends ic{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}oc.className="SpatialDropout1D",d.serialization.registerClass(oc);class uc extends bi{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ya(this.units,"units"),this.activation=lu(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ms(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ms(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ta(e.kernelConstraint),this.biasConstraint=Ta(e.biasConstraint),this.kernelRegularizer=gu(e.kernelRegularizer),this.biasRegularizer=gu(e.biasRegularizer),this.activityRegularizer=gu(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=ii(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=ii(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Object(d.tidy)(()=>{this.invokeCallHook(e,t);const n=si(e),r=xa(this.activation.getClassName());let a;return null!=r?a=cs(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=cs(n,this.kernel.read()),null!=this.bias&&(a=ps(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const e={units:this.units,activation:uu(this.activation),useBias:this.useBias,kernelInitializer:Ds(this.kernelInitializer),biasInitializer:Ds(this.biasInitializer),kernelRegularizer:mu(this.kernelRegularizer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),kernelConstraint:Sa(this.kernelConstraint),biasConstraint:Sa(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}uc.className="Dense",d.serialization.registerClass(uc);class cc extends bi{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ii(e);for(const t of e.slice(1))if(null==t)throw new ea(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Xa(e,1)]}call(e,t){return Object(d.tidy)(()=>{this.invokeCallHook(e,t);let n=si(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new ea(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Xa(e.shape,1)];return e.reshape(t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}cc.className="Flatten",d.serialization.registerClass(cc);class lc extends bi{constructor(e){super(e),this.supportsMasking=!0,this.activation=lu(e.activation)}call(e,t){return Object(d.tidy)(()=>{this.invokeCallHook(e,t);const n=si(e);return this.activation.apply(n)})}getConfig(){const e={activation:uu(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}lc.className="Activation",d.serialization.registerClass(lc);class dc extends bi{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Object(d.tidy)(()=>{return e=si(e),t=e,n=this.n,Object(d.tidy)(()=>{if(2!==t.shape.length)throw new ea(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return os(ts(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}dc.className="RepeatVector",d.serialization.registerClass(dc);class hc extends bi{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==s)throw new ea("Can only specifiy one unknown dimension.");s=o}else a*=e}const i=Xa(e);if(null!==s){if(0===a||i%a!==0)throw new ea(n);r[s]=i/a}else if(i!==a)throw new ea(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Object(d.tidy)(()=>{this.invokeCallHook(e,t);const n=si(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}hc.className="Reshape",d.serialization.registerClass(hc);class pc extends bi{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+e.dims+" instead.");const t=Qa(1,e.dims.length+1);if(!d.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new di({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=ii(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Object(d.transpose)(si(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}pc.className="Permute",d.serialization.registerClass(pc);class fc extends bi{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=si(e);return Object(d.any)(Object(d.notEqual)(n,this.maskValue),-1)}call(e,t){return Object(d.tidy)(()=>{this.invokeCallHook(e,t);const n=si(e),r=Object(d.any)(Object(d.notEqual)(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}fc.className="Masking",d.serialization.registerClass(fc);class mc extends bi{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(oa(e.inputLength))}this.inputDim=e.inputDim,ya(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ya(this.outputDim,"outputDim"),this.embeddingsInitializer=Ms(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=gu(e.embeddingsRegularizer),this.activityRegularizer=gu(e.activityRegularizer),this.embeddingsConstraint=Ta(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Object(d.tidy)(()=>this.maskZero?(e=si(e),Object(d.notEqual)(e,Object(d.zerosLike)(e))):null)}computeOutputShape(e){if(e=ii(e),null==this.inputLength)return[...e,this.outputDim];const t=oa(this.inputLength);if(t.length!==e.length-1)throw new ea(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new ea(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Object(d.tidy)(()=>{this.invokeCallHook(e,t);let n=si(e);"int32"!==n.dtype&&(n=es(n,"int32"));return ls(this.embeddings.read(),n.as1D()).reshape(ii(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ds(this.embeddingsInitializer),embeddingsRegularizer:mu(this.embeddingsRegularizer),activityRegularizer:mu(this.activityRegularizer),embeddingsConstraint:Sa(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}mc.className="Embedding",d.serialization.registerClass(mc);class bc extends bi{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ta}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new ea("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ii(e)]),(e=e).length<2)throw new ea(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=fa(t),t.length>1)throw new ea(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map(e=>e.length);-1===e.indexOf(null)&&1===fa(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Object(d.tidy)(()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=Ja(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ts(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=s.reshape([r].concat(Xa(e.slice(1))));i=d.transpose(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const r=Qa(1,e).concat([0]);t.push(d.transpose(s,r)),n=!0}else t.push(s)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=d.transpose(r.reshape([-1,t]),[1,0]).reshape(n)}else if(a>1){const e=[a-1].concat(Qa(0,a-1));r=d.transpose(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=fa(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return d.tidy(()=>{if(null==t)return null;if(!Array.isArray(t))throw new ea("`mask` should be an Array");if(!Array.isArray(e))throw new ea("`inputs` should be an Array");if(t.length!==e.length)throw new ea(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:d.expandDims(e,0)))[0];for(let e=1;e<t.length-1;++e)n=d.logicalAnd(n,t[e]);return n})}}class gc extends bc{constructor(e){super(e)}mergeFunction(e){return Object(d.tidy)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=d.add(t,e[n]);return t})}}gc.className="Add",d.serialization.registerClass(gc);class yc extends bc{constructor(e){super(e)}mergeFunction(e){return Object(d.tidy)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=d.mul(t,e[n]);return t})}}yc.className="Multiply",d.serialization.registerClass(yc);class xc extends bc{constructor(e){super(e)}mergeFunction(e){return Object(d.tidy)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=d.add(t,e[n]);return d.mul(1/e.length,t)})}}xc.className="Average",d.serialization.registerClass(xc);class vc extends bc{constructor(e){super(e)}mergeFunction(e){return Object(d.tidy)(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=d.maximum(t,e[n]);return t})}}vc.className="Maximum",d.serialization.registerClass(vc);class wc extends bc{constructor(e){super(e)}mergeFunction(e){return Object(d.tidy)(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=d.minimum(t,e[n]);return t})}}wc.className="Minimum",d.serialization.registerClass(wc);class Oc extends bc{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ea("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let a=!1;for(const e of n)if(d.util.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new ea("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Object(d.tidy)(()=>ss(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ea("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ea("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ea("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ea(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return d.tidy(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let s=0;s<e.length;++s)null==t[s]?r.push(d.onesLike(e[s]).asType("bool")):t[s].rank<e[s].rank?r.push(d.expandDims(t[s],-1)):r.push(t[s]);const a=d.concat(r,this.axis);return d.all(a,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function kc(e,t){for(;e<0;)e+=t;return e}Oc.className="Concatenate",d.serialization.registerClass(Oc);class Nc extends bc{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){d.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ta("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ea(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ea(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>kc(t,e[n].shape.length)):[kc(this.axes,n.shape.length),kc(this.axes,r.shape.length)],this.normalize&&(n=Ei(n,t[0]),r=Ei(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ta("batchDot is not implemented for tensors of 4D or higher rank yet");if(d.util.assert(e.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+e.shape.length),d.util.assert(e.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+t.shape.length),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ta("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return d.tidy(()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?e.mul(t).sum(s[0]):e.transpose([1,0]).mul(t).sum(s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i})}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[kc(this.axes,e.length),kc(this.axes,t.length)],n}computeOutputShape(e){d.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ta("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Nc.className="Dot",d.serialization.registerClass(Nc);class Ic extends bi{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Object(d.tidy)(()=>{this.invokeCallHook(e,t);const n=si(e);return ms(()=>us(n.shape,0,this.stddev).add(n),()=>n,t.training||!1)})}}Ic.className="GaussianNoise",d.serialization.registerClass(Ic);class jc extends bi{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(d.tidy)(()=>{this.invokeCallHook(e,t);const n=si(e);if(this.rate>0&&this.rate<1){return ms(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(us(n.shape,1,e))},()=>n,t.training||!1)}return n})}}jc.className="GaussianDropout",d.serialization.registerClass(jc);class Sc extends bi{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||si(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(d.tidy)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return ms(()=>{const t=si(e),r=-1.7580993408473766;let a=Object(d.greaterEqual)(Object(d.randomUniform)(n),this.rate);a=es(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return t.mul(a).add(a.add(-1).mul(r)).mul(s).add(i)},()=>si(e),t.training||!1)}return e})}}function Cc(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=d.batchNorm2d(e,t,n,r,a,s);else if(3===e.rank)i=d.batchNorm3d(e,t,n,r,a,s);else{if(4!==e.rank)throw new ta(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=d.batchNorm4d(e,t,n,r,a,s)}return i}function Tc(e,t,n,r,a=.001){return d.util.arraysEqual(r.slice().sort(),Qa(0,e.rank-1))?function(e,t,n,r,a=.001){return Object(d.tidy)(()=>{const s=d.moments(e,r),i=s.mean,o=s.variance;return[Cc(e,i,o,n,t,a),i,o]})}(e,t,n,r,a):function(e,t,n,r,a=.001){return Object(d.tidy)(()=>{const s=d.moments(e,r),i=s.mean,o=s.variance,u=[];for(const t of Qa(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const c=i.reshape(u),l=o.reshape(u),h=null==t?null:t.reshape(u),p=null==n?null:n.reshape(u);return[Cc(e,c,l,p,h,a),i,o]})}(e,t,n,r,a)}Sc.className="AlphaDropout",d.serialization.registerClass(Sc);class Ac extends bi{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ms(e.betaInitializer||"zeros"),this.gammaInitializer=Ms(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ms(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ms(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ta(e.betaConstraint),this.gammaConstraint=Ta(e.gammaConstraint),this.betaRegularizer=gu(e.betaRegularizer),this.gammaRegularizer=gu(e.gammaRegularizer)}build(e){e=ii(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ea(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(e)+".");this.inputSpec=[new di({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Object(d.tidy)(()=>{const n=null!=t.training&&t.training,r=si(e),a=r.shape,s=a.length,i=Qa(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=ra(1,s);u[o]=a[o];const c=i.slice();c.sort();const l=!d.util.arraysEqual(c,Qa(0,s).slice(0,s-1));if(!n)return(()=>{if(l){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,a=this.scale?this.gamma.read().reshape(u):null;return Cc(r,e,t,n,a,this.epsilon)}return Cc(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=Tc(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{d.tidy(()=>{const r=1-n,a=e.read(),s=a.sub(t).mul(r);e.write(a.sub(s))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ds(this.betaInitializer),gammaInitializer:Ds(this.gammaInitializer),movingMeanInitializer:Ds(this.movingMeanInitializer),movingVarianceInitializer:Ds(this.movingVarianceInitializer),betaRegularizer:mu(this.betaRegularizer),gammaRegularizer:mu(this.gammaRegularizer),betaConstraint:Sa(this.betaConstraint),gammaConstraint:Sa(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ac.className="BatchNormalization",d.serialization.registerClass(Ac);class Ec extends bi{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ms(e.betaInitializer||"zeros"),this.gammaInitializer=Ms(e.gammaInitializer||"ones"),this.betaRegularizer=gu(e.betaRegularizer),this.gammaRegularizer=gu(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=ii(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: "+r);if(this.axis.length!==fa(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(t=>e[t]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=si(e),r=n.shape,a=r.length;return Object(d.tidy)(()=>{let{mean:e,variance:t}=Object(d.moments)(n,this.axis,!0);const s=ra(1,a);for(const n of this.axis)s[n]=r[n];const i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?e.reshape(s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const c=[],l=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(c.push(r[n]),l.push(1)):(c.push(1),l.push(r[n]));return e=e.tile(c),t=t.tile(c),o=o.tile(l),u=u.tile(l),Cc(n,e,t,u,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ds(this.betaInitializer),gammaInitializer:Ds(this.gammaInitializer),betaRegularizer:mu(this.betaRegularizer),gammaRegularizer:mu(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ec.className="LayerNormalization",d.serialization.registerClass(Ec);class $c extends bi{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ea(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ea(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ea(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new di({ndim:4})]}computeOutputShape(e){let t,n;return e=ii(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Object(d.tidy)(()=>{return t=si(e),n=this.padding,r=this.dataFormat,Object(d.tidy)(()=>{if(4!==t.rank)throw new ea("temporalPadding expects input tensor to be 4-D, but received a "+t.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ea("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new ea(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],d.pad(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Fc(e,t,n,r,a,s){return Object(d.tidy)(()=>{let i;Pa(a),Va(s),Ba(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Su(e,a);const o="same"===r?"same":"valid";return i="max"===s?d.maxPool(e,t,n,o):d.avgPool(e,t,n,o),"channelsFirst"===a&&(i=d.transpose(i,[0,3,1,2])),i})}function _c(e,t,n,r,a,s){return Object(d.tidy)(()=>{let i;Pa(a),Va(s),Ba(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Cu(e,a);const o="same"===r?"same":"valid";return i="max"===s?d.maxPool3d(e,t,n,o):d.avgPool3d(e,t,n,o),"channelsFirst"===a&&(i=d.transpose(i,[0,4,1,2,3])),i})}$c.className="ZeroPadding2D",d.serialization.registerClass($c);class Rc extends bi{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new ea("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.poolSize));this.poolSize=e.poolSize}if(ya(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new ea("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.strides));this.strides=e.strides}ya(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ba(this.padding),this.inputSpec=[new di({ndim:3})]}computeOutputShape(e){const t=Iu((e=ii(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Object(d.tidy)(()=>{this.invokeCallHook(e,t),e=ts(si(e),2);const n=this.poolingFunction(si(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return d.squeeze(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Dc extends Rc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Pa(a),Ba(r),Fc(e,t,n,r,a,"max")}}Dc.className="MaxPooling1D",d.serialization.registerClass(Dc);class Mc extends Rc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Pa(a),Ba(r),Fc(e,t,n,r,a,"avg")}}Mc.className="AveragePooling1D",d.serialization.registerClass(Mc);class zc extends bi{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ea("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides];ya(this.poolSize,"poolSize"),ya(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pa(this.dataFormat),Ba(this.padding),this.inputSpec=[new di({ndim:4})]}computeOutputShape(e){e=ii(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Iu(t,this.poolSize[0],this.padding,this.strides[0]),n=Iu(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Object(d.tidy)(()=>(this.invokeCallHook(e,t),this.poolingFunction(si(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Lc extends zc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Pa(a),Ba(r),Fc(e,t,n,r,a,"max")}}Lc.className="MaxPooling2D",d.serialization.registerClass(Lc);class Pc extends zc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Pa(a),Ba(r),Fc(e,t,n,r,a,"avg")}}Pc.className="AveragePooling2D",d.serialization.registerClass(Pc);class Bc extends bi{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ea("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ya(this.poolSize,"poolSize"),ya(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pa(this.dataFormat),Ba(this.padding),this.inputSpec=[new di({ndim:5})]}computeOutputShape(e){e=ii(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Iu(t,this.poolSize[0],this.padding,this.strides[0]),n=Iu(n,this.poolSize[1],this.padding,this.strides[1]),r=Iu(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Object(d.tidy)(()=>(this.invokeCallHook(e,t),this.poolingFunction(si(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Vc extends Bc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Pa(a),Ba(r),_c(e,t,n,r,a,"max")}}Vc.className="MaxPooling3D",d.serialization.registerClass(Vc);class Wc extends Bc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Pa(a),Ba(r),_c(e,t,n,r,a,"avg")}}Wc.className="AveragePooling3D",d.serialization.registerClass(Wc);class Uc extends bi{constructor(e){super(e),this.inputSpec=[new di({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ta}}class Gc extends Uc{constructor(e){super(e||{})}call(e,t){return Object(d.tidy)(()=>{const t=si(e);return d.mean(t,1)})}}Gc.className="GlobalAveragePooling1D",d.serialization.registerClass(Gc);class Kc extends Uc{constructor(e){super(e||{})}call(e,t){return Object(d.tidy)(()=>{const t=si(e);return d.max(t,1)})}}Kc.className="GlobalMaxPooling1D",d.serialization.registerClass(Kc);class Hc extends bi{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pa(this.dataFormat),this.inputSpec=[new di({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ta}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class qc extends Hc{call(e,t){return Object(d.tidy)(()=>{const t=si(e);return"channelsLast"===this.dataFormat?d.mean(t,[1,2]):d.mean(t,[2,3])})}}qc.className="GlobalAveragePooling2D",d.serialization.registerClass(qc);class Xc extends Hc{call(e,t){return Object(d.tidy)(()=>{const t=si(e);return"channelsLast"===this.dataFormat?d.max(t,[1,2]):d.max(t,[2,3])})}}Xc.className="GlobalMaxPooling2D",d.serialization.registerClass(Xc);class Yc extends bi{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Ai(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class Zc extends Yc{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ii(e)).length<3)throw new ea("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(e));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=ii(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Object(d.tidy)(()=>Gu((e,n)=>[si(this.layer.call(e,t)),[]],e=si(e),[],!1,null,null,!1,!0)[1])}}Zc.className="TimeDistributed",d.serialization.registerClass(Zc);class Jc extends Yc{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ai(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Ai(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,ba(za,"BidirectionalMergeMode",a),e.weights)throw new ta("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):ia(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Uu(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new ea("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map(e=>new di({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new ta("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof hi;for(const u of s)if(u instanceof hi!==o)throw new ea("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Object(d.tidy)(()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=d.reverse(a,1)),"concat"===this.mergeMode?i=ss([r,a]):"sum"===this.mergeMode?i=d.add(r,a):"ave"===this.mergeMode?i=d.mul(.5,d.add(r,a)):"mul"===this.mergeMode?i=d.mul(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ua(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ua(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Ai(t.layer);if(delete t.layer,null!=t.numConstants)throw new ta("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function Qc(e){return new gi(e)}function el(e){return new wu(e)}function tl(e){return new yu(e)}function nl(e){return new xu(e)}function rl(e){return new vu(e)}function al(e){return new ku(e)}function sl(e){return new Ou(e)}function il(e){return new Pu(e)}function ol(e){return new _u(e)}function ul(e){return new Du(e)}function cl(e){return new Ru(e)}function ll(e){return new Mu(e)}function dl(e){return new Lu(e)}function hl(e){return new Bu(e)}function pl(e){return new Vu(e)}function fl(e){return new Wu(e)}function ml(e){return new lc(e)}function bl(e){return new uc(e)}function gl(e){return new ic(e)}function yl(e){return new oc(e)}function xl(e){return new cc(e)}function vl(e){return new dc(e)}function wl(e){return new hc(e)}function Ol(e){return new pc(e)}function kl(e){return new mc(e)}function Nl(e){return new gc(e)}function Il(e){return new xc(e)}function jl(e){return new Oc(e)}function Sl(e){return new vc(e)}function Cl(e){return new wc(e)}function Tl(e){return new yc(e)}function Al(e){return new Nc(e)}function El(e){return new Ac(e)}function $l(e){return new Ec(e)}function Fl(e){return new $c(e)}function _l(e){return new Mc(e)}function Rl(e){return _l(e)}function Dl(e){return _l(e)}function Ml(e){return new Pc(e)}function zl(e){return Ml(e)}function Ll(e){return Ml(e)}function Pl(e){return new Wc(e)}function Bl(e){return Pl(e)}function Vl(e){return Pl(e)}function Wl(e){return new Gc(e)}function Ul(e){return new qc(e)}function Gl(e){return new Kc(e)}function Kl(e){return new Xc(e)}function Hl(e){return new Dc(e)}function ql(e){return new Lc(e)}function Xl(e){return new Vc(e)}function Yl(e){return new Zu(e)}function Zl(e){return new Yu(e)}function Jl(e){return new Qu(e)}function Ql(e){return new Ju(e)}function ed(e){return new Xu(e)}function td(e){return new qu(e)}function nd(e){return new sc(e)}function rd(e){return new ac(e)}function ad(e){return new Ku(e)}function sd(e){return new ec(e)}function id(e){return new Jc(e)}function od(e){return new Zc(e)}Jc.className="Bidirectional",d.serialization.registerClass(Jc);const ud=Gl,cd=Kl,ld=Hl,dd=ql;function hd(e){return new Ic(e)}function pd(e){return new jc(e)}function fd(e){return new Sc(e)}function md(e){return new fc(e)}function bd(e,t){return Wi(e,t)}function gd(e,t){return qi(e,t)}function yd(e,t){return Xi(e,t)}function xd(e,t){return Ui(e,t)}function vd(e,t){return Yi(e,t)}function wd(e,t){return Ki(e,t)}function Od(e,t){return Hi(e,t)}function kd(e,t){return Pi(e,t)}function Nd(e,t){return Fi(e,t)}function Id(e,t){return _i(e,t)}function jd(e,t){return _i(e,t)}function Sd(e,t){return _i(e,t)}function Cd(e,t){return $i(e,t)}function Td(e,t){return $i(e,t)}function Ad(e,t){return $i(e,t)}function Ed(e){return new pu(e)}function $d(e){return du(t=e),new pu({l1:null!=t?t.l1:null,l2:0});var t}function Fd(e){return du(t=e),new pu({l2:null!=t?t.l2:null,l1:0});var t}class _d extends Oi{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Mo))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Rd(e,t){return e<t}function Dd(e,t){return e>t}class Md extends _d{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new ta("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=Rd:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=Dd:this.monitorFunc=Rd,this.monitorFunc===Rd&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Rd?1/0:-1/0}async onEpochEnd(e,t){await xi(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: `+Object.keys(e)),t}}const zd={earlyStopping:function(e){return new Md(e)}};var Ld=n("CtZu"),Pd=n("YSVl"),Bd=n("w4jT"),Vd=n("vc8R");class Wd{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return d.util.assert(e>0,()=>"batchSize needs to be positive, but it is\n      "+e),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Ud(async()=>(await n.iterator()).columnMajorBatch(e,t,Hd),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Ud(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Ud(async()=>(await t.iterator()).filter(t=>d.tidy(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Ud(async()=>(await t.iterator()).map(t=>d.tidy(()=>e(t))),this.size)}mapAsync(e){const t=this;return Ud(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Ud(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Ud(async()=>{const n=Object(Bd.e)(async()=>({value:await t.iterator(),done:!1}));return Object(Bd.d)(n.take(e))},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Ud(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Pd.alea(t||d.util.now().toString());return Ud(async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Ud(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Ud(e,t=null){return new class extends Wd{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Gd(e){return Ud(async()=>Object(Bd.f)(e),e.length)}function Kd(e){if(!Object(Vd.e)(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return Ud(async()=>{const t=await Object(Vd.c)(e,e=>{if(e instanceof Wd)return{value:e.iterator(),recurse:!1};if(Object(Vd.e)(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return Object(Bd.g)(t,Bd.c.SHORTEST)},t)}function Hd(e){if(null===e)return null;const t=e[0];if(Object(Vd.a)(t)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof d.Tensor?d.stack(e):d.tensor(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Wd.MAX_BUFFER_SIZE=1e4;class qd extends Wd{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}}const Xd=Symbol("out"),Yd=Symbol("field"),Zd=Symbol("quote"),Jd=Symbol("quoteafterquote"),Qd=Symbol("quoteinquote");class eh extends Wd{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new qd(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(d.util.assert(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&d.util.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>t[e]>1);if(d.util.assert(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const r of Object.keys(this.columnConfigs)){if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o);break;default:u=e}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=Xd;for(let i=0;i<a;i++)switch(s){case Xd:switch(e.charAt(i)){case'"':r=i+1,s=Zd;break;case this.delimiter:if(r=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=Xd;break;default:s=Yd,r=i}break;case Yd:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=Xd,r=i+1}break;case Zd:switch(e.charAt(i)){case'"':s=Jd}break;case Jd:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=Xd,r=i+1;break;case'"':s=Zd;break;default:s=Qd}break;case Qd:switch(e.charAt(i)){case'"':s=Zd}}if(s===Jd?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class th extends Bd.a{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error("Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got "+this.fftSize);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Object(d.env)().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new th(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error("Error thrown while initializing video stream: "+n.message)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: `+this.audioContext.sampleRate)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise(r=>{const a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((e,r)=>n.set(e,r*t)),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(d.util.sizeFromShape(t));return n.set(e,n.length-e.length),Object(d.tensor)(n,t)}}class nh extends Bd.a{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Object(d.tensor1d)([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Object(d.tensor2d)([r,n,s,a],[1,4])}else this.cropBox=Object(d.tensor2d)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Object(d.env)().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new nh(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&d.util.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message="Error thrown while initializing video stream: "+e.message,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=d.browser.fromPixels(this.webcamVideoElement)}catch(t){throw new Error("Error thrown converting video to pixels: "+JSON.stringify(t))}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error("Error thrown cropping the video: "+t.message)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Object(d.tidy)(()=>{const t=Object(d.expandDims)(Object(d.cast)(e,"float32"),0);let n;n=d.image.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return Object(d.reshape)(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class rh{}var ah=n("3BSK");class sh extends ah.a{constructor(e,t={}){super(),this.file=e,this.options=t,d.util.assert(e instanceof Uint8Array||!!Object(d.env)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return"FileChunks "+this.file}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n});return{value:await e,done:!1}}}const ih=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function oh(e){return"string"===typeof e&&"file://"===e.substr(0,7)}class uh extends rh{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(oh(this.input)&&Object(d.env)().get("IS_NODE")){const e=n(5);this.input=e.readFileSync(this.input.substr(7))}return new sh(this.input,this.options)}}class ch extends rh{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return oh(this.url)?new uh(this.url,this.fileOptions).iterator():async function(e,t={}){let n,r;"string"===typeof e?n=e:(n=e.url,r=ih(e));const a=await d.util.fetch(n,r);if(a.ok){const e=new Uint8Array(await a.arrayBuffer());return new sh(e,t)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function lh(e,t={}){return new eh(new ch(e),t)}function dh(e){const t=Object(Bd.e)(e);return Ud(async()=>t)}function hh(e){return Ud(async()=>{const t=await e();return Object(Bd.e)(()=>t.next())})}async function ph(e,t){return nh.create(e,t)}async function fh(e){return th.create(e)}const mh="3.5.0";function bh(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&d.util.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the CPU backend.")})}const gh=d.kernel_impls.whereImpl;class yh extends d.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new d.DataStorage(this,Object(d.engine)())}nextDataId(){return yh.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(d.env)().get("IS_NODE")&&d.backend_util.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&d.util.isString(n[0])){const a=n.map(e=>d.util.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return d.backend_util.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>d.util.decodeString(e))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(d.buffer)(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Object(d.engine)().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=d.util.now();e();return{kernelMs:d.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){bh([e],"where");const t=this.readSync(e.dataId);return gh(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}yh.nextDataId=0;function xh(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(bh(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=d.util.sizeFromShape(i.shape),l=n||i.dtype,h=d.util.getArrayFromDType(l,c);for(let e=0;e<c;++e)h[e]=t(u[e],a);return o.makeTensorInfo(i.shape,l,h)}}function vh(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(bh(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=n||i.dtype,l=t(u,c,a);return o.makeTensorInfo(i.shape,c,l)}}Object(d.registerBackend)("cpu",()=>new yh,1);const wh=xh(d.Elu,e=>e>=0?e:Math.exp(e)-1),Oh={kernelName:d.Elu,backendName:"cpu",kernelFunc:wh};function kh(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Nh={kernelName:d.Identity,backendName:"cpu",kernelFunc:kh};function Ih(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;bh([a],"leakyRelu");const i=d.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=d.util.getTypedArrayFromDType("float32",i);for(let c=0;c<o.length;c++)u[c]=o[c]<0?s*o[c]:o[c];return n.makeTensorInfo(a.shape,"float32",u)}const jh={kernelName:d.LeakyRelu,backendName:"cpu",kernelFunc:Ih};function Sh(e){return(t,n,r,a,s)=>{const i=d.backend_util.assertAndGetBroadcastShape(t,n),o=i.length,u=d.util.computeStrides(i),c=d.util.sizeFromShape(i),l=d.util.getTypedArrayFromDType(s,c),h=t.length,p=n.length,f=d.util.computeStrides(t),m=d.util.computeStrides(n),b=d.backend_util.getBroadcastDims(t,i),g=d.backend_util.getBroadcastDims(n,i);if(b.length+g.length===0)for(let d=0;d<l.length;++d)l[d]=e(r[d%r.length],a[d%a.length]);else for(let y=0;y<l.length;++y){const t=d.util.indexToLoc(y,o,u),n=t.slice(-h);b.forEach(e=>n[e]=0);const s=d.util.locToIndex(n,h,f),i=t.slice(-p);g.forEach(e=>i[e]=0);const c=d.util.locToIndex(i,p,m);l[y]=e(r[s],a[c])}return[l,i]}}const Ch=Sh((e,t)=>e<0?t*e:e);function Th(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;bh([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=Ch(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const Ah={kernelName:d.Prelu,backendName:"cpu",kernelFunc:Th},Eh=xh(d.Relu,e=>Math.max(0,e)),$h={kernelName:d.Relu,backendName:"cpu",kernelFunc:Eh},Fh=xh(d.Relu6,e=>Math.min(Math.max(0,e),6)),_h={kernelName:d.Relu6,backendName:"cpu",kernelFunc:Fh},Rh=xh(d.Sigmoid,e=>1/(1+Math.exp(-e))),Dh={kernelName:d.Sigmoid,backendName:"cpu",kernelFunc:Rh};function Mh(e,t,n,r,a){if("linear"===n)return kh({inputs:{x:t},backend:e});if("relu"===n)return Eh({inputs:{x:t},backend:e});if("elu"===n)return wh({inputs:{x:t},backend:e});if("relu6"===n)return Fh({inputs:{x:t},backend:e});if("prelu"===n)return Th({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Ih({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return Rh({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function zh(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const Lh={kernelName:d.Complex,backendName:"cpu",kernelFunc:zh};function Ph(e,t,n="float32"){if("complex64"===n){return zh({inputs:{real:Ph(e,t,"float32"),imag:Ph(e,t,"float32")},backend:e})}const r=d.util.makeZerosTypedArray(d.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Bh(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Vh={kernelName:d.Real,backendName:"cpu",kernelFunc:Bh};function Wh(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return kh({inputs:{x:a},backend:n});const e=Ph(n,a.shape,a.dtype),t=Wh({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=zh({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=Bh({inputs:{input:a},backend:n}),t=Wh({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!d.util.hasEncodingLoss(a.dtype,s)){const e=kh({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=d.util.toTypedArray([0],a.dtype),[r,s]=Sh((e,t)=>e!==t?1:0)(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const Uh={kernelName:d.Cast,backendName:"cpu",kernelFunc:Wh};function Gh(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;bh([s,i],e);const u=o.data.get(s.dataId).values,c=o.data.get(i.dataId).values,l=r||s.dtype,[d,h]=t(s.shape,i.shape,u,c,l);return o.makeTensorInfo(h,l,d)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=Wh({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,c=o.data.get(a.dataId).values,l=Wh({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(l.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(p.dataId).values,[b,g,y]=n(s.shape,i.shape,u,c,f,m),x=o.makeTensorInfo(y,"float32",b),v=o.makeTensorInfo(y,"float32",g),w=zh({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(l),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,c]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(c,a,u)}}}function Kh(e){return(t,n,r,a,s,i)=>{const o=d.backend_util.assertAndGetBroadcastShape(t,n),u=d.util.sizeFromShape(o),c=o.length,l=d.util.computeStrides(o),h=d.util.getTypedArrayFromDType("float32",u),p=d.util.getTypedArrayFromDType("float32",u),f=d.backend_util.getBroadcastDims(t,o),m=d.backend_util.getBroadcastDims(n,o),b=d.backend_util.mergeRealAndImagArrays(r,a),g=d.backend_util.mergeRealAndImagArrays(s,i),y=t.length,x=d.util.computeStrides(t),v=n.length,w=d.util.computeStrides(n);if(f.length+m.length===0)for(let d=0;d<h.length;d++){const t=d%b.length,n=d%g.length,r=e(b[2*t],b[2*t+1],g[2*n],g[2*n+1]);h[d]=r.real,p[d]=r.imag}else for(let O=0;O<h.length;O++){const t=d.util.indexToLoc(O,c,l),n=t.slice(-y);f.forEach(e=>n[e]=0);const r=d.util.locToIndex(n,y,x),a=t.slice(-v);m.forEach(e=>a[e]=0);const s=d.util.locToIndex(a,v,w),i=e(b[2*r],b[2*r+1],g[2*s],g[2*s+1]);h[O]=i.real,p[O]=i.imag}return[h,p,o]}}const Hh=Sh((e,t)=>e+t),qh=Kh((e,t,n,r)=>({real:e+n,imag:t+r})),Xh=Gh(d.Add,Hh,qh),Yh={kernelName:d.Add,backendName:"cpu",kernelFunc:Xh};function Zh(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=d.util.sizeFromShape(a.shape),o=d.util.inferFromImplicitShape(s,i),u=d.util.sizeFromShape(o);d.util.assert(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const Jh={kernelName:d.Reshape,backendName:"cpu",kernelFunc:Zh};function Qh(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;bh([a,s],"matMul");const u=a.shape.length,c=s.shape.length,l=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[c-1]:s.shape[c-2],p=i?a.shape[u-1]:a.shape[u-2],f=o?s.shape[c-2]:s.shape[c-1],m=a.shape.slice(0,-2),b=s.shape.slice(0,-2),g=d.util.sizeFromShape(m),y=d.util.sizeFromShape(b),x=g===y||1===g||1===y;d.util.assert(u>=2&&c>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${b}).`);const v=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([p,f]);d.util.assert(l===h,()=>`Error in matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);const w=o?[y,f,h]:[y,h,f],O=Zh({inputs:{x:a},backend:n,attrs:{shape:i?[g,l,p]:[g,p,l]}}),k=Zh({inputs:{x:s},backend:n,attrs:{shape:w}}),N=i?O.shape[1]:O.shape[2],I=i?O.shape[2]:O.shape[1],j=o?k.shape[1]:k.shape[2],S=Math.max(g,y),C=n.data.get(O.dataId).values,T=n.data.get(k.dataId).values,A=d.util.computeStrides(O.shape),E=d.util.computeStrides(k.shape),[$,F,_]=i?[A[0],1,A[1]]:[A[0],A[1],1],[R,D,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],z=I*j,L=Object(d.buffer)([S,I,j],O.dtype),P=L.values,B=n.blockSize;for(let d=0;d<S;d++)for(let e=0;e<I;e+=B)for(let t=0;t<j;t+=B)for(let n=0;n<N;n+=B){const r=Math.min(e+B,I),a=Math.min(t+B,j),s=Math.min(n+B,N);for(let i=e;i<r;i++)for(let e=t;e<a;e++){let t=0;for(let r=n;r<s;r++){const n=Math.min(d,g-1)*$,a=Math.min(d,y-1)*M;t+=C[n+i*F+r*_]*T[r*R+e*D+a]}P[d*z+(i*j+e)]+=t}}return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(v,L.dtype,L.values)}const ep={kernelName:d.BatchMatMul,backendName:"cpu",kernelFunc:Qh};const tp={kernelName:d._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=Qh({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),i&&(p=Xh({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),l&&(f=Mh(n,h,l,o,d),m.push(h),h=f);for(const b of m)n.disposeIntermediateTensorInfo(b);return h}};function np(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const rp={kernelName:d.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;bh(t,"abs");let r=new Float32Array(d.util.sizeFromShape(t.shape));return r=np(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},ap=xh(d.Acos,e=>Math.acos(e)),sp={kernelName:d.Acos,backendName:"cpu",kernelFunc:ap},ip=xh(d.Acosh,e=>Math.acosh(e)),op={kernelName:d.Acosh,backendName:"cpu",kernelFunc:ip};const up={kernelName:d.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;bh(t,"addN");const a=r.map(e=>n.data.get(e.dataId).values),s=Object(d.buffer)(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){const e=a[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function cp(e,t,n,r,a){const s=t.length,i=d.util.sizeFromShape(t),o=d.util.computeStrides(t),u=d.util.computeStrides(a),c=d.util.getTypedArrayFromDType(n,d.util.sizeFromShape(a));for(let l=0;l<i;++l){const t=d.util.indexToLoc(l,s,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];c[d.util.locToIndex(n,s,u)]=e[l]}return c}function lp(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;bh(a,"transpose");const i=a.shape.length,o=new Array(i);for(let c=0;c<o.length;c++)o[c]=a.shape[s[c]];const u=cp(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const dp={kernelName:d.Transpose,backendName:"cpu",kernelFunc:lp};const hp={kernelName:d.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;bh(a,"all");const o=d.util.parseAxisParam(s,a.shape);let u=o;const c=d.backend_util.getAxesPermutation(u,a.shape.length);let l=a;null!=c&&(l=lp({inputs:{x:a},backend:n,attrs:{perm:c}}),u=d.backend_util.getInnerMostAxes(u.length,a.shape.length)),d.backend_util.assertAxesAreInnerMostDims("all",u,l.shape.length);const[h,p]=d.backend_util.computeOutAndReduceShapes(l.shape,u),f=d.util.sizeFromShape(p),m=d.util.makeZerosTypedArray(d.util.sizeFromShape(h),l.dtype),b=n.data.get(l.dataId).values;for(let d=0;d<m.length;++d){const e=d*f;let t=b[e];for(let n=0;n<f;++n){const r=b[e+n];t=t&&r}m[d]=t}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(h,l.dtype,m);if(i){const e=Zh({inputs:{x:g},backend:n,attrs:{shape:d.backend_util.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const pp={kernelName:d.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;bh(a,"any");const o=d.util.parseAxisParam(s,a.shape);let u=o;const c=d.backend_util.getAxesPermutation(u,a.shape.length);let l=a;null!=c&&(l=lp({inputs:{x:a},backend:n,attrs:{perm:c}}),u=d.backend_util.getInnerMostAxes(u.length,a.shape.length)),d.backend_util.assertAxesAreInnerMostDims("any",u,l.shape.length);const[h,p]=d.backend_util.computeOutAndReduceShapes(l.shape,u),f=d.util.sizeFromShape(p),m=d.util.makeZerosTypedArray(d.util.sizeFromShape(h),l.dtype),b=n.data.get(l.dataId).values;for(let d=0;d<m.length;++d){const e=d*f;let t=b[e];for(let n=0;n<f;++n){const r=b[e+n];t=t||r}m[d]=t}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(h,l.dtype,m);if(i){const e=Zh({inputs:{x:g},backend:n,attrs:{shape:d.backend_util.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const fp={kernelName:d.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;bh(a,"argMax");let i=d.util.parseAxisParam(s,a.shape);const o=d.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=lp({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=d.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],d.backend_util.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[l,h]=d.backend_util.computeOutAndReduceShapes(u.shape,i),p=d.util.sizeFromShape(l),f=d.util.makeZerosTypedArray(p,"int32"),m=d.util.sizeFromShape(h),b=n.data.get(u.dataId).values;for(let d=0;d<f.length;++d){const e=d*m;let t=b[e],n=0;for(let r=0;r<m;++r){const a=b[e+r];a>t&&(t=a,n=r)}f[d]=n}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(l,"int32",f)}};const mp={kernelName:d.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;bh(a,"argMin");let i=d.util.parseAxisParam(s,a.shape);const o=d.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=lp({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=d.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],d.backend_util.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[l,h]=d.backend_util.computeOutAndReduceShapes(u.shape,i),p=d.util.sizeFromShape(l),f=d.util.makeZerosTypedArray(p,"int32"),m=d.util.sizeFromShape(h),b=n.data.get(u.dataId).values;for(let d=0;d<f.length;++d){const e=d*m;let t=b[e],n=0;for(let r=0;r<m;++r){const a=b[e+r];a<t&&(t=a,n=r)}f[d]=n}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(l,"int32",f)}},bp=xh(d.Asin,e=>Math.asin(e)),gp={kernelName:d.Asin,backendName:"cpu",kernelFunc:bp},yp=xh(d.Asinh,e=>Math.asinh(e)),xp={kernelName:d.Asinh,backendName:"cpu",kernelFunc:yp},vp=xh(d.Atan,e=>Math.atan(e)),wp={kernelName:d.Atan,backendName:"cpu",kernelFunc:vp},Op=Sh((e,t)=>Math.atan2(e,t)),kp=Gh(d.Atan2,Op),Np={kernelName:d.Atan2,backendName:"cpu",kernelFunc:kp},Ip=xh(d.Atanh,e=>Math.atanh(e)),jp={kernelName:d.Atanh,backendName:"cpu",kernelFunc:Ip};function Sp(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,l=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(d.buffer)(a.outShape,n),g=b.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],x=a.outShape[2]*a.outShape[3],v=a.outShape[3];for(let d=0;d<a.batchSize;++d){const t=d*y,n=d*r[0];for(let d=0;d<a.inChannels;++d)for(let b=0;b<a.outHeight;++b){const y=b*i-p,w=Math.max(0,y),O=Math.min(a.inHeight,l+y),k=t+b*x;for(let t=0;t<a.outWidth;++t){const i=t*o-f,l=Math.max(0,i),p=Math.min(a.inWidth,h+i);let b=m,y=0,x=0;for(let t=w;t<O;t+=u){const a=n+t*r[1];for(let t=l;t<p;t+=c){const n=e[a+t*r[2]+d];"max"===s&&n>b?b=n:"avg"===s&&(y+=n,x++)}if(isNaN(b))break}g[k+t*v+d]="avg"===s?y/x:b}}}return b}function Cp(e,t,n,r,a=!1,s=!1){const i=Object(d.buffer)(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,b=Object(d.buffer)(t,n,e);for(let d=0;d<r.batchSize;++d)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*o-f;let g=n;for(;g<0;)g+=c;const y=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*u-m;let f=h;for(;f<0;)f+=l;const x=Math.min(r.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=g;t<y;t+=c){const i=t-n;for(let n=f;n<x;n+=l){const o=n-h,u=b.get(d,t,n,e);u>v&&(v=u,w=a?s?((d*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*p+o)}}i.set(w,d,t,o,e)}}return i}function Tp(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,c=a.dilationDepth,l=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,f=a.effectiveFilterHeight,m=a.effectiveFilterWidth,b=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,x="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Object(d.buffer)(a.outShape,n),w=v.values,O=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],N=a.outShape[3]*a.outShape[4],I=a.outShape[4];for(let d=0;d<a.batchSize;++d){const t=d*O,n=d*r[0];for(let d=0;d<a.inChannels;++d)for(let v=0;v<a.outDepth;++v){const O=v*i-b;let j=O;for(;j<0;)j+=c;const S=Math.min(a.inDepth,p+O),C=t+v*k;for(let t=0;t<a.outHeight;++t){const i=t*o-g;let p=i;for(;p<0;)p+=l;const b=Math.min(a.inHeight,f+i),v=C+t*N;for(let t=0;t<a.outWidth;++t){const i=t*u-y;let o=i;for(;o<0;)o+=h;const f=Math.min(a.inWidth,m+i),g=v+t*I;let O=x,k=0,N=0;for(let t=j;t<S;t+=c){const a=n+t*r[1];for(let t=p;t<b;t+=l){const n=a+t*r[2];for(let t=o;t<f;t+=h){const a=e[n+t*r[3]+d];if("max"===s&&a>O?O=a:"avg"===s&&(k+=a,N++),isNaN(O))break}if(isNaN(O))break}if(isNaN(O))break}w[g+d]="avg"===s?k/N:O}}}}return v}const Ap={kernelName:d.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;bh(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=d.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&d.util.arraysEqual(c.inShape,c.outShape))l=kh({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=d.util.computeStrides(a.shape),r=Sp(e,a.shape,a.dtype,t,c,"avg");l=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return l}};const Ep={kernelName:d.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r;bh(a,"avgPool3d");const l=d.backend_util.computePool3DInfo(a.shape,s,i,1,o,u,c),h=Tp(n.data.get(a.dataId).values,a.shape,a.dtype,d.util.computeStrides(a.shape),l,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const $p={kernelName:d.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;bh([a,s],"avgPool3DGrad");const l=d.backend_util.computePool3DInfo(s.shape,i,o,1,u,c),h=l.strideDepth,p=l.strideHeight,f=l.strideWidth,m=l.filterDepth,b=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,x=l.dilationHeight,v=l.dilationWidth,w=l.effectiveFilterDepth,O=l.effectiveFilterHeight,k=l.effectiveFilterWidth,N=w-1-l.padInfo.front,I=k-1-l.padInfo.left,j=O-1-l.padInfo.top,S=Object(d.buffer)(s.shape,"float32"),C=1/(m*b*g),T=n.bufferSync(a);for(let d=0;d<l.batchSize;++d)for(let e=0;e<l.inChannels;++e)for(let t=0;t<l.inDepth;++t)for(let n=0;n<l.inHeight;++n)for(let r=0;r<l.inWidth;++r){const a=t-N,s=n-j,i=r-I;let o=0;for(let t=0;t<w;t+=y){const n=(a+t)/h;if(!(n<0||n>=l.outDepth||Math.floor(n)!==n))for(let t=0;t<O;t+=x){const r=(s+t)/p;if(!(r<0||r>=l.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=v){const a=(i+t)/f;if(a<0||a>=l.outWidth||Math.floor(a)!==a)continue;o+=T.get(d,n,r,a,e)}}}S.set(o*C,d,t,n,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const Fp={kernelName:d.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;bh([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=d.backend_util.computePool2DInfo(i.shape,o,u,1,c),h=l.strideHeight,p=l.strideWidth,f=l.filterHeight,m=l.filterWidth,b=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,x=l.effectiveFilterWidth,v=x-1-l.padInfo.left,w=y-1-l.padInfo.top,O=Object(d.buffer)(i.shape,"float32"),k=1/(f*m),N=n.data.get(a.dataId).values,I=Object(d.buffer)(a.shape,"float32",N);for(let d=0;d<l.batchSize;++d)for(let e=0;e<l.inChannels;++e)for(let t=0;t<l.inHeight;++t)for(let n=0;n<l.inWidth;++n){const r=t-w,a=n-v;let s=0;for(let t=0;t<y;t+=b){const n=(r+t)/h;if(!(n<0||n>=l.outHeight||Math.floor(n)!==n))for(let t=0;t<x;t+=g){const r=(a+t)/p;if(r<0||r>=l.outWidth||Math.floor(r)!==r)continue;s+=I.get(d,n,r,e)}}O.set(s*k,d,t,n,e)}return n.makeTensorInfo(O.shape,O.dtype,O.values)}};const _p={kernelName:d.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;d.util.assert(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),d.util.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),d.util.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),bh([a,o,u,s,i],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const l=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,f=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),b=new Float32Array(l.length),g=m.length,y=f.length,x=p.length,v=h.length;let w=0,O=0,k=0,N=0;for(let d=0;d<l.length;++d)b[d]=m[w++]+(l[d]-h[O++])*f[k++]/Math.sqrt(p[N++]+c),w>=g&&(w=0),O>=v&&(O=0),k>=y&&(k=0),N>=x&&(N=0);return n.makeTensorInfo(a.shape,a.dtype,b)}};function Rp(e,t,n,r,a){const s=d.slice_util.isSliceContinous(r,t,n),i=d.util.sizeFromShape(n),o=d.util.computeStrides(r);if(s){const n=d.slice_util.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u="string"===a?d.backend_util.fromUint8ToStringArray(e):e,c=Object(d.buffer)(r,a,u),l=Object(d.buffer)(n,a);for(let d=0;d<l.size;++d){const e=l.indexToLoc(d),n=e.map((e,n)=>e+t[n]);l.set(c.get(...n),...e)}return"string"===a?d.backend_util.fromStringArrayToUint8(l.values):l.values}function Dp(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;bh(a,"slice");const[o,u]=d.slice_util.parseSliceParams(a,s,i);d.slice_util.assertParamsValid(a,o,u);const c=Rp(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,c)}const Mp={kernelName:d.Slice,backendName:"cpu",kernelFunc:Dp};const zp={kernelName:d.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;bh([a],"batchToSpaceND");const o=s.reduce((e,t)=>e*t),u=d.backend_util.getReshaped(a.shape,s,o),c=d.backend_util.getPermuted(u.length,s.length),l=d.backend_util.getReshapedPermuted(a.shape,s,o),h=d.backend_util.getSliceBeginCoords(i,s.length),p=d.backend_util.getSliceSize(l,i,s.length),f=Zh({inputs:{x:a},backend:n,attrs:{shape:u}}),m=lp({inputs:{x:f},backend:n,attrs:{perm:c}}),b=Zh({inputs:{x:m},backend:n,attrs:{shape:l}}),g=Dp({inputs:{x:b},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}};function Lp(e,t,n,r,a){const s=d.util.sizeFromShape(r),i=d.util.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(i[n]+=s>0?t[o]:1)}return i}function Pp(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=Object(d.buffer)([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}const Bp={kernelName:d.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=Lp(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};function Vp(e){return(t,n,r)=>{const a=d.util.getTypedArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}const Wp=Vp(e=>Math.ceil(e)),Up=vh(d.Ceil,Wp),Gp={kernelName:d.Ceil,backendName:"cpu",kernelFunc:Up},Kp=xh(d.ClipByValue,(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),Hp={kernelName:d.ClipByValue,backendName:"cpu",kernelFunc:Kp},qp={kernelName:d.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(d.util.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let c=0;c<o.length;c++){const e=o[c],t=u[c];r[c]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function Xp(e,t,n,r){const a=d.util.getArrayFromDType(n,d.util.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{const n=d.util.sizeFromShape(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const s="string"===n?d.backend_util.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]})}return a}function Yp(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Zp={kernelName:d.Imag,backendName:"cpu",kernelFunc:Yp};function Jp(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=d.util.parseAxisParam(a,t[0].shape)[0];let i=d.backend_util.computeOutShape(t.map(e=>e.shape),s);if(0===d.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>d.util.sizeFromShape(e.shape)>0);if(1===o.length)return kh({inputs:{x:o[0]},backend:n});const u=o.map(e=>e.shape);if(d.backend_util.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const e=o.map(e=>Bh({inputs:{input:e},backend:n})),t=o.map(e=>Yp({inputs:{input:e},backend:n})),r=Jp({inputs:e,backend:n,attrs:{axis:s}}),a=Jp({inputs:t,backend:n,attrs:{axis:s}}),i=zh({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const c=o.map(e=>{const t=d.util.sizeFromShape(e.shape.slice(s));return Zh({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),l=c.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));i=d.backend_util.computeOutShape(c.map(e=>e.shape),1);const h=1===c[0].shape[0],p=Xp(l,i,t[0].dtype,h),f=d.backend_util.computeOutShape(o.map(e=>e.shape),s),m=n.makeTensorInfo(f,t[0].dtype,p);return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}const Qp={kernelName:d.Concat,backendName:"cpu",kernelFunc:Jp};function ef(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r;bh([a,s],"conv2d");const h=d.backend_util.convertConv2DDataFormat(u),p=d.backend_util.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!1,h),f=p.filterHeight,m=p.filterWidth,b=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,x=p.padInfo.top,v="channelsLast"===p.dataFormat,w=new d.TensorBuffer(p.outShape,a.dtype),O=d.util.computeStrides(a.shape),k=d.util.computeStrides(s.shape),N=O[0],I=v?O[1]:O[2],j=v?O[2]:1,S=v?1:O[1],C=w.strides[0],T=v?w.strides[1]:w.strides[2],A=v?w.strides[2]:1,E=v?1:w.strides[1],$=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,_=w.values;for(let d=0;d<p.batchSize;++d){const e=d*N,t=d*C;for(let n=0;n<p.outHeight;++n){const r=t+n*T,a=n*p.strideHeight-x;for(let t=0;t<f;++t){const n=a+t*b;if(n<0||n>=p.inHeight)continue;const s=t*k[0],i=e+n*I;for(let e=0;e<p.outWidth;++e){const t=r+e*A,n=e*p.strideWidth-y;for(let e=0;e<m;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const a=i+r*j;let o=s+e*k[1];for(let e=0;e<p.inChannels;++e){const n=$[a+e*S];for(let e=0;e<p.outChannels;++e)_[t+e*E]+=n*F[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,_)}const tf={kernelName:d.Conv2D,backendName:"cpu",kernelFunc:ef};const nf={kernelName:d.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r;bh([a,s],"conv2dBackpropFilter");const h=d.backend_util.convertConv2DDataFormat(u),p=d.backend_util.computeConv2DInfo(a.shape,l,i,1,o,c,!1,h),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=p,y="channelsLast"===p.dataFormat,x=new d.TensorBuffer(p.filterShape,"float32"),v=p.padInfo.left,w=p.padInfo.top,O=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,N=new d.TensorBuffer(a.shape,a.dtype,O),I=new d.TensorBuffer(s.shape,s.dtype,k);for(let d=0;d<b;++d){const e=Math.max(0,Math.ceil((w-d)/f)),t=Math.min(p.outHeight,(p.inHeight+w-d)/f);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((v-n)/m)),a=Math.min(p.outWidth,(p.inWidth+v-n)/m);for(let s=0;s<p.inChannels;++s)for(let i=0;i<p.outChannels;++i){let o=0;for(let u=0;u<p.batchSize;++u)for(let c=e;c<t;++c){const e=d+c*f-w;for(let t=r;t<a;++t){const r=n+t*m-v;o+=y?N.get(u,e,r,s)*I.get(u,c,t,i):N.get(u,s,e,r)*I.get(u,i,c,t)}}x.set(o,d,n,s,i)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const rf={kernelName:d.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r;bh([a,s],"conv2dBackpropInput");const h=d.util.computeStrides(s.shape),p=d.util.computeStrides(a.shape);let f=d.backend_util.convertConv2DDataFormat(c);const m=d.backend_util.computeConv2DInfo(i,s.shape,o,1,u,l,!1,f),b=new d.TensorBuffer(m.inShape,"float32"),g=b.values,y=n.data.get(a.dataId).values,x=n.data.get(s.dataId).values,[v,w,O]=h,{batchSize:k,filterHeight:N,filterWidth:I,inChannels:j,inHeight:S,inWidth:C,outChannels:T,outHeight:A,outWidth:E,strideHeight:$,strideWidth:F}=m;f=m.dataFormat;const _=N-1-m.padInfo.top,R=I-1-m.padInfo.left,D="channelsLast"===f,M=b.strides[0],z=D?b.strides[1]:b.strides[2],L=D?b.strides[2]:1,P=D?1:b.strides[1],B=p[0],V=D?p[1]:p[2],W=D?p[2]:1,U=D?1:p[1];for(let d=0;d<k;++d)for(let e=0;e<j;++e)for(let t=0;t<S;++t){const n=t-_,r=Math.max(0,Math.ceil(n/$)),a=Math.min(A,(N+n)/$);for(let s=0;s<C;++s){const i=s-R,o=Math.max(0,Math.ceil(i/F)),u=Math.min(E,(I+i)/F);let c=0;for(let t=r;t<a;++t){const r=t*$-n;for(let n=o;n<u;++n){const a=B*d+V*t+W*n,s=v*(N-1-r)+w*(I-1-(n*F-i))+O*e;for(let e=0;e<T;++e){c+=y[a+U*e]*x[s+e]}}}g[M*d+z*t+L*s+P*e]=c}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const af={kernelName:d.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;bh([a,s],"conv3d");const c=d.backend_util.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:l,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:b,padInfo:g}=c,y=g.front,x=g.left,v=g.top,w=new d.TensorBuffer(c.outShape,a.dtype),O=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,N=w.values,I=d.util.computeStrides(a.shape),j=d.util.computeStrides(s.shape);for(let d=0;d<c.batchSize;++d){const e=d*I[0],t=d*w.strides[0];for(let n=0;n<c.outDepth;++n){const r=t+n*w.strides[1],a=n*c.strideDepth-y;for(let t=0;t<l;++t){const n=a+t*f;if(n<0||n>=c.inDepth)continue;const s=t*j[0],i=e+n*I[1];for(let e=0;e<c.outHeight;++e){const t=r+e*w.strides[2],n=e*c.strideHeight-v;for(let e=0;e<h;++e){const r=n+e*m;if(r<0||r>=c.inHeight)continue;const a=s+e*j[1],o=i+r*I[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-x;for(let e=0;e<p;++e){const t=r+e*b;if(t<0||t>=c.inWidth)continue;const s=a+e*j[2],i=o+t*c.inChannels;let u=s;for(let e=0;e<c.inChannels;++e){const t=O[i+e];for(let e=0;e<c.outChannels;++e)N[n+e]+=t*k[u+e];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const sf={kernelName:d.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;bh([a,s],"conv3dBackpropFilterV2");const c=d.util.computeStrides(a.shape),l=d.util.computeStrides(s.shape),h=d.backend_util.computeConv3DInfo(a.shape,u,i,1,o),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,b=h.filterDepth,g=h.filterHeight,y=h.filterWidth,x=new d.TensorBuffer(h.filterShape,"float32"),v=x.values,[w,O,k,N]=x.strides,I=n.data.get(s.dataId).values,[j,S,C,T]=l,A=n.data.get(a.dataId).values,[E,$,F,_]=c,R=h.padInfo.front,D=h.padInfo.left,M=h.padInfo.top;for(let d=0;d<b;++d){const e=Math.max(0,Math.ceil((R-d)/p)),t=Math.min(h.outDepth,(h.inDepth+R-d)/p),n=d*w;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/f)),s=Math.min(h.outHeight,(h.inHeight+M-r)/f),i=r*O+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((D-n)/m)),u=Math.min(h.outWidth,(h.inWidth+D-n)/m),c=n*k+i;for(let i=0;i<h.inChannels;++i){const l=i*N+c;for(let c=0;c<h.outChannels;++c){let b=0;for(let l=0;l<h.batchSize;++l){const h=l*E,g=l*j;for(let l=e;l<t;++l){const e=(d+l*p-R)*$+h,t=l*S+g;for(let l=a;l<s;++l){const a=(r+l*f-M)*F+e,s=l*C+t;for(let e=o;e<u;++e){const t=e*T+s;b+=A[(n+e*m-D)*_+a+i]*I[t+c]}}}}v[l+c]=b}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const of={kernelName:d.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;bh([a],"conv3dBackpropInputV2");const c=d.util.computeStrides(a.shape),l=d.util.computeStrides(s.shape),h=d.backend_util.computeConv3DInfo(u,s.shape,o,1,i),p=new d.TensorBuffer(h.inShape,"float32"),f=p.values,[m,b,g,y]=p.strides,x=n.data.get(a.dataId).values,[v,w,O,k]=c,N=n.data.get(s.dataId).values,[I,j,S,C]=l,{batchSize:T,filterDepth:A,filterHeight:E,filterWidth:$,inChannels:F,inDepth:_,inHeight:R,inWidth:D,outChannels:M,outDepth:z,outHeight:L,outWidth:P,strideDepth:B,strideHeight:V,strideWidth:W}=h,U=A-1-h.padInfo.front,G=E-1-h.padInfo.top,K=$-1-h.padInfo.left;for(let d=0;d<T;++d)for(let e=0;e<F;++e)for(let t=0;t<_;++t){const n=t-U,r=Math.max(0,Math.ceil(n/B)),a=Math.min(z,(A+n)/B);for(let s=0;s<R;++s){const i=s-G,o=Math.max(0,Math.ceil(i/V)),u=Math.min(L,(E+i)/V);for(let c=0;c<D;++c){const l=c-K,h=Math.max(0,Math.ceil(l/W)),p=Math.min(P,($+l)/W);let T=0;for(let t=r;t<a;++t){const r=t*B-n;for(let n=o;n<u;++n){const a=n*V-i;for(let s=h;s<p;++s){const i=v*d+w*t+O*n+k*s,o=I*(A-1-r)+j*(E-1-a)+S*($-1-(s*W-l))+C*e;for(let e=0;e<M;++e){T+=x[i+e]*N[o+e]}}}}f[m*d+b*t+g*s+y*c+e]=T}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},uf=xh(d.Cos,e=>Math.cos(e)),cf={kernelName:d.Cos,backendName:"cpu",kernelFunc:uf},lf=xh(d.Cosh,e=>Math.cosh(e)),df={kernelName:d.Cosh,backendName:"cpu",kernelFunc:lf};const hf={kernelName:d.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,[l,h,p,f]=a.shape,m=s.shape[0],[b,g]=o,y=Object(d.buffer)([m,b,g,f],"float32"),x=n.data.get(s.dataId).values,v=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,O=d.util.computeStrides(a.shape),k=d.util.computeStrides(y.shape);for(let d=0;d<m;d++){const e=4*d,t=x[e],n=x[e+1],r=x[e+2],a=x[e+3],s=v[d];if(s>=l)continue;const i=b>1?(r-t)*(h-1)/(b-1):0,o=g>1?(a-n)*(p-1)/(g-1):0;for(let l=0;l<b;l++){const e=b>1?t*(h-1)+l*i:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<f;e++){const n=e+t*k[2]+l*k[1]+d*k[0];y.values[n]=c}else if("bilinear"===u){const t=Math.floor(e),r=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){const u=g>1?n*(p-1)+e*o:.5*(n+a)*(p-1);if(u<0||u>p-1){for(let t=0;t<f;t++){const n=t+e*k[2]+l*k[1]+d*k[0];y.values[n]=c}continue}const h=Math.floor(u),m=Math.ceil(u),b=u-h;for(let n=0;n<f;n++){let a=n+h*O[2]+t*O[1]+s*O[0];const o=w[a];a=n+m*O[2]+t*O[1]+s*O[0];const u=w[a];a=n+h*O[2]+r*O[1]+s*O[0];const c=w[a];a=n+m*O[2]+r*O[1]+s*O[0];const p=o+(u-o)*b,f=c+(w[a]-c)*b;a=n+e*k[2]+l*k[1]+d*k[0],y.values[a]=p+(f-p)*i}}}else for(let t=0;t<g;++t){const r=g>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(r<0||r>p-1){for(let e=0;e<f;e++){const n=e+t*k[2]+l*k[1]+d*k[0];y.values[n]=c}continue}const i=Math.round(r),u=Math.round(e);for(let e=0;e<f;e++){const n=e+i*O[2]+u*O[1]+s*O[0],r=e+t*k[2]+l*k[1]+d*k[0];y.values[r]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const pf={kernelName:d.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;bh(a,"cumsum");const u=d.backend_util.getAxesPermutation([s],a.shape.length);let c=a;null!=u&&(c=lp({inputs:{x:a},backend:n,attrs:{perm:u}}));const l=d.backend_util.getInnerMostAxes(1,a.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const h=Object(d.upcastType)(c.dtype,"int32"),p=d.util.makeZerosTypedArray(d.util.sizeFromShape(c.shape),h),f=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],b=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let d=0;d<f.length;d+=m)for(let e=0;e<m;e++){const t=b(d,e);if(0===e)p[t]=i?0:f[t];else{const n=b(d,e-1);p[t]=i?f[n]+p[n]:f[t]+p[n]}}const g=n.makeTensorInfo(c.shape,h,p);if(null!=u){const e=lp({inputs:{x:g},backend:n,attrs:{perm:d.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),e}return g}};const ff={kernelName:d.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=Lp(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=Pp(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}};const mf={kernelName:d.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;d.util.assert("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+i),d.util.assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+s);const o=a.shape[0],u=a.shape[1],c=a.shape[2],l=a.shape[3],h=u*s,p=c*s,f=l/(s*s),m=n.data.get(a.dataId).values,b=new Float32Array(o*h*p*f);let g=0;for(let d=0;d<o;++d)for(let e=0;e<h;++e){const t=Math.floor(e/s),n=e%s;for(let e=0;e<p;++e){const r=Math.floor(e/s),a=(n*s+e%s)*f;for(let e=0;e<f;++e){const n=e+a+l*(r+c*(t+u*d));b[g++]=m[n]}}}return n.makeTensorInfo([o,h,p,f],a.dtype,b)}};function bf(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;bh([a,s],"depthwiseConv2DNative");const l=d.util.computeStrides(a.shape),h=d.util.computeStrides(s.shape);let p=u;null==p&&(p=[1,1]),d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);const f=d.backend_util.computeConv2DInfo(a.shape,s.shape,i,p,o,c,!0),{filterHeight:m,filterWidth:b,dilationHeight:g,dilationWidth:y,padInfo:x}=f,v=x.left,w=x.top,O=f.outChannels/f.inChannels,k=new d.TensorBuffer(f.outShape,a.dtype),N=n.data.get(a.dataId).values,I=n.data.get(s.dataId).values,j=k.values;for(let d=0;d<f.batchSize;++d){const e=d*l[0],t=d*k.strides[0];for(let n=0;n<f.outHeight;++n){const r=t+n*k.strides[1],a=n*f.strideHeight-w;for(let t=0;t<m;++t){const n=a+t*g;if(n<0||n>=f.inHeight)continue;const s=t*h[0],i=e+n*l[1];for(let e=0;e<f.outWidth;++e){const t=r+e*k.strides[2],n=e*f.strideWidth-v;for(let e=0;e<b;++e){const r=n+e*y;if(r<0||r>=f.inWidth)continue;const a=s+e*h[1],o=i+r*f.inChannels;let u=t,c=a;for(let e=0;e<f.inChannels;++e){const t=N[o+e];for(let e=0;e<O;++e)j[u+e]+=t*I[c+e];u+=O,c+=O}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const gf={kernelName:d.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:bf};const yf={kernelName:d.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r;bh([a,s],"depthwiseConv2dNativeBackpropFilter");const h=d.backend_util.computeConv2DInfo(a.shape,l,i,o,u,c,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:b}=h,g=new d.TensorBuffer(h.filterShape,"float32"),y=h.padInfo.left,x=h.padInfo.top,v=h.outChannels/h.inChannels,w=n.data.get(a.dataId).values,O=new d.TensorBuffer(a.shape,a.dtype,w),k=n.data.get(s.dataId).values,N=new d.TensorBuffer(s.shape,s.dtype,k);for(let d=0;d<m;++d){const e=Math.max(0,Math.ceil((x-d)/p)),t=Math.min(h.outHeight,(h.inHeight+x-d)/p);for(let n=0;n<b;++n){const r=Math.max(0,Math.ceil((y-n)/f)),a=Math.min(h.outWidth,(h.inWidth+y-n)/f);for(let s=0;s<h.outChannels;++s){const i=Math.trunc(s/v),o=s%v;let u=0;for(let c=0;c<h.batchSize;++c)for(let o=e;o<t;++o){const e=d+o*p-x;for(let t=r;t<a;++t){const r=n+t*f-y;u+=O.get(c,e,r,i)*N.get(c,o,t,s)}}g.set(u,d,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const xf={kernelName:d.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r;bh([a,s],"depthwiseConv2DNativeBackpropInput");const h=d.util.computeStrides(a.shape),p=d.util.computeStrides(s.shape),f=d.backend_util.computeConv2DInfo(l,s.shape,i,o,u,c,!0),m=new d.TensorBuffer(f.inShape,"float32"),b=m.values,[g,y,x]=m.strides,v=n.data.get(a.dataId).values,[w,O,k]=h,N=n.data.get(s.dataId).values,[I,j,S]=p,{batchSize:C,filterHeight:T,filterWidth:A,inChannels:E,inHeight:$,inWidth:F,outChannels:_,outHeight:R,outWidth:D,strideHeight:M,strideWidth:z}=f,L=T-1-f.padInfo.top,P=A-1-f.padInfo.left,B=_/E;for(let d=0;d<C;++d)for(let e=0;e<E;++e)for(let t=0;t<$;++t){const n=t-L,r=Math.max(0,Math.ceil(n/M)),a=Math.min(R,(T+n)/M);for(let s=0;s<F;++s){const i=s-P,o=Math.max(0,Math.ceil(i/z)),u=Math.min(D,(A+i)/z);let c=0;for(let t=r;t<a;++t){const r=t*M-n;for(let n=o;n<u;++n){const a=w*d+O*t+k*n,s=I*(T-1-r)+j*(A-1-(n*z-i))+S*e;for(let t=0;t<B;++t){c+=v[a+(e*B+t)]*N[s+t]}}}b[g*d+y*t+x*s+e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const vf={kernelName:d.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=d.util.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Object(d.buffer)([a,a],r.dtype),o=i.values;for(let c=0;c<s.length;c++)o[c*a+c]=s[c];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},wf={kernelName:d.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,c=u.data.get(r.dataId).values,l=r.shape.length,h=u.data.get(a.dataId).values,p=a.shape.length,{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:x,padInfo:v,strideHeight:w,strideWidth:O,filterHeight:k,filterWidth:N,dilationHeight:I,dilationWidth:j,outShape:S}=d.backend_util.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),C=d.util.sizeFromShape(S),T=S.length,A=d.util.getArrayFromDType(r.dtype,C);for(let E=0;E<f;++E)for(let e=0;e<y;++e){const t=e*w-v.top;for(let n=0;n<x;++n){const s=n*O-v.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<N;++t){const u=s+t*j;if(u>=0&&u<b){const s=d.util.locToIndex([E,n,u,i],l,d.util.computeStrides(r.shape)),f=d.util.locToIndex([e,t,i],p,d.util.computeStrides(a.shape)),m=c[s]+h[f];m>o&&(o=m)}}}A[d.util.locToIndex([E,e,n,i],T,d.util.computeStrides(S))]=o}}}return{dataId:u.write(d.util.toTypedArray(A,r.dtype),S,r.dtype),shape:S,dtype:r.dtype}}},Of={kernelName:d.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,c=t,l=d.util.toNestedArray(r.shape,c.data.get(r.dataId).values),h=d.util.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:O,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:j}=d.backend_util.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);d.util.assert(s.rank===j.length,()=>`Error in ${d.Dilation2DBackpropFilter}, dy must have the same rank as output ${j.length}, but got `+s.rank);const S=d.util.toNestedArray(j,c.data.get(s.dataId).values),C=d.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let d=0;d<p;++d)for(let e=0;e<g;++e){const t=e*v-x.top;for(let n=0;n<y;++n){const r=n*w-x.left;for(let a=0;a<b;++a){let s=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<O;++e){const n=t+e*N;if(n>=0&&n<f)for(let t=0;t<k;++t){const u=r+t*I;if(u>=0&&u<m){const r=l[d][n][u][a]+h[e][t][a];r>s&&(s=r,i=e,o=t)}}}C[i][o][a]+=S[d][e][n][a]}}}return{dataId:c.write(d.util.toTypedArray(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},kf={kernelName:d.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,c=t,l=d.util.toNestedArray(r.shape,c.data.get(r.dataId).values),h=d.util.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:O,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:j}=d.backend_util.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);d.util.assert(s.rank===j.length,()=>`Error in ${d.Dilation2DBackpropInput}, dy must have the same rank as output ${j.length}, but got `+s.rank);const S=d.util.toNestedArray(j,c.data.get(s.dataId).values),C=d.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let d=0;d<p;++d)for(let e=0;e<g;++e){const t=e*v-x.top;for(let n=0;n<y;++n){const r=n*w-x.left;for(let a=0;a<b;++a){let s=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=r<0?0:r;for(let e=0;e<O;++e){const n=t+e*N;if(n>=0&&n<f)for(let t=0;t<k;++t){const u=r+t*I;if(u>=0&&u<m){const r=l[d][n][u][a]+h[e][t][a];r>s&&(s=r,i=n,o=u)}}}C[d][i][o][a]+=S[d][e][n][a]}}}return{dataId:c.write(d.util.toTypedArray(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Nf=Sh((e,t)=>e*t),If=Kh((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),jf=Gh(d.Multiply,Nf,If),Sf={kernelName:d.Multiply,backendName:"cpu",kernelFunc:jf};function Cf(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;bh(a,"sum"),o="bool"===a.dtype?Wh({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):kh({inputs:{x:a},backend:n});const u=o.shape.length,c=d.util.parseAxisParam(s,o.shape),l=d.backend_util.getAxesPermutation(c,u);let h=c,p=o;null!=l&&(p=lp({inputs:{x:o},backend:n,attrs:{perm:l}}),h=d.backend_util.getInnerMostAxes(h.length,u)),d.backend_util.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=d.backend_util.computeOutAndReduceShapes(p.shape,h);let b=Ph(n,f,d.backend_util.upcastType(p.dtype,"int32"));const g=d.util.sizeFromShape(m),y=n.data.get(b.dataId).values,x=n.data.get(p.dataId).values;for(let d=0;d<y.length;++d){const e=d*g;let t=0;for(let n=0;n<g;++n)t+=x[e+n];y[d]=t}if(i){const e=b;b=Zh({inputs:{x:b},backend:n,attrs:{shape:d.backend_util.expandShapeToKeepDim(b.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=l&&n.disposeIntermediateTensorInfo(p),b}const Tf={kernelName:d.Sum,backendName:"cpu",kernelFunc:Cf};const Af={kernelName:d.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=d.backend_util.decodeEinsumEquation(a,s.length);d.backend_util.checkEinsumDimSizes(i.length,u,s);const{path:c,steps:l}=d.backend_util.getEinsumComputePath(o,u),h=l.length;let p=null,f=i.length;const m=[];for(let b=0;b<h;++b){for(const e of l[b]){const{permutationIndices:t,expandDims:r}=d.backend_util.getEinsumPermutation(f,u[e]);let a;d.backend_util.isIdentityPermutation(t)?a=s[e]:(a=lp({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),m.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);d.util.arraysEqual(a.shape,i)||(a=Zh({inputs:{x:a},backend:n,attrs:{shape:i}}),m.push(a)),null===p?p=a:(p=jf({inputs:{a:a,b:p},backend:n}),m.push(p))}b<h-1&&(c[b]>=0&&(p=Cf({inputs:{x:p},backend:n,attrs:{axis:c[b]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const d of m)d!==p&&n.disposeIntermediateTensorInfo(d);return p}};const Ef={kernelName:d.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;bh([r,a],"eluGrad");const s=new Float32Array(d.util.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let u=0;u<i.length;++u){const e=i[u];s[u]=e>=1?o[u]:o[u]*(e+1)}return n.makeTensorInfo(a.shape,"float32",s)}},$f=Sh((e,t)=>e===t?1:0),Ff=Gh(d.Equal,$f,null,"bool"),_f={kernelName:d.Equal,backendName:"cpu",kernelFunc:Ff},Rf=d.backend_util.ERF_P,Df=d.backend_util.ERF_A1,Mf=d.backend_util.ERF_A2,zf=d.backend_util.ERF_A3,Lf=d.backend_util.ERF_A4,Pf=d.backend_util.ERF_A5,Bf=xh(d.Erf,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Rf*n);return t*(1-((((Pf*r+Lf)*r+zf)*r+Mf)*r+Df)*r*Math.exp(-n*n))}),Vf={kernelName:d.Erf,backendName:"cpu",kernelFunc:Bf},Wf=Vp(e=>Math.exp(e)),Uf=vh(d.Exp,Wf),Gf={kernelName:d.Exp,backendName:"cpu",kernelFunc:Uf};function Kf(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(d.util.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),Zh({inputs:{x:a},backend:n,attrs:{shape:o}})}const Hf={kernelName:d.ExpandDims,backendName:"cpu",kernelFunc:Kf},qf=Vp(e=>Math.expm1(e)),Xf=vh(d.Expm1,qf),Yf={kernelName:d.Expm1,backendName:"cpu",kernelFunc:Xf},Zf=Sh((e,t)=>e/t),Jf=Gh(d.RealDiv,Zf),Qf={kernelName:d.RealDiv,backendName:"cpu",kernelFunc:Jf},em=Sh((e,t)=>e-t),tm=Kh((e,t,n,r)=>({real:e-n,imag:t-r})),nm=Gh(d.Sub,em,tm),rm={kernelName:d.Sub,backendName:"cpu",kernelFunc:nm};function am(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,c=[a,s],l=d.util.sizeFromShape(c),h=d.util.getTypedArrayFromDType("float32",l),p=d.util.getTypedArrayFromDType("float32",l);for(let g=0;g<a;g++){const e=Dp({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=Dp({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=zh({inputs:{real:e,imag:r},backend:n}),{real:i,imag:c}=sm(a,t,n),l=d.backend_util.mergeRealAndImagArrays(i,c);for(let t=0;t<s;t++){const e=d.backend_util.getComplexWithIndex(l,t);h[g*s+t]=e.real,p[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}const f=n.makeTensorInfo(c,"float32",h),m=n.makeTensorInfo(c,"float32",p),b=zh({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function sm(e,t,n){const r=d.util.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0===((o=r)&o-1)){const a=function e(t,n,r,a,s){if(1===r)return{real:t,imag:n};const i=d.backend_util.mergeRealAndImagArrays(t,n),o=r/2,u=d.backend_util.complexWithEvenIndex(i),c=u.real,l=u.imag,h=[c.length],p=s.makeTensorInfo(h,"float32",c),f=s.makeTensorInfo(h,"float32",l),m=zh({inputs:{real:p,imag:f},backend:s}),b=d.backend_util.complexWithOddIndex(i),g=b.real,y=b.imag,x=[g.length],v=s.makeTensorInfo(x,"float32",g),w=s.makeTensorInfo(x,"float32",y),O=zh({inputs:{real:v,imag:w},backend:s}),k=e(c,l,o,a,s),N=k.real,I=k.imag,j=[N.length],S=s.makeTensorInfo(j,"float32",N),C=s.makeTensorInfo(j,"float32",I),T=zh({inputs:{real:S,imag:C},backend:s}),A=e(g,y,o,a,s),E=A.real,$=A.imag,F=[E.length],_=s.makeTensorInfo(F,"float32",E),R=s.makeTensorInfo(F,"float32",$),D=zh({inputs:{real:_,imag:R},backend:s}),M=d.backend_util.exponents(r,a),z=[M.real.length],L=s.makeTensorInfo(z,"float32",M.real),P=s.makeTensorInfo(z,"float32",M.imag),B=zh({inputs:{real:L,imag:P},backend:s}),V=jf({inputs:{a:B,b:D},backend:s}),W=Xh({inputs:{a:T,b:V},backend:s}),U=nm({inputs:{a:T,b:V},backend:s}),G=Bh({inputs:{input:W},backend:s}),K=Bh({inputs:{input:U},backend:s}),H=Yp({inputs:{input:W},backend:s}),q=Yp({inputs:{input:U},backend:s}),X=Jp({inputs:[G,K],backend:s,attrs:{axis:0}}),Y=Jp({inputs:[H,q],backend:s,attrs:{axis:0}}),Z=s.data.get(X.dataId).values,J=s.data.get(Y.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(Y),{real:Z,imag:J}}(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",d.util.createScalarValue(r,"float32")),i=kh({inputs:{x:s},backend:n}),u=Qf.kernelFunc({inputs:{a:e,b:s},backend:n}),c=Qf.kernelFunc({inputs:{a:t,b:i},backend:n}),l=n.data.get(u.dataId).values,h=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:l,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=d.backend_util.exponent(a*r,t,n),u=d.backend_util.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),d.backend_util.assignToTypedArray(r,s,i,a)}return r}(d.backend_util.mergeRealAndImagArrays(s,i),r,t);return d.backend_util.splitRealAndImagArrays(e)}var o}const im={kernelName:d.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=d.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=Zh({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=am(i,!1,n),u=Zh({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function om(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||d.util.inferDtype(a),o=d.util.getArrayFromDType(i,d.util.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}const um={kernelName:d.Fill,backendName:"cpu",kernelFunc:om};const cm={kernelName:d.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=d.util.getTypedArrayFromDType(r.dtype,d.util.sizeFromShape(r.shape)),[i,o,u,c]=r.shape,l=a.data.get(r.dataId).values;for(let d=0;d<i;d++){const e=d*u*o*c;for(let t=0;t<o;t++){const n=t*(u*c);for(let r=0;r<u;r++){const a=r*c;for(let o=0;o<c;o++){const d=[i,t,r,o][2],h=Math.round(u-d),p=e+n+a+o;let f=l[p];if(h>=0&&h<u){f=l[e+n+h*c+o]}s[p]=f}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},lm=Vp(e=>Math.floor(e)),dm=vh(d.Floor,lm),hm={kernelName:d.Floor,backendName:"cpu",kernelFunc:dm},pm=Sh((e,t)=>Math.floor(e/t)),fm=Gh(d.FloorDiv,pm,null,"int32"),mm={kernelName:d.FloorDiv,backendName:"cpu",kernelFunc:fm};const bm={kernelName:d.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=ef({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=Xh({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Mh(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const gm={kernelName:d.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=bf({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=Xh({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Mh(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const ym={kernelName:d.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=d.util.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,c,l,h]=d.backend_util.prepareAndValidate(r,a);if(0===c)return n.makeTensorInfo(u,r.dtype,[]);const p=Object(d.buffer)([c,l],r.dtype),f=n.data.get(a.dataId).values,m=n.data.get(r.dataId).values;for(let d=0;d<c;d++){const e=[];let t=0;for(let n=0;n<o;n++){const r=f[d*o+n];t+=r*h[n],e.push(r)}if(t<0||t>=s/l)throw new Error(`Invalid indices: ${e} does not index into ${r.shape}`);for(let n=0;n<l;n++)p.values[d*l+n]=m[t*l+n]}return n.makeTensorInfo(u,p.dtype,p.values)}};function xm(e,t,n){const r=Object(d.buffer)(n,e.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a).slice(),s=n[0],i=n[2],o=t.locToIndex([s,i]);n[2]=t.values[o];const u=e.locToIndex(n);r.values[a]=e.values[u]}return r}const vm={kernelName:d.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;bh([a,s],"gatherV2");let u=o;null==o&&(u=0);const c=d.util.sizeFromShape(s.shape),l=d.util.parseAxisParam(i,a.shape)[0],h=d.backend_util.segment_util.collectGatherOpShapeInfo(a,s,l,u),p=Zh({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),f=Zh({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,c/h.batchSize]}}),m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],b=n.bufferSync(f),g=xm(n.bufferSync(p),b,m);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(h.outputShape,g.dtype,g.values)}},wm=Sh((e,t)=>e>t?1:0),Om=Gh(d.Greater,wm,null,"bool"),km={kernelName:d.Greater,backendName:"cpu",kernelFunc:Om},Nm=Sh((e,t)=>e>=t?1:0),Im=Gh(d.GreaterEqual,Nm,null,"bool"),jm={kernelName:d.GreaterEqual,backendName:"cpu",kernelFunc:Im};const Sm={kernelName:d.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=d.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=Zh({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=am(i,!0,n),u=Zh({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Cm=xh(d.IsFinite,e=>Number.isFinite(e)?1:0,"bool"),Tm={kernelName:d.IsFinite,backendName:"cpu",kernelFunc:Cm},Am=xh(d.IsInf,e=>Math.abs(e)===1/0?1:0,"bool"),Em={kernelName:d.IsInf,backendName:"cpu",kernelFunc:Am},$m=xh(d.IsNan,e=>Number.isNaN(e)?1:0,"bool"),Fm={kernelName:d.IsNan,backendName:"cpu",kernelFunc:$m},_m=Sh((e,t)=>e<t?1:0),Rm=Gh(d.Less,_m,null,"bool"),Dm={kernelName:d.Less,backendName:"cpu",kernelFunc:Rm},Mm=Sh((e,t)=>e<=t?1:0),zm=Gh(d.LessEqual,Mm,null,"bool"),Lm={kernelName:d.LessEqual,backendName:"cpu",kernelFunc:zm};function Pm(e,t,n){const r=(t-e)/(n-1),a=d.util.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}const Bm={kernelName:d.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Pm(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},Vm=Vp(e=>Math.log(e)),Wm=vh(d.Log,Vm),Um={kernelName:d.Log,backendName:"cpu",kernelFunc:Wm},Gm=xh(d.Log1p,e=>Math.log1p(e)),Km={kernelName:d.Log1p,backendName:"cpu",kernelFunc:Gm},Hm=Sh((e,t)=>e&&t),qm=Gh(d.LogicalAnd,Hm,null,"bool"),Xm={kernelName:d.LogicalAnd,backendName:"cpu",kernelFunc:qm},Ym=xh(d.LogicalNot,e=>e?0:1,"bool"),Zm={kernelName:d.LogicalNot,backendName:"cpu",kernelFunc:Ym},Jm=Sh((e,t)=>e||t),Qm=Gh(d.LogicalOr,Jm,null,"bool"),eb={kernelName:d.LogicalOr,backendName:"cpu",kernelFunc:Qm};const tb={kernelName:d.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;bh(a,"LRN");const c=a.shape[3],l=c-1,h=n.data.get(a.dataId).values,p=d.util.sizeFromShape(a.shape),f=new Float32Array(p);function m(e){const t=e%c;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,l);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let d=0;d<p;d++){const e=m(d),t=h[d]*Math.pow(i+o*e,-u);f[d]=t}return n.makeTensorInfo(a.shape,a.dtype,f)}};const nb={kernelName:d.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r;bh(i,"LRNGrad");const h=d.util.sizeFromShape(i.shape),p=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let d=0;d<y;d++){const e=d%p,t=d-e+Math.max(0,e-o),n=d-e+Math.min(p,e+o+1);let r=0;for(let a=t;a<n;a++)r+=Math.pow(m[a],2);r=c*r+u;for(let a=t;a<n;a++){let e=-2*c*l*m[a]*b[d]/r;d===a&&(e+=Math.pow(r,-l)),e*=f[d],g[a]+=e}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function rb(e,t,n,r){const a=d.util.getTypedArrayFromDType(r,d.util.sizeFromShape(n));for(let s=0;s<a.length;++s){const n=s*t;let r=e[n];for(let a=0;a<t;++a){const t=e[n+a];t>r&&(r=t)}a[s]=r}return a}function ab(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const c=u.length,l=d.util.parseAxisParam(s,u);let h=l;const p=d.backend_util.getAxesPermutation(h,c);let f=o.data.get(a.dataId).values;if(null!=p){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[p[t]];f=cp(f,u,a.dtype,p,e),h=d.backend_util.getInnerMostAxes(h.length,c),u=e}bh(a,"max"),d.backend_util.assertAxesAreInnerMostDims("max",h,c);const[m,b]=d.backend_util.computeOutAndReduceShapes(u,h),g=rb(f,d.util.sizeFromShape(b),m,a.dtype),y=o.write(g,m,a.dtype);let x=m;if(i){x=d.backend_util.expandShapeToKeepDim(m,l)}return{dataId:y,shape:x,dtype:a.dtype}}const sb={kernelName:d.Max,backendName:"cpu",kernelFunc:ab},ib=Sh((e,t)=>Math.max(e,t)),ob=Gh(d.Maximum,ib),ub={kernelName:d.Maximum,backendName:"cpu",kernelFunc:ob};const cb={kernelName:d.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;bh(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=d.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&d.util.arraysEqual(c.inShape,c.outShape))l=kh({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=d.util.computeStrides(a.shape),r=Sp(e,a.shape,a.dtype,t,c,"max");l=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return l}};const lb={kernelName:d.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r;bh(a,"maxPool3d");const l=d.backend_util.computePool3DInfo(a.shape,s,i,1,o,u,c),h=Tp(n.data.get(a.dataId).values,a.shape,a.dtype,d.util.computeStrides(a.shape),l,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const db={kernelName:d.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;bh([a,s],"maxPool3DGrad");const l=d.backend_util.computePool3DInfo(s.shape,i,o,1,u,c),h=function(e,t){const n=Object(d.buffer)(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let d=0;d<t.batchSize;++d)for(let b=0;b<t.inChannels;++b)for(let g=0;g<t.outDepth;++g){const y=g*r-p;let x=y;for(;x<0;)x+=i;const v=Math.min(t.inDepth,c+y);for(let r=0;r<t.outHeight;++r){const c=r*a-f;let p=c;for(;p<0;)p+=o;const w=Math.min(t.inHeight,l+c);for(let a=0;a<t.outWidth;++a){const f=a*s-m;let O=f;for(;O<0;)O+=u;const k=Math.min(t.inWidth,h+f);let N=Number.NEGATIVE_INFINITY,I=-1;for(let t=x;t<v;t+=i){const n=t-y;for(let r=p;r<w;r+=o){const a=r-c;for(let s=O;s<k;s+=u){const i=s-f,o=e.get(d,t,r,s,b);o>=N&&(N=o,I=n*l*h+a*l+i)}}}n.set(I,d,g,r,a,b)}}}return n}(n.bufferSync(s),l),p=l.strideDepth,f=l.strideHeight,m=l.strideWidth,b=l.dilationDepth,g=l.dilationHeight,y=l.dilationWidth,x=l.effectiveFilterDepth,v=l.effectiveFilterHeight,w=l.effectiveFilterWidth,O=x-1-l.padInfo.front,k=w-1-l.padInfo.left,N=v-1-l.padInfo.top,I=Object(d.buffer)(s.shape,"float32"),j=n.bufferSync(a);for(let d=0;d<l.batchSize;++d)for(let e=0;e<l.inChannels;++e)for(let t=0;t<l.inDepth;++t)for(let n=0;n<l.inHeight;++n)for(let r=0;r<l.inWidth;++r){const a=t-O,s=n-N,i=r-k;let o=0;for(let t=0;t<x;t+=b){const n=(a+t)/p;if(!(n<0||n>=l.outDepth||Math.floor(n)!==n))for(let r=0;r<v;r+=g){const a=(s+r)/f;if(!(a<0||a>=l.outHeight||Math.floor(a)!==a))for(let s=0;s<w;s+=y){const u=(i+s)/m;if(u<0||u>=l.outWidth||Math.floor(u)!==u)continue;const c=x*v*w-1-h.get(d,n,a,u,e)===t*v*w+r*w+s?1:0;if(0===c)continue;o+=j.get(d,n,a,u,e)*c}}}I.set(o,d,t,n,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const hb={kernelName:d.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;bh([s,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=r,p=d.backend_util.computePool2DInfo(o.shape,u,c,1,l,h),f=n.data.get(o.dataId).values,m=Object(d.buffer)(p.outShape,o.dtype,Cp(f,o.shape,o.dtype,p).values),b=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterHeight,w=p.effectiveFilterWidth,O=w-1-p.padInfo.left,k=v-1-p.padInfo.top,N=Object(d.buffer)(o.shape,"float32"),I=n.data.get(a.dataId).values,j=Object(d.buffer)(a.shape,"float32",I);for(let d=0;d<p.batchSize;++d)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const r=t-k,a=n-O;let s=0;for(let t=0;t<v;t+=y){const n=(r+t)/b;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=x){const i=(a+r)/g;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const o=v*w-1-m.get(d,n,i,e)===t*w+r?1:0;if(0===o)continue;s+=j.get(d,n,i,e)*o}}N.set(s,d,t,n,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const pb={kernelName:d.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;bh(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,l=d.backend_util.computePool2DInfo(r.shape,a,s,[1,1],i),[h,p]=function(e,t,n,r,a){const s=Sp(e,0,n,d.util.computeStrides(t),a,"max"),i=Cp(e,t,n,a,!0,r);return[s.values,i.values]}(c,r.shape,r.dtype,o,l),f=u.write(h,l.outShape,r.dtype),m=u.write(p,l.outShape,r.dtype);return[{dataId:f,shape:l.outShape,dtype:r.dtype},{dataId:m,shape:l.outShape,dtype:"int32"}]}};const fb={kernelName:d.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=d.util.parseAxisParam(s,a.shape),u=d.backend_util.computeOutAndReduceShapes(a.shape,o)[1],c=d.util.sizeFromShape(u),l=[],h=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(h);const p=Wh({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(p);const f=Jf({inputs:{a:p,b:h},backend:n});l.push(f);const m=Cf({inputs:{x:f},backend:n,attrs:{axis:s,keepDims:i}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}};const mb={kernelName:d.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;bh(a,"min");const o=d.util.parseAxisParam(s,a.shape);let u=o;const c=d.backend_util.getAxesPermutation(u,a.shape.length);let l=a;null!=c&&(l=lp({inputs:{x:a},backend:n,attrs:{perm:c}}),u=d.backend_util.getInnerMostAxes(u.length,a.shape.length)),d.backend_util.assertAxesAreInnerMostDims("min",u,l.shape.length);const[h,p]=d.backend_util.computeOutAndReduceShapes(l.shape,u),f=d.util.sizeFromShape(p),m=d.util.makeZerosTypedArray(d.util.sizeFromShape(h),l.dtype),b=n.data.get(l.dataId).values;for(let d=0;d<m.length;++d){const e=d*f;let t=b[e];for(let n=0;n<f;++n){const r=b[e+n];r<t&&(t=r)}m[d]=t}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(h,l.dtype,m);if(i){const e=Zh({inputs:{x:g},backend:n,attrs:{shape:d.backend_util.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},bb=Sh((e,t)=>Math.min(e,t)),gb=Gh(d.Minimum,bb),yb={kernelName:d.Minimum,backendName:"cpu",kernelFunc:gb};const xb={kernelName:d.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;bh(a,"mirrorPad");const o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),u=s.map(e=>e[0]),c=s.map((e,t)=>e[0]+a.shape[t]),l="reflect"===i?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,f=d.util.computeStrides(a.shape),m=d.util.sizeFromShape(o),b=o.length,g=d.util.computeStrides(o),y=d.util.getTypedArrayFromDType(a.dtype,m);for(let x=0;x<m;x++){let e=d.util.indexToLoc(x,b,g);for(let n=0;n<b;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-l:e[n]>=c[n]&&(e[n]=2*(c[n]-1)-e[n]+l);e=e.map((e,t)=>e-u[t]);const t=d.util.locToIndex(e,p,f);y[x]=h[t]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},vb=Sh((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),wb=Gh(d.Mod,vb),Ob={kernelName:d.Mod,backendName:"cpu",kernelFunc:wb};function kb(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=d.util.parseAxisParam([o],a.shape),c=ab({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),l=d.backend_util.expandShapeToKeepDim(c.shape,u),h=Zh({inputs:{x:c},backend:n,attrs:{shape:l}}),p=nm({inputs:{a:a,b:h},backend:n}),f=Uf({inputs:{x:p},backend:n}),m=Cf({inputs:{x:f},backend:n,attrs:{axis:u,keepDims:!1}}),b=Zh({inputs:{x:m},backend:n,attrs:{shape:l}}),g=Jf({inputs:{a:f,b:b},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const Nb={kernelName:d.Softmax,backendName:"cpu",kernelFunc:kb};const Ib={kernelName:d.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;bh(a,"multinomial");const u=o?a:kb({inputs:{logits:a},backend:n,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],h=n.data.get(u.dataId).values,p=[c,s],f=d.util.makeZerosTypedArray(d.util.sizeFromShape(p),"int32");for(let d=0;d<c;++d){const e=d*l,t=new Float32Array(l-1);t[0]=h[e];for(let a=1;a<t.length;++a)t[a]=t[a-1]+h[e+a];const n=Pd.alea(i.toString()),r=d*s;for(let a=0;a<s;++a){const e=n();f[r+a]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[r+a]=n;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",f)}};function jb(e,t,n){const r=d.util.createScalarValue(-1,n);return Nf([],t,r,e,n)}const Sb={kernelName:d.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;bh(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=jb(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},Cb=d.kernel_impls.nonMaxSuppressionV3Impl;const Tb={kernelName:d.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;bh(a,"NonMaxSuppression");const c=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:d}=Cb(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Ab=d.kernel_impls.nonMaxSuppressionV4Impl;const Eb={kernelName:d.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r;bh(a,"NonMaxSuppressionPadded");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=Ab(l,d,i,o,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},$b=d.kernel_impls.nonMaxSuppressionV5Impl;const Fb={kernelName:d.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r;bh(a,"NonMaxSuppressionWithScore");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,p=o,f=u,m=c,{selectedIndices:b,selectedScores:g}=$b(l,d,h,p,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}},_b=Sh((e,t)=>e!==t?1:0),Rb=Gh(d.NotEqual,_b,null,"bool"),Db={kernelName:d.NotEqual,backendName:"cpu",kernelFunc:Rb};const Mb={kernelName:d.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;bh(a,"oneHot");const u=d.util.sizeFromShape(a.shape),c=new Float32Array(u*s);c.fill(o);const l=n.data.get(a.dataId).values;for(let d=0;d<u;++d)l[d]>=0&&l[d]<s&&(c[d*s+l[d]]=i);return n.makeTensorInfo([...a.shape,s],"int32",c)}};function zb(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Bh({inputs:{input:r},backend:n}),t=zb({inputs:{x:e},backend:n}),a=Yp({inputs:{input:r},backend:n}),s=zb({inputs:{x:a},backend:n}),i=zh({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return om({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Lb={kernelName:d.ZerosLike,backendName:"cpu",kernelFunc:zb};const Pb={kernelName:d.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=Bh({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Yp({inputs:{input:a},backend:r}),i=zb({inputs:{x:s},backend:r}),o=zh({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return om({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function Bb(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Kf({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{d.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),d.util.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=Jp({inputs:t.map(e=>{const t=Kf({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}const Vb={kernelName:d.Pack,backendName:"cpu",kernelFunc:Bb};const Wb={kernelName:d.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;bh(a,"pad");const o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),u=s.map(e=>e[0]),c=n.data.get(a.dataId).values,l=d.util.sizeFromShape(a.shape),h=a.shape.length,p=d.util.computeStrides(a.shape),f=d.util.sizeFromShape(o),m=o.length,b=d.util.computeStrides(o),g=d.util.getTypedArrayFromDType(a.dtype,f);0!==i&&g.fill(i);for(let y=0;y<l;y++){const e=d.util.indexToLoc(y,h,p).map((e,t)=>e+u[t]);g[d.util.locToIndex(e,m,b)]=c[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},Ub=Sh((e,t)=>Math.pow(e,t)),Gb=Gh(d.Pow,Ub),Kb={kernelName:d.Pow,backendName:"cpu",kernelFunc:Gb};function Hb(e,t,n,r){const[a,s]=d.backend_util.computeOutAndReduceShapes(e,r),i=Object(d.upcastType)(t,"int32"),o=d.util.makeZerosTypedArray(d.util.sizeFromShape(a),i),u=d.util.sizeFromShape(s);for(let c=0;c<o.length;++c){const e=c*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];o[c]=t}return{outVals:o,outShape:a,outDtype:i}}const qb={kernelName:d.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;bh(a,"prod");const o=a.shape.length,u=d.util.parseAxisParam(s,a.shape),c=d.backend_util.getAxesPermutation(u,o);let l=u,h=a;const p=[];null!=c&&(h=lp({inputs:{x:a},backend:n,attrs:{perm:c}}),p.push(h),l=d.backend_util.getInnerMostAxes(l.length,o));const f=n.data.get(h.dataId).values,{outVals:m,outShape:b,outDtype:g}=Hb(h.shape,h.dtype,f,l);let y=b;return i&&(y=d.backend_util.expandShapeToKeepDim(b,u)),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,g,m)}};function Xb(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return d.util.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=d.util.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let i=1;i<s.length;i++)s[i]=s[i-1]+n;return s}const Yb={kernelName:d.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=Xb(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},Zb=xh(d.Reciprocal,e=>1/e),Jb={kernelName:d.Reciprocal,backendName:"cpu",kernelFunc:Zb};const Qb={kernelName:d.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;bh(a,"resizeBilinear");const u=d.util.computeStrides(a.shape),[c,l]=o,[h,p,f,m]=a.shape,b=n.data.get(a.dataId).values,g=new Float32Array(d.util.sizeFromShape([h,c,l,m])),y=[s&&c>1?p-1:p,s&&l>1?f-1:f],x=[s&&c>1?c-1:c,s&&l>1?l-1:l];let v=0;const w=y[0]/x[0],O=y[1]/x[1];for(let d=0;d<h;d++)for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),s=d*u[0]+n*u[1],o=d*u[0]+a*u[1];for(let e=0;e<l;e++){let t;t=i?O*(e+.5)-.5:O*e;const n=Math.max(0,Math.floor(t)),a=t-n,c=Math.min(f-1,Math.ceil(t)),l=s+n*u[2],d=o+n*u[2],h=s+c*u[2],p=o+c*u[2];for(let e=0;e<m;e++){const t=b[l+e],n=b[d+e],s=t+(b[h+e]-t)*a,i=s+(n+(b[p+e]-n)*a-s)*r;g[v++]=i}}}return n.makeTensorInfo([h,c,l,m],"float32",g)}};const eg={kernelName:d.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;bh([s,a],"resizeBilinearGrad");const o=d.util.computeStrides(a.shape),[u,c,l,h]=a.shape,[,p,f]=s.shape,m=new Float32Array(u*c*l*h),b=[i&&p>1?c-1:c,i&&f>1?l-1:l],g=[i&&p>1?p-1:p,i&&f>1?f-1:f],y=b[0]/g[0],x=b[1]/g[1],v=n.data.get(s.dataId).values;let w=0;for(let d=0;d<u;d++){const e=d*o[0];for(let t=0;t<p;t++){const n=t*y,r=Math.floor(n),a=Math.min(Math.ceil(n),c-1),s=e+r*o[1],i=e+a*o[1],u=n-r,d=1-u;for(let e=0;e<f;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),l-1),a=t-n,c=1-a,p=s+n*o[2],f=s+r*o[2],b=i+n*o[2],g=i+r*o[2],y=d*c,O=d*a,k=u*c,N=u*a;for(let e=0;e<h;e++){const t=v[w++];m[p+e]+=t*y,m[f+e]+=t*O,m[b+e]+=t*k,m[g+e]+=t*N}}}}return n.makeTensorInfo([u,l,c,h],"float32",m)}};const tg={kernelName:d.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;bh(a,"resizeNearestNeighbor");const u=d.util.computeStrides(a.shape),[c,l]=o,[h,p,f,m]=a.shape,b=n.data.get(a.dataId).values,g=new Float32Array(h*c*l*m),y=[s&&c>1?p-1:p,s&&l>1?f-1:f],x=[s&&c>1?c-1:c,s&&l>1?l-1:l],v=y[0]/x[0],w=y[1]/x[1];let O=0;for(let d=0;d<h;d++){const e=d*u[0];for(let t=0;t<c;t++){const n=i?v*(t+.5):v*t;let r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=e+r*u[1];for(let e=0;e<l;e++){const t=i?w*(e+.5):w*e;let n=Math.min(f-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<m;e++){const t=b[r+e];g[O++]=t}}}}return n.makeTensorInfo([h,c,l,m],a.dtype,g)}};const ng={kernelName:d.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;bh([s,a],"resizeNearestNeighborGrad");const o=d.util.computeStrides(a.shape),u=d.util.computeStrides(s.shape),[c,l,h,p]=a.shape,[,f,m]=s.shape,b=new Float32Array(c*l*h*p),g=n.data.get(s.dataId).values,y=[i&&f>1?l-1:l,i&&m>1?h-1:h],x=[i&&f>1?f-1:f,i&&m>1?m-1:m],v=y[0]/x[0],w=y[1]/x[1],O=1/v,k=1/w,N=2*Math.ceil(O)+2,I=2*Math.ceil(k)+2;for(let d=0;d<c;d++){const e=d*o[0];for(let t=0;t<l;t++){const n=e+t*o[1],r=Math.floor(t*O),a=Math.floor(r-N/2);for(let s=0;s<h;s++){const r=n+s*o[2],c=Math.floor(s*k),d=Math.floor(c-I/2);for(let n=0;n<p;n++){let o=0;for(let r=0;r<N;r++){const c=r+a;if(c<0||c>=f)continue;const p=e+c*u[1],b=c*v;if(t===Math.min(l-1,i?Math.round(b):Math.floor(b)))for(let e=0;e<I;e++){const t=e+d;if(t<0||t>=m)continue;const r=p+t*u[2],a=t*w;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}b[r+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,b)}};const rg={kernelName:d.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;bh(a,"reverse");const i=a.shape.length,o=d.util.parseAxisParam(s,a.shape);if(0===i)return kh({inputs:{x:a},backend:n});const u=new d.TensorBuffer(a.shape,a.dtype),c=n.bufferSync(a);for(let l=0;l<u.size;l++){const e=u.indexToLoc(l),t=e.slice();o.forEach(e=>t[e]=a.shape[e]-1-t[e]),u.set(c.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},ag={kernelName:d.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=d.util.getTypedArrayFromDType(r.dtype,d.util.sizeFromShape(r.shape)),[c,l,h,p]=r.shape,[f,m]=d.backend_util.getImageCenter(i,l,h),b=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let d=0;d<c;d++){const e=d*h*l*p;for(let t=0;t<l;t++){const n=t*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let i=0;i<p;i++){const o=[c,t,r,i],d=o[2],x=o[1];let v=(d-f)*g-(x-m)*b,w=(d-f)*b+(x-m)*g;v=Math.round(v+f),w=Math.round(w+m);let O=s;if("number"!==typeof s&&(O=3===i?255:s[i]),v>=0&&v<h&&w>=0&&w<l){O=y[e+w*(h*p)+v*p+i]}u[e+n+a+i]=O}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},sg=xh(d.Round,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),ig={kernelName:d.Round,backendName:"cpu",kernelFunc:sg},og=Vp(e=>1/Math.sqrt(e)),ug=vh(d.Rsqrt,og),cg={kernelName:d.Rsqrt,backendName:"cpu",kernelFunc:ug};function lg(e,t,n,r,a,s,i,o,u,c){const l=[r/a,a],h=e.values,p=t.values;if(0===r)return Object(d.buffer)(n,t.dtype);const f=Object(d.buffer)(l,t.dtype);f.values.fill(u);for(let d=0;d<s;d++){const e=[];let s=0;for(let t=0;t<i;t++){const n=h[d*i+t];e.push(n),s+=n*o[t]}if(s<0||s>=r/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)c?f.values[s*a+n]+=p[d*a+n]:f.values[s*a+n]=0===t.rank?p[0]:p[d*a+n]}return f}const dg={kernelName:d.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=d.backend_util.calculateShapes(s,a,i),p=lg(n.bufferSync(a),n.bufferSync(s),i,h,c,u,o,l,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};const hg={kernelName:d.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;bh([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=Object(d.upcastType)(a.dtype,s.dtype),h=d.util.makeZerosTypedArray(d.util.sizeFromShape(a.shape),l);let p=0;const f=0===i||i>1||1===a.shape.length?1:d.util.sizeFromShape(a.shape.slice(1));for(let d=0;d<o.length;d++)for(let e=0;e<f;e++)1===o[d]?h[p++]=u[d]:h[p++]=c[d];return n.makeTensorInfo(a.shape,l,h)}},pg=d.backend_util.SELU_SCALEALPHA,fg=d.backend_util.SELU_SCALE,mg=xh(d.Selu,e=>e>=0?fg*e:pg*(Math.exp(e)-1)),bg={kernelName:d.Selu,backendName:"cpu",kernelFunc:mg},gg=xh(d.Sign,e=>e<0?-1:e>0?1:0),yg={kernelName:d.Sign,backendName:"cpu",kernelFunc:gg},xg=xh(d.Sin,e=>Math.sin(e)),vg={kernelName:d.Sin,backendName:"cpu",kernelFunc:xg},wg=xh(d.Sinh,e=>Math.sinh(e)),Og={kernelName:d.Sinh,backendName:"cpu",kernelFunc:wg},kg=Math.log(1.1920928955078125e-7)+2,Ng=xh(d.Softplus,e=>{const t=e>-kg,n=e<kg,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a}),Ig={kernelName:d.Softplus,backendName:"cpu",kernelFunc:Ng};const jg={kernelName:d.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;bh([a],"spaceToBatchND");const o=d.util.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let d=1+s.length;d<a.shape.length;++d)u.push([0,0]);const c=Wb.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),l=d.backend_util.getReshaped(c.shape,s,o,!1),h=d.backend_util.getPermuted(l.length,s.length,!1),p=d.backend_util.getReshapedPermuted(c.shape,s,o,!1),f=Zh({inputs:{x:c},backend:n,attrs:{shape:l}}),m=lp({inputs:{x:f},backend:n,attrs:{perm:h}}),b=Zh({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}};function Sg(e,t,n,r,a){const s=d.util.sizeFromShape(r),i=t[0],o=a.length,u=[];let c=1,l=-1;for(let d=0;d<o;++d){const e=a[d];if(-1===e){if(-1!==l)throw new Error(`only one output dimension may be -1, not both ${l} and ${d}`);l=d,u.push(1)}else{if(e<0)throw new Error(`size ${d} must be non-negative, not ${e}`);c*=e,u.push(e)}}if(-1!==l){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/c);if(c*e!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}\n          dense values, but the requested shape requires a multiple of ${c}. inputShape=${r} outputShape= ${u}`);u[l]=e}const h=d.util.sizeFromShape(u);if(h!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${h}. inputShape=${r} outputShape=${u}`);const p=r.length,f=[];if(p>0){f[p-1]=1;for(let e=p-2;e>=0;--e)f[e]=f[e+1]*r[e+1]}const m=[];if(o>0){m[o-1]=1;for(let e=o-2;e>=0;--e)m[e]=m[e+1]*u[e+1]}const b=d.util.getArrayFromDType(n,i*o);for(let d=0;d<i;++d){let t=0;for(let n=0;n<p;++n)t+=e[d*p+n]*f[n];for(let e=0;e<o;++e)b[d*o+e]=Math.trunc(t/m[e]),t%=m[e]}return[b,[i,o],u]}const Cg={kernelName:d.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape\n        "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape\n        "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[c,l,d]=Sg(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const Tg={kernelName:d.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:p}=d.backend_util.calculateShapes(s,a,o),f=lg(n.bufferSync(a),n.bufferSync(s),o,p,l,c,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,f.dtype,f.values)}};const Ag={kernelName:d.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=d.util.parseAxisParam(i,a.shape)[0],u=d.backend_util.prepareSplitSize(a,s,o),c=new Array(a.shape.length).fill(0),l=a.shape.slice();return u.map(e=>{const t=[...l];t[o]=e;const r=Dp({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r})}},Eg=xh(d.Sqrt,e=>Math.sqrt(e)),$g={kernelName:d.Sqrt,backendName:"cpu",kernelFunc:Eg},Fg={kernelName:d.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;bh(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){const e=a[i];s[i]=e*e}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},_g=Sh((e,t)=>{const n=e-t;return n*n}),Rg=Gh(d.SquaredDifference,_g),Dg={kernelName:d.SquaredDifference,backendName:"cpu",kernelFunc:Rg},Mg=xh(d.Step,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),zg={kernelName:d.Step,backendName:"cpu",kernelFunc:Mg};function Lg(e,t,n,r){const a=Object(d.buffer)(e,t.dtype);for(let s=0;s<a.size;s++){const e=a.indexToLoc(s),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];a.set(t.get(...i),...e)}return a}const Pg={kernelName:d.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:p}=r;bh(a,"stridedSlice");const{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:x}=d.slice_util.sliceInfo(a.shape,s,i,o,u,c,l,h,p),v=Zh({inputs:{x:a},backend:n,attrs:{shape:y}});let w;if(f){const e=Dp({inputs:{x:v},backend:n,attrs:{begin:m,size:g}});w=Zh({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some(e=>0===e))w=n.makeTensorInfo(x,a.dtype,[]);else{const e=Lg(x,n.bufferSync(v),b,m);w=n.makeTensorInfo(e.shape,e.dtype,e.values)}const O=Zh({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),O}},Bg=xh(d.Tan,e=>Math.tan(e)),Vg={kernelName:d.Tan,backendName:"cpu",kernelFunc:Bg},Wg=xh(d.Tanh,e=>Math.tanh(e)),Ug={kernelName:d.Tanh,backendName:"cpu",kernelFunc:Wg};function Gg(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const r=Object(d.buffer)(n,e.dtype);for(let a=0;a<r.values.length;++a){const t=r.indexToLoc(a),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const s=e.locToIndex(n);r.values[a]=e.values[s]}return r}const Kg={kernelName:d.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;bh(a,"tile");const i=Gg(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function Hg(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=d.util.getTypedArrayFromDType(n,i*r),c=d.util.getTypedArrayFromDType("int32",i*r);for(let d=0;d<i;d++){const t=d*o,n=e.subarray(t,t+o),a=[];for(let e=0;e<n.length;e++)a.push({value:n[e],index:e});a.sort((e,t)=>t.value-e.value);const s=d*r,i=u.subarray(s,s+r),l=c.subarray(s,s+r);for(let e=0;e<r;e++)i[e]=a[e].value,l[e]=a[e].index}const l=t.slice();return l[l.length-1]=r,[Object(d.buffer)(l,n,u),Object(d.buffer)(l,"int32",c)]}const qg={kernelName:d.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;bh(a,"topk");const o=n.data.get(a.dataId).values,[u,c]=Hg(o,a.shape,a.dtype,s);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};const Xg={kernelName:d.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=n,[l,h,p,f]=a.shape,[m,b]=null!=c?c:[h,p],g=[l,m,b,f],y=d.util.computeStrides(a.shape),x=y[0],v=y[1],w=y[2],O=d.util.getTypedArrayFromDType(a.dtype,d.util.sizeFromShape(g));O.fill(u);const k=r.data.get(a.dataId).values,N=r.data.get(s.dataId).values;for(let d=0;d<l;++d){const e=1===s.shape[0]?N:N.subarray(8*d,8*d+8);for(let t=0;t<m;++t)for(let n=0;n<b;++n)for(let r=0;r<f;++r){let a;const s=e[6]*n+e[7]*t+1;if(0===s)continue;const c=(e[0]*n+e[1]*t+e[2])/s,l=(e[3]*n+e[4]*t+e[5])/s,f=Yg(c,p,o),m=Yg(l,h,o);switch(i){case"nearest":a=Jg(k,h,p,x,v,w,d,m,f,r,u);break;case"bilinear":a=Qg(k,h,p,x,v,w,d,m,f,r,u);break;default:throw new Error("Error in Transform: Expect 'nearest' or 'bilinear', but got "+i)}O[d*x+t*v+n*w+r]=a}return r.makeTensorInfo(g,a.dtype,O)}return{dataId:r.write(O,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function Yg(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return d.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return d.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return d.util.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function Zg(e,t,n,r,a,s,i,o,u,c,l){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+c]:l}function Jg(e,t,n,r,a,s,i,o,u,c,l){return Zg(e,t,n,r,a,s,i,Math.round(o),Math.round(u),c,l)}function Qg(e,t,n,r,a,s,i,o,u,c,l){const d=Math.floor(o),h=Math.floor(u),p=d+1,f=h+1;return(p-o)*((f-u)*Zg(e,t,n,r,a,s,i,d,h,c,l)+(u-h)*Zg(e,t,n,r,a,s,i,d,f,c,l))+(o-d)*((f-u)*Zg(e,t,n,r,a,s,i,p,h,c,l)+(u-h)*Zg(e,t,n,r,a,s,i,p,f,c,l))}function ey(e,t,n,r){const a=d.util.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let d=0;d<a;d++)s[0]*=n[d];s[1]=n[a];for(let d=a+1;d<n.length;d++)s[2]*=n[d];const i={},o=new Int32Array(n[a]),u=new d.TensorBuffer(s,r,e),c=[],l=1===s[0]&&1===s[2];for(let d=0;d<n[a];d++){let t;if(l)t=e[d].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(u.get(t,d,n));t=e.join(",")}if(void 0!==i[t])o[d]=i[t];else{const e=Object.keys(i).length;i[t]=e,o[d]=e,c.push(d)}}const h=s.slice();h[1]=Object.keys(i).length;const p=new d.TensorBuffer(h,r);c.forEach((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(u.get(n,e,r),n,t,r)});const f=n.slice();return f[a]=h[1],{outputValues:p.values,outputShape:f,indices:o}}const ty={kernelName:d.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;bh(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:c}=ey(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}};const ny={kernelName:d.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let c=0;for(let p=0;p<i;p++)p!==s&&(u[c++]=a.shape[p]);const l=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(o);for(let p=0;p<h.length;p++){l[s]=p;const e=Dp({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});h[p]=Zh({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return h}};const ry={kernelName:d.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;bh(a,"unsortedSegmentSum");const o=[],u=[],c=a.shape.length-s.shape.length;let l=s;for(let d=0;d<c;++d){const e=Kf({inputs:{input:l},backend:n,attrs:{dim:d+1}});l=e,u.push(e)}for(let p=0;p<i;++p){const e=d.util.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),r=Ff({inputs:{a:t,b:l},backend:n}),s=Wh({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=jf({inputs:{a:s,b:a},backend:n}),c=Cf({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});o.push(c),u.push(t),u.push(r),u.push(s),u.push(i),u.push(c)}const h=Bb({inputs:o,backend:n,attrs:{axis:0}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},ay=[tp,rp,sp,op,Yh,up,hp,pp,fp,mp,gp,xp,wp,Np,jp,Ap,Ep,$p,Fp,ep,_p,zp,Bp,Uh,Gp,Hp,Lh,qp,Qp,nf,rf,tf,sf,of,af,cf,df,hf,pf,ff,mf,gf,yf,xf,vf,wf,kf,Of,Qf,Af,Oh,Ef,_f,Vf,Gf,Hf,Yf,im,um,cm,hm,mm,bm,gm,ym,vm,km,jm,Nh,Sm,Zp,Tm,Em,Fm,jh,Dm,Lm,Bm,Um,Km,Xm,Zm,eb,tb,nb,ub,cb,lb,db,hb,pb,sb,fb,mb,yb,xb,Ob,Ib,Sf,Sb,Tb,Eb,Fb,Db,Mb,Pb,Vb,Wb,Kb,Ah,qb,Yb,Vh,Jb,$h,_h,Jh,Qb,eg,tg,ng,rg,ag,ig,cg,dg,hg,bg,Dh,yg,vg,Og,Mp,Nb,Ig,jg,Cg,Tg,Ag,$g,Fg,Dg,zg,Pg,rm,Tf,Vg,Ug,Kg,qg,dp,Xg,ty,ny,ry,Lb];for(const Ij of ay)Object(d.registerKernel)(Ij);const sy={},iy={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function oy(e){if(!(e in sy)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!==typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete sy[e]},!1),1===e)return t.getContext("webgl",iy)||t.getContext("experimental-webgl",iy);return t.getContext("webgl2",iy)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;sy[e]=t}const t=sy[e];return t.isContextLost()?(delete sy[e],oy(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),sy[e])}var uy,cy,ly;function dy(e,t){return[t,e]}function hy(e){const t=d.util.sizeFromShape(e),n=Math.ceil(t/4);return d.util.sizeToSquarishShape(n)}function py(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function fy(e,t){const n=e;let r,a,s,i,o,u,c,l,h,p;return 2===Object(d.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,l=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,c=4,l=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:h,textureTypeFloat:p}}function my(e,t){const n=t();return Object(d.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(uy||(uy={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(cy||(cy={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(ly||(ly={}));function by(e){return!!(Object(d.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function gy(e,t){return jy(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function yy(e,t){const n=jy(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(my(e,()=>e.shaderSource(n,t)),my(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=xy.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map((e,t)=>d.util.rightPad((t+1).toString(),s)+e);let o=0;for(let d=0;d<i.length;d++)o=Math.max(i[d].length,o);const u=i.slice(0,r-1),c=i.slice(r-1,r),l=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+d.util.rightPad(c[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const xy=/ERROR: [0-9]+:([0-9]+):/g;function vy(e,t){if(my(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function wy(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(my(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),my(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),my(e,()=>e.enableVertexAttribArray(o)),!0)}function Oy(e,t,n,r){my(e,()=>function(e,t,n){Sy(e,n),my(e,()=>e.activeTexture(e.TEXTURE0+n)),my(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,r)),my(e,()=>e.uniform1i(n,r))}function ky(e,t,n){my(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),my(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Ny(e,t){my(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),my(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Iy(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}(e,t))}function jy(e,t,n){const r=my(e,()=>t());if(null==r)throw new Error(n);return r}function Sy(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function Cy(e,t=2){return d.util.sizeFromShape(e.slice(0,e.length-t))}function Ty(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Ay(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Cy(e),...Ty(e)]),t}function Ey(e){return e%2===0}function $y(e,t){if(e=e.slice(-2),t=t.slice(-2),d.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Ey(n)&&Ey(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Ey(e[0])&&Ey(t[0])}let Fy,_y;function Ry(e,t){return null!=e.getExtension(t)}function Dy(e){try{if(null!=oy(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function My(e){if(0===e)return!1;const t=oy(e);if(1!==e){if(Ry(t,"EXT_color_buffer_float"))return zy(t);const e="EXT_color_buffer_half_float";if(Ry(t,e)){const n=t.getExtension(e);return function(e,t){const n=fy(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!Ry(t,"OES_texture_float"))return!1;if(!Ry(t,"WEBGL_color_buffer_float"))return!1;return zy(t)}function zy(e){const t=fy(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function Ly(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&d.util.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the WebGL backend.")})}const Py=Object(d.env)();function By(){let e,t,n,r,a,s,i,o,u,c;return 2===Object(d.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function Vy(e,t,n="index"){const r=d.util.computeStrides(t);return r.map((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`).join("")}function Wy(e){const t=d.util.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Py.registerFlag("HAS_WEBGL",()=>Py.getNumber("WEBGL_VERSION")>0),Py.registerFlag("WEBGL_VERSION",()=>Dy(2)?2:Dy(1)?1:0),Py.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Py.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Py.get("WEBGL_VERSION")),Py.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Py.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Py.registerFlag("WEBGL_PACK",()=>Py.getBool("HAS_WEBGL")),Py.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Py.getBool("WEBGL_PACK")),Py.registerFlag("WEBGL_PACK_CLIP",()=>Py.getBool("WEBGL_PACK")),Py.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Py.getBool("WEBGL_PACK")),Py.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Py.getBool("WEBGL_PACK")),Py.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Py.getBool("WEBGL_PACK")),Py.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Py.getBool("WEBGL_PACK")),Py.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Py.getBool("WEBGL_PACK")),Py.registerFlag("WEBGL_PACK_REDUCE",()=>Py.getBool("WEBGL_PACK")),Py.registerFlag("WEBGL_LAZILY_UNPACK",()=>Py.getBool("WEBGL_PACK")),Py.registerFlag("WEBGL_CONV_IM2COL",()=>Py.getBool("WEBGL_PACK")),Py.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==Fy){const t=oy(e);Fy=t.getParameter(t.MAX_TEXTURE_SIZE)}return Fy}(Py.getNumber("WEBGL_VERSION"))),Py.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==_y){const t=oy(e);_y=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,_y)}(Py.getNumber("WEBGL_VERSION"))),Py.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=Py.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=oy(e);return t=Ry(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Ry(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),Py.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Py.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!d.device_util.isMobile()),Py.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=oy(e);if(1===e){if(!Ry(t,"OES_texture_float"))return!1}else if(!Ry(t,"EXT_color_buffer_float"))return!1;return zy(t)}(Py.getNumber("WEBGL_VERSION"))),Py.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Py.getBool("WEBGL_FORCE_F16_TEXTURES")&&Py.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Py.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>My(Py.getNumber("WEBGL_VERSION"))),Py.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=Py.getNumber("WEBGL_VERSION"))&&null!=oy(e).fenceSync;var e}),Py.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Py.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Py.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),Py.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>d.device_util.isMobile()&&Py.getBool("IS_CHROME")?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});const Uy="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class Gy{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=uy.DENSE;const t=hy(e),n=By();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Vy(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Ky{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=uy.DENSE;const t=hy(e),n=By();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Vy(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Hy{constructor(e){this.variableNames=["A"],this.outTexUsage=cy.DOWNLOAD;const t=By();this.outputShape=e,this.userCode=`\n      ${Uy}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class qy{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=cy.DOWNLOAD;const t=By();this.outputShape=e,this.userCode=`\n      ${Uy}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Xy{constructor(e,t,n=!1){this.variableNames=["A"];const r=By(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Wy(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class Yy{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=By(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let t=0;t<=1;t++){const n=2*u+t;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${e[2]}) {\n            localCoords[2] += ${t};\n            if(localCoords[1] + ${u} < ${e[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Wy(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function Zy(e){const t=By();return function(e,t){const n=jy(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(my(e,()=>e.shaderSource(n,t)),my(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Jy(e){return function(e,t){const n=jy(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return my(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),my(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Qy(e){return function(e,t){const n=jy(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return my(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),my(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}function ex(e,t,n,r,a,s){!function(e,t){const n=Object(d.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return jy(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return my(e,()=>e.bindTexture(o,i)),my(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),my(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),my(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),my(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),my(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)),my(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function tx(e){return e.internalFormatFloat}function nx(e){return e.internalFormatHalfFloat}function rx(e){return e.downloadTextureFormat}function ax(e){return e.internalFormatPackedFloat}function sx(e){return e.internalFormatPackedHalfFloat}function ix(e,t,n,r,a,s,i,o){const u=e,c=new Float32Array(function(e,t){const[n,r]=py(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}class ox{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(d.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){sy[e]=t}(t,e)):this.gl=oy(t);let n="WEBGL_color_buffer_float";if(1===Object(d.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=gy(this.gl,e),Ry(this.gl,t))this.textureHalfFloatExtension=gy(this.gl,t);else if(Object(d.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Ry(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=gy(this.gl,"EXT_color_buffer_half_float");else if(Object(d.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Ry(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Ry(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=Jy(this.gl),this.indexBuffer=Qy(this.gl),this.framebuffer=function(e){return jy(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=fy(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(d.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;my(e,()=>e.finish()),my(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),my(e,()=>e.deleteFramebuffer(this.framebuffer)),my(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),my(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),my(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=dy(t,n);return ex(e,a,s,tx(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=dy(t,n);return ex(e,a,s,nx(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=dy(t,n);return ex(e,a,s,rx(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){my(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?my(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):my(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),my(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,u;my(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),my(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i)),my(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=py(t,n);return ex(e,a,s,sx(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=py(t,n);return ex(e,a,s,ax(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Ny(this.gl,this.framebuffer),this.outputTexture=null),my(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[a,s]=dy(t,n),i=new Uint8Array(t*n*4);return my(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return ix(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();my(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const s=16*t*n;return my(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),my(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),my(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(d.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return my(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=yy(t,e),r=Zy(t),a=function(e){return jy(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);return my(t,()=>t.attachShader(a,r)),my(t,()=>t.attachShader(a,n)),function(e,t){if(my(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,a),this.debug&&vy(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(e,t,n){return my(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),wy(e,t,"clipSpacePos",n,3,20,0)&&wy(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&my(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&vy(this.gl,this.program),my(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return jy(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),my(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Oy(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=py(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&vy(this.gl,this.program),Iy(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),my(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),my(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=gy(this.gl,2===Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await d.util.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||d.util.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),ky(this.gl,e,this.framebuffer),this.debug&&Iy(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(ky(this.gl,this.outputTexture,this.framebuffer),this.debug&&Iy(this.gl)):Ny(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;ky(r,e,this.framebuffer),this.debug&&Iy(r),this.outputTexture=e,my(r,()=>r.viewport(0,0,t,n)),my(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),my(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:ux}=d.backend_util;function cx(e,t,n,r){const a=[];e.forEach(e=>{const t=d.util.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))});const s=a.join("\n"),i=e.map(e=>function(e,t,n=!1){let r="";r+=n?dx(e):lx(e);const a=e.shapeInfo.logicalShape,s=t.logicalShape;a.length<=s.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=ux(e.shapeInfo.logicalShape,t.logicalShape),u=xx(i),c=i-s;let l;const h=["x","y","z","w","u","v"];l=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${h[e+c]} = 0;`).join("\n");let p="";p=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+h[t+c]).join(", ");let f="return outputValue;";const m=1===d.util.sizeFromShape(e.shapeInfo.logicalShape),b=1===d.util.sizeFromShape(t.logicalShape);if(1!==s||m||b){if(m&&!b)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?f="return vec4(outputValue.x);":o.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${l}\n      vec4 outputValue = get${r}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&d.util.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=xx(u),l=ux(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let p;const f=["x","y","z","w","u","v"];p=0===o?"":u<2&&l.length>=1?"coords = 0;":l.map(e=>`coords.${f[e+h]} = 0;`).join("\n");let m="";m=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+f[t+h]).join(", ");return`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}(e,t));return r}(e,t,r)).join("\n"),o=t.texShape,u=By(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let l,h,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${hx}\n    ${px}\n    ${fx}\n  `}(u);t.isPacked?(l=function(e,t){switch(e.length){case 0:return bx();case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(d.util.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let s=a,i="",o="b, r, c";for(let u=2;u<e.length-1;u++)s*=e[e.length-u-1],i=`\n      int b${u} = index / ${s};\n      index -= b${u} * ${s};\n    `+i,o=`b${u}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(l=function(e,t){switch(e.length){case 0:return bx();case 1:return function(e,t){if(1===t[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t);case 2:return function(e,t){if(d.util.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=Vy(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=Vy(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=Vy(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=Vy(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(p+=mx);return[p,c,h,s,l,i,n].join("\n")}function lx(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[s,i]=e.shapeInfo.texShape,o=gx(t);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${o});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${yx(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=gx(t);if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `;if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&d.util.arraysEqual(t,a)){const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:i}=d.util.squeezeShape(t),o=s;if(o.length<t.length){const t=["row","col"];return`\n      ${lx(vx(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${wx(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${yx(e)}\n      }\n    `;const u=a[0],c=a[1],l=gx(n);if(1===c)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${l}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===u)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${l}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${l};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],s=t[2],{newShape:i,keptDims:o}=d.util.squeezeShape(t),u=i;if(u.length<t.length){const t=["row","col","depth"];return`\n        ${lx(vx(e,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${wx(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${yx(e)}\n      }\n    `;const c=e.shapeInfo.texShape,l=c[0],h=c[1],p=e.shapeInfo.flatOffset;if(h===a&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${l}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===s&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const f=gx(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${l}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],s=t[2]*a,i=t[1]*s,{newShape:o,keptDims:u}=d.util.squeezeShape(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${lx(vx(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${wx(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${a}, 1)));\n        ${yx(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,l=e.shapeInfo.texShape,h=l[0],p=l[1];if(p===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=gx(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${f});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:c}=d.util.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${lx(vx(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${wx(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${yx(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===o&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=gx(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=d.util.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${lx(vx(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${wx(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,c=t[2]*u,l=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${c}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${yx(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];if(m===l&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const b=gx(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${c} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${b};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function dx(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=By();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=By();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=a[0],i=a[1],o=By();if(null!=a&&d.util.arraysEqual(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(t[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=[1,2],a=["b","row","col"];return`\n        ${dx(vx(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${wx(a,n)});\n        }\n      `}const i=s[0],o=s[1],u=Math.ceil(t[2]/2),c=u*Math.ceil(t[1]/2),l=By();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${c}, ${u}, b, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],c=Math.ceil(t[n-1]/2);let l=c*Math.ceil(t[n-2]/2),d="int b, int row, int col",h=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let f=2;f<n-1;f++)d=`int b${f}, `+d,l*=t[n-f-1],h=`b${f} * ${l} + `+h;const p=By();return`\n    vec4 ${a}(${d}) {\n      int index = ${h};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}(e)}}const hx="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",px="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fx="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",mx="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function bx(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function gx(e){return"offset"+e}function yx(e){const t=e.name,n=d.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function xx(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function vx(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function wx(e,t){return t.map(t=>e[t]).join(", ")}function Ox(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!d.util.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!d.util.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}const{addImpl:kx,bincountImpl:Nx,bincountReduceImpl:Ix,ceilImpl:jx,concatImpl:Sx,expImpl:Cx,expm1Impl:Tx,floorImpl:Ax,gatherV2Impl:Ex,greaterImpl:$x,lessImpl:Fx,linSpaceImpl:_x,logImpl:Rx,maxImpl:Dx,maximumImpl:Mx,minimumImpl:zx,multiplyImpl:Lx,negImpl:Px,prodImpl:Bx,rangeImpl:Vx,rsqrtImpl:Wx,simpleAbsImpl:Ux,sliceImpl:Gx,sparseReshapeImpl:Kx,stridedSliceImpl:Hx,subImpl:qx,tileImpl:Xx,topKImpl:Yx,transposeImpl:Zx,uniqueImpl:Jx}=l;function Qx(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function ev(e,t){return 1===t?[e]:Qx(e,t)}class tv{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=ev("rc",t),r=xx(t),a=function(e,t,n){if(1===e)return"rc > "+t[0];let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=t[t.length-1-n]+","+s;n.push(s)}return n}(n,t);if(1===n)return`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class nv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${Vy(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${Wy(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class rv{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=sv(t,n),a=iv(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=av(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===ly.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===ly.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===ly.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===ly.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===ly.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=sv(n,r),s=iv(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=av(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Object(d.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function av(e,t,n,r,a){const s=function(e,t){switch(e){case ly.PACKED_2X2_FLOAT32:return ax(t);case ly.PACKED_2X2_FLOAT16:return sx(t);case ly.UNPACKED_FLOAT32:return tx(t);case ly.UNPACKED_FLOAT16:return nx(t);case ly.PACKED_4X1_UNSIGNED_BYTE:return rx(t);default:throw new Error("Unknown physical texture type "+e)}}(t,r);let i;if(a){const[t,n]=py(e[0],e[1]);i=t*n}else{const[t,n]=dy(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error("Unknown internal format "+t)}(n,s)}function sv(e,t){if(e===cy.UPLOAD)return ly.PACKED_2X2_FLOAT32;if(e===cy.RENDER||null==e)return function(e){return Object(d.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?ly.PACKED_2X2_FLOAT32:ly.UNPACKED_FLOAT32:e?ly.PACKED_2X2_FLOAT16:ly.UNPACKED_FLOAT16}(t);if(e===cy.DOWNLOAD||e===cy.PIXELS)return ly.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function iv(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class ov{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const uv="return abs(x);";const cv="return x;";class lv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class dv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=ev("rc",t),r=xx(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const hv=d.kernel_impls.whereImpl,pv={};class fv extends d.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(d.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=oy(Object(d.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Object(d.env)().getNumber("WEBGL_VERSION"))in pv||(pv[t]={}),pv[t]),this.gpgpu=new ox(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new rv(this.gpgpu),this.numMBBeforeWarning=null==Object(d.env)().global.screen?1024:Object(d.env)().global.screen.height*Object(d.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new d.DataStorage(this,Object(d.engine)())}nextDataId(){return fv.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Object(d.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(d.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:cy.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Object(d.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:cy.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new lv(i,cv):new ov(i,cv);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let c,l;if(u&&(c=d.util.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);l=d.backend_util.mergeRealAndImagArrays(e,t)}else l=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=d.util.now()-c),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new lv(r,cv):new ov(r,cv);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Object(d.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(d.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,l=null;if("complex64"!==s&&Object(d.env)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(t.texture,...hy(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];c=d.backend_util.mergeRealAndImagArrays(t,n)}else if(null==l)c=this.getValuesFromTexture(e);else{const e=d.util.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(e,c),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(d.engine)().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>d.util.decodeString(e))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(d.buffer)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!by(n)){if(Object(d.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=d.util.sizeFromShape(t);if(Object(d.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...hy(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Object(d.env)().getBool("WEBGL_PACK")&&!0===r,i=s?Ay(t):t,o=s?new qy(i):new Hy(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=d.util.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=d.util.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=d.util.sum(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:d.util.now(),endMs:null}}endTimer(e){return Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=d.util.now(),e)}async getQueryTime(e){if(Object(d.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=128){return Object(d.env)().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&d.util.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){d.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return hv(e.shape,t)}packedUnaryOp(e,t,n){const r=new lv(e.shape,t),a=this.compileAndRun(r,[e],n);return Object(d.engine)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Ux(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,uv,e.dtype);const t=new ov(e.shape,uv),n=this.compileAndRun(t,[e]);return Object(d.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&d.util.isString(n[0])){const a=n.map(e=>d.util.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Object(d.engine)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new dv(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new tv(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Cy(e.shape),...Ty(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[Cy(t),...Ty(t)],s=new nv(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=Ay(r);let i;i=n?new Ky(s):new Gy(s);return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===uy.DENSE){const t=hy(e.outputShape);i.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===d.util.sizeFromShape(s.shape))return i.values=d.util.getTypedArrayFromDType(s.dtype,0),s;const o=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&d.util.sizeFromShape(t.shape)<=Object(d.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!$y(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:i,isUniform:!1},l=function(e,t,n){let r="";t.concat(n).forEach(e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`});const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a,s}(e,u,c),h=this.getAndSaveBinary(l,()=>function(e,t,n,r){const a=t.userCode,s=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=s.map(e=>e.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=cx(s,o,a,t.packedInputs),c=e.createProgram(u);let l=null;const h=e.getUniformLocation(c,"NAN",!1);1===Object(d.env)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(c,"INFINITY",!1));const p={};for(let d=0;d<t.variableNames.length;d++){const n=t.variableNames[d],r=!1;p[n]=e.getUniformLocation(c,n,r),p["offset"+n]=e.getUniformLocation(c,"offset"+n,r)}return{program:t,source:u,webGLProgram:c,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:l,nanLoc:h}}(this.gpgpu,e,u,c)),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),function(e,t,n,r,a){Ox(t.inShapeInfos,n),Ox([t.outShapeInfo],[r]);const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===Object(d.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations["offset"+a];if(null!=s)if(n.isUniform)if(d.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)}),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,u,c,r),o.forEach(e=>this.disposeIntermediateTensorInfo(e)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Object(d.env)().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=d.util.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Object(d.env)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(d.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(d.tidy)(()=>{if(!Object(d.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(d.env)().getBool("DEBUG");Object(d.env)().set("DEBUG",!1);const t=this.abs(Object(d.scalar)(1e-8)).dataSync()[0];if(Object(d.env)().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let c;u&&(c=d.util.now());let l=t.texShape;if(null==l&&(l=function(e,t=!1){let n=Object(d.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map((t,n)=>n>=e.length-2?d.util.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=d.util.squeezeShape(e);e=t.newShape}let r=d.util.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=Cy(e);let n=2,a=2;return e.length&&([n,a]=Ty(e)),r=t*(n/2)*(a/2),d.util.sizeToSquarishShape(r).map(e=>2*e)}return d.util.sizeToSquarishShape(r)}(n,o),t.texShape=l),null!=a){const e=Ay(n);let s,i=l[1],h=l[0];const p=a instanceof Uint8Array;o?([i,h]=py(l[0],l[1]),s=new Yy(e,[h,i],p)):s=new Xy(e,[h,i],p);const f=this.makeTensorInfo([h,i],r);this.texData.get(f.dataId).usage=p?cy.PIXELS:cy.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);const m=!0,b=this.runWebGLProgram(s,[f],r,null,m),g=this.texData.get(b.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),t.values=null,u&&(this.uploadWaitMs+=d.util.now()-c)}else{const e=this.acquireTexture(l,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*d.util.bytesPerElement(t)}}fv.nextDataId=0;d.device_util.isBrowser()&&Object(d.registerBackend)("webgl",()=>new fv,2);class mv{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=d.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class bv{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=d.backend_util.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let s="";if(r)if(0===a||1===d.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(s=`\n          ${xx(a)} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=ev("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function gv(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const yv={kernelName:d.Identity,backendName:"webgl",kernelFunc:gv};function xv(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=gv({inputs:{x:r},backend:n}),u=gv({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const vv={kernelName:d.Complex,backendName:"webgl",kernelFunc:xv},wv="return (a < 0.) ? b * a : a;",Ov="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const kv={kernelName:d.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",d.util.createScalarValue(s,"float32")),o=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bv(Ov,a.shape,i.shape):new mv(wv,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),u}},Nv="return (a < 0.) ? b * a : a;",Iv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const jv={kernelName:d.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bv(Iv,r.shape,a.shape):new mv(Nv,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function Sv({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let c;return c=Object(d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new lv(i.shape,t):new ov(i.shape,e),o.runWebGLProgram(c,[i],u)}}function Cv({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:c}=i,l=o;if(r&&"complex64"===u.dtype){const t=l.texData.get(u.dataId),n=l.texData.get(c.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new mv(e,u.shape,c.shape);return l.runWebGLProgram(i,[a,s],Object(d.upcastType)(n.dtype,r.dtype))}),s=xv({inputs:{real:r,imag:a},backend:l});return l.disposeIntermediateTensorInfo(r),l.disposeIntermediateTensorInfo(a),s}const h=s||Object(d.upcastType)(u.dtype,c.dtype);if(l.shouldExecuteOnCPU([u,c])&&null!=a){const e=l.texData.get(u.dataId),t=l.texData.get(c.dataId),[n,r]=a(u.shape,c.shape,e.values,t.values,h),s=l.makeTensorInfo(r,h);return l.texData.get(s.dataId).values=n,s}let p;return p=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new bv(t,u.shape,c.shape,n):new mv(e,u.shape,c.shape),l.runWebGLProgram(p,[u,c],h)}}function Tv(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Iv:Nv;if("leakyrelu"===e)return t?Ov:wv;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Av{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const c=r?e[1]:e[2],l=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,b="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}const Ev="return areal * breal - aimag * bimag;",$v="return areal * bimag + aimag * breal;";class Fv{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=d.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const _v="return a * b;";function Rv(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=d.backend_util.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new Fv(Ev,r.shape,a.shape),i=new Fv($v,r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),c=n.runWebGLProgram(i,o,"float32"),l=xv({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=Lx(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bv(_v,r.shape,a.shape):new mv(_v,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}const Dv={kernelName:d.Multiply,backendName:"webgl",kernelFunc:Rv};function Mv(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=d.util.sizeFromShape(a.shape),u=d.util.inferFromImplicitShape(s,o),c=d.util.sizeFromShape(u);d.util.assert(o===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const l=i.texData.get(a.dataId);return!l.isPacked||$y(a.shape,u)||null!==l.texture&&$y(l.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[Cy(e.shape),...Ty(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[Cy(t),...Ty(t)],i=new nv(s,r),o=n.runWebGLProgram(i,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,u,i)}const zv={kernelName:d.Reshape,backendName:"webgl",kernelFunc:Mv};class Lv{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${d.util.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Pv{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function Bv(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=d.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:c}=a[i];let l,d;l="mean"===n?0===i?new Lv({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},o):new Lv({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c}):new Pv({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},n),d=s,s=r.runWebGLProgram(l,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class Vv{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const r=xx(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Wv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=xx(this.rank),a=Qx("rc",this.rank),s=new Array(this.rank);for(let c=0;c<t.length;c++)s[t[c]]=a[c];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Uv(e,t,n){const r=Object(d.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Wv(e.shape,t):new Vv(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function Gv(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=d.util.parseAxisParam(a,e.shape);let o=i;const u=d.backend_util.getAxesPermutation(o,s),c=null!=u;let l=e;c&&(l=Uv(e,u,r),o=d.backend_util.getInnerMostAxes(o.length,s)),d.backend_util.assertAxesAreInnerMostDims("sum",o,s);const[h,p]=d.backend_util.computeOutAndReduceShapes(l.shape,o);let f=h;n&&(f=d.backend_util.expandShapeToKeepDim(h,i));const m=d.util.sizeFromShape(p),b=Mv({inputs:{x:l},attrs:{shape:[d.util.sizeFromShape(e.shape)/m,m]},backend:r}),g=Bv(b,Object(d.sumOutType)(e.dtype),"sum",r),y=Mv({inputs:{x:g},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(g),c&&r.disposeIntermediateTensorInfo(l),y}(a,s,i,n)}const Kv={kernelName:d.Sum,backendName:"webgl",kernelFunc:Gv};function Hv(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let l=0;l<u.length;l++)u[l]=a.shape[s[l]];let c;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=Zx(e,a.shape,a.dtype,s,u);c=i.makeTensorInfo(u,a.dtype);i.texData.get(c.dataId).values=t}else c=Uv(a,s,i);return c}const qv={kernelName:d.Transpose,backendName:"webgl",kernelFunc:Hv};function Xv({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const c=e.shape.length,l=t.shape.length,h=n?e.shape[c-2]:e.shape[c-1],p=r?t.shape[l-1]:t.shape[l-2],f=n?e.shape[c-1]:e.shape[c-2],m=r?t.shape[l-2]:t.shape[l-1],b=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=d.util.sizeFromShape(b),x=d.util.sizeFromShape(g),v=y===x||1===y||1===x;d.util.assert(c>=2&&l>=2&&v,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${g}).`);const w=(y>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);d.util.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);const O=n?[y,h,f]:[y,f,h],k=r?[x,m,p]:[x,p,m],N=Mv({inputs:{x:e},backend:a,attrs:{shape:O}}),I=Mv({inputs:{x:t},backend:a,attrs:{shape:k}}),j=[N,I],S=Math.max(y,x),C=n?N.shape[1]:N.shape[2],T=null!=s,A=null!=i,E="leakyrelu"===u,$=null!=u?Tv(u,!0):null;let F;if((1===f||1===m)&&C>1e3&&!1===(T||A||E||null!=$)){let e=N,t=I;n&&(e=Hv({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),j.push(e)),r&&(t=Hv({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),j.push(t));const s=1===m;let i=e;1!==m&&(i=Mv({inputs:{x:e},backend:a,attrs:{shape:[S,C,1]}}),j.push(i));const o=1===m?2:1;let u=t;s&&(u=Mv({inputs:{x:t},backend:a,attrs:{shape:[S,1,C]}}),j.push(u));const c=Rv({inputs:{a:i,b:u},backend:a});F=Gv({inputs:{x:c},backend:a,attrs:{axis:o,keepDims:!0}}),j.push(c)}else{const u=Object(d.upcastType)(e.dtype,t.dtype),c=new Av(O,k,[S,f,m],n,r,T,$,A,E),l=[N,I];if(null!=s&&l.push(s),A&&l.push(i),E){const e=a.makeTensorInfo([],"float32",d.util.createScalarValue(o,"float32"));l.push(e),j.push(e)}F=a.runWebGLProgram(c,l,u)}const _=Mv({inputs:{x:F},backend:a,attrs:{shape:w}});j.push(F);for(const d of j)a.disposeIntermediateTensorInfo(d);return _}const Yv={kernelName:d._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return Xv({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}};const Zv={kernelName:d.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Ux(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Object(d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new lv(r.shape,"return abs(x);"):new ov(r.shape,"return abs(x);"),n.runWebGLProgram(a,[r],r.dtype)}},Jv=Sv({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Qv={kernelName:d.Acos,backendName:"webgl",kernelFunc:Jv},ew=Sv({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),tw={kernelName:d.Acosh,backendName:"webgl",kernelFunc:ew},nw="return a + b;",rw=Cv({opSnippet:nw,packedOpSnippet:nw,supportsComplex:!0,cpuKernelImpl:kx}),aw={kernelName:d.Add,backendName:"webgl",kernelFunc:rw};class sw{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class iw{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const ow={kernelName:d.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return gv({inputs:{x:a[0]},backend:r});if(a.length>Object(d.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map(e=>e.dtype).reduce((e,t)=>Object(d.upcastType)(e,t)),i=a.map(e=>e.shape),o=Object(d.env)().getBool("WEBGL_PACK")?new iw(a[0].shape,i):new sw(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};const uw={kernelName:d.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=d.util.parseAxisParam(s,a.shape);let c=u;const l=d.backend_util.getAxesPermutation(c,o);let h=a;null!=l&&(h=Hv({inputs:{x:a},backend:n,attrs:{perm:l}}),c=d.backend_util.getInnerMostAxes(c.length,o)),d.backend_util.assertAxesAreInnerMostDims("all",c,o);const[p,f]=d.backend_util.computeOutAndReduceShapes(h.shape,c),m=Mv({inputs:{x:h},backend:n,attrs:{shape:[-1,d.util.sizeFromShape(f)]}}),b=Bv(m,m.dtype,"all",n);let g;if(i){g=Mv({inputs:{x:b},backend:n,attrs:{shape:d.backend_util.expandShapeToKeepDim(p,u)}})}else g=Mv({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=l&&n.disposeIntermediateTensorInfo(h),g}};const cw={kernelName:d.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=d.util.parseAxisParam(s,a.shape);let c=u;const l=d.backend_util.getAxesPermutation(c,o);let h=a;null!=l&&(h=Hv({inputs:{x:a},backend:n,attrs:{perm:l}}),c=d.backend_util.getInnerMostAxes(c.length,o)),d.backend_util.assertAxesAreInnerMostDims("any",c,o);const[p,f]=d.backend_util.computeOutAndReduceShapes(h.shape,c),m=Mv({inputs:{x:h},backend:n,attrs:{shape:[-1,d.util.sizeFromShape(f)]}}),b=Bv(m,m.dtype,"any",n);let g;if(i){g=Mv({inputs:{x:b},backend:n,attrs:{shape:d.backend_util.expandShapeToKeepDim(p,u)}})}else g=Mv({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=l&&n.disposeIntermediateTensorInfo(h),g}};class lw{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class dw{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,d.util.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=xx(o),c=ev("coords",o);let l,h;if(1===s){h=o+1;const e=xx(h);l=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[o-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[o-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[o-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[o-2]};`}else h=o,l=`\n        ${u} sourceLocR = coords;\n        ++${c[o-1]};\n        ${u} sourceLocG = coords;\n        ++${c[o-2]};\n        ${u} sourceLocA = coords;\n        --${c[o-1]};\n        ${u} sourceLocB = coords;\n        --${c[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(e=>"int "+e),b=ev("sourceLocR",h-1).concat("inIdx.r"),g=ev("sourceLocG",h-1).concat("inIdx.g"),y=ev("sourceLocB",h-1).concat("inIdx.b"),x=ev("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,O=`vec4(\n            getAChannel(${b.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};\n        ${l}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${O};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${O};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function hw(e,t,n,r){const a=[n];if(d.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Object(d.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[s,i]=d.backend_util.computeOutAndReduceShapes(t.shape,a),o=d.util.sizeFromShape(i),u=Mv({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(u);const c=function e(t,n,r,a=null){let s=n.shape[0],i=n.shape[1];null!=a&&(s=a.shape[0],i=a.shape[1]);const o=d.backend_util.computeOptimalWindowSize(i),u={windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},c=new lw(u,r,null==a),l=[n];null!=a&&l.push(a);const h=t.runWebGLProgram(c,l,"int32");if(1===h.shape[1])return h;const p=e(t,n,r,h);return t.disposeIntermediateTensorInfo(h),p}(e,u,r);n.push(c);const l=Mv({inputs:{x:c},backend:e,attrs:{shape:s}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),l}return function e(t,n,r,a=null){const s=null!=a?a.shape:n.shape,i=s[s.length-1],o=d.backend_util.computeOptimalWindowSize(i),u=new dw(s,o,r,null==a),c=null==a?[n]:[n,a],l=t.runWebGLProgram(u,c,"int32");if(l.shape.length===n.shape.length){const a=e(t,n,r,l);return t.disposeIntermediateTensorInfo(l),a}return l}(e,t,r)}const pw={kernelName:d.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=d.util.parseAxisParam(s,a.shape);const o=d.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=Hv({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=d.backend_util.getInnerMostAxes(i.length,u.shape.length)),d.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const l=hw(n,u,i[0],"max");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}};const fw={kernelName:d.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=d.util.parseAxisParam(s,a.shape);const o=d.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=Hv({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=d.backend_util.getInnerMostAxes(i.length,u.shape.length)),d.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const l=hw(n,u,i[0],"min");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}},mw=Sv({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),bw={kernelName:d.Asin,backendName:"webgl",kernelFunc:mw},gw=Sv({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),yw={kernelName:d.Asinh,backendName:"webgl",kernelFunc:gw},xw=Sv({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),vw={kernelName:d.Atan,backendName:"webgl",kernelFunc:xw},ww=Cv({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Ow={kernelName:d.Atan2,backendName:"webgl",kernelFunc:ww},kw=Sv({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Nw={kernelName:d.Atanh,backendName:"webgl",kernelFunc:kw};class Iw{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class jw{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,b=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),O=s%4,k=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const Sw={kernelName:d.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Ly(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=d.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&d.util.arraysEqual(c.inShape,c.outShape))return gv({inputs:{x:a},backend:n});const l=new Iw(c,"avg",!1);return n.runWebGLProgram(l,[a],"float32")}};const Cw={kernelName:d.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r,l=d.backend_util.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,c),h=new jw(l,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};class Tw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Aw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,b=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ew={kernelName:d.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,h=d.backend_util.computePool3DInfo(i.shape,o,u,[1,1,1],c,l),p=new Aw(h);return n.runWebGLProgram(p,[a],i.dtype)}};const $w={kernelName:d.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;Ly([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=d.backend_util.computePool2DInfo(i.shape,o,u,1,c),h=new Tw(l);return n.runWebGLProgram(h,[a],i.dtype)}};const Fw={kernelName:d.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return Xv({a:a,b:s,transposeA:i,transposeB:o,backend:n})}};class _w{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],d.backend_util.assertAndGetBroadcastShape(e,t),d.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(d.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(d.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Rw{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],d.backend_util.assertAndGetBroadcastShape(e,t),d.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(d.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(d.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Dw={kernelName:d.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;d.util.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),d.util.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),d.util.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,a,s];let l=null;null!=i&&(l=i.shape,c.push(i));let h=null;null!=o&&(h=o.shape,c.push(o));const p=Object(d.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Rw(r.shape,a.shape,s.shape,l,h,u):new _w(r.shape,a.shape,s.shape,l,h,u);return t.runWebGLProgram(p,c,c[0].dtype)}};class Mw{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=xx(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return zw.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${zw[t]} = start[${t}] + coords.${zw[t]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const zw=["x","y","z","w","u","v"];class Lw{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=xx(this.rank),n=ev("coords",this.rank),r=ev("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function Pw(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=d.slice_util.parseSliceParams(a,s,i);if(d.slice_util.assertParamsValid(a,o,u),0===d.util.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Gx(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),l=d.slice_util.isSliceContinous(a.shape,o,u);if(c||!l){const e=Object(d.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Lw(u):new Mw(u),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=d.slice_util.computeFlatOffset(t,d.util.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}const Bw={kernelName:d.Slice,backendName:"webgl",kernelFunc:Pw},Vw={kernelName:d.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;d.util.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((e,t)=>e*t),u=d.backend_util.getReshaped(a.shape,s,o),c=d.backend_util.getPermuted(u.length,s.length),l=d.backend_util.getReshapedPermuted(a.shape,s,o),h=d.backend_util.getSliceBeginCoords(i,s.length),p=d.backend_util.getSliceSize(l,i,s.length),f=[],m=Mv({inputs:{x:a},backend:n,attrs:{shape:u}}),b=Hv({inputs:{x:m},backend:n,attrs:{perm:c}}),g=Mv({inputs:{x:b},backend:n,attrs:{shape:l}}),y=Pw({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(b),f.push(g),f.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}};const Ww={kernelName:d.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),c=Nx(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}},Uw=Cv({opSnippet:"return float(a != b);",dtype:"bool"}),Gw={kernelName:d.NotEqual,backendName:"webgl",kernelFunc:Uw};function Kw(e){const{inputs:t,backend:n}=e,{input:r}=t;return gv({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Hw={kernelName:d.Real,backendName:"webgl",kernelFunc:Kw};const qw={kernelName:d.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return gv({inputs:{x:s},backend:r});const t=d.zeros(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=xv({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=Kw({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!d.util.hasEncodingLoss(s.dtype,i)){const e=gv({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new ov(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",d.util.getTypedArrayFromDType("bool",1)),t=Uw({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},Xw="return ceil(x);",Yw=Sv({opSnippet:Xw,packedOpSnippet:Xw,cpuKernelImpl:jx}),Zw={kernelName:d.Ceil,backendName:"webgl",kernelFunc:Yw};class Jw{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class Qw{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const eO={kernelName:d.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=Object(d.env)().getBool("WEBGL_PACK_CLIP")?new Qw(a.shape):new Jw(a.shape);const u=o.getCustomSetupFunc(s,i);return n.runWebGLProgram(o,[a],a.dtype,u)}};class tO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function nO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const rO={kernelName:d.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new tO(r.shape),i=[nO(r,a.complexTensorInfos.real),nO(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class aO{constructor(e){this.outputShape=[],this.outputShape=d.backend_util.computeOutShape(e,1),this.variableNames=e.map((e,t)=>"T"+t);const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){const e=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${e}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class sO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=d.backend_util.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=xx(r),s=ev("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>"T"+t);const o=new Array(e.length-1);o[0]=e[0][t];for(let d=1;d<o.length;d++)o[d]=o[d-1]+e[d][t];const u=i[t],c=i.slice(-2),l=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${l}), vec2(${c.join()}));\n        }`;for(let d=1;d<o.length;d++){const e=o[d-1];h+=`\n        if (${u} < ${o[d]}  && ${u} >= ${o[d-1]}) {\n          return getChannel(\n            getT${d}(${iO(i,u,e)}),\n            vec2(${iO(c,u,e)}));\n        }`}const p=o.length,f=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${iO(i,u,f)}),\n          vec2(${iO(c,u,f)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function iO(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function oO(e){const{inputs:t,backend:n}=e,{input:r}=t;return gv({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const uO={kernelName:d.Imag,backendName:"webgl",kernelFunc:oO};function cO(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>Kw({inputs:{input:e},backend:n})),a=e.map(e=>oO({inputs:{input:e},backend:n})),s=cO(r,t,n),i=cO(a,t,n),o=xv({inputs:{real:s,imag:i},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map(e=>{const r=d.util.sizeFromShape(e.shape.slice(t));return Mv({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})}),s=a.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=d.backend_util.computeOutShape(a.map(e=>e.shape),1),o=1===a[0].shape[0],u=Sx(s,i,r,o),c=d.backend_util.computeOutShape(e.map(e=>e.shape),t),l=n.makeTensorInfo(c,r,u);return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}if(e.length>Object(d.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=cO(e.slice(0,r),t,n),s=cO(e.slice(r),t,n),i=cO([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Object(d.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new sO(e.map(e=>e.shape),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=d.backend_util.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>Mv({inputs:{x:e},attrs:{shape:[-1,d.util.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:r}}(e,t,n),o=new aO(s.map(e=>e.shape)),u=n.runWebGLProgram(o,s,r);s.forEach(e=>n.disposeIntermediateTensorInfo(e));const c=Mv({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),c}function lO(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=d.util.parseAxisParam(a,t[0].shape)[0],i=d.backend_util.computeOutShape(t.map(e=>e.shape),s);if(0===d.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>d.util.sizeFromShape(e.shape)>0);if(1===o.length)return gv({inputs:{x:o[0]},backend:n});const u=o.map(e=>e.shape);return d.backend_util.assertParamsConsistent(u,s),cO(o,s,n)}const dO={kernelName:d.Concat,backendName:"webgl",kernelFunc:lO};class hO{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class pO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fO{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:d}=n,{left:h,top:p}=o,f=a*r,m=By(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let x="";for(let v=0;v<=1;v++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${v};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${t[g]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${h}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*v+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*v+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function mO({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,c=r.texData.get(e.dataId),l=n.inChannels,h=u[0]*u[1]*u[2],p=n.outChannels,f="channelsLast"===n.dataFormat;let m;const b=[],g=(1===h||1===p)&&l>1e3,y=u[2]%2!==0&&!!c.isPacked;if(!g&&Object(d.env)().getBool("WEBGL_LAZILY_UNPACK")&&Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const l=f?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),h={dataId:e.dataId,shape:[1,l,n.inChannels],dtype:e.dtype},p=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,d.util.assert($y(c.shape,h.shape),()=>`packed reshape ${c.shape} to ${h.shape} isn't free`);const g=Mv({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(g);const y=Xv({a:h,b:g,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),x=r.texData.get(y.dataId);d.util.assert(x.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=p,x.shape=n.outShape,m=gv({inputs:{x:y},backend:r}),m.shape=n.outShape,b.push(y)}else{const c=Mv({inputs:{x:e},backend:r,attrs:{shape:[1,f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),l=Mv({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=Xv({a:c,b:l,transposeA:false,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});m=Mv({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),b.push(c),b.push(l),b.push(d)}for(const d of b)r.disposeIntermediateTensorInfo(d);return m}function bO({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:h,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,b=u*c*l,g=p*h,y=[b,g],x=[],v=Mv({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=Mv({inputs:{x:t},backend:r,attrs:{shape:[1,b,d.util.sizeFromShape(t.shape)/b]}});x.push(v),x.push(w);const O=new fO(y,v.shape,n),k=r.runWebGLProgram(O,[v],"float32"),N=Mv({inputs:{x:k},backend:r,attrs:{shape:[1,y[0],y[1]]}});x.push(k),x.push(N);const I=null!=a,j=null!=s,S="leakyrelu"===o,C=o?Tv(o,!0):null,T=new Av(N.shape,w.shape,[1,g,n.outChannels],!0,!1,I,C,j,S),A=[N,w];if(a&&A.push(a),j&&A.push(s),S){const e=r.makeTensorInfo([],"float32",d.util.createScalarValue(i,"float32"));A.push(e),x.push(e)}const E=r.runWebGLProgram(T,A,"float32"),$=Mv({inputs:{x:E},backend:r,attrs:{shape:m?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});x.push(E);for(const d of x)r.disposeIntermediateTensorInfo(d);return $}const gO={kernelName:d.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r,h=d.backend_util.convertConv2DDataFormat(u),p=d.backend_util.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Object(d.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])f=bO({x:a,filter:s,convInfo:p,backend:n});else{const e=new hO(p);f=n.runWebGLProgram(e,[a,s],"float32")}else f=mO({x:a,filter:s,convInfo:p,backend:n});const m=Mv({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class yO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const OO={kernelName:d.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,h=d.backend_util.convertConv2DDataFormat(u),p=d.backend_util.computeConv2DInfo(a.shape,l,i,1,o,c,!1,h),f=new yO(p);return n.runWebGLProgram(f,[a,s],"float32")}};const kO={kernelName:d.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r,h=d.backend_util.convertConv2DDataFormat(c),p=d.backend_util.computeConv2DInfo(i,s.shape,o,1,u,l,!1,h),f=new xO(p);return n.runWebGLProgram(f,[a,s],"float32")}};const NO={kernelName:d.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,c=d.backend_util.computeConv3DInfo(a.shape,s.shape,i,u,o),l=new pO(c);return n.runWebGLProgram(l,[a,s],"float32")}};const IO={kernelName:d.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,c=d.backend_util.computeConv3DInfo(a.shape,u,i,1,o),l=new vO(c);return n.runWebGLProgram(l,[a,s],"float32")}};const jO={kernelName:d.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,c=d.backend_util.computeConv3DInfo(u,s.shape,o,1,i),l=new wO(c);return n.runWebGLProgram(l,[a,s],"float32")}},SO=Sv({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),CO={kernelName:d.Cos,backendName:"webgl",kernelFunc:SO},TO=Sv({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),AO={kernelName:d.Cosh,backendName:"webgl",kernelFunc:TO};class EO{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,b,g]=l>1?[""+(i-1)/(l-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[y,x,v]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const $O={kernelName:d.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,l=new EO(a.shape,s.shape,o,u,c);return n.runWebGLProgram(l,[a,s,i],"float32")}};class FO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${_O(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+s:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${xx(r)} coords = getOutputCoords();\n        int end = ${RO(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${RO(r,"coords")} = idx;\n          val += getX(${_O(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function _O(e,t){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function RO(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const DO={kernelName:d.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,c=d.backend_util.getAxesPermutation([s],u);let l=a;null!=c&&(l=Hv({inputs:{x:a},backend:n,attrs:{perm:c}}));const h=d.backend_util.getInnerMostAxes(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=`+s);const p=l.shape[h];let f=gv({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(p))-1;d++){const e=new FO(l.shape,!1,o),t=e.getCustomSetupFunc(d),r=f;f=n.runWebGLProgram(e,[f],f.dtype,t),n.disposeIntermediateTensorInfo(r)}if(i){const e=new FO(l.shape,i,o),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=Hv({inputs:{x:f},backend:n,attrs:{perm:d.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(l),e}return f}};const MO={kernelName:d.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Nx(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Ix(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}};class zO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const LO={kernelName:d.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;d.util.assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+s);const o=a.shape[0],u="NHWC"===i?a.shape[1]:a.shape[2],c="NHWC"===i?a.shape[2]:a.shape[3],l="NHWC"===i?a.shape[3]:a.shape[1],h=u*s,p=c*s,f=l/(s*s),m=new zO("NHWC"===i?[o,h,p,f]:[o,f,h,p],s,i);return n.runWebGLProgram(m,[a],a.dtype)}};class PO{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,l=e.strideWidth,d=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let b="",g="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class BO{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.outChannels/e.inChannels,i=e.inHeight,o=e.inWidth,u=e.padInfo.top,c=e.padInfo.left,l=e.strideHeight,h=e.strideWidth,p=e.dilationHeight,f=e.dilationWidth,m=e.filterHeight,b=e.filterWidth,g=b;let y="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let d=0;d<b;d++)y+=`\n          vec4 xTexelC${2*d};\n          vec4 xC${d};`;for(let O=0;O<m;O++){for(let e=0;e<b;e++)y+=`\n          xTexelC${2*e} = vec4(0.0);\n          xC${e} = vec4(0.0);`;y+=`\n        xR = xRCorner + ${O*p};\n        if (xR >=0 && xR < ${i}) {\n      `;for(let e=0;e<g/2+1;e++){const t=2*e;if(y+=`\n          xC = xCCorner + ${t*f};\n          `,1===h){if(t<b&&(c%2===1?(y+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                }\n              `,y+=1===f&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${o}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):y+=`\n                if (xC >= 0 && xC < ${o}) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<b)){const e=c%2===0?d.util.nearestLargerEven(f):f;f%2===0&&c%2===1||f%2!==0&&c%2!==1?(y+=`\n                  xCOffset = xC + ${c%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelC${t+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      xTexelC${t+2}.zw = vec2(0.0);\n                    }\n                  }\n                  `,f>1&&(y+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                    }\n                    `),y+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+2}.xy);\n                  `):y+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelC${t+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${o}) {\n                        xTexelC${t+2}.zw = vec2(0.0);\n                      }\n                    }\n\n                    xC${t+1} = xTexelC${t+2};\n                    `}}else t<b&&(c%2===1?(y+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o}) {\n                  xTexelC${t+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${o}) {\n                    xTexelC${t+2}.zw = vec2(0.0);\n                  }\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+2}.zw);\n              `,t+1<b&&(y+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${o}) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelC${t+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${t+2}.zw = vec2(0.);\n                  }\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+2}.xy);\n              `,t+1<b&&(y+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+2}.zw);\n                `)));t<b&&(y+=`\n            wTexel = getW(${O}, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<b&&(y+=`\n              wTexel = getW(${O}, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}y+="\n        }\n      "}let x="",v="";n&&(x=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${l}, ${h});\n      const ivec2 pads = ivec2(${u}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${y}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}const VO={kernelName:d.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;let l=u;null==l&&(l=[1,1]),d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(i,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const h=d.backend_util.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!0);let p;return p=Object(d.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new BO(h):new PO(h),n.runWebGLProgram(p,[a,s],"float32")}};class WO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const GO={kernelName:d.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r,h=d.backend_util.computeConv2DInfo(a.shape,l,i,o,u,c,!0),p=new WO(h);return n.runWebGLProgram(p,[a,s],"float32")}};const KO={kernelName:d.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r,h=d.backend_util.computeConv2DInfo(l,s.shape,i,o,u,c,!0),p=new UO(h);return n.runWebGLProgram(p,[a,s],"float32")}};class HO{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const qO={kernelName:d.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=d.util.sizeFromShape(r.shape),i=Mv({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new HO(s),u=n.runWebGLProgram(o,[i],i.dtype),c=Mv({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}};class XO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const YO={kernelName:d.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,c=d.backend_util.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u);let l;const h=new XO(c);l=n.runWebGLProgram(h,[a,s],"float32");const p=Mv({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),p}};const ZO={kernelName:d.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=d.backend_util.decodeEinsumEquation(a,s.length);d.backend_util.checkEinsumDimSizes(i.length,u,s);const{path:c,steps:l}=d.backend_util.getEinsumComputePath(o,u),h=l.length;let p=null,f=i.length;const m=[];for(let b=0;b<h;++b){for(const e of l[b]){const{permutationIndices:t,expandDims:r}=d.backend_util.getEinsumPermutation(f,u[e]);let a;d.backend_util.isIdentityPermutation(t)?a=s[e]:(a=Hv({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),m.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);d.util.arraysEqual(a.shape,i)||(a=Mv({inputs:{x:a},backend:n,attrs:{shape:i}}),m.push(a)),null===p?p=a:(p=Rv({inputs:{a:a,b:p},backend:n}),m.push(p))}b<h-1&&(c[b]>=0&&(p=Gv({inputs:{x:p},backend:n,attrs:{axis:c[b]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const d of m)d!==p&&n.disposeIntermediateTensorInfo(d);return p}},JO=Sv({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),QO={kernelName:d.Elu,backendName:"webgl",kernelFunc:JO},ek={kernelName:d.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Object(d.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bv("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new mv("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},tk=Cv({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),nk={kernelName:d.Equal,backendName:"webgl",kernelFunc:tk},rk=Sv({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${d.backend_util.ERF_P};\n  float a1 = ${d.backend_util.ERF_A1};\n  float a2 = ${d.backend_util.ERF_A2};\n  float a3 = ${d.backend_util.ERF_A3};\n  float a4 = ${d.backend_util.ERF_A4};\n  float a5 = ${d.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),ak={kernelName:d.Erf,backendName:"webgl",kernelFunc:rk},sk="return exp(x);",ik=Sv({opSnippet:sk,packedOpSnippet:sk,cpuKernelImpl:Cx}),ok={kernelName:d.Exp,backendName:"webgl",kernelFunc:ik};function uk(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(d.util.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),Mv({inputs:{x:s},backend:r,attrs:{shape:o}})}const ck={kernelName:d.ExpandDims,backendName:"webgl",kernelFunc:uk},lk="return exp(x) - 1.0;",dk=Sv({opSnippet:lk,packedOpSnippet:lk,cpuKernelImpl:Tx}),hk={kernelName:d.Expm1,backendName:"webgl",kernelFunc:dk};class pk{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,s=n?r+".0":"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function fk(e,t,n){const r=n.texData.get(e.dataId),a=d.util.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=Mv({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new pk("real",o,t),c=new pk("imag",o,t),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,l,"float32"),p=n.runWebGLProgram(c,l,"float32"),f=xv({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=Mv({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const mk={kernelName:d.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return fk(r,!1,n)}};class bk{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function gk(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||d.util.inferDtype(a),"string"===s){const e=d.util.getArrayFromDType(s,d.util.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new bk(r,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],s,n)}}const yk={kernelName:d.Fill,backendName:"webgl",kernelFunc:gk};class xk{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const vk={kernelName:d.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new xk(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},wk="return floor(x);",Ok=Sv({opSnippet:wk,packedOpSnippet:wk,cpuKernelImpl:Ax}),kk={kernelName:d.Floor,backendName:"webgl",kernelFunc:Ok},Nk=Cv({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Ik={kernelName:d.FloorDiv,backendName:"webgl",kernelFunc:Nk};class jk{constructor(e){this.variableNames=["A"];const t=By(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Sk{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=By(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Ck={kernelName:d.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,c]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=[c,u],h=[c,u,s];(o||i)&&(null==Tk&&(Tk=document.createElement("canvas").getContext("2d")),Tk.canvas.width=u,Tk.canvas.height=c,Tk.drawImage(a,0,0,u,c),a=Tk.canvas);const p=n.makeTensorInfo(l,"int32");n.texData.get(p.dataId).usage=cy.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const f=Object(d.env)().getBool("WEBGL_PACK")?new Sk(h):new jk(h),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let Tk;const Ak={kernelName:d.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r,b=d.backend_util.convertConv2DDataFormat(l),g=d.backend_util.computeConv2DInfo(a.shape,s.shape,u,h,c,p,!1,b);let y;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Object(d.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=bO({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:o,leakyreluAlpha:m});else{const e=null!=i,t=null!=o,r="leakyrelu"===f,u=f?Tv(f,!1):null,c=new hO(g,e,u,t,r),l=[a,s];if(i&&l.push(i),o&&l.push(o),r){const e=n.makeTensorInfo([],"float32",d.util.createScalarValue(m,"float32"));l.push(e),x.push(e)}y=n.runWebGLProgram(c,l,"float32")}else y=mO({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:o,leakyreluAlpha:m});const v=Mv({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}};const Ek={kernelName:d.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=[];let b=l;null==b&&(b=[1,1]),d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(u,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${b}'`);const g=d.backend_util.computeConv2DInfo(a.shape,s.shape,u,b,c,h,!0),y=Object(d.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=p?Tv(p,y):null,v=[a,s],w=null!=i,O=null!=o,k="leakyrelu"===p;if(w&&v.push(i),O&&v.push(o),k){const e=n.makeTensorInfo([],"float32",d.util.createScalarValue(f,"float32"));v.push(e),m.push(e)}let N;N=y?new BO(g,w,x,O,k):new PO(g,w,x,O,k);const I=n.runWebGLProgram(N,v,"float32");return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),I}};class $k{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=xx(t.length),a=xx(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Fk={kernelName:d.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],[o,u,c,l]=d.backend_util.prepareAndValidate(r,a),h=Mv({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),p=Mv({inputs:{x:r},backend:n,attrs:{shape:[d.util.sizeFromShape(r.shape)/c,c]}}),f=new $k(i,l,[u,c]),m=n.runWebGLProgram(f,[p,h],p.dtype),b=Mv({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}};class _k{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=xx(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)2===a?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(""+n[a]);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const Rk={kernelName:d.GatherV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=d.util.parseAxisParam(i,a.shape)[0],c=d.backend_util.segment_util.collectGatherOpShapeInfo(a,s,u,o),l=d.util.sizeFromShape(s.shape),h=[],p=Mv({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Mv({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});h.push(p),h.push(f);const m=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),r=Ex(t,e,m);return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const b=new _k(p.shape,m),g=n.runWebGLProgram(b,[p,f],p.dtype);h.push(g);const y=Mv({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},Dk=Cv({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:$x,dtype:"bool"}),Mk={kernelName:d.Greater,backendName:"webgl",kernelFunc:Dk},zk=Cv({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),Lk={kernelName:d.GreaterEqual,backendName:"webgl",kernelFunc:zk};const Pk={kernelName:d.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return fk(r,!0,n)}},Bk=Sv({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Vk={kernelName:d.IsFinite,backendName:"webgl",kernelFunc:Bk},Wk=Sv({opSnippet:"return float(isinf(x));",dtype:"bool"}),Uk={kernelName:d.IsInf,backendName:"webgl",kernelFunc:Wk},Gk=Sv({opSnippet:"return float(isnan(x));",dtype:"bool"}),Kk={kernelName:d.IsNan,backendName:"webgl",kernelFunc:Gk},Hk=Cv({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Fx,dtype:"bool"}),qk={kernelName:d.Less,backendName:"webgl",kernelFunc:Hk},Xk=Cv({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),Yk={kernelName:d.LessEqual,backendName:"webgl",kernelFunc:Xk};const Zk={kernelName:d.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=_x(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},Jk=Sv({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Rx}),Qk={kernelName:d.Log,backendName:"webgl",kernelFunc:Jk},eN=Sv({opSnippet:"return log(1.0 + x);"}),tN={kernelName:d.Log1p,backendName:"webgl",kernelFunc:eN},nN=Cv({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),rN={kernelName:d.LogicalAnd,backendName:"webgl",kernelFunc:nN},aN=Sv({opSnippet:"return float(!(x >= 1.0));"}),sN={kernelName:d.LogicalNot,backendName:"webgl",kernelFunc:aN},iN=Cv({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),oN={kernelName:d.LogicalOr,backendName:"webgl",kernelFunc:iN};class uN{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class cN{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const lN={kernelName:d.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,c=Object(d.env)().getBool("WEBGL_PACK_NORMALIZATION")?new cN(a.shape,s,i,o,u):new uN(a.shape,s,i,o,u);return n.runWebGLProgram(c,[a],a.dtype)}};class dN{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const hN={kernelName:d.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r,d=new dN(a.shape,o,u,c,l);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function pN(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=d.util.parseAxisParam(s,a.shape);let c=u;const l=d.backend_util.getAxesPermutation(c,o),h=null!=l,p=n.shouldExecuteOnCPU([a]);let f=a;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=a.shape[l[n]];const r=Zx(e,a.shape,a.dtype,l,t);f=n.makeTensorInfo(t,a.dtype);n.texData.get(f.dataId).values=r}else f=Uv(a,l,n);c=d.backend_util.getInnerMostAxes(c.length,o)}d.backend_util.assertAxesAreInnerMostDims("max",c,o);const[m,b]=d.backend_util.computeOutAndReduceShapes(f.shape,c);let g,y=m;if(i&&(y=d.backend_util.expandShapeToKeepDim(m,u)),p){const e=n.texData.get(f.dataId).values,t=Dx(e,d.util.sizeFromShape(b),y,a.dtype);g=n.makeTensorInfo(y,a.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=d.util.sizeFromShape(t),s=Mv({inputs:{x:e},attrs:{shape:[d.util.sizeFromShape(e.shape)/a,a]},backend:r}),i=Bv(s,e.dtype,"max",r),o=Mv({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,b,y,n);return h&&n.disposeIntermediateTensorInfo(f),g}const fN={kernelName:d.Max,backendName:"webgl",kernelFunc:pN},mN=Cv({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Mx}),bN={kernelName:d.Maximum,backendName:"webgl",kernelFunc:mN};const gN={kernelName:d.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Ly(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=d.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&d.util.arraysEqual(c.inShape,c.outShape))return gv({inputs:{x:a},backend:n});const l=new Iw(c,"max",!1);return n.runWebGLProgram(l,[a],a.dtype)}};const yN={kernelName:d.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:c}=r,l=d.backend_util.computePool3DInfo(a.shape,s,i,[1,1,1],o,c,u),h=new jw(l,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};class xN{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vN{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=o-1-e.padInfo.front,d=u-1-e.padInfo.top,h=c-1-e.padInfo.left,p=o*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const wN={kernelName:d.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,h=d.backend_util.computePool3DInfo(i.shape,o,u,[1,1,1],c,l),p=new jw(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new vN(h),b=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),b}};const ON={kernelName:d.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;Ly([s,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=r,p=d.backend_util.computePool2DInfo(o.shape,u,c,1,l,h),f=new Iw(p,"max",!0),m=n.runWebGLProgram(f,[o],o.dtype),b=new xN(p),g=n.runWebGLProgram(b,[a,m],o.dtype);return n.disposeIntermediateTensorInfo(m),g}};const kN={kernelName:d.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;d.util.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];d.util.assert(d.backend_util.eitherStridesOrDilationsAreOne(s,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);const l=d.backend_util.computePool2DInfo(r.shape,a,s,c,i),[h,p]=function(e,t,n,r){let a=new Iw(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Iw(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,l,u);return[h,p]}};const NN={kernelName:d.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=d.util.parseAxisParam(s,r.shape);let c=u;const l=d.backend_util.getAxesPermutation(c,o),h=null!=l,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(p){const e=i.texData.get(m.dataId).values,t=new Array(o);for(let a=0;a<t.length;a++)t[a]=r.shape[l[a]];const n=Zx(e,r.shape,r.dtype,l,t);m=i.makeTensorInfo(t,r.dtype);i.texData.get(m.dataId).values=n}else m=Uv(r,l,i);f.push(m),c=d.backend_util.getInnerMostAxes(c.length,o)}d.backend_util.assertAxesAreInnerMostDims("sum",c,o);const[b,g]=d.backend_util.computeOutAndReduceShapes(m.shape,c);let y=b;a&&(y=d.backend_util.expandShapeToKeepDim(b,u));const x=function(e,t,n,r){const a=d.util.sizeFromShape(t),s=Mv({inputs:{x:e},attrs:{shape:[d.util.sizeFromShape(e.shape)/a,a]},backend:r}),i=Bv(s,"float32","mean",r),o=Mv({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(m,g,y,i);for(const d of f)i.disposeIntermediateTensorInfo(d);return x}};const IN={kernelName:d.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=d.util.parseAxisParam(s,a.shape);let c=u;const l=d.backend_util.getAxesPermutation(c,o);let h=a;null!=l&&(h=Hv({inputs:{x:a},backend:n,attrs:{perm:l}}),c=d.backend_util.getInnerMostAxes(c.length,a.shape.length)),d.backend_util.assertAxesAreInnerMostDims("min",c,o);const[p,f]=d.backend_util.computeOutAndReduceShapes(h.shape,c),m=Mv({inputs:{x:h},backend:n,attrs:{shape:[-1,d.util.sizeFromShape(f)]}}),b=Bv(m,m.dtype,"min",n);let g;if(i){g=Mv({inputs:{x:b},backend:n,attrs:{shape:d.backend_util.expandShapeToKeepDim(p,u)}})}else g=Mv({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=l&&n.disposeIntermediateTensorInfo(h),g}},jN=Cv({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:zx}),SN={kernelName:d.Minimum,backendName:"webgl",kernelFunc:jN};class CN{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=xx(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class TN{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=xx(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=ev("rc",r),u=ev("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${o[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const AN={kernelName:d.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=Object(d.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TN(r.shape,a,s):new CN(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},EN=Cv({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),$N={kernelName:d.Mod,backendName:"webgl",kernelFunc:EN};class FN{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const _N=Cv({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),RN={kernelName:d.RealDiv,backendName:"webgl",kernelFunc:_N},DN="return a - b;",MN=Cv({opSnippet:DN,packedOpSnippet:DN,supportsComplex:!0,cpuKernelImpl:qx}),zN={kernelName:d.Sub,backendName:"webgl",kernelFunc:MN};function LN(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=d.util.parseAxisParam([s],a.shape),o=pN({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=d.backend_util.expandShapeToKeepDim(o.shape,i),c=Mv({inputs:{x:o},backend:n,attrs:{shape:u}}),l=MN({inputs:{a:a,b:c},backend:n}),h=ik({inputs:{x:l},backend:n}),p=Gv({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),f=Mv({inputs:{x:p},backend:n,attrs:{shape:u}}),m=_N({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const PN={kernelName:d.Softmax,backendName:"webgl",kernelFunc:LN};const BN={kernelName:d.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:LN({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new FN(c,l,s),h=d.getCustomSetupFunc(i),p=n.runWebGLProgram(d,[u],"int32",h);return o||n.disposeIntermediateTensorInfo(u),p}},VN="return -x;";const WN={kernelName:d.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=Px(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Object(d.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new lv(r.shape,VN):new ov(r.shape,VN),n.runWebGLProgram(a,[r],r.dtype)}},UN=d.kernel_impls.nonMaxSuppressionV3Impl;const GN={kernelName:d.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){d.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,c=n.readSync(a.dataId),l=n.readSync(s.dataId),{selectedIndices:h}=UN(c,l,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},KN=d.kernel_impls.nonMaxSuppressionV4Impl;const HN={kernelName:d.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){d.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r,l=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:f}=KN(l,h,i,o,u,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},qN=d.kernel_impls.nonMaxSuppressionV5Impl;const XN={kernelName:d.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){d.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r,l=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,f=o,m=u,b=c,{selectedIndices:g,selectedScores:y}=qN(l,h,p,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class YN{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const ZN={kernelName:d.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=d.util.sizeFromShape(a.shape),c=new YN(u,s,i,o),l=Mv({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(c,[l],a.dtype);n.disposeIntermediateTensorInfo(l);const p=Mv({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),p}};function JN(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Kw({inputs:{input:r},backend:n}),t=JN({inputs:{x:e},backend:n}),a=oO({inputs:{input:r},backend:n}),s=JN({inputs:{x:a},backend:n}),i=xv({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return gk({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const QN={kernelName:d.ZerosLike,backendName:"webgl",kernelFunc:JN};const eI={kernelName:d.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Kw({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=oO({inputs:{input:a},backend:r}),i=JN({inputs:{x:s},backend:r}),o=xv({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return gk({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};const tI={kernelName:d.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return uk({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{d.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),d.util.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=lO({inputs:t.map(e=>{const t=uk({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}};class nI{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=xx(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class rI{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=xx(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=ev("rc",r),u=ev("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[a+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${c}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${d[f]}\n        if (${h}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const aI=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r,o=Object(d.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rI(a.shape,s,i):new nI(a.shape,s,i),u=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[a],a.dtype,u)},sI={kernelName:d.PadV2,backendName:"webgl",kernelFunc:aI},iI=Cv({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),oI={kernelName:d.Pow,backendName:"webgl",kernelFunc:iI};const uI={kernelName:d.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],c=d.util.parseAxisParam(s,a.shape);let l=c;const h=d.backend_util.getAxesPermutation(l,o);let p,f=a;if(null!=h&&(f=Hv({inputs:{x:a},backend:n,attrs:{perm:h}}),l=d.backend_util.getInnerMostAxes(l.length,o),u.push(f)),d.backend_util.assertAxesAreInnerMostDims("prod",l,o),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Bx(f.shape,f.dtype,e,l);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=d.backend_util.computeOutAndReduceShapes(f.shape,l),r=d.util.sizeFromShape(t),s=Mv({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=Bv(s,Object(d.sumOutType)(a.dtype),"prod",n);p=Mv({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(p);const e=d.backend_util.expandShapeToKeepDim(p.shape,c);p=Mv({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},cI=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Vx(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},lI={kernelName:d.Range,backendName:"webgl",kernelFunc:cI},dI=Sv({opSnippet:"return 1.0 / x;"}),hI={kernelName:d.Reciprocal,backendName:"webgl",kernelFunc:dI},pI=Sv({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fI={kernelName:d.Relu,backendName:"webgl",kernelFunc:pI},mI=Sv({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),bI={kernelName:d.Relu6,backendName:"webgl",kernelFunc:mI};class gI{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class yI{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const xI={kernelName:d.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=Object(d.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yI(a.shape,u,c,s,i):new gI(a.shape,u,c,s,i);return n.runWebGLProgram(l,[a],"float32")}};class vI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const wI={kernelName:d.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new vI(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class OI{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const kI={kernelName:d.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=new OI(a.shape,u,c,s,i);return n.runWebGLProgram(l,[a],a.dtype)}};class NI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const II={kernelName:d.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new NI(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class jI{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=xx(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class SI{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=ev("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=xx(n);function o(n){const r=e.map((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}(a,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const CI={kernelName:d.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=d.util.parseAxisParam(s,a.shape);if(0===i)return gv({inputs:{x:a},backend:n});const u=Object(d.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SI(a.shape,o):new jI(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}};class TI{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(a,s)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(s,"params")),a.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}const AI={kernelName:d.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new TI(r.shape,s),[c,l]=d.backend_util.getImageCenter(i,r.shape[1],r.shape[2]),h=u.getCustomSetupFunc(c,l,Math.sin(a),Math.cos(a));return o.runWebGLProgram(u,[r],r.dtype,h)}},EI=Sv({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),$I={kernelName:d.Round,backendName:"webgl",kernelFunc:EI},FI=Sv({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Wx}),_I={kernelName:d.Rsqrt,backendName:"webgl",kernelFunc:FI};class RI{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=xx(a.length),u=xx(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const DI={kernelName:d.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=d.backend_util.calculateShapes(s,a,i),p=[h/c,c];if(0===h)return n.makeTensorInfo(i,a.dtype);const f=Mv({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),m=Mv({inputs:{x:s},backend:n,attrs:{shape:[u,c]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new RI(u,o,f.shape.length,m.shape.length,l,p),y=n.runWebGLProgram(g,[m,f,b],m.dtype),x=Mv({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}};class MI{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(""+n[r]),r<e&&s.push(""+n[r]);r=s.join(),a=i.join()}const s=xx(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const zI={kernelName:d.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new MI(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Object(d.upcastType)(a.dtype,s.dtype))}},LI=Sv({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${d.backend_util.SELU_SCALEALPHA};\n  float scale = ${d.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),PI={kernelName:d.Selu,backendName:"webgl",kernelFunc:LI},BI=Sv({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),VI={kernelName:d.Sigmoid,backendName:"webgl",kernelFunc:BI},WI=Sv({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),UI={kernelName:d.Sign,backendName:"webgl",kernelFunc:WI},GI=Sv({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),KI={kernelName:d.Sin,backendName:"webgl",kernelFunc:GI},HI=Sv({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),qI={kernelName:d.Sinh,backendName:"webgl",kernelFunc:HI},XI=Sv({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),YI={kernelName:d.Softplus,backendName:"webgl",kernelFunc:XI},ZI={kernelName:d.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;d.util.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((e,t)=>e*t),u=[[0,0]];u.push(...i);for(let d=1+s.length;d<a.shape.length;++d)u.push([0,0]);const c=[],l=aI({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=d.backend_util.getReshaped(l.shape,s,o,!1),p=d.backend_util.getPermuted(h.length,s.length,!1),f=d.backend_util.getReshapedPermuted(l.shape,s,o,!1),m=Mv({inputs:{x:l},backend:n,attrs:{shape:h}}),b=Hv({inputs:{x:m},backend:n,attrs:{perm:p}}),g=Mv({inputs:{x:b},backend:n,attrs:{shape:f}});return c.push(l),c.push(m),c.push(b),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}};const JI={kernelName:d.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[c,l,d]=Kx(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const QI={kernelName:d.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:c,strides:l,outputSize:h}=d.backend_util.calculateShapes(s,a,o),p=new RI(c,u,a.shape.length,s.shape.length,l,[h,1],!1),f=n.runWebGLProgram(p,[s,a,i],s.dtype),m=Mv({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}};const ej={kernelName:d.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=d.util.parseAxisParam(i,a.shape)[0],u=d.backend_util.prepareSplitSize(a,s,o),c=a.shape.length,l=new Array(c).fill(0),h=a.shape.slice();return u.map(e=>{const t=[...h];t[o]=e;const r=Pw({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r})}},tj=Sv({opSnippet:"return sqrt(x);"}),nj={kernelName:d.Sqrt,backendName:"webgl",kernelFunc:tj},rj=Sv({opSnippet:"return x * x;"}),aj={kernelName:d.Square,backendName:"webgl",kernelFunc:rj},sj=Cv({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),ij={kernelName:d.SquaredDifference,backendName:"webgl",kernelFunc:sj};const oj={kernelName:d.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new ov(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class uj{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=xx(n.length),s=xx(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const cj={kernelName:d.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:p}=r,{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:x}=d.slice_util.sliceInfo(a.shape,s,i,o,u,c,l,h,p),v=Mv({inputs:{x:a},backend:n,attrs:{shape:y}});let w;if(f){const e=Pw({inputs:{x:v},backend:n,attrs:{begin:m,size:g}});w=Mv({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some(e=>0===e))w=n.makeTensorInfo(x,a.dtype,[]);else{if(n.shouldExecuteOnCPU([v])){const e=n.texData.get(v.dataId).values,t=Object(d.buffer)(v.shape,v.dtype,e),r=Hx(x,t,b,m);w=n.makeTensorInfo(x,v.dtype,r.values)}else{const e=new uj(m,b,x);w=n.runWebGLProgram(e,[v],v.dtype)}}const O=Mv({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),O}},lj=Sv({opSnippet:"return tan(x);"}),dj={kernelName:d.Tan,backendName:"webgl",kernelFunc:lj},hj=Sv({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),pj={kernelName:d.Tanh,backendName:"webgl",kernelFunc:hj};class fj{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const r=xx(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function mj(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId).map(e=>d.util.decodeString(e)),t=Object(d.buffer)(a.shape,a.dtype,e),r=Xx(t,s);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const i=new fj(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}const bj={kernelName:d.Tile,backendName:"webgl",kernelFunc:mj};const gj={kernelName:d.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=n.readSync(a.dataId),[u,c]=Yx(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};class yj{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const xj={kernelName:d.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=r,[l,d,h,p]=a.shape,[f,m]=null!=c?c:[d,h],b=new yj(d,h,i,o,u,[l,f,m,p]);return n.runWebGLProgram(b,[a,s],"float32")}};const vj={kernelName:d.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Ly(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:c}=Jx(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}};const wj={kernelName:d.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],c=new Array(o-1);let l=0;for(let m=0;m<o;m++)m!==s&&(c[l++]=i.shape[m]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let m=0;m<f.length;m++){h[s]=m;const e=Pw({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),t=Mv({inputs:{x:e},backend:n,attrs:{shape:c}});f[m]=t,d.push(e)}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class Oj{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}const kj=[lN,hN,Yv,Zv,Qv,tw,aw,ow,uw,cw,pw,fw,bw,yw,Ow,vw,Nw,Cw,Sw,Ew,$w,Fw,Dw,Vw,Ww,qw,Zw,eO,rO,vv,dO,OO,kO,gO,IO,jO,NO,CO,AO,$O,DO,MO,LO,GO,KO,VO,qO,YO,ZO,QO,ek,nk,ak,ok,ck,hk,mk,yk,vk,kk,Ik,Ck,Ak,Ek,Fk,Rk,Mk,Lk,yv,Pk,uO,Vk,Uk,Kk,kv,qk,Yk,Zk,tN,Qk,rN,sN,oN,fN,yN,gN,wN,ON,kN,bN,NN,IN,SN,AN,$N,BN,Dv,WN,GN,HN,XN,Gw,ZN,eI,tI,sI,oI,jv,uI,lI,Hw,RN,hI,bI,fI,zv,xI,wI,kI,II,CI,AI,$I,_I,DI,zI,PI,VI,UI,KI,qI,Bw,PN,YI,ZI,JI,QI,ej,nj,aj,ij,oj,cj,zN,Kv,dj,pj,bj,gj,xj,qv,vj,wj,{kernelName:d.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let c=0;const l=d.backend_util.getAxesPermutation([c],o);let h=a;null!=l&&(h=Hv({inputs:{x:a},backend:n,attrs:{perm:l}}),u.push(h),c=d.backend_util.getInnerMostAxes(1,o)[0]);const p=d.backend_util.segment_util.computeOutShape(h.shape,c,i),f=d.util.sizeFromShape([h.shape[c]]),m=Mv({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});u.push(m);const b=Object(d.sumOutType)(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],c=d.backend_util.segment_util.segOpComputeOptimalWindowSize(o,s),l=new Oj({windowSize:c,inSize:o,batchSize:i,numSegments:s},t),h=n.compileAndRun(l,[e,r],a);if(u.push(h),h.shape[1]===s)return h;const p=cI({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=mj({inputs:{x:p},backend:n,attrs:{reps:[o/c]}});u.push(p),u.push(f);return g(h,t,f,a,s)},y=Mv({inputs:{x:g(m,"unsortedSegmentSum",s,b,i)},backend:n,attrs:{shape:p}});let x=y;if(null!=l){u.push(y);const e=d.backend_util.getUndoAxesPermutation(l);x=Hv({inputs:{x:x},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},QN];for(const Ij of kj)Object(d.registerKernel)(Ij);const Nj={"tfjs-core":d.version_core,"tfjs-backend-cpu":"3.5.0","tfjs-backend-webgl":"3.5.0","tfjs-data":mh,"tfjs-layers":uo,"tfjs-converter":Ld.e,tfjs:"3.5.0"}},zvA9:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({greater_:function(e,t){let n=Object(i.a)(e,"a","greater"),u=Object(i.a)(t,"b","greater");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.ob,c)}})}},[["bSXR",0,1,4,3,7,2,5,6,8]]]);